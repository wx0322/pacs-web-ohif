{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/log.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/sopClassDictionary.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/layoutButton/LayoutChooser.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/ToolbarButton.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/layoutButton/LayoutButton.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/tableList/TableListItem.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/measurementTable/MeasurementTableItem.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/ScrollableArea/ScrollableArea.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/utils/throttled.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/utils/getScrollbarSize.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/tableList/TableList.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/measurementTable/MeasurementTable.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/content/aboutContent/AboutContent.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/tabComponents/TabComponents.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/tabComponents/TabFooter.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/customForm/HotkeyField.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/languageSwitcher/LanguageSwitcher.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/checkbox/checkbox.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/cineDialog/CineDialog.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/content/viewportDownloadForm/ViewportDownloadForm.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/quickSwitch/StudiesItem.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/quickSwitch/StudiesList.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/quickSwitch/SeriesList.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/quickSwitch/QuickSwitch.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/roundedButtonGroup/RoundedButtonGroup.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/selectTree/InputRadio.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/selectTree/SelectTreeBreadcrumb.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/selectTree/SelectTree.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/simpleDialog/SimpleDialog.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/ohifModal/OHIFModal.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/contextMenu/ContextMenu.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/errorPage/ErrorPage.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/errorPage/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyList/CustomDateRangePicker.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyList/TableSearchFilter.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyList/StudyListLoadingText.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyList/StudyList.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyList/TablePagination.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyList/PageToolbar.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/ExpandableToolMenu.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/toolbarSection/ToolbarSection.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/errorBoundary/ErrorBoundary.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/hooks/useMedia.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/hooks/useDebounce.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/OldSelect.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/Select.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/Label.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/Range.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/TextArea.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/TextInput.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/form/DropdownMenu.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/PlayClipButton.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/SimpleToolbarButton.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/Toolbar.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/utils/viewerbaseDragDropContext.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/utils/asyncComponent/asyncComponent.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/cornerstone.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/lib/cornerstone.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/lib/validate.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/customAttributes.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/HPMatcher.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/customViewportSettings.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/lib/comparators.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/classes/Rule.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/classes/rules.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/lib/removeFromArray.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/classes/ViewportStructure.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/classes/Viewport.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/classes/Stage.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/classes/Protocol.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/ProtocolEngine.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/lib/sortByScore.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStore.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/protocolStore/defaultProtocol.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStrategy.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/header.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/object.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/string.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/ui/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/ui/getScrollbarSize.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/ui/getOffset.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/ui/isCharacterKeyPress.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/ui/handleError.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/getAttribute.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/getAuthorizationHeader.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/getModalities.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/getName.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/getNumber.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMWeb/getString.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/Icon/getIcon.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/Icon/Icon.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/elements/Icon/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/contextProviders/ModalProvider.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/snackbar/SnackbarItem.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/snackbar/SnackbarContainer.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/snackbar/SnackbarTypes.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/contextProviders/SnackbarProvider.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/contextProviders/LanguageProvider.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/contextProviders/DialogProvider.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/contextProviders/LoggerProvider.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/contextProviders/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/guid.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/errorHandler.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/OHIFError.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/xhrRetryRequestHook.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/user.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/Metadata.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/state.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/InstanceMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/SeriesMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/overlayTrigger/Fade.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/overlayTrigger/Overlay.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/overlayTrigger/createChainedFunction.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/overlayTrigger/OverlayTrigger.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/overlayTrigger/index.js","webpack:///./context/AppContext.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/tooltip/Tooltip.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/tooltip/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/metadataProvider/fetchPaletteColorLookupTableData.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/metadataProvider/unpackOverlay.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/metadataProvider/fetchOverlayData.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/metadataProvider/validNumber.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/MetadataProvider.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/metadataProvider/getPixelSpacingInformation.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/hotkeys/pausePlugin.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/hotkeys/recordPlugin.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/hotkeys/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/enums.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/studyMetadataManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/OHIFInstanceMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/OHIFSeriesMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/OHIFStudyMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/isDisplaySetReconstructable.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/metadata/StudyMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/naturalizeSOPClassUID.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/ImageSet.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/getImageId.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/StudyMetadataSource.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/config.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/debugger.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/de/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/en-US/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/es/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/fr/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/ja-JP/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/nl/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/pt-BR/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/ru/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/vi/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/locales/zh/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/getAvailableLanguagesInfo.js","webpack:///D:/dev/dicomweb/Viewers/platform/i18n/src/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/retrieveStudyMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/str2ab.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/objectPath.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/absoluteUrl.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/addServers.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/dicomLoaderService.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/b64toBlob.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/loadAndCacheDerivedDisplaySets.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/urlUtil.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/makeDeferred.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/Queue.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/hierarchicalListUtils.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/progressTrackingUtils.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/writeScript.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/makeCancelable.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/isDicomUid.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/resolveObjectPath.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/StudyPrefetcher.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/StudyLoadingListener.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/PubSub.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/LogManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/OHIFStudyMetadataSource.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/isImage.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/isLowPriorityModality.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/sortBy.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/StackManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/TypeSafeCollection.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/arrowAnnotate.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/bidirectional.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/ellipticalRoi.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/circleRoi.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/freehandMouse.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/length.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/nonTarget.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/rectangleRoi.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/angle.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/targetCR.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/targetNE.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/targetUN.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/tools/dicomSRDisplayTool.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/toolGroups/allTools.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/configuration.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/dataExchange.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/classes/TimepointApi.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/lib/getLabel.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/lib/getDescription.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/lib/getImageIdForImagePath.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/classes/MeasurementApi.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/BaseCriterion.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/Location.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/MaxTargetsPerOrgan.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/MaxTargets.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/MeasurementsLength.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/Modality.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/NonTargetResponse.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/criteria/TargetType.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/CriteriaEvaluator.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/evaluations/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/conformance/ConformanceCriteria.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/lib/getImageAttributes.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/lib/refreshCornerstoneViewports.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementAdded.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementAdded.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementModified.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementModified.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementRemoved.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementRemoved.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/measurementHandlers/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/toolGroups/targets.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/toolGroups/nonTargets.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/toolGroups/temp.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/ltTools.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/measurements/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/qido/instances.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/qido/studies.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/searchStudies.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/retrieveStudiesMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/getStudyBoxData.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/utils/getWADORSImageId.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/getSeriesInfo.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/sortStudy.js","webpack:///./routes/routesUtil.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/wado/getReferencedSeriesSequence.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/wado/studyInstanceHelpers.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoader.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoaderSync.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoaderAsync.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/wado/retrieveMetadata.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/ViewportErrorIndicator.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/viewer/ViewportLoadingIndicator.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyBrowser/ImageThumbnail.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyBrowser/Thumbnail.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/studies/services/qido/StaticWadoClient.js","webpack:///./store/layout/selectors.js","webpack:///./context/WhiteLabelingContext.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/CommandsManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/classes/HotkeysManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/enums.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getSequenceAsArray.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getLabelFromMeasuredValueSequence.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getCoordsFromSCOORDOrSCOORD3D.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processTID1410Measurement.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/constants/scoordTypes.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processNonGeometricallyDefinedMeasurement.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processMeasurement.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getMeasurements.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/isRehydratable.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/constants/toolNames.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getRenderableData.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/addMeasurement.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/SCOORD3D/parseSCOORD3D.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/parseDicomStructuredReport.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/utils/isToolSupported.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/parseMeasurementsData.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/utils/getAllDisplaySets.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/handleStructuredReport.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/utils/findMostRecentStructuredReport.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/dataExchange.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/DICOMSR/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/constants/ActionTypes.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/actions.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/extensions.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/preferences.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/servers.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/studies.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/timepointManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/viewports.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/reducers/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/localStorage.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/sessionStorage.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/redux/index.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/initCornerstoneTools.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/utils/measurementServiceMappings/measurementServiceMappingsFactory.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/tools/modules/dicomSRModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/init.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/utils/setCornerstoneLayout.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/CornerstoneViewportDownloadForm.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/commandsModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/toolbarModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/index.js","webpack:///./version.js","webpack:///./utils/getUserManagerForOpenIdConnectClient.js","webpack:///./utils/initWebWorkers.js","webpack:///./store/index.js","webpack:///./appExtensions/GenericViewerCommands/commandsModule.js","webpack:///./appExtensions/GenericViewerCommands/index.js","webpack:///./appExtensions/MeasurementsPanel/jumpToRowItem.js","webpack:///./appExtensions/MeasurementsPanel/ConnectedMeasurementTable.js","webpack:///./components/Labelling/LabellingTransition.js","webpack:///./components/Labelling/OHIFLabellingData.js","webpack:///./components/SimpleDialog/SimpleDialog.js","webpack:///./components/EditDescriptionDialog/EditDescriptionDialog.js","webpack:///./components/Labelling/LabellingFlow.js","webpack:///./connectedComponents/ToolContextMenu.js","webpack:///./appExtensions/MeasurementsPanel/init.js","webpack:///./appExtensions/MeasurementsPanel/index.js","webpack:///./components/LoadingBar/Bar.js","webpack:///./components/LoadingBar/Container.js","webpack:///./OHIFStandaloneViewer.js","webpack:///./App.js","webpack:///./config.js","webpack:///./routes/NotFound.js","webpack:///D:/dev/dicomweb/Viewers/platform/ui/src/components/studyBrowser/StudyBrowser.js","webpack:///D:/dev/dicomweb/Viewers/extensions/cornerstone/src/tools/id.js","webpack:///./context/UserManagerContext.js","webpack:///./components/OHIFLogo/OHIFLogo.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/extensions/MODULE_TYPES.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/VTKViewport.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/ConnectedVTKViewport.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/LoadingIndicator.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/OHIFVTKViewport.js","webpack:///D:/dev/dicomweb/Viewers/node_modules/moment/locale sync ^\\.\\/.*$","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/utils/setLayoutAndViewportData.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/utils/setMPRLayout.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/utils/setViewportToVTK.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/commandsModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/toolbarComponents/SlabThicknessToolbarComponent.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/toolbarComponents/VTKMPRToolbarButton.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/toolbarModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/withCommandsManager.js","webpack:///D:/dev/dicomweb/Viewers/extensions/vtk/src/index.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-html/src/OHIFDicomHtmlSopClassHandler.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-html/src/index.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/utils/drawCanvasCrosshairs.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/tools/DICOMSegTempCrosshairsTool.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/tools/TOOL_NAMES.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/toolbarModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/loadSegmentation.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/utils/refreshViewports.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/utils/setActiveLabelMap.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/getSourceDisplaySet.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/getOHIFDicomSegSopClassHandler.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/BrushColorSelector/BrushColorSelector.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/BrushRadius/BrushRadius.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/SegmentationItem/SegmentationItem.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/SegmentationSettings/SegmentationSettings.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/SegmentItem/SegmentItem.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/SegmentationSelect.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/components/SegmentationPanel/SegmentationPanel.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/commandsModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/index.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-segmentation/src/init.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/utils/toolNames.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/utils/drawCanvasCrosshairs.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/tools/RTStructDisplayTool.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/tools/modules/lib/getImageIdOfCenterFrameOfROIContour.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/tools/modules/rtStructModule.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/tools/modules/lib/structureSetReferencesSeriesInstanceUid.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/init.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/utils/transformPointsToImagePlane.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/loadRTStruct.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/getSourceDisplaySet.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/OHIFDicomRTStructSopClassHandler.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/components/StructureSetItem/StructureSetItem.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/components/RTSettings/RTSettings.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/components/LoadingIndicator/LoadingIndicator.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/components/PanelSection/PanelSection.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/components/RTPanel/RTPanel.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/index.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-rt/src/id.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-microscopy/src/DicomMicroscopySopClassHandler.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-microscopy/src/index.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-pdf/src/OHIFDicomPDFSopClassHandler.js","webpack:///D:/dev/dicomweb/Viewers/extensions/dicom-pdf/src/index.js","webpack:///./index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/extensions/ExtensionManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/ServicesManager.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/UINotificationService/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/UIModalService/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/UIDialogService/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/LoggerService/index.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/_shared/pubSubServiceInterface.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/MeasurementService/MeasurementService.js","webpack:///D:/dev/dicomweb/Viewers/platform/core/src/services/MeasurementService/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","8","exports","module","l","e","promises","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","jsonpScriptSrc","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","log","warn","info","trace","debug","time","timeEnd","sopClassDictionary","ComputedRadiographyImageStorage","DigitalXRayImageStorageForPresentation","DigitalXRayImageStorageForProcessing","DigitalMammographyXRayImageStorageForPresentation","DigitalMammographyXRayImageStorageForProcessing","DigitalIntraOralXRayImageStorageForPresentation","DigitalIntraOralXRayImageStorageForProcessing","CTImageStorage","EnhancedCTImageStorage","LegacyConvertedEnhancedCTImageStorage","UltrasoundMultiframeImageStorage","MRImageStorage","EnhancedMRImageStorage","MRSpectroscopyStorage","EnhancedMRColorImageStorage","LegacyConvertedEnhancedMRImageStorage","UltrasoundImageStorage","EnhancedUSVolumeStorage","SecondaryCaptureImageStorage","MultiframeSingleBitSecondaryCaptureImageStorage","MultiframeGrayscaleByteSecondaryCaptureImageStorage","MultiframeGrayscaleWordSecondaryCaptureImageStorage","MultiframeTrueColorSecondaryCaptureImageStorage","Sop12LeadECGWaveformStorage","GeneralECGWaveformStorage","AmbulatoryECGWaveformStorage","HemodynamicWaveformStorage","CardiacElectrophysiologyWaveformStorage","BasicVoiceAudioWaveformStorage","GeneralAudioWaveformStorage","ArterialPulseWaveformStorage","RespiratoryWaveformStorage","GrayscaleSoftcopyPresentationStateStorage","ColorSoftcopyPresentationStateStorage","PseudoColorSoftcopyPresentationStateStorage","BlendingSoftcopyPresentationStateStorage","XAXRFGrayscaleSoftcopyPresentationStateStorage","XRayAngiographicImageStorage","EnhancedXAImageStorage","XRayRadiofluoroscopicImageStorage","EnhancedXRFImageStorage","XRay3DAngiographicImageStorage","XRay3DCraniofacialImageStorage","BreastTomosynthesisImageStorage","BreastProjectionXRayImageStorageForPresentation","BreastProjectionXRayImageStorageForProcessing","IntravascularOpticalCoherenceTomographyImageStorageForPresentation","IntravascularOpticalCoherenceTomographyImageStorageForProcessing","NuclearMedicineImageStorage","RawDataStorage","SpatialRegistrationStorage","SpatialFiducialsStorage","DeformableSpatialRegistrationStorage","SegmentationStorage","SurfaceSegmentationStorage","RealWorldValueMappingStorage","SurfaceScanMeshStorage","SurfaceScanPointCloudStorage","VLEndoscopicImageStorage","VideoEndoscopicImageStorage","VLMicroscopicImageStorage","VideoMicroscopicImageStorage","VLSlideCoordinatesMicroscopicImageStorage","VLPhotographicImageStorage","VideoPhotographicImageStorage","OphthalmicPhotography8BitImageStorage","OphthalmicPhotography16BitImageStorage","StereometricRelationshipStorage","OphthalmicTomographyImageStorage","VLWholeSlideMicroscopyImageStorage","LensometryMeasurementsStorage","AutorefractionMeasurementsStorage","KeratometryMeasurementsStorage","SubjectiveRefractionMeasurementsStorage","VisualAcuityMeasurementsStorage","SpectaclePrescriptionReportStorage","OphthalmicAxialMeasurementsStorage","IntraocularLensCalculationsStorage","MacularGridThicknessandVolumeReport","OphthalmicVisualFieldStaticPerimetryMeasurementsStorage","OphthalmicThicknessMapStorage","CornealTopographyMapStorage","BasicTextSR","EnhancedSR","ComprehensiveSR","Comprehensive3DSR","ProcedureLog","MammographyCADSR","KeyObjectSelection","ChestCADSR","XRayRadiationDoseSR","RadiopharmaceuticalRadiationDoseSR","ColonCADSR","ImplantationPlanSRDocumentStorage","EncapsulatedPDFStorage","EncapsulatedCDAStorage","PositronEmissionTomographyImageStorage","EnhancedPETImageStorage","LegacyConvertedEnhancedPETImageStorage","BasicStructuredDisplayStorage","RTImageStorage","RTDoseStorage","RTStructureSetStorage","RTBeamsTreatmentRecordStorage","RTPlanStorage","RTBrachyTreatmentRecordStorage","RTTreatmentSummaryRecordStorage","RTIonPlanStorage","RTIonBeamsTreatmentRecordStorage","RTBeamsDeliveryInstructionStorage","GenericImplantTemplateStorage","ImplantAssemblyTemplateStorage","ImplantTemplateGroupStorage","LayoutChooser","props","cell","parentCell","row","col","currentCell","table","Rows","newRow","Columns","isRange","className","emptyCell","state","selectedCell","setState","column","this","highlightCells","onClick","onChange","style","display","visible","minWidth","boxSize","cellBorder","role","map","width","height","border","onMouseEnter","onMouseLeave","PureComponent","PropTypes","number","isRequired","bool","func","ToolbarButton","isActive","icon","labelWhenActive","classnames","active","iconProps","label","arrowIconName","isExpanded","arrowIcon","isExpandable","Icon","cypressSelectorId","toLowerCase","data-cy","propTypes","id","string","oneOfType","shape","defaultProps","withTranslation","LayoutButton","dropdownVisible","prevProps","TableListItem","onItemClick","preventDefault","stopPropagation","itemKey","itemClass","itemMetaClass","itemIndex","itemMeta","children","Component","node","ColoredCircle","color","backgroundColor","MeasurementTableItem","btnLabel","onClickCallback","marginRight","hasWarningClass","measurementData","hasWarnings","isReadOnly","actionButtons","onRelabel","relabelButton","getActionButton","onRelabelClick","onEditDescription","descriptionButton","onEditDescriptionClick","onDelete","deleteButton","onDeleteClick","isSRText","labels","Fragment","measurementNumber","keySeparator","nsSeparator","getDataDisplayText","forEach","collapsed","SRLabel","index","displayText","warningList","Array","isArray","listedWarnings","warningTitle","placement","overlay","getWarningContent","getTableListItem","connectedComponent","ScrollableArea","delay","callback","args","context","isThrottled","scrollableElement","currentTop","scrollTop","offsetHeight","limit","scrollHeight","scrollStep","hideScrollbar","x","scrollX","y","scrollY","scrollbarSize","inner","outer","position","top","left","visibility","overflow","body","w1","offsetWidth","h1","w2","h2","clientWidth","clientHeight","getScrollbarSize","marginBottom","scrollAreaClasses","scrollHandlerThrottled","scrollHandler","wrapper","arguments","scrollableClass","class","ref","element","onScroll","onTransitionEnd","scrollNavUp","scrollNavDown","adjustMargins","addEventListener","removeEventListener","TableList","customHeader","headerTitle","headless","onHeaderClick","getHeader","defaultItems","MeasurementTable","selectedKey","saveFunction","onSaveComplete","title","measurementCollection","measureGroup","getCustomHeader","getMeasurements","selectedMeasurementNumber","measurements","measurement","itemNumber","readOnly","groupName","maxMeasurements","timepoints","timepoint","date","overallWarnings","hasOverallWarnings","getTimepointsHeader","getMeasurementsGroups","array","AboutContent","useTranslation","detect","os","version","link","process","substr","toUpperCase","item","renderTableRow","getDataCy","split","join","TabComponents","tabs","customProps","useState","currentTabIndex","setCurrentTabIndex","tab","hidden","tabCustomProps","arrayOf","any","translate","word","TabFooter","onResetPreferences","onSave","onCancel","hasErrors","disabled","formatKeysForInput","keys","getKeys","sequence","modifier_keys","keysArray","modifiers","includes","HotkeyField","handleChange","classNames","inputValue","onKeyDown","hotkeys","record","unpause","onFocus","pause","startRecording","allowed_keys","LanguageSwitcher","language","onLanguageChange","languages","lng","Checkbox","checked","checkbox","CineDialog","parseFloat","onFrameRateChanged","isPlaying","onPlayPauseChanged","onClickNextButton","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","cineFrameRate","data-toggle","onClickPlayPause","min","cineMinFrameRate","max","cineMaxFrameRate","step","cineStepFrameRate","handleInputChange","toFixed","FILE_TYPE_OPTIONS","ViewportDownloadForm","activeViewport","onClose","updateViewportPreview","enableViewport","disableViewport","toggleAnnotations","loadImage","downloadBlob","defaultSize","minimumSize","maximumSize","canvasClass","filename","setFilename","fileType","setFileType","dimensions","setDimensions","showAnnotations","setShowAnnotations","keepAspect","setKeepAspect","aspectMultiplier","setAspectMultiplier","viewportElement","setViewportElement","viewportElementDimensions","setViewportElementDimensions","createRef","downloadCanvas","setDownloadCanvas","viewportPreview","setViewportPreview","setError","hasError","values","refreshViewport","useRef","onDimensionsChange","dimension","oppositeDimension","sanitizedTargetValue","replace","isEmpty","newDimensions","updatedDimension","Math","round","error_messages","renderErrorHandler","validSize","loadAndUpdateViewports","useCallback","scaledWidth","scaledHeight","scaledDimensions","current","dataUrl","viewportElementWidth","viewportElementHeight","useEffect","evt","alt","base","options","htmlFor","StudiesItem","studyData","StudyDate","StudyDescription","modalities","studyAvailable","activeClass","hasDescriptionAndDate","getModalitiesStyle","StudiesList","studyListData","StudyInstanceUID","activeStudyInstanceUID","getBrowserItems","SeriesList","seriesItems","seriesData","Thumbnail","displaySetInstanceUID","activeDisplaySetInstanceUID","getSeriesItems","QuickSwitch","find","study","thumbnails","studyDataSelected","onStudySelected","seriesQuickSwitchOpen","seriesDataSelected","onSeriesSelected","sideClass","side","quickSwitchClass","hideSeriesSwitch","showSeriesSwitch","getSmallListItems","onSeriesClick","onStudyClick","RoundedButtonGroup","badgeNumbers","newValue","onValueChanged","onStateEvent","optionIndex","findIndex","detail","badgeNumber","option","stateEvent","prevState","buttons","roundedButtonWrapper","noselect","optionText","bottomLabel","badgeNumberOverflow","String","onClickOption","InputRadio","onSelected","itemData","labelClass","SelectTreeBreadcrumb","SelectTree","onComponentChange","items","searchTerm","selectTreeFirstTitle","currentNode","selectTreeSecondTitle","searchEnabled","placeholder","autoFocus","searchLocations","currentTarget","isLeafSelected","treeItems","getTreeItems","headerItem","onBreadcrumbSelected","filteredItems","cloneDeep","indexOf","filterItems","getLabelClass","SimpleDialog","onConfirm","isOpen","rootClass","componentRef","componentStyle","onSubmit","defaultValue","setValue","customStyle","zIndex","alignItems","justifyContent","Modal","setAppElement","getElementById","OHIFModal","closeButton","shouldCloseOnEsc","fullscreen","classes","ContextMenu","onContextMenu","ErrorPage","description","onRetry","stack","location","reload","CustomDateRangePicker","moment","locale","i18n","onDatesChange","startDate","endDate","dateRangePickerProps","presets","renderCalendarInfo","text","start","end","isSelected","preset","renderMonthElement","month","onMonthSelect","onYearSelect","containerStyle","margin","months","year","renderYearsOptions","startDatePlaceholderText","endDatePlaceholderText","phrases","closeDatePicker","clearDates","required","instanceOf","Date","getDateEntry","datePicked","rangeDatePicked","getDateEntryFromRange","today","numOfDays","edge","subtract","TableSearchFilter","meta","onSort","onValueChange","sortFieldName","sortDirection","studyListDateFilterNumDays","studyDateTo","studyDateFrom","focusedInput","setFocusedInput","translationsAreReady","ready","sortIcons","sortIconForSortField","lastWeek","lastMonth","defaultStartDate","defaultEndDate","studyDatePresets","field","fieldName","inputType","sortIcon","fontSize","startDateId","endDateId","onFocusChange","updatedVal","numberOfMonths","showClearDates","anchorDirection","hideKeyboardShortcutsPanel","isOutsideRange","day","isInclusivelyBeforeDay","oneOf","size","animation","getContentFromUseMediaValue","displaySize","contentArrayMap","defaultContent","StudyList","isLoading","studies","sort","handleSort","filterValues","handleFilterChange","onFilterChange","handleSelectItem","onSelectItem","largeTableMeta","mediumTableMeta","smallTableMeta","tableMeta","large","medium","small","totalSize","reduce","prev","next","percentWidth","direction","colSpan","TableRow","AccessionNumber","PatientID","PatientName","isHighlighted","handleClick","largeRowTemplate","mediumRowTemplate","whiteSpace","flexGrow","flexDirection","maxWidth","aria-label","textOverflow","textAlign","smallRowTemplate","fontWeight","paddingTop","paddingLeft","patientNameOrId","accessionOrModalityOrDescription","allFields","TablePagination","nextPageFunc","currentPage","prevPageFunc","onRowsPerPageChange","parseInt","prevPage","nextPage","recordCount","rowsPerPage","pageOptions","pageNumber","renderRowsPerPageDropdown","renderPaginationButtons","PageToolbar","onImport","getImportTool","ExpandableToolMenu","random","getButtons","button","activeCommand","btn","onGroupMenuClick","toolbarComponent","activeIcon","trigger","rootClose","handleHide","onOverlayHide","onExpandableToolClick","toolbarMenuOverlay","React","ToolbarSection","activeButton","activeButtons","ErrorFallback","componentStack","resetErrorBoundary","OHIFErrorBoundary","onReset","onError","fallbackComponent","FallbackComponent","getDisplaySize","mediaQueryMap","mediaTypesAliases","defaultDisplaySize","mql","matches","getMediaQueryMap","mediaQueriesStringList","q","matchMedia","useMedia","defaultMediaType","_mediaQueryMap","mount","onMediaQueryChange","mediaQuery","nextDisplaySize","media","originalMediaQuery","getMediaTypeAlias","_mediaQueriesStringList","_mediaTypesAliases","isEqual","updateState","removeListener","addListener","useDebounce","debouncedValue","setDebouncedValue","handler","Select","selected","for","Range","showPercentage","showValue","valueRenderer","cols","TextInput","toTimeString","DropdownMenu","open","list","align","handleOnClick","getListItems","toggleList","contains","titleElement","handleMouseClick","renderTitleElement","renderList","PlayClipButton","iconName","data-container","data-placement","SimpleToolbarButton","Toolbar","maybePlayClipButton","maybeLayoutButton","includePlayClipButton","includeLayoutButton","isTouchDevice","navigator","maxTouchPoints","viewerbaseDragDropContext","DecoratedClass","backend","TouchBackend","HTML5Backend","opts","enableMouseEvents","retryImport","fn","retriesLeft","interval","catch","retry","component","asyncComponent","importComponent","isFunction","default","onLoaded","toString","addDynamicallyLoadedComponentToState","cornerstone","metadataProvider","getBoundingBox","textLines","font","cornerstoneTools","textStyle","getFont","getFontSize","save","textBaseline","measureText","boundingBox","padding","centering","restore","pixelToPage","enabledElement","getEnabledElement","canvas","canvasOffset","$","offset","canvasPosition","pixelToCanvas","repositionTextBox","eventData","config","isCreating","image","allowedBorders","OHIF","uiSettings","autoPositionMeasurementsTextCallOuts","allow","T","R","B","L","getRenderingInformation","limits","tool","mid","directions","diffX","cornerAxis","x1","y1","calculateAxisCenter","axis","a","b","lowest","handles","textBox","$canvas","canvasWidth","outerWidth","canvasHeight","outerHeight","canvasDimensions","bounds","getHandlePosition","cornerAxisPosition","availableAreas","labelWidth","labelHeight","topLeft","bottomRight","getAvailableBlankAreas","tempDirections","assign","tempCornerAxis","foundPlace","renderingInformation","pageToPixel","toolAxis","getTextBoxSizeInPixels","textBoxOffset","centerX","centerY","halfBoxSizeX","halfBoxSizeY","offsetY","offsetX","getTextBoxOffset","canvasBorders","x0","y0","pixelPosition","validate","validators","equals","attributes","doesNotEqual","doesNotContain","startsWith","endsWith","CustomAttributeRetrievalCallbacks","InstanceMetadata","metadata","HPMatcher","metadataInstance","rules","OHIFError","format","details","passed","failed","requiredFailed","score","rule","attribute","customAttribute","setCustomAttribute","errorMessages","testConstraint","constraint","attributeMap","customAttributeExists","getCustomAttribute","getTagValue","weight","CustomViewportSettings","comparators","validator","validatorOption","freeze","EQUALS_REGEXP","Rule","guid","_constraintInfo","_validatorAndValue","input","constraintInfo","ruleConstraint","comparator","isRuleForPrior","ruleValidatorAndValue","getConstraintValidatorAndValue","intValue","test","validatorAndValue","getConstraintInfo","currentValidator","ProtocolMatchingRule","StudyMatchingRule","SeriesMatchingRule","ImageMatchingRule","removeFromArray","indexToRemove","ViewportStructure","properties","Viewport","viewportSettings","imageMatchingRules","seriesMatchingRules","studyMatchingRules","ruleObject","fromObject","Stage","viewportStructure","viewports","createdDate","currentStage","clonedStage","viewportObject","viewport","Protocol","locked","hasUpdatedPriorsInformation","modifiedDate","user","userLoggedIn","createdBy","getUserId","modifiedBy","availableTo","Set","editableBy","protocolMatchingRules","stages","numberOfPriorsReferenced","skipCache","stage","priorsReferenced","getNumberOfPriorsReferenced","updateNumberOfPriorsReferenced","stageObject","currentProtocol","clonedProtocol","protocolWasModified","StudyMetadata","ProtocolEngine","protocolStore","priorStudies","studyMetadataSource","Map","StudyMetadataSource","every","reset","newStageIds","protocol","getBestProtocolMatch","setHangingProtocol","matched","studyInstance","getFirstInstance","numberOfAvailablePriors","getNumberOfAvailablePriors","getObjectID","getProtocol","matchedProtocols","clear","matchedProtocolScores","_clearMatchedProtocols","findMatchByStudy","matchedDetail","has","set","obj","highestScoringProtocolId","_largestKeyByValue","updateProtocolMatches","bestMatch","_getHighestScoringProtocol","studyObjectID","getAvailableStudyPriors","priors","viewportIndex","instanceMatchingRules","matchingScores","currentStudy","firstInstance","highestStudyMatchingScore","highestSeriesMatchingScore","priorStudy","validatorType","abstractPriorValue","studyIndex","priorStudyObjectID","loadStudy","studyMetadata","updateViewports","studyMatchDetails","forEachSeries","series","seriesMatchDetails","forEachInstance","instance","isImage","instanceMatchDetails","matchDetails","concat","totalMatchScore","currentSOPInstanceUID","getSOPInstanceUID","imageDetails","getStudyInstanceUID","SeriesInstanceUID","getSeriesInstanceUID","SOPInstanceUID","currentImageIdIndex","matchingScore","sortingInfo","displaySet","findDisplaySet","images","getUID","imageId","getImageId","sortingFunction","sortBy","reverse","numRows","numColumns","setLayout","numViewports","getNumProtocolStages","stageModel","getCurrentStageModel","getLayoutTemplateName","layoutProps","viewportData","matchImages","cornerstoneViewportParams","viewportSettingsKeys","currentViewportData","customSettings","renderedCallback","customSetting","currentMatch","currentPosition","scoresLength","setViewportSpecificData","viewportSpecificData","newProtocol","isPrototypeOf","numberOfStages","stageAction","isPreviousStageAvailable","isNextStageAvailable","setCurrentProtocolStage","ProtocolStore","strategy","protocolObject","protocolInstance","onReady","protocolId","getProtocolInstance","addProtocol","updateProtocol","removeProtocol","defaultProtocol","oneByOne","first","getDefaultProtocol","hangingProtocols","ProtocolStrategy","defaultsAdded","from","delete","addCustomAttribute","attributeId","attributeName","addCustomViewportSetting","settingId","settingName","header","getNestedObject","shallowObject","nestedObject","propertyArray","currentObject","currentProperty","getShallowObject","putValues","baseKey","resultObject","currentKey","currentValue","isString","subject","search","query","pattern","RegExp","trim","encodeId","match","charCodeAt","ui","getOffset","offsetParent","offsetLeft","offsetTop","isCharacterKeyPress","which","ctrlKey","metaKey","altKey","handleError","hideConfirm","cancelLabel","cancelClass","MODULE_TYPES","CommandsManager","ExtensionManager","HotkeysManager","ServicesManager","utils","redux","errorHandler","DICOMWeb","DICOMSR","viewer","UINotificationService","UIModalService","UIDialogService","MeasurementService","LoggerService","Value","padFour","output","convertToInt","getAuthorizationHeader","requestOptions","headers","accessToken","getAccessToken","auth","Authorization","btoa","getModalities","Modality","ModalitiesInStudy","vr","getName","Alphabetic","getNumber","getString","adjust","angleDoubleDown","angleDoubleUp","angleLeft","arrows","arrowsAltH","arrowsAltV","bars","brain","brush","caretDown","caretUp","check","checkCircle","checkCircleO","chevronDown","circle","circleNotch","circleO","clipboard","cog","createComment","createScreenCapture","crosshairs","cube","d3Rotate","database","dotCircle","edit","ellipseCircle","ellipseH","ellipseV","exclamationCircle","exclamationTriangle","fastBackward","fastForward","stop","inlineEdit","level","linkCircles","liver","lock","lockAlt","lung","measureNonTarget","measureTarget","measureTargetCr","measureTargetNe","measureTargetUn","measureTemp","objectGroup","ohifLogo","ohifTextLogo","oval","palette","play","plus","powerOff","rotate","rotateRight","saveRegular","scissors","searchPlus","softTissue","sortDown","sortUp","sphere","squareO","star","stepBackward","stepForward","sun","th","thLarge","thList","times","trash","unlink","youtube","eye","eyeClosed","envelopeSquare","ICONS","getIcon","ModalContext","createContext","Provider","ModalProvider","modal","service","DEFAULT_OPTIONS","content","contentProps","showScrollbar","customClassName","setOptions","show","hide","setServiceImplementation","ModalContent","noScroll","visibleScrollbar","withModal","useContext","Consumer","SnackbarItem","handleClose","autoClose","duration","action","close","SnackbarContainer","useSnackbarContext","snackbarItems","topCenter","topRight","bottomLeft","bottomCenter","pos","itemId","renderItem","LogManager","SnackbarContext","SnackbarProvider","SnackbarTypes","count","setCount","setSnackbarItems","onLogHandler","notify","subscribe","EVENTS","OnLog","unsubscribe","newItem","filter","hideAll","snackbar","namespace","WrapperI18n","I18NextWithTranslation","DialogContext","DialogProvider","isDragging","setIsDragging","dialogs","setDialogs","lastDialogId","setLastDialogId","lastDialogPosition","setLastDialogPosition","centerPositions","setCenterPositions","dialog","getCenterPosition","root","querySelector","itemBounds","getBoundingClientRect","dialogId","dismiss","dismissAll","_bringToFront","topDialog","_updateLastDialogPosition","draggableItemBounds","validCallback","DialogContent","defaultPosition","centralize","preservePosition","isDraggable","onStart","onStop","onDrag","showOverlay","dragableItem","srcElement","tagName","withDialog","LoggerContext","useLogger","LoggerProvider","errors","infos","onErrorHandler","errorObject","displayOnConsole","getFourRandomValues","floor","substring","getHTTPErrorHandler","constructor","defaultRetryOptions","retries","factor","minTimeout","maxTimeout","randomize","retryableStatusCodes","retryOptions","xhrRetryRequestHook","url","method","originalRequestSend","send","operation","attempt","currentAttempt","originalOnReadyStateChange","onreadystatechange","status","errorMessage","attemptFailedError","getXHRRetryRequestHook","login","logout","getData","setData","Metadata","uid","configurable","writable","_data","propertyName","propertyValue","_uid","_custom","_hasOwn","enabledElements","setEnabledElement","defineProperties","_imageId","_definePublicProperties","hasIndexValues","splitValues","isValidIndex","indexedValue","tagOrProperty","getIndexedValue","val","idx","frame","SeriesMetadata","_seriesInstanceUID","_instances","_firstInstance","getInstanceByUID","found","getInstanceByIndex","isValidUID","isValidCallback","in","mountOnEnter","unmountOnExit","appear","onEnter","onEntering","onEntered","onExit","onExiting","onExited","fadeStyles","ENTERING","ENTERED","Fade","innerProps","cloneElement","onHide","elementType","Overlay","child","transition","createChainedFunction","funcs","f","acc","isOneOf","one","of","triggerType","delayShow","delayHide","defaultOverlayShown","onBlur","onMouseOut","onMouseOver","OverlayTrigger","handleToggle","handleDelayedShow","handleDelayedHide","handleMouseOver","handleMouseOverOut","handleMouseOut","_mountNode","renderOverlay","ReactDOM","unmountComponentAtNode","_hoverShowDelay","_hoverHideDelay","relatedNative","related","relatedTarget","nativeEvent","unstable_renderSubtreeIntoContainer","_overlay","Children","only","childProps","triggerProps","warning","makeOverlay","AppContext","CONTEXTS","CORNERSTONE","VTK","useAppContext","AppProvider","activeContexts","useSelector","getActiveContexts","appConfig","withAppContext","positionTop","positionLeft","arrowOffsetTop","arrowOffsetLeft","Tooltip","outerStyle","arrowStyle","fetchPaletteColorLookupTableData","server","PaletteColorLookupTableUID","RedPaletteColorLookupTableDescriptor","GreenPaletteColorLookupTableDescriptor","BluePaletteColorLookupTableDescriptor","RedPaletteColorLookupTableData","GreenPaletteColorLookupTableData","BluePaletteColorLookupTableData","entry","_paletteColorCache","_getPaletteColor","add","maxAge","entries","now","paletteColorLookupTableData","lutDescriptor","numLutEntries","bits","arrayBufferToPaletteColorLUT","arraybuffer","byteArray","Uint16Array","Uint8Array","lut","BulkDataURI","uri","wadoRoot","errorInterceptor","requestHooks","api","DICOMwebClient","retrieveBulkData","InlineBinary","inlineBinaryData","atob","str2ab","unpackOverlay","arrayBuffer","bitArray","byteIndex","bitIndex","bitByteIndex","fetchOverlayData","OverlayDataPromises","OverlayDataTags","overlayGroup","groupStr","OverlayDataTag","_getOverlayData","ArrayBuffer","results","dicomWeb","validNumber","v","Number","datasets","dicomJSONDatasetOrP10ArrayBuffer","dicomData","DicomMessage","readFile","dicomJSONDataset","dict","naturalizedDataset","dcmjs","DicomMetaDictionary","naturalizeDataset","_getAndCacheStudyDataset","_getAndCacheStudy","_getAndCacheSeriesFromStudy","_getAndCacheInstanceFromStudy","_checkBulkDataAndInlineBinaries","uids","imageIdToUIDs","dataset","instances","PhotometricInterpretation","_getUIDsFromImageID","_getInstanceData","fallback","_getInstance","INSTANCE","getTagFromInstance","naturalizedTagOrWADOImageLoaderTag","_getCornerstoneWADOImageLoaderTag","wadoImageLoaderTag","WADO_IMAGE_LOADER_TAGS","GENERAL_SERIES_MODULE","seriesDate","seriesTime","SeriesDate","SeriesTime","dicomParser","parseDA","parseTM","modality","seriesInstanceUID","seriesNumber","SeriesNumber","studyInstanceUID","PATIENT_STUDY_MODULE","patientAge","PatientAge","patientSize","PatientSize","patientWeight","PatientWeight","IMAGE_PLANE_MODULE","rowPixelSpacing","columnPixelSpacing","rowCosines","columnCosines","ImageOrientationPatient","PixelSpacing","ImagerPixelSpacing","SOPClassUID","PixelSpacingCalibrationType","PixelSpacingCalibrationDescription","EstimatedRadiographicMagnificationFactor","SequenceOfUltrasoundRegions","isProjection","TYPES","CorrectedImagerPixelSpacing","pixelSpacing","PhysicalDeltaX","PhysicalDeltaY","getPixelSpacingInformation","frameOfReferenceUID","FrameOfReferenceUID","rows","columns","imageOrientationPatient","imagePositionPatient","ImagePositionPatient","sliceThickness","SliceThickness","sliceLocation","SliceLocation","IMAGE_PIXEL_MODULE","samplesPerPixel","SamplesPerPixel","photometricInterpretation","bitsAllocated","BitsAllocated","bitsStored","BitsStored","highBit","HighBit","pixelRepresentation","PixelRepresentation","planarConfiguration","PlanarConfiguration","pixelAspectRatio","PixelAspectRatio","smallestPixelValue","SmallestPixelValue","largestPixelValue","LargestPixelValue","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","VOI_LUT_MODULE","WindowCenter","WindowWidth","windowCenter","windowWidth","MODALITY_LUT_MODULE","rescaleSlope","RescaleSlope","rescaleIntercept","RescaleIntercept","rescaleType","RescaleType","SOP_COMMON_MODULE","sopClassUID","sopInstanceUID","PET_ISOTOPE_MODULE","RadiopharmaceuticalInformationSequence","RadiopharmaceuticalInformation","RadiopharmaceuticalStartTime","RadionuclideTotalDose","RadionuclideHalfLife","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","OVERLAY_PLANE_MODULE","overlays","OverlayData","OverlayRowsTag","OverlayColumnsTag","OverlayType","OverlayOriginTag","OverlayDescriptionTag","OverlayLabelTag","ROIAreaTag","ROIMeanTag","ROIStandardDeviationTag","OverlayOrigin","pixelData","roiArea","roiMean","roiStandardDeviation","PATIENT_MODULE","patientName","patientId","GENERAL_IMAGE_MODULE","sopInstanceUid","instanceNumber","InstanceNumber","lossyImageCompression","LossyImageCompression","lossyImageCompressionRatio","LossyImageCompressionRatio","lossyImageCompressionMethod","LossyImageCompressionMethod","GENERAL_STUDY_MODULE","studyDescription","studyDate","studyTime","StudyTime","accessionNumber","CINE_MODULE","frameTime","FrameTime","splitImageId","qs","queryString","parse","studyUID","seriesUID","objectUID","Mousetrap","_originalStopCallback","_recordedSequence","_recordedSequenceCallback","_currentRecordedKeys","_recordedCharacterKey","_origHandleKey","handleKey","_handleKey","character","recording","_recordCurrentCombo","_recordKey","_finishRecording","_normalizeSequence","self","stopRecord","init","recordPlugin","stopCallback","combo","paused","ReconstructionIssues","DATASET_4D","VARYING_IMAGESDIMENSIONS","VARYING_IMAGESCOMPONENTS","VARYING_IMAGESORIENTATION","MISSING_FRAMES","IRREGULAR_SPACING","MULTIFFRAMES","studyMetadataList","TypeSafeCollection","insert","findBy","remove","purge","removeAll","OHIFInstanceMetadata","_sopInstanceUID","_study","_series","_instance","_cache","bypassCache","rawValue","instanceData","thumbnail","OHIFSeriesMetadata","addInstance","OHIFStudyMetadata","addSeries","isDisplaySetReconstructable","isMultiframe","NumberOfFrames","constructableModalities","reconstructionIssues","MULTIFRAMES","firstImage","firstImageRows","firstImageColumns","firstImageSamplesPerPixel","firstImageOrientationPatient","ii","_isSameArray","instanceMetadataControl","jj","instanceMetadata","_isDataset4D","processSingleframe","iop1","iop2","abs","iopTolerance","spacingTolerance","_getSpacingIssue","spacing","averageSpacing","multipleOfAverageSpacing","numberOfSpacings","issue","missingFrames","_getPerpendicularDistance","sqrt","pow","_studyInstanceUID","_displaySets","_derivedDisplaySets","_firstSeries","derivatedDisplaySet","allDisplaySets","displaySets","otherDisplaySets","ds","referencedSeriesInstanceUIDs","SourceImageSequence","firstFunctionalGroups","_toArray","PerFrameFunctionalGroupsSequence","DerivationImageSequence","sourceImageArray","ReferencedSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSourceImageSequence","noReferencedSeriesAvailable","ReferencedSeriesSequence","ReferencedSeries","_findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence","ReferencedImageSequence","referencedImageArray","_findReferencedSeriesInstanceUIDsFromReferencedImageSequence","sopClassHandlerModules","getInstanceCount","ImageSet","setAttributes","SeriesDescription","sopClassUIDs","uniqueSopClassUIDsInSeries","instanceSopClassUID","getSopClassUIDs","sopClassHandlerExtensions","handlersForSopClassUID","extension","plugin","dicomWebClient","dwc","getDisplaySetFromSeries","_getDisplaySetFromSopClassModule","sopClassModule","isDerived","_addDerivedDisplaySet","stackableInstances","naturalizedName","isMultiFrame","makeDisplaySet","isClip","numImageFrames","AcquisitionDatetime","isSingleImageModality","frameRate","isReconstructable","isSOPClassUIDSupported","SOPClassUIDNaturalized","referencedSeriesInstanceUID","referencedFrameOfReferenceUID","filteredDerivedDisplaySets","referencedDisplaySet","getReferencedDisplaySet","referencedDisplaySets","filteredReferencedDisplaySets","getSeriesCount","_createDisplaySetsForSeries","_insertDisplaySet","containsSeries","addDisplaySet","firstIndexWithSameSeriesNumber","insertIndex","isLowPriorityModality","startingIndex","seriesDateTime","displaySetI","some","getSeriesByUID","sum","getSeriesByIndex","firstSeries","getFirstSeries","findInstance","findSeriesAndInstanceByInstance","imageSet","getImage","displayReconstructableInfo","displaySpacingInfo","sortByImagePositionPatient","datasetIs4D","firstImagePositionPatient","lastIpp","averageSpacingBetweenFrames","previousImagePositionPatient","spacingBetweenFrames","spacingIssue","isUniform","isSpacingUniform","imageSets","arrayOrObject","hasOwn","sortingCallback","referenceImagePositionPatient","_getImagePositionPatient","refIppVec","Vector3","scanAxisNormal","cross","distanceImagePairs","ippVec","distance","clone","sub","dot","sortedImages","regex","separator","renderingAttr","wadorsuri","getWADORSImageId","wadouri","debugMode","detectionOptions","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","documentElement","AboutModal","Buttons","Common","DatePicker","Header","UserPreferencesModal","languagesMap","ar","am","bg","bn","ca","cs","da","de","el","en","es","et","fa","fi","fil","fr","gu","he","hi","hr","hu","it","ja","kn","ko","lt","lv","ml","mr","ms","nl","no","pl","ro","ru","sk","sl","sr","sv","sw","ta","te","tr","uk","vi","zh","locizeOptions","projectId","apiKey","referenceLng","fallbacklng","envUseLocize","envApiKeyAvailable","DEFAULT_LANGUAGE","initI18n","initialized","detection","useLocize","apiKeyAvailable","customDebug","use","Backend","LastUsed","Editor","LanguageDetector","initReactI18next","fallbackLng","saveMissing","interpolation","escapeValue","locizeLastUsed","editor","onEditorSaved","reloadResources","emit","react","useSuspense","wait","bindI18n","resources","locales","pkg","initializing","addLocales","newLocales","resourceBundle","addResourceBundle","defaultLanguage","availableLanguages","availableLanguagesInfo","getAvailableLanguagesInfo","moduleName","StudyMetaDataPromises","retrieveStudyMetadata","filters","separateSeriesInstanceUIDFilters","seriesInstanceUIDs","seriesSpecificFilters","RetrieveMetadata","__separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise","deleteStudyMetadataPromise","str","strLen","bytes","buffer","ObjectPath","path","components","getPathComponents","isValidObject","last","isValid","absoluteUrl","absolutePath","origin","absoluteUrlParts","rootUrlPrefixIndex","addServers","servers","store","serverType","endpoint","dispatch","imageObj","someInvalidStrings","strings","getImageInstance","getImageInstanceId","imageInstance","fetchIt","fetch","response","cornerstoneRetriever","loadAndCacheImage","wadorsRetriever","retrieveInstance","dicomLoaderService","localFile","findImageIdOnStudies","cornerstoneWADOImageLoader","loadFileRequest","getDicomDataMethod","loaderRegExp","loaderType","exec","lastIndex","getImageLoaderType","authorizationHeaders","wadoUri","getLocalData","getDataByImageType","getDataByDatasetType","loaderIterator","getLoaderIterator","loader","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","byteNumbers","blob","Blob","logger","studyMetadataManager","derivedDisplaySets","getDerivedDatasets","displaySetsPerModality","isLoaded","loadError","recentDateTime","recentDisplaySet","dateTime","getSourceDisplaySet","onDisplaySetLoadFailureHandler","activatedLabelmapIndex","activatedLabelmapPromise","selectionFired","CustomEvent","dispatchEvent","lastDateTime","load","loadAndCacheDerivedDisplaySets","toLowerCaseFirstLetter","toParse","lib","getQueryFilters","searchParameters","paramString","isValidPath","paramPatternPiece","parseParam","paramStr","_paramDecoded","strToDecode","decoded","decode","replaceParam","paramKey","paramValue","paramPattern","makeDeferred","res","rej","Queue","awaiting","task","boundTask","queue","cleaner","clean","chain","SEPARATOR","addToList","addValuesToList","isSublist","sublist","toSublist","forEachValue","getItem","indexOrPath","subpath","print","prevLen","repeat","TYPE","TASK","LIST","createList","objectWithType","named","observers","isList","isOfType","createTask","isTask","progress","increaseList","getOverallProgress","update","isValidProgress","finish","seal","total","partial","failures","waitOn","thenable","addDeferred","deferred","setTaskName","getTaskByName","addObserver","observer","removeObserver","writeScript","fileName","StackManager","DicomLoaderService","urlUtil","makeCancelable","isCanceled","cancel","isDicomUid","resolveObjectPath","hierarchicalListUtils","progressTrackingUtils","noop","StudyPrefetcher","displaySetCount","onImageCached","requestType","preventCache","prefetchDisplaySetsTimeout","maxNumPrefetchRequests","includeActiveDisplaySet","stopPrefetching","events","cacheFullHandler","prefetchDisplaySets","imageLoadPoolManager","clearRequestStack","prefetchDisplaySetsHandler","displaySetsToPrefetch","getDisplaySetsToPrefetch","imageIds","getImageIdsFromDisplaySets","prefetchImageIds","requestFn","nonCachedImageIds","filterCachedImageIds","maxNumRequests","prefetch","addRequest","metaData","displaySetImage","getActiveViewportImage","getStudy","getSeries","getInstance","activeDisplaySet","getDisplaySetByUID","getDisplaySetBySOPInstanceUID","prefetchOrder","getDisplaySets","topdown","downward","upward","closest","selectedDisplaySets","activeDisplaySetIndex","begin","right","getImageIdsFromDisplaySet","numFrames","isImageCached","imageCache","sizeInBytes","BaseLoadingListener","getNewId","statsItemsLimit","stats","elapsedTime","speed","_setProgressData","_clearProgressById","_addStatsData","_updateProgress","oldestItem","getTime","progressId","_getProgressId","stopListening","_clearProgress","timeSlice","randomNumber","DICOMFileLoadingListener","dataSetUrl","_convertImageIdToDataSetUrl","bytesDiff","loaded","_lastLoaded","_dataSetUrl","imageLoadProgressEventHandler","_imageLoadProgressEventHandler","_getDataSetUrl","_checkCachedData","startListening","dataSet","dataSetCacheManager","dataSetLength","percentComplete","imageLoadProgressEventName","_getImageLoadProgressEventName","imageLoadProgressEventHandle","progressData","multiFrame","bytesLoaded","bytesTotal","bytesPerSecond","StudyLoadingListenerEvents","OnProgress","promiseState","uniqueValue","race","reason","StackLoadingListener","imageLoadedEventHandler","_imageLoadedEventHandler","imageCachePromiseRemovedEventHandler","_imageCachePromiseRemovedEventHandler","imageDataMap","_convertImageIdsArrayToMap","framesStatus","_createArray","loadedCount","_debouncedSetProgressData","debounce","studyPrefetcher","getElement","imageIdsMap","debounced","imageObject","getImageLoadObject","_updateFrameStatus","IMAGE_LOADED","IMAGE_CACHE_PROMISE_REMOVED","imageLoadedEventName","_getImageLoadedEventName","imageCachePromiseRemovedEventName","_getImageCachePromiseRemoveEventName","imageData","totalFramesCount","loadedFramesCount","loadingFramesCount","ceil","framesPerSecond","progressBar","ch","StudyLoadingListener","listeners","stackMetaData","listener","_createListener","findOrCreateStack","addStack","addStudy","displaySetInstanceUIDs","destroy","_getSchema","colonIndex","_subscriptions","_lastSubscriptionId","PubSub","eventName","subscriptionId","callbacks","payload","LogEvents","OHIFStudyMetadataSource","studyInfo","Studies","_updateStudyCollections","getByInstanceUID","createDisplaySets","MetadataProvider","imagesTypes","LOW_PRIORITY_MODALITIES","fields","n_fields","A","primer","stackMap","configuration","stackUpdatedCallbacks","createAndAddStack","numImages","imageIndex","naturalizedInstance","frameNumber","addImageIdToUIDs","clearStacks","makeAndAddStack","findStack","getAllStacks","addStackUpdatedCallback","getConfiguration","setConfiguration","PROPERTY_SEPARATOR","ORDER_ASC","ORDER_DESC","MIN_COUNT","_operationCount","_elementList","_handlers","silent","_elements","handlers","_isFunction","_elementWithPayload","_invalidate","_elementWithId","_trigger","propertyMap","findAllEntriesBy","foundCount","removed","_isObject","_compareToPropertyMapStrict","_sortListBy","_isString","_hasOwnProperty","_getPropertyValue","targetObject","fragments","fragmentCount","firstFragment","remainingFragments","specifiers","_isValidSortingSpecifier","specifierCount","specifier","aValue","bValue","arrowAnnotate","toolGroup","cornerstoneToolType","measurementTable","displayFunction","caseProgress","include","evaluate","bidirectional","shortestDiameter","longestDiameter","ellipticalRoi","meanValue","cachedStats","mean","isNaN","circleRoi","freehandMouse","meanStdDev","lengthValue","nonTarget","rectangleRoi","angle","rAngle","fromCharCode","targetCR","targetNE","targetUN","dicomSRDisplayTool","TrackingIdentifier","lesionNamingNumber","childTools","tools","measurementApiDefaultConfig","measurementTools","newLesions","toolGroupId","dataExchange","retrieve","timepointIds","timepointData","timepointId","disassociate","TIMEPOINT_TYPE_NAMES","prebaseline","baseline","followup","TimepointApi","currentTimepointId","Instance","initialize","comparisonTimepointKey","onTimepointsUpdated","visitNumber","tp1","tp2","visitDate","tp","timepointType","retrievalFn","timepointIndex","storeFn","JSON","stringify","disassociateFn","retrieveTimepoints","removeFn","tpIndex","updateFn","prior","comparisonTimepoint","comparison","userComparison","nextBaselineAfterCurrent","currentTimepoint","allNextTimepoints","latestInitialBeforeNextFUIndex","timepointToCheck","latestInitialTimepointAfterCurrent","visitDateToCheck","preBaselineTimepointIds","baselineTimepointIds","currentVisitDate","nadir","timepointKey","resultIncludes","studyInstanceUIDs","timepointTypeName","calculateVisitNumber","timepointName","currentIndex","parenthesis","0","1","parenthesisText","toolType","imagePath","frameIndex","MeasurementApi","timepointApi","toolsGroupsMap","getToolsGroupsMap","measurementLabel","getLabel","toolState","globalImageIdSpecificToolStateManager","saveToolState","getToolConfiguration","childToolKey","childMeasurement","_id","syncMeasurementAndToolData","getImageIdForImagePath","currentToolState","toolData","alreadyExists","restoreToolState","toolGroups","toolGroupTools","getToolGroupTools","onMeasurementsUpdated","measurementTypeId","addMeasurement","syncMeasurementsAndToolData","getEnabledElements","updateImage","isToolIncluded","timepointFilter","sortedMeasurements","toolId","toolItemId","includedChildTools","toolConfig","parentTool","currentMeasurement","initialTimepointIds","initialtpid","lesionExistsAtTimepoints","groupId","toolGroupMeasurement","isNewLesionsMeasurement","maxTargetMeasurementNumber","calculateLesionMaxMeasurementNumber","maxNonTargetMeasurementNumber","maxNewTargetMeasurementNumber","calculateNewLesionMaxMeasurementNumber","maxNewNonTargetMeasurementNumber","additionalData","TrialPatientLocationUID","childToolTypes","childToolType","collectionToUpdate","propertyFilter","increment","updateNumbering","groupCollection","collection","relatedMeasurement","emptyItem","groupTool","createdAt","measurementsInTimepoint","calculateLesionNamingNumber","calculateMeasurementNumber","addedMeasurement","updateObject","getPreviousMeasurement","isSplitLesion","isNodal","getDescription","hasDuplicateMeasurementNumber","updateMeasurementNumberForAllMeasurements","toolIndex","groupIndex","group","lesionNamingNumberFilter","tGroup","childTool","filterKeys","groupItems","filterKey","groupItem","measurementsData","measurementEntries","measurementEntry","mEntry","onMeasurementRemoved","syncFilter","syncFilterKeys","syncFilterKey","BaseCriterion","criterionName","isGlobal","baselineMeasurementNumbers","newTargetNumbers","newTarget","targets","LocationSchema","LocationCriterion","nonTargets","generateResponse","MaxTargetsPerOrganSchema","minimum","MaxTargetsPerOrganCriterion","targetsPerOrgan","getNewTargetNumbers","MaxTargetsSchema","locationIn","minItems","uniqueItems","locationNotIn","MaxTargetsCriterion","measurementNumbers","lesionType","plural","amount","MeasurementsLengthSchema","longAxis","shortAxis","longAxisSliceThicknessMultiplier","shortAxisSliceThicknessMultiplier","modalityIn","modalityNotIn","anyOf","MeasurementsLengthCriterion","longMultiplier","shortMultiplier","childToolsCount","ModalitySchema","enum","measurementTypes","ModalityCriterion","modalitiesSet","validationMethod","invalidModalities","measurementType","uniqueModalities","uniqueModalitiesText","modalityText","NonTargetResponseSchema","NonTargetResponseCriterion","TargetTypeSchema","TargetTypeCriterion","Criteria","initialCriteria","CriteriaEvaluator","criteriaObject","criteriaValidator","getCriteriaValidator","criteria","dataPath","criterionkey","optionsObject","Criterion","criterionKey","criterionDefinitions","criterion","newTargetMatch","schema","definitions","criterionDefinition","$ref","Ajv","compile","nonconformities","criterionResult","recist11","evaluations","initialEvaluations","ConformanceCriteria","measurementApi","groupedNonConformities","maxTargets","maxNewTargets","trialCriteriaType","baselinePromise","followupPromise","baselineData","followupData","mergedData","resultBoth","validateTimepoint","resultBaseline","resultFollowup","groupNonConformities","groups","nonConformity","globals","messages","measureNumber","evaluators","getEvaluators","evaluator","getMaxTargets","resultItem","trialCriteriaTypeId","evaluation","evaluationTimepoint","studyPromises","fillData","evaluationKey","evaluationDefinitions","refreshCornerstoneViewports","handleSingleMeasurementAdded","cancelled","imageAttributes","getImageAttributes","userId","additionalProperties","parentMeasurement","updateMeasurement","getViewport","handleSingleMeasurementRemoved","deleteMeasurements","measurementIndex","getEventData","toolName","MeasurementHandlers","handleChildMeasurementAdded","handleSingleMeasurementModified","handleChildMeasurementModified","handleChildMeasurementRemoved","onAdded","params","onModified","onRemoved","temp","ltTools","resultDataToStudyMetadata","resultData","seriesMap","wadoUriRoot","dateToString","getFullYear","getMonth","getDate","resultDataToStudies","referringPhysicianName","PatientBirthdate","patientSex","studyId","numberOfStudyRelatedSeries","numberOfStudyRelatedInstances","staticWado","qidoRoot","StaticWadoClient","qidoSupportsIncludeField","queryParams","serverSupportsQIDOIncludeField","commaSeparatedFields","parameters","fuzzymatching","includefield","dateFrom","dateTo","studyUIDs","getQIDOQueryParams","searchForStudies","WADO","QIDO","Instances","searchForInstances","studySearchPromises","services","loadingDict","retrieveStudiesMetadata","getStudyBoxData","searchStudies","promiseKeyObj","promiseKey","sortStudy","getWADORSImageUrl","INFO","getSeriesInfo","isLowPriority","seriesSortCriteria","seriesInfoSortingCriteria","secondSeries","instancesSortCriteria","sortingCriteria","sortStudySeries","seriesSortingCriteria","sortStudyInstances","instancesList","instancesSortingCriteria","deepSort","UrlUtil","IHEInvokeImageDisplay","ViewerRouting","StudyListRouting","StandaloneRouting","ViewerLocalFileData","ROUTES_DEF","standaloneViewer","condition","showStudyList","local","gcloud","enableGoogleCloudAdapter","getRoutes","routes","keyConfig","routesConfig","routeKey","route","parsePath","_path","_paramsCopy","parseViewerPath","viewerPath","parseStudyListPath","studyListPath","getReferencedSeriesSequence","referencedSeriesSequenceRaw","referencedSeriesSequence","referencedSeries","referencedInstanceSequenceRaw","referencedInstanceSequence","referencedInstance","referencedSOPClassUID","referencedSOPInstanceUID","createStudy","aSopInstance","seriesLoader","NumberOfStudyRelatedInstances","InstitutionName","buildInstanceWadoUrl","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","baseWadoRsUri","makeSOPInstance","sopInstance","imageRendering","thumbnailRendering","wadoRSMetadata","wadorsImageId","wadors","metaDataManager","addInstancesToStudy","sopInstanceList","createStudyFromSOPInstanceList","firstSopInstance","RetrieveMetadataLoader","configLoad","preLoad","preLoadData","loadData","posLoad","postLoadData","loaders","done","RetrieveMetadataLoaderSync","client","retrieveSeriesMetadata","getLoaders","runLoaders","attachSeriesLoader","hasNext","sopInstances","makeSeriesAsyncLoader","seriesInstanceUIDList","RetrieveMetadataLoaderAsync","preLoaders","searchForSeries","getPreLoaders","seriesSorted","seriesInstanceUIDsMap","seriesAsyncLoader","asyncLoader","seriesDataFromQIDO","enableStudyLazyLoad","retrieveMetadataLoader","execLoad","ViewportErrorIndicator","bottom","pointerEvents","ViewportLoadingIndicator","ImageThumbnail","loadingOrError","cancelablePromise","imageSrc","stackPercentComplete","propsError","showProgressBar","setLoading","setImage","canvasRef","showStackLoadingProgressBar","shouldRenderToCanvas","fetchImagePromise","setImagePromise","purgeCancelablePromise","renderToCanvas","ThumbnailFooter","hasDerivedDisplaySets","inconsistencyWarnings","inconsistencyWarningsSet","derivedDisplaySetsActive","derivedDisplaySetsActiveSet","unmounted","infoOnly","getInfo","getDerivedInfo","getWarningInfo","getSeriesInformation","altImageText","onDoubleClick","onMouseDown","supportsDrag","setStackPercentComplete","onProgressChange","throttle","percent","useDrag","canDrag","monitor","drag","hasImage","hasAltText","qidoConfig","searchResult","filtered","filterItem","desired","actual","compareValues","actualItem","range","dash","testValue","valueElem","compareDateRange","createSelector","activeViewportIndex","layout","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","activeViewportExtension","defaultContextValues","createLogoComponentFn","OHIFLogo","WhiteLabelingContext","getAppState","contexts","_getAppState","_getActiveContexts","contextName","clearContext","commandName","definition","getContext","foundCommand","activeContext","getCommand","commandFn","storeContexts","definitionOptions","commandParams","appState","commandsManager","servicesManager","hotkeyDefinitions","hotkeyDefaults","isEnabled","_servicesManager","_commandsManager","_getValidDefinitions","registerHotkeys","_parseToArrayLike","hotkeyDefinitionsObj","copy","entryValue","_parseToHotKeyObj","previouslyRegisteredDefinition","previouslyRegisteredKeys","_unbindHotkeys","_bindHotkeys","setHotkeys","combinedKeys","runCommand","unbind","CodeNameCodeSequenceValues","ImagingMeasurementReport","ImageLibrary","ImagingMeasurements","MeasurementGroup","ImageLibraryGroup","TrackingUniqueIdentifier","Finding","FindingSite","CornerstoneFreeText","Score","RELATIONSHIP_TYPE","INFERRED_FROM","SELECTED_FROM","CodingSchemeDesignators","SRT","cornerstoneTools4","getSequenceAsArray","getLabelFromMeasuredValueSequence","ConceptNameCodeSequence","MeasuredValueSequence","CodeMeaning","NumericValue","CodeValue","MeasurementUnitsCodeSequence","formatedNumericValue","getCoordsFromSCOORDOrSCOORD3D","graphicItem","ValueType","coords","GraphicType","GraphicData","ReferencedSOPSequence","ContentSequence","ReferencedFrameOfReferenceUID","ReferencedFrameOfReferenceSequence","processTID1410Measurement","contentSequence","UIDREFContentItem","TrackingIdentifierContentItem","NUMContentItems","UID","TextValue","RelationshipType","coord","processNonGeometricallyDefinedMeasurement","CODEContentItems","IMAGEContentItem","FindingSites","CodingSchemeDesignator","ConceptCodeSequence","cornerstoneFreeTextFindingSite","SCOORD_TYPES","labelCodingSchemeDesignator","valueCodingSchemeDesignator","processMeasurement","ImagingMeasurementReportContentSequence","MeasurementGroups","cornerstoneAdapters","adapters","Cornerstone","TOOL_NAMES","DICOM_SR_DISPLAY_TOOL","getRenderableData","imageMetadata","renderableData","orientation","sliceSpacing","M","M1","inv","worldToIJK","point","z","center","onPerimeter","radius","csMath","majorAxis","minorAxis","minorAxisLength","minorAxisDirection","halfMinorAxisLength","corner1","corner2","csTools","imageIdToolState","addToMeasurementApi","checkIfCanAddMeasurementsToDisplaySet","srDisplaySet","imageDisplaySet","sliceNormal","distanceAlongNormal","ReferencedSOPClassUID","SOPInstanceUIDs","colors","SRLabels","parseSCOORD3D","srDisplaySets","imageDisplaySets","mappings","getSourceMappings","isHydrated","isRehydratable","mappingDefinitions","adapterKeys","adapterKey","isValidCornerstoneTrackingIdentifier","adapter","findInstanceMetadataBySopInstanceUID","instanceFound","getImagePath","parseDicomStructuredReport","part10SRArrayBuffer","external","seriesDescription","storedMeasurementByToolType","MeasurementReport","generateToolState","isToolSupported","parseMeasurementsData","unsupportedTools","annotation","generateReport","getAllDisplaySets","retrieveMeasurementFromSR","serverUrl","stowSRFromMeasurements","DicomDict","FileMetaInformationVersion","_meta","MediaStorageSOPClassUID","MediaStorageSOPInstanceUID","TransferSyntaxUID","ImplementationClassUID","ImplementationVersionName","denaturalized","denaturalizeDataset","dicomDict","part10Buffer","write","storeInstances","isStructuredReportSeries","compareSeriesDate","series1","series2","findMostRecentStructuredReport","mostRecentStructuredReport","retrieveMeasurements","latestSeries","storeMeasurements","firstMeasurementKey","firstMeasurement","actions","setViewportActive","setViewportLayoutAndData","clearViewportSpecificData","setActiveViewportSpecificData","setUserPreferences","setExtensionData","setTimepoints","setMeasurements","setStudyData","setServers","defaultState","extensions","extensionName","currentData","incomingData","windowLevelData","2","3","4","5","6","7","9","10","generalPreferences","preferences","uniqBy","newServer","newServers","updatedStudyData","timepointManager","setAutoFreeze","DEFAULT_STATE","findActiveViewportSpecificData","currentViewportSpecificData","numberOfViewports","getActiveViewportIndex","currentActiveViewportIndex","reducers","useActiveViewport","produce","draftState","LocalStorageApi","localStorage","saveState","serializedState","setItem","loadState","SessionStorageApi","sessionStorage","Hammer","cornerstoneMath","loadHandlerManager","setErrorLoadingHandler","fontFamily","setFont","toolStyle","setToolWidth","toolColors","setToolColor","setActiveColor","touchProximity","stackPrefetch","maxImagesToPrefetch","preserveExistingPool","maxSimultaneousRequests","SUPPORTED_TOOLS","measurementServiceMappingsFactory","measurementService","_getAttributes","_getValueTypeFromToolType","VALUE_TYPES","POLYLINE","Length","EllipticalRoi","ELLIPSE","RectangleRoi","ArrowAnnotate","POINT","_getPointsFromHandles","points","handle","_getHandlesFromPoints","toAnnotation","unit","referenceSeriesUID","_measurementServiceId","toMeasurement","csToolsAnnotation","area","trackingIdentifiersByEnabledElementUUID","getters","trackingUniqueIdentifiersForElement","uuid","trackingUniqueIdentifiers","setters","activeIndex","activeTrackingUniqueIdentifierForElement","trackingIdentifiersForElement","tuid","register","srModuleId","dicomSRModule","callInputDialog","InputDialog","useLastPosition","csToolsConfig","Infinity","addProvider","initCornerstoneTools","globalToolSyncEnabled","showSVGCursors","autoResizeViewports","toolsGroupedByType","touch","PanMultiTouchTool","ZoomTouchPinchTool","annotations","ArrowAnnotateTool","BidirectionalTool","LengthTool","AngleTool","FreehandRoiTool","EllipticalRoiTool","DragProbeTool","RectangleRoiTool","other","PanTool","ZoomTool","WwwcTool","WwwcRegionTool","MagnifyTool","StackScrollTool","StackScrollMouseWheelTool","OverlayTool","toolsGroup","_connectToolsToMeasurementService","internalToolsConfig","getTextCallback","eventDetails","changeTextCallback","externalToolProps","internalToolProps","merge","toolsWithHideableHandles","parsedProps","hideHandles","drawHandlesOnHover","parseToolProps","addTool","BaseAnnotationTool","importInternal","setToolPassive","setToolActive","mouseButtonMask","pointers","setToolEnabled","csToolsVer4MeasurementSource","createSource","matchingCriteria","valueType","addMapping","_initMeasurementService","sourceId","addOrUpdate","getAnnotation","ELEMENT_ENABLED","MEASUREMENT_ADDED","MEASUREMENT_UPDATED","source","addMeasurementServiceId","MEASUREMENT_MODIFIED","csToolsEvtName","csTool","measurementServiceId","addOrUpdateMeasurement","setCornerstoneLayout","CornerstoneViewportDownloadForm","activeEnabledElement","enable","disable","fitToWindow","updateViewport","toDataURL","newWidth","newHeight","multiplier","scale","translation","displayImage","setViewport","resize","toggle","setToolEnabledForElement","setToolDisabledForElement","file","mimetype","msToBlob","msSaveBlob","toBlob","URLObj","URL","webkitURL","createObjectURL","download","click","scroll","import","commandsModule","rotateViewport","rotation","flipViewportHorizontal","hflip","flipViewportVertical","vflip","scaleViewport","resetViewport","invertViewport","invert","clearAnnotations","measurementsToRemove","nextImage","previousImage","getActiveViewportEnabledElement","showDownloadViewportModal","updateTableWithNewMeasurementData","getNearbyToolData","canvasCoordinates","availableToolTypes","nearbyTool","pointNearTool","elementToolData","getToolState","elementToolInstance","getToolForElement","removeToolState","setWindowLevel","voi","jumpToImage","refreshViewports","rotateViewportCW","rotateViewportCCW","scaleUpViewport","scaleDownViewport","fitViewportToWindow","setZoomTool","defaultContext","TOOLBAR_BUTTON_TYPES","COMMAND","SET_TOOL_ACTIVE","BUILT_IN","TOOLBAR_BUTTON_BEHAVIORS","CINE","DOWNLOAD_SCREEN_SHOT","commandOptions","behavior","togglable","lazy","OHIFCornerstoneViewport","Suspense","preRegistration","getViewportModule","isStackPrefetchEnabled","enabled","onNewImage","jumpData","getToolbarModule","toolbarModule","getCommandsModule","oidcSettings","settings","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","userManager","createUserManager","loadUser","MAX_CONCURRENCY","middleware","thunkMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","oidc","oidcReducer","rootReducer","combineReducers","preloadedState","disableServersCache","createStore","applyMiddleware","getState","updateActiveViewport","maxIndex","newIndex","setWindowLevelPreset","updateViewportDisplaySet","currentDisplaySetIndex","newDisplaySetData","incrementActiveViewport","decrementActiveViewport","windowLevelPreset1","windowLevelPreset2","windowLevelPreset3","windowLevelPreset4","windowLevelPreset5","windowLevelPreset6","windowLevelPreset7","windowLevelPreset8","windowLevelPreset9","nextViewportDisplaySet","previousViewportDisplaySet","getMeasurementText","getDataForEachMeasurementNumber","measurementNumberList","eachData","convertMeasurementsToTableData","toolCollections","getAllTools","tableMeasurements","toolMeasurements","groupedMeasurements","groupedMeasurementsIndex","measurementId","tableMeasurement","tm","m1","m2","convertTimepointsToTableData","latestDate","ConnectedMeasurementTable","connect","getSaveFunction","ownProps","dispatchRelabel","viewportsState","persist","toolForLocation","dispatchEditDescription","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","vtk","numTimepoints","numViewportsToUpdate","measurementsForToolGroup","measurementsToJumpTo","dataAtThisTimepoint","displaySetContainsSopInstance","jumpToRowItem","measurementToActive","propsFromState","propsFromDispatch","LabellingTransition","displayComponent","onTransitionExit","OHIFLabellingData","EditDescriptionDialog","onUpdate","autoComplete","LabellingFlow","editLocation","editDescription","skipAddLabelButton","updateLabelling","labellingDoneCallback","editDescriptionOnDialog","fadeOutTimer","setFadeOutTimer","showComponent","setShowComponent","descriptionInput","newMeasurementData","newEditLocation","focus","relabel","setDescriptionUpdateMode","descriptionCancel","handleKeyPress","descriptionSave","selectTreeSelectCallback","itemSelected","locationLabel","showLabelling","fadeOutAndLeaveFast","onKeyPress","labellingStateFragment","initialTopDistance","toolTypes","ToolContextMenu","onSetLabel","onSetDescription","isTouchEvent","defaultDropdownItems","actionType","nearbyToolData","dropdownItems","currentPoints","getDropdownItems","MEASUREMENT_ACTION_MAP","added","modified","onMeasurementsChanged","onMeasurementAdded","onMeasurementModified","onLabelmapModified","_getDefaultPosition","showLabellingDialog","labellingData","_updateLabellingHandler","onTouchPress","onTouchStart","resetLabelligAndContextMenu","cornerstoneMouseClickEvent","onRightClick","MEASUREMENT_REMOVED","LABELMAP_MODIFIED","TOUCH_PRESS","MOUSE_CLICK","TOUCH_START","ELEMENT_DISABLED","getPanelModule","menuOptions","Bar","animationDuration","background","marginLeft","boxShadow","opacity","transform","Container","isFinished","CallbackPage","OHIFStandaloneViewer","unlisten","history","listen","setContext","pathname","expired","exact","RoutesUtil","render","successCallback","errorCallback","URLSearchParams","iss","loginHint","targetLinkUri","authority","removeUser","ohifRedirectTo","signinRedirect","login_hint","getUser","signinSilent","currentPath","noMatchingRoutes","matchPath","isAnimating","NotFound","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","withRouter","extensionManager","commandsManagerConfig","hotkeysManager","ohif","app","App","defaultExtensions","_appConfig","cornerstoneExtensionConfig","routerBasename","homepage","appConfigHotkeys","env","PUBLIC_URL","access_token","httpErrorHandler","configure","beforeSend","xhr","setRequestHeader","initUserManager","registerServices","hooks","requiredExtensions","GenericViewerCommands","OHIFCornerstoneExtension","disableMeasurementPanel","MeasurementsPanel","mergedExtensions","registerExtensions","_initExtensions","userPreferredHotkeys","setDefaultHotKeys","_initHotkeys","_initServers","maxWebWorkers","hardwareConcurrency","startWebWorkersOnDemand","taskConfiguration","decodeTask","initializeCodecsOnStartup","usePDFJS","strict","webWorkerManager","initWebWorkers","whiteLabeling","_userManager","UserManagerContext","basename","firstOpenIdClient","host","baseUri","redirect_uri","silent_redirect_uri","post_logout_redirect_uri","openIdConnectConfiguration","_makeAbsoluteIfNecessary","getUserManagerForOpenIdConnectClient","base_url","_isAbsoluteUrl","ExportedApp","showGoBackButton","to","StudyBrowser","onThumbnailClick","onThumbnailDoubleClick","showThumbnailProgressBar","thumb","thumbIndex","derivedDisplaySetsNumber","flat","COMMANDS","PANEL","SOP_CLASS_HANDLER","TOOLBAR","VIEWPORT","VTKViewport","setViewportActiveHandler","handleScrollEvent","ConnectedVTKViewport","dataFromStore","pluginDetails","enableStackPrefetch","afterCreation","onCreated","LoadingIndicator","percComplete","segmentationModule","getModule","volumeCache","labelmapCache","OHIFVTKViewport","volumes","paintFilterLabelMapImageData","paintFilterBackgroundImageData","labelmapDataObject","labelmapColorLUT","getCornerstoneStack","imageDataObject","getImageData","firstImageId","brushStackState","activeLabelmapIndex","labelmap3D","labelmaps3D","segmentsDefaultProperties","segmentsHidden","isHidden","vtkLabelmapID","labelmapBuffer","vtkImageData","newInstance","dataArray","vtkDataArray","numberOfComponents","getPointData","setScalars","setSpacing","getSpacing","setOrigin","getOrigin","setDirection","getDirection","colorLutTables","colorLUTIndex","storedStack","imageMetaData0","lower","upper","_getRangeFromWindowLevels","volumeActor","vtkVolume","volumeMapper","vtkVolumeMapper","setMapper","setInputData","getProperty","getRGBTransferFunction","setRange","sampleDistance","setSampleDistance","setMaximumSamplesPerRay","dataDetails","getViewportData","getOrCreateVolume","loadProgressively","setStateFromProps","prevDisplaySet","loadImageData","onPixelDataInserted","numberProcessed","onAllPixelDataInserted","onPixelDataInsertedError","childrenWithProps","labelmapRenderingOptions","colorLUT","globalOpacity","fillAlpha","renderFill","outlineThickness","outlineWidth","renderOutline","onNewSegmentationRequested","webpackContext","req","webpackContextResolve","setLayoutAndViewportData","setMPRLayout","viewportPropsArray","apis","viewportProps","setViewportToVTK","BlendMode","Constants","defaultVOI","_getActiveViewportVTKApi","_setView","viewUp","renderWindow","genericRenderWindow","getRenderWindow","istyle","getInteractor","getInteractorStyle","setSliceNormal","setViewUp","getVOIFromCornerstoneViewport","dom","cornerstoneElement","setVOI","updateVOI","_convertModelToWorldSpace","indexToWorld","getIndexToWorld","vec3","transformMat4","getVtkApis","resetMPRView","resetOrientation","svgWidgets","rotatableCrosshairsWidget","resetCrosshairs","axial","sagittal","coronal","requestNewSegmentation","allViewports","jumpToSlice","segmentNumber","pixelIndex","worldPos","moveCrosshairs","setSegmentationConfiguration","setGlobalOpacity","setVisibility","setOutlineThickness","setOutlineRendering","setSegmentConfiguration","setSegmentVisibility","enableRotateTool","apiIndex","vtkInteractorStyleMPRRotate","setInteractorStyle","enableCrosshairsTool","vtkInteractorStyleRotatableMPRCrosshairs","getReferenceLines","enableLevelTool","throttledUpdateVOIs","trailing","setOnLevelsChanged","vtkInteractorStyleMPRWindowLevel","setSlabThickness","slabThickness","changeSlabThickness","change","getSlabThickness","setBlendModeToComposite","mapper","getMapper","setBlendModeToMaximumIntensity","setBlendMode","blendMode","mpr2d","cornerstoneVOI","addSVGWidget","vtkSVGRotatableCrosshairsWidget","setApiIndex","setApis","firstApi","openGLRenderWindow","getOpenGLRenderWindow","getWebgl2","openGLContext","maxTextureSizeInBytes","getParameter","MAX_TEXTURE_SIZE","maxBufferLengthFloat32","getInputData","getDimensions","vtkActions","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","setBlendModeToMinimumIntensity","MINIMUM_INTENSITY_BLEND","setBlendModeToAverageIntensity","AVERAGE_INTENSITY_BLEND","increaseSlabThickness","decreaseSlabThickness","getVtkApiForViewportIndex","SLIDER","ToolbarLabel","ToolbarSlider","_getSelectOptions","operationButtons","_getClassNames","_applySlabThickness","modeChecked","toolbarClickCallback","generatedOperation","generateOperation","actionButton","_applyModeOperation","deactivateButton","_operation","_getInitialState","currentSelectedOption","sliderMin","sliderMax","INITIAL_OPTION_INDEX","_getInitialtSelectedOption","SlabThicknessToolbarComponent","parentContext","_className","selectOptions","selectedValue","isVisible","_isDisplaySetReconstructable","VTKMPRToolbarButton","CustomComponent","withCommandsManager","vtkExtension","BASIC_TEXT_SR","ENHANCED_SR","COMPREHENSIVE_SR","COMPREHENSIVE_3D_SR","PROCEDURE_LOG_STORAGE","MAMMOGRAPHY_CAD_SR","CHEST_CAD_SR","X_RAY_RADIATION_DOSE_SR","ACQUISITION_CONTEXT_SR_STORAGE","OHIFDicomHtmlSopClassHandler","sopClassUids","OHIFDicomHtmlViewport","getSopClassHandlerModule","draw","drawLine","getNewContext","_drawCanvasCrosshairs","canvasContext","centerCanvas","DICOM_SEG_TEMP_CROSSHAIRS_TOOL","DICOMSegTempCrosshairsTool","mixins","initialProps","_rtStructModule","drawCanvasCrosshairs","getActiveColor","lineWidth","pop","addCrosshair","stackToolState","imageIdIndex","imgId","labelmaps2D","xCenter","yCenter","globalToolState","imageIdSpecificToolState","loadSegmentation","segDisplaySet","segMetadata","segmentsOnFrame","labelmapSegments","labelmapIndex","_getNextLabelmapIndex","_makeColorLUTAndGetIndex","labelmap3DByFirstImageId","_getNextColorLUTIndex","segment","ROIDisplayColor","RecommendedDisplayCIELabValue","rgb","Colors","dicomlab2RGB","setActiveLabelmap","onDisplaySetLoadFailure","getFirstImageId","hasOverlapping","originLabelMapIndex","segLoadErrorMessagge","activateLabelMap","DICOM_SEG","_parseSeg","tolerance","skipOverlapping","cornerstoneToolsVersion","Segmentation","_getImageIdsForDisplaySet","BrushColorSelector","defaultColor","onNext","onPrev","BrushRadius","SegmentationItem","SegmentationSettings","onBack","disabledFields","shouldRenderInactiveLabelmaps","outlineAlpha","fillAlphaInactive","outlineAlphaInactive","segsTolerance","segTolValue","onchange","toFloat","CustomCheck","CustomRange","SegmentItem","onVisibilityChange","setIsVisible","data-tip","data-for","place","newVisibility","computedstyle","getComputedStyle","uiGrayDarker","getPropertyValue","activeColor","uiGrayDark","segmentationSelectStyles","singleValue","control","cursor","borderRadius","isFocused","borderColor","minHeight","menu","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","SegmentationSelect","formatOptionLabel","styles","SegmentationPanel","onSegmentItemClick","onSegmentVisibilityChange","onConfigurationChange","onSelectedSegmentationChange","isVTK","DEFAULT_BRUSH_RADIUS","brushRadius","brushColor","selectedSegment","selectedSegmentation","showSettings","labelMapList","segmentList","segmentNumbers","isDisabled","getActiveViewport","updateSegDisplaySetsTolerance","getActiveLabelMaps3D","getBrushStackState","getActiveSegmentIndex","activeSegmentIndex","getActiveLabelMaps2D","setActiveSegment","segmentIndex","newLabelmapIndex","labelmapModifiedHandler","refreshSegmentations","updateSegmentationComboBox","getLabelMapList","getSegmentList","numbers","_getReferencedSegDisplaysets","segDisplay","dateStr","displayDate","setCurrentSelectedSegment","validIndexList","labelMap2D","segmentsOnLabelmap","average","curr","labelMaps3D","currentDisplaySet","getCurrentDisplaySet","getColorLUTTable","onSegmentVisibilityChangeHandler","segmentationSeriesInstanceUID","uniqueSegmentIndexes","labelmap2D","segmentIndexes","colorLutTable","hasLabelmapMeta","segmentLabel","segmentMeta","SegmentNumber","SegmentLabel","sameSegment","selectedSegmentationOption","newConfiguration","referencedDisplaysets","aNumber","SegmentsSection","defaultVisibility","jumpToFirstSegment","BrushTool","SphericalBrushTool","CorrectionScissorsTool","alwaysEraseOnClick","triggerSegmentationPanelTabUpdatedEvent","seriesInstanceUid","referencedDS","referencedDisplaySetUID","findDicomDataPromise","segArrayBuffer","namifyDataset","labelmapBufferArray","segmentsOnFrameArray","labelmapIndexes","RTSTRUCT_DISPLAY_TOOL","drawCircle","drawJoinedLines","RTStructDisplayTool","rtstructModule","crossHairCenter","highlightOpacity","structureSet","structureSetSeriesInstanceUid","ROIContourData","ROIContour","ROINumber","colorArray","highlight","_renderClosedPlanar","_renderPoint","_renderOpenPlanar","_toolDataContainsROIContour","toolDataI","StructureSets","getStructureSet","getROIContour","ROIContours","_setStructureSetVisible","StructureSet","_setROIContourVisible","structuresSetsWhichReferenceSeriesInstanceUid","structureSetReferencesSeriesInstanceUid","imageIdOfCenterFrameOfROIContour","imageIdsInStack","rtStructDisplayToolName","imageIdIndicies","structureSetData","hideROIContour","showROIContour","toggleROIContour","hideStructureSet","showStructureSet","toggleStructureSet","defaultConfig","RT_STRUCT_DISPLAY_TOOL","transformPointsToImagePlane","imagePlane","deltaI","deltaJ","X","Y","S","ix","iy","largestDirectionCosineMagnitude","ci","directionCosineMagnitude","pointI","rtStructDisplaySet","rtStructModule","rtStructDataset","StructureSetROISequence","ROIContourSequence","RTROIObservationsSequence","StructureSetLabel","imageIdSopInstanceUidPairs","_getImageIdSopInstanceUidPairsForDisplaySet","ReferencedROINumber","ContourSequence","isSupported","objOrArray","ContourSequenceArray","ContourImageSequence","ContourData","NumberOfContourPoints","ContourGeometricType","_getClosestSOPInstanceUID","_getImageId","imageIdSpecificToolData","_getOrCreateImageIdSpecificToolData","_setROIContourMetadata","_setToolEnabledIfNotEnabled","StructureSetROI","structureSetROI","ROIName","ROIGenerationAlgorithm","ROIDescription","colorForSegmentIndexColorLUT","_setROIContourDataColor","RTROIObservations","ObservationNumber","ROIObservationDescription","RTROIInterpretedType","ROIInterpreter","_setROIContourRTROIObservations","imageIdSopInstanceUidPairsEntry","pair","imagePlaneModule","P","Q","N","C","D","distanceFromPointToPlane","DICOM_RT_STRUCT","_getSequenceAsArray","OHIFDicomRTStructSopClassHandler","referencedFrameOfReference","RTReferencedStudySequence","rtReferencedStudy","RTReferencedSeriesSequence","rtReferencedSeries","ReferencedInstanceSequence","contourImage","_deriveReferencedSeriesSequenceFromFrameOfReferenceSequence","loadRTStruct","StructureSetItem","dcmrtClassNames","warningIcon","tableListItem","RTSettings","expand","shapeRendering","viewBox","preserveAspectRatio","rx","ry","fill","keyTimes","dur","repeatCount","PanelSection","expanded","loading","hideVisibleButton","onExpandChange","setIsExpanded","newExpandValue","RTPanel","onContourItemClick","selectedContour","setSelectedContour","sets","selectedSet","isLocked","setShowSettings","updateStructureSets","viewportSets","defaultSet","toContourItem","loadedSet","interpretedType","isSameContour","rtData","conifg","triggerRTPanelUpdatedEvent","contourData","sopClassHandlerModule","DicomMicroscopySopClassHandler","ContentDate","ContentTime","OHIFDicomPDFSopClassHandler","ConnectedOHIFDicomPDFViewer","appProps","OHIFVTKExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","OHIFDicomPDFExtension","OHIFDicomSegmentationExtension","OHIFDicomRtExtension","registeredExtensionIds","registeredExtensionVesions","moduleTypeNames","_api","moduleType","ohifExtension","registerExtension","extensionId","extensionModule","_getExtensionModule","_initSpecialModuleTypes","getModuleFnName","charAt","getModuleFn","ex","_initCommandsModule","commandDefinitions","commandDefinition","registerCommand","registeredServiceNames","ohifService","registerService","serviceShowRequestQueue","publicAPI","serviceImplementation","_hide","_show","hideImplementation","showImplementation","showArguments","_dismiss","_dismissAll","_create","dismissImplementation","dismissAllImplementation","createImplementation","_info","_error","infoImplementation","errorImplementation","_isValidEvent","listenerId","subscription","_unsubscribe","publish","callbackProps","hasListeners","hasCallbacks","MEASUREMENT_SCHEMA_KEYS","INTERNAL_MEASUREMENT_UPDATED","RAW_MEASUREMENT_ADDED","MEASUREMENTS_CLEARED","JUMP_TO_MEASUREMENT","BIDIRECTIONAL","MULTIPOINT","CIRCLE","sources","_jumpToMeasurementCache","pubSubServiceInterface","_arrayOfObjects","_getSourceId","toSourceSchema","toMeasurementSchema","_isValidSource","mapping","_getSourceInfo","_getMappingByMeasurementSource","getMeasurement","matchingMapping","_getMatchingMapping","notYetUpdatedAtSource","updatedMeasurement","modifiedTimestamp","dataSource","sourceInfo","_sourceHasMappings","_isValidMeasurement","internalId","newMeasurement","sourceMeasurement","_addJumpToMeasurement"],"mappings":"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AAA,E,uHACAC,E,wTAAAA,E,uHACAC,E,0dAAAA,E,uHACAC,E,mjCAAAA,E,yHACAC,E,69FAAAA,E,8HACAC,E,inDAAAA,E,uHACAC,E,ihBAAAA,E,uHACAC,E,iaAAAA,E,yHACAC,E,knBAAAA,E,yHACAC,E,8RAAAA,E,uHACAC,E,ubAAAA,E,uHACAC,E,2aAAAA,E,sHACAC,E,oLAAAA,E,qJACAC,E,6KAAAA,E,uHACAC,E,0VAAAA,E,yHACAC,E,6VAAAA,E,yHACAC,E,gOAAAA,E,yHACApwC,E,2aAAAA,E,yHACAqwC,E,sNAAAA,E,uHACAC,E,2PAAAA,E,6IACA57B,E,4gCAAAA,E,uHACA67B,E,6RAAAA,E,qIACApe,E,4LAAAA,E,uHACAqe,E,guBAAAA,E,2KACAC,E,mTAAAA,E,uHACAC,E,+RAAAA,E,uHACAC,E,wxBAAAA,E,uJACAC,E,+QAAAA,E,kLACAC,E,4fAAAA,E,uIACAC,G,wOAAAA,G,kLACAC,G,gQAAAA,G,kLACAC,G,wOAAAA,G,kLACAC,G,qWAAAA,G,qIACAC,G,mVAAAA,G,oKACAC,G,+aAAAA,G,uJACAC,G,0mfAAAA,G,uFACAC,G,wRAAAA,G,uHACAC,G,soBAAAA,G,uHACAC,G,+LAAAA,G,yHACAC,G,mQAAAA,G,uHACAC,G,yfAAAA,G,uHACAlQ,G,gjBAAAA,G,uHACAmQ,G,+hBAAAA,G,uHACAC,G,wiBAAAA,G,uHACAC,G,2mBAAAA,G,+FACAC,G,ytBAAAA,G,yHACAvH,G,oaAAAA,G,uHACAwH,G,2QAAAA,G,yHACAC,G,6xBAAAA,G,uNACA7nB,G,6TAAAA,G,yHACA8nB,G,+NAAAA,G,yHACAC,G,8NAAAA,G,yHACAC,G,k4BAAAA,G,yHACAC,G,iUAAAA,G,yHACAC,G,uXAAAA,G,yHACAC,G,sQAAAA,G,yHACAC,G,uQAAAA,G,yHACAC,G,89BAAAA,G,yHACAC,G,gyCAAAA,G,yHACAC,G,uKAAAA,G,uHACAC,G,8RAAAA,G,uHACAC,G,4IAAAA,G,4IACAC,G,+dAAAA,G,yHACAC,G,wmCAAAA,G,yHACAlT,G,gjBAAAA,G,yH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CX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa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","file":"app.bundle.8e970eca6ef2ad8b8d8f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t8: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t8: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"0\":\"ConnectedStandaloneRouting~IHEInvokeImageDisplay~StudyListRouting~ViewerLocalFileData~ViewerRouting\",\"1\":\"ConnectedStandaloneRouting~IHEInvokeImageDisplay~ViewerLocalFileData~ViewerRouting\",\"2\":\"CallbackPage\",\"3\":\"ConnectedStandaloneRouting\",\"4\":\"IHEInvokeImageDisplay\",\"5\":\"StudyListRouting\",\"6\":\"ViewerLocalFileData\",\"7\":\"ViewerRouting\",\"9\":\"vendors~ViewerLocalFileData\",\"11\":\"vendors~dicom-microscopy-viewer\"}[chunkId]||chunkId) + \".bundle.\" + {\"0\":\"8f0fc316366f53580094\",\"1\":\"93737985e234f27edd4a\",\"2\":\"db35e550e7dd9f2287e3\",\"3\":\"6ca04ae1d4b141fe929a\",\"4\":\"180081da454e92794d85\",\"5\":\"b18d873388fd1e5df5f9\",\"6\":\"47f4178c166dd575959c\",\"7\":\"c9416fa9b6a8dcd519c0\",\"9\":\"f161146c8c3cdda0be2c\",\"11\":\"9f1314e253d7302929df\",\"12\":\"f32e58f806b3534b5f85\",\"13\":\"c4bc61e37957d8071748\",\"14\":\"31439fe71a30d1b127dc\",\"15\":\"c842d36f21207250e2a5\",\"16\":\"babdcb2e152e955c8af5\",\"17\":\"8ec87069563672ffe5ff\",\"18\":\"9b9fcae0bec66cfe3a9e\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// extract-css-chunks-webpack-plugin CSS loading\n \t\tvar cssChunks = {\"0\":1,\"1\":1,\"5\":1,\"6\":1,\"13\":1,\"15\":1,\"16\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + chunkId + \".\" + \"04095487e8e46221b415\" + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1026,10]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const log = {\r\n  error: console.error,\r\n  warn: console.warn,\r\n  info: console.log,\r\n  trace: console.trace,\r\n  debug: console.debug,\r\n  time: console.time,\r\n  timeEnd: console.timeEnd,\r\n};\r\n\r\nexport default log;\r\n","// TODO: Deprecate since we have the same thing in dcmjs?\r\nexport const sopClassDictionary = {\r\n  ComputedRadiographyImageStorage: '1.2.840.10008.5.1.4.1.1.1',\r\n  DigitalXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.1',\r\n  DigitalXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.1.1',\r\n  DigitalMammographyXRayImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.1.2',\r\n  DigitalMammographyXRayImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.1.2.1',\r\n  DigitalIntraOralXRayImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.1.3',\r\n  DigitalIntraOralXRayImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.1.3.1',\r\n  CTImageStorage: '1.2.840.10008.5.1.4.1.1.2',\r\n  EnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.1',\r\n  LegacyConvertedEnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.2',\r\n  UltrasoundMultiframeImageStorage: '1.2.840.10008.5.1.4.1.1.3.1',\r\n  MRImageStorage: '1.2.840.10008.5.1.4.1.1.4',\r\n  EnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.1',\r\n  MRSpectroscopyStorage: '1.2.840.10008.5.1.4.1.1.4.2',\r\n  EnhancedMRColorImageStorage: '1.2.840.10008.5.1.4.1.1.4.3',\r\n  LegacyConvertedEnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.4',\r\n  UltrasoundImageStorage: '1.2.840.10008.5.1.4.1.1.6.1',\r\n  EnhancedUSVolumeStorage: '1.2.840.10008.5.1.4.1.1.6.2',\r\n  SecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7',\r\n  MultiframeSingleBitSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.1',\r\n  MultiframeGrayscaleByteSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.2',\r\n  MultiframeGrayscaleWordSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.3',\r\n  MultiframeTrueColorSecondaryCaptureImageStorage:\r\n    '1.2.840.10008.5.1.4.1.1.7.4',\r\n  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',\r\n  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',\r\n  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',\r\n  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1',\r\n  CardiacElectrophysiologyWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.3.1',\r\n  BasicVoiceAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.1',\r\n  GeneralAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.2',\r\n  ArterialPulseWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.5.1',\r\n  RespiratoryWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.6.1',\r\n  GrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.1',\r\n  ColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.2',\r\n  PseudoColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.3',\r\n  BlendingSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.4',\r\n  XAXRFGrayscaleSoftcopyPresentationStateStorage:\r\n    '1.2.840.10008.5.1.4.1.1.11.5',\r\n  XRayAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.12.1',\r\n  EnhancedXAImageStorage: '1.2.840.10008.5.1.4.1.1.12.1.1',\r\n  XRayRadiofluoroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.12.2',\r\n  EnhancedXRFImageStorage: '1.2.840.10008.5.1.4.1.1.12.2.1',\r\n  XRay3DAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.1',\r\n  XRay3DCraniofacialImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.2',\r\n  BreastTomosynthesisImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.3',\r\n  BreastProjectionXRayImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.13.1.4',\r\n  BreastProjectionXRayImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.13.1.5',\r\n  IntravascularOpticalCoherenceTomographyImageStorageForPresentation:\r\n    '1.2.840.10008.5.1.4.1.1.14.1',\r\n  IntravascularOpticalCoherenceTomographyImageStorageForProcessing:\r\n    '1.2.840.10008.5.1.4.1.1.14.2',\r\n  NuclearMedicineImageStorage: '1.2.840.10008.5.1.4.1.1.20',\r\n  RawDataStorage: '1.2.840.10008.5.1.4.1.1.66',\r\n  SpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.1',\r\n  SpatialFiducialsStorage: '1.2.840.10008.5.1.4.1.1.66.2',\r\n  DeformableSpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.3',\r\n  SegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.4',\r\n  SurfaceSegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.5',\r\n  RealWorldValueMappingStorage: '1.2.840.10008.5.1.4.1.1.67',\r\n  SurfaceScanMeshStorage: '1.2.840.10008.5.1.4.1.1.68.1',\r\n  SurfaceScanPointCloudStorage: '1.2.840.10008.5.1.4.1.1.68.2',\r\n  VLEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1',\r\n  VideoEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1.1',\r\n  VLMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2',\r\n  VideoMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2.1',\r\n  VLSlideCoordinatesMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.3',\r\n  VLPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4',\r\n  VideoPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4.1',\r\n  OphthalmicPhotography8BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.1',\r\n  OphthalmicPhotography16BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.2',\r\n  StereometricRelationshipStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.3',\r\n  OphthalmicTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.4',\r\n  VLWholeSlideMicroscopyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.6',\r\n  LensometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.1',\r\n  AutorefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.2',\r\n  KeratometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.3',\r\n  SubjectiveRefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.4',\r\n  VisualAcuityMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.5',\r\n  SpectaclePrescriptionReportStorage: '1.2.840.10008.5.1.4.1.1.78.6',\r\n  OphthalmicAxialMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.7',\r\n  IntraocularLensCalculationsStorage: '1.2.840.10008.5.1.4.1.1.78.8',\r\n  MacularGridThicknessandVolumeReport: '1.2.840.10008.5.1.4.1.1.79.1',\r\n  OphthalmicVisualFieldStaticPerimetryMeasurementsStorage:\r\n    '1.2.840.10008.5.1.4.1.1.80.1',\r\n  OphthalmicThicknessMapStorage: '1.2.840.10008.5.1.4.1.1.81.1',\r\n  CornealTopographyMapStorage: '1.2.840.10008.5.1.4.1.1.82.1',\r\n  BasicTextSR: '1.2.840.10008.5.1.4.1.1.88.11',\r\n  EnhancedSR: '1.2.840.10008.5.1.4.1.1.88.22',\r\n  ComprehensiveSR: '1.2.840.10008.5.1.4.1.1.88.33',\r\n  Comprehensive3DSR: '1.2.840.10008.5.1.4.1.1.88.34',\r\n  ProcedureLog: '1.2.840.10008.5.1.4.1.1.88.40',\r\n  MammographyCADSR: '1.2.840.10008.5.1.4.1.1.88.50',\r\n  KeyObjectSelection: '1.2.840.10008.5.1.4.1.1.88.59',\r\n  ChestCADSR: '1.2.840.10008.5.1.4.1.1.88.65',\r\n  XRayRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.67',\r\n  RadiopharmaceuticalRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.68',\r\n  ColonCADSR: '1.2.840.10008.5.1.4.1.1.88.69',\r\n  ImplantationPlanSRDocumentStorage: '1.2.840.10008.5.1.4.1.1.88.70',\r\n  EncapsulatedPDFStorage: '1.2.840.10008.5.1.4.1.1.104.1',\r\n  EncapsulatedCDAStorage: '1.2.840.10008.5.1.4.1.1.104.2',\r\n  PositronEmissionTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.128',\r\n  EnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.130',\r\n  LegacyConvertedEnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.128.1',\r\n  BasicStructuredDisplayStorage: '1.2.840.10008.5.1.4.1.1.131',\r\n  RTImageStorage: '1.2.840.10008.5.1.4.1.1.481.1',\r\n  RTDoseStorage: '1.2.840.10008.5.1.4.1.1.481.2',\r\n  RTStructureSetStorage: '1.2.840.10008.5.1.4.1.1.481.3',\r\n  RTBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.4',\r\n  RTPlanStorage: '1.2.840.10008.5.1.4.1.1.481.5',\r\n  RTBrachyTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.6',\r\n  RTTreatmentSummaryRecordStorage: '1.2.840.10008.5.1.4.1.1.481.7',\r\n  RTIonPlanStorage: '1.2.840.10008.5.1.4.1.1.481.8',\r\n  RTIonBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.9',\r\n  RTBeamsDeliveryInstructionStorage: '1.2.840.10008.5.1.4.34.7',\r\n  GenericImplantTemplateStorage: '1.2.840.10008.5.1.4.43.1',\r\n  ImplantAssemblyTemplateStorage: '1.2.840.10008.5.1.4.44.1',\r\n  ImplantTemplateGroupStorage: '1.2.840.10008.5.1.4.45.1',\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LayoutChooser.styl';\r\n\r\n/**\r\n * Adds the 'hover' class to cells above and to the left of the current cell\r\n * This is used to \"fill in\" the grid that the user will change the layout to,\r\n * if they click on a specific table cell.\r\n **/\r\n\r\nclass LayoutChooser extends PureComponent {\r\n  static propTypes = {\r\n    Rows: PropTypes.number.isRequired,\r\n    Columns: PropTypes.number.isRequired,\r\n    visible: PropTypes.bool.isRequired,\r\n    selectedCell: PropTypes.object,\r\n    boxSize: PropTypes.number.isRequired,\r\n    cellBorder: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    Rows: 3,\r\n    Columns: 3,\r\n    visible: true,\r\n    boxSize: 20,\r\n    cellBorder: 1,\r\n    selectedCell: {\r\n      row: -1,\r\n      col: -1,\r\n    },\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.emptyCell = {\r\n      row: -1,\r\n      column: -1,\r\n    };\r\n    this.state = {\r\n      table: [[]],\r\n      selectedCell: this.props.selectedCell,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.highlightCells(this.emptyCell);\r\n  }\r\n  onClick(currentCell) {\r\n    this.setState({\r\n      selectedCell: currentCell,\r\n    });\r\n    this.highlightCells(currentCell);\r\n    if (this.props.onClick) {\r\n      this.props.onClick(currentCell);\r\n    }\r\n    if (this.props.onChange) {\r\n      this.props.onChange(currentCell);\r\n    }\r\n  }\r\n  isRange = (cell, parentCell) => {\r\n    return cell.row <= parentCell.row && cell.col <= parentCell.col;\r\n  };\r\n  highlightCells = currentCell => {\r\n    let table = [];\r\n    for (let row = 0; row < this.props.Rows; row++) {\r\n      let newRow = [];\r\n      for (let col = 0; col < this.props.Columns; col++) {\r\n        let cell = { row: row, col: col };\r\n        if (this.isRange(cell, currentCell)) {\r\n          cell.className = 'hover';\r\n        } else if (\r\n          this.isRange(currentCell, this.emptyCell) &&\r\n          this.isRange(cell, this.state.selectedCell)\r\n        ) {\r\n          cell.className = 'selectedBefore';\r\n        }\r\n        newRow.push(cell);\r\n      }\r\n      table.push(newRow);\r\n    }\r\n    this.setState({ table: table });\r\n  };\r\n\r\n  render() {\r\n    let Columns = this.props.Columns;\r\n    const style = {\r\n      display: this.props.visible ? 'block' : 'none',\r\n      minWidth:\r\n        Columns * this.props.boxSize + (Columns + 5) * this.props.cellBorder,\r\n    };\r\n    return (\r\n      <div\r\n        className=\"layoutChooser layoutChooser-dropdown-menu\"\r\n        role=\"menu\"\r\n        style={style}\r\n      >\r\n        <table>\r\n          <tbody>\r\n            {this.state.table.map((row, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  {row.map((cell, j) => {\r\n                    return (\r\n                      <td\r\n                        className={cell.className}\r\n                        style={{\r\n                          width: this.props.boxSize,\r\n                          height: this.props.boxSize,\r\n                          border: 'solid 1px black',\r\n                        }}\r\n                        key={j}\r\n                        onMouseEnter={() => this.highlightCells(cell)}\r\n                        onMouseLeave={() => this.highlightCells(this.emptyCell)}\r\n                        onClick={() => this.onClick(cell)}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { LayoutChooser };\r\n","import './toolbar-button.styl';\r\n\r\nimport { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withTranslation } from '../contextProviders';\r\n\r\nexport function ToolbarButton(props) {\r\n  const { isActive, icon, labelWhenActive, onClick, t } = props;\r\n  const className = classnames(props.className, { active: isActive });\r\n  const iconProps = typeof icon === 'string' ? { name: icon } : icon;\r\n  const label = isActive && labelWhenActive ? labelWhenActive : props.label;\r\n\r\n  const arrowIconName = props.isExpanded ? 'caret-up' : 'caret-down';\r\n  const arrowIcon = props.isExpandable && (\r\n    <Icon name={arrowIconName} className=\"expand-caret\" />\r\n  );\r\n\r\n  const handleClick = event => {\r\n    if (onClick) {\r\n      onClick(event, props);\r\n    }\r\n  };\r\n\r\n  const cypressSelectorId = props.label.toLowerCase();\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      onClick={handleClick}\r\n      data-cy={cypressSelectorId}\r\n    >\r\n      {iconProps && <Icon {...iconProps} />}\r\n      <div className=\"toolbar-button-label\">\r\n        {t(label)}\r\n        {arrowIcon}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nToolbarButton.propTypes = {\r\n  id: PropTypes.string,\r\n  isActive: PropTypes.bool,\r\n  /** Display label for button */\r\n  label: PropTypes.string.isRequired,\r\n  /** Alternative text to show when button is active */\r\n  labelWhenActive: PropTypes.string,\r\n  className: PropTypes.string.isRequired,\r\n  icon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ]),\r\n  onClick: PropTypes.func,\r\n  /** Determines if we show expandable 'caret' symbol */\r\n  isExpandable: PropTypes.bool,\r\n  /** Direction of expandable 'caret' symbol */\r\n  isExpanded: PropTypes.bool,\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nToolbarButton.defaultProps = {\r\n  isActive: false,\r\n  className: 'toolbar-button',\r\n};\r\n\r\nexport default withTranslation('Buttons')(ToolbarButton);\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport { LayoutChooser } from './LayoutChooser.js';\r\nimport PropTypes from 'prop-types';\r\nimport ToolbarButton from '../../viewer/ToolbarButton';\r\n\r\nexport class LayoutButton extends PureComponent {\r\n  static defaultProps = {\r\n    dropdownVisible: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    dropdownVisible: PropTypes.bool.isRequired,\r\n    /** Called with the selectedCell number when grid sell is selected */\r\n    onChange: PropTypes.func,\r\n    /** The cell to show as selected */\r\n    selectedCell: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    dropdownVisible: this.props.dropdownVisible,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.dropdownVisible !== prevProps.dropdownVisible) {\r\n      this.setState({\r\n        dropdownVisible: this.props.dropdownVisible,\r\n      });\r\n    }\r\n  }\r\n\r\n  onClick = () => {\r\n    this.setState({\r\n      dropdownVisible: !this.state.dropdownVisible,\r\n    });\r\n  };\r\n\r\n  onChange = selectedCell => {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(selectedCell);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <ToolbarButton\r\n          isActive={this.state.dropdownVisible}\r\n          label={'Layout'}\r\n          icon=\"th\"\r\n          onClick={this.onClick}\r\n        />\r\n        <LayoutChooser\r\n          visible={this.state.dropdownVisible}\r\n          onChange={this.onChange}\r\n          onClick={this.onClick}\r\n          selectedCell={this.props.selectedCell}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LayoutButton;\r\n","import './TableListItem.styl';\r\n\r\nimport { Component } from 'react';\r\nimport { Icon } from './../../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport class TableListItem extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    itemClass: PropTypes.string,\r\n    itemIndex: PropTypes.number,\r\n    itemMeta: PropTypes.node,\r\n    itemMetaClass: PropTypes.string,\r\n    itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    onItemClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    itemMeta: null,\r\n    itemMetaClass: '',\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`tableListItem ${this.props.itemClass}`}\r\n        onClick={this.onItemClick}\r\n      >\r\n        <div className={`itemIndex ${this.props.itemMetaClass}`}>\r\n          {this.props.itemIndex}\r\n          {this.props.itemMeta}\r\n          <span className=\"warning-icon\">\r\n            <Icon name=\"exclamation-triangle\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"itemContent\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onItemClick = event => {\r\n    if (this.props.onItemClick) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.props.onItemClick(event, this.props.itemKey);\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport { OverlayTrigger } from './../overlayTrigger';\r\nimport { Tooltip } from './../tooltip';\r\nimport { TableListItem } from './../tableList/TableListItem.js';\r\n\r\nimport './MeasurementTableItem.styl';\r\n\r\nconst ColoredCircle = ({ color }) => {\r\n  return <div className=\"item-color\" style={{ backgroundColor: color }}></div>;\r\n};\r\n\r\nColoredCircle.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nclass MeasurementTableItem extends Component {\r\n  static propTypes = {\r\n    measurementData: PropTypes.object.isRequired,\r\n    onItemClick: PropTypes.func.isRequired,\r\n    onRelabel: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    onEditDescription: PropTypes.func,\r\n    itemClass: PropTypes.string,\r\n    itemIndex: PropTypes.number,\r\n    t: PropTypes.func,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      visible: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      warningTitle = '',\r\n      hasWarnings,\r\n      isReadOnly,\r\n    } = this.props.measurementData;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {hasWarnings && !isReadOnly ? (\r\n          <OverlayTrigger\r\n            key={this.props.itemIndex}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">{this.props.t(warningTitle)}</div>\r\n                <div className=\"warningContent\">{this.getWarningContent()}</div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div>{this.getTableListItem()}</div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment>{this.getTableListItem()}</React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getActionButton = (btnLabel, onClickCallback) => {\r\n    return (\r\n      <button key={btnLabel} className=\"btnAction\" onClick={onClickCallback}>\r\n        <span style={{ marginRight: '4px' }}>\r\n          <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n        </span>\r\n        {this.props.t(btnLabel)}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  getTableListItem = () => {\r\n    const hasWarningClass =\r\n      this.props.measurementData.hasWarnings &&\r\n      !this.props.measurementData.isReadOnly\r\n        ? 'hasWarnings'\r\n        : '';\r\n\r\n    const actionButtons = [];\r\n\r\n    if (typeof this.props.onRelabel === 'function') {\r\n      const relabelButton = this.getActionButton(\r\n        'Relabel',\r\n        this.onRelabelClick\r\n      );\r\n      actionButtons.push(relabelButton);\r\n    }\r\n    if (typeof this.props.onEditDescription === 'function') {\r\n      const descriptionButton = this.getActionButton(\r\n        'Description',\r\n        this.onEditDescriptionClick\r\n      );\r\n      actionButtons.push(descriptionButton);\r\n    }\r\n    if (typeof this.props.onDelete === 'function') {\r\n      const deleteButton = this.getActionButton('Delete', this.onDeleteClick);\r\n      actionButtons.push(deleteButton);\r\n    }\r\n\r\n    if (\r\n      this.props.measurementData.isSRText === true &&\r\n      this.props.measurementData.labels &&\r\n      this.props.measurementData.labels.length > 0\r\n    ) {\r\n      return (\r\n        <React.Fragment>\r\n          <TableListItem\r\n            key={this.props.measurementData.measurementNumber}\r\n            itemKey={this.props.measurementData.measurementNumber}\r\n            itemClass={`measurementItem ${this.props.itemClass} ${hasWarningClass}`}\r\n            itemIndex={this.props.itemIndex}\r\n            onItemClick={this.onItemClick}\r\n          >\r\n            <div>\r\n              <div className=\"measurementLocation\">\r\n                {this.props.t(this.props.measurementData.label, {\r\n                  keySeparator: '>',\r\n                  nsSeparator: '|',\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"icons\">\r\n              <div className=\"displayTexts\">{this.getDataDisplayText()}</div>\r\n              <Icon\r\n                className={`eye-icon`}\r\n                name={this.state.visible ? 'eye' : 'eye-closed'}\r\n                width=\"20px\"\r\n                height=\"20px\"\r\n                onClick={() => {\r\n                  this.props.measurementData.labels.forEach(label => {\r\n                    label.visible = !this.state.visible;\r\n                  });\r\n\r\n                  this.setState({\r\n                    visible: !this.state.visible,\r\n                  });\r\n                }}\r\n              />\r\n              <Icon\r\n                className={`angle-double-${\r\n                  this.state.collapsed ? 'down' : 'up'\r\n                }`}\r\n                name={`angle-double-${this.state.collapsed ? 'down' : 'up'}`}\r\n                width=\"20px\"\r\n                height=\"20px\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    collapsed: !this.state.collapsed,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </TableListItem>\r\n          {this.state.collapsed &&\r\n            this.props.measurementData.labels.map((SRLabel, index) => {\r\n              return (\r\n                <TableListItem\r\n                  key={index}\r\n                  itemKey={index}\r\n                  itemMeta={<ColoredCircle color={SRLabel.color} />}\r\n                  itemMetaClass=\"item-color-section\"\r\n                  onItemClick={this.onItemClick}\r\n                >\r\n                  <div>\r\n                    <div className=\"icons\">\r\n                      <span style={{ width: '90px' }}>\r\n                        {SRLabel.label + ' : ' + SRLabel.value}\r\n                      </span>\r\n                      <Icon\r\n                        className={`eye-icon`}\r\n                        name={SRLabel.visible ? 'eye' : 'eye-closed'}\r\n                        width=\"20px\"\r\n                        height=\"20px\"\r\n                        onClick={() => {\r\n                          SRLabel.visible = !SRLabel.visible;\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </TableListItem>\r\n              );\r\n            })}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <TableListItem\r\n          key={this.props.measurementData.measurementNumber}\r\n          itemKey={this.props.measurementData.measurementNumber}\r\n          itemClass={`measurementItem ${this.props.itemClass} ${hasWarningClass}`}\r\n          itemIndex={this.props.itemIndex}\r\n          onItemClick={this.onItemClick}\r\n        >\r\n          <div>\r\n            <div className=\"measurementLocation\">\r\n              {this.props.t(this.props.measurementData.label, {\r\n                keySeparator: '>',\r\n                nsSeparator: '|',\r\n              })}\r\n            </div>\r\n            <div className=\"displayTexts\">{this.getDataDisplayText()}</div>\r\n            {!this.props.measurementData.isReadOnly && (\r\n              <div className=\"rowActions\">{actionButtons}</div>\r\n            )}\r\n          </div>\r\n        </TableListItem>\r\n      );\r\n    }\r\n  };\r\n\r\n  onItemClick = event => {\r\n    this.props.onItemClick(event, this.props.measurementData);\r\n  };\r\n\r\n  onRelabelClick = event => {\r\n    // Prevent onItemClick from firing\r\n    event.stopPropagation();\r\n\r\n    this.props.onRelabel(event, this.props.measurementData);\r\n  };\r\n\r\n  onEditDescriptionClick = event => {\r\n    // Prevent onItemClick from firing\r\n    event.stopPropagation();\r\n\r\n    this.props.onEditDescription(event, this.props.measurementData);\r\n  };\r\n\r\n  onDeleteClick = event => {\r\n    // Prevent onItemClick from firing\r\n    event.stopPropagation();\r\n\r\n    this.props.onDelete(event, this.props.measurementData);\r\n  };\r\n\r\n  getDataDisplayText = () => {\r\n    return this.props.measurementData.data.map((data, index) => {\r\n      return (\r\n        <div key={`displayText_${index}`} className=\"measurementDisplayText\">\r\n          {data.displayText ? data.displayText : '...'}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  getWarningContent = () => {\r\n    const { warningList = '' } = this.props.measurementData;\r\n\r\n    if (Array.isArray(warningList)) {\r\n      const listedWarnings = warningList.map((warn, index) => {\r\n        return <li key={index}>{warn}</li>;\r\n      });\r\n\r\n      return <ol>{listedWarnings}</ol>;\r\n    } else {\r\n      return <React.Fragment>{warningList}</React.Fragment>;\r\n    }\r\n  };\r\n}\r\n\r\nconst connectedComponent = withTranslation('MeasurementTable')(\r\n  MeasurementTableItem\r\n);\r\nexport { connectedComponent as MeasurementTableItem };\r\nexport default connectedComponent;\r\n","import './ScrollableArea.styl';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport getScrollbarSize from '../utils/getScrollbarSize.js';\r\nimport throttled from '../utils/throttled.js';\r\n\r\nexport class ScrollableArea extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    class: PropTypes.string,\r\n    scrollableClass: PropTypes.string,\r\n    scrollX: PropTypes.bool,\r\n    scrollY: PropTypes.bool,\r\n    hideScrollbar: PropTypes.bool,\r\n    scrollStep: PropTypes.number,\r\n  };\r\n\r\n  static defaultProps = {\r\n    hideScrollbar: true,\r\n    class: 'flex-grow fit',\r\n    scrollY: true,\r\n    scrollX: false,\r\n    scrollStep: 100,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scrollAreaClasses: '',\r\n    };\r\n\r\n    this.scrollHandlerThrottled = throttled(150, this.scrollHandler);\r\n  }\r\n\r\n  render() {\r\n    let scrollableClass = 'scrollable';\r\n    if (this.props.scrollableClass) {\r\n      scrollableClass += ` ${this.props.scrollableClass}`;\r\n    }\r\n    if (this.props.scrollX) {\r\n      scrollableClass += ` scrollX`;\r\n    }\r\n    if (this.props.scrollY) {\r\n      scrollableClass += ` scrollY`;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`scrollArea ${this.props.class} ${\r\n          this.state.scrollAreaClasses\r\n        }`}\r\n      >\r\n        <div\r\n          className={scrollableClass}\r\n          ref={element => {\r\n            this.scrollableElement = element;\r\n          }}\r\n          onScroll={this.scrollHandlerThrottled}\r\n          onMouseEnter={this.scrollHandlerThrottled}\r\n          onTransitionEnd={this.scrollHandlerThrottled}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"scrollNav scrollNavUp\" onClick={this.scrollNavUp}>\r\n          {/* <svg className=\"scrollNavIcon\"> */}\r\n          <Icon name=\"angle-double-up\" />\r\n        </div>\r\n        <div className=\"scrollNav scrollNavDown\" onClick={this.scrollNavDown}>\r\n          <Icon name=\"angle-double-down\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adjustMargins();\r\n    this.scrollHandler();\r\n    window.addEventListener('resize', this.adjustMargins);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.adjustMargins();\r\n    this.scrollHandler();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.adjustMargins);\r\n  }\r\n\r\n  scrollNavDown = event => {\r\n    const {\r\n      scrollTop: currentTop,\r\n      offsetHeight: height,\r\n      scrollHeight,\r\n    } = this.scrollableElement;\r\n\r\n    const limit = scrollHeight - height;\r\n    let scrollTop = currentTop + this.props.scrollStep;\r\n    scrollTop = scrollTop > limit ? limit : scrollTop;\r\n    this.scrollableElement.scrollTop = scrollTop;\r\n  };\r\n\r\n  scrollNavUp = event => {\r\n    const { scrollTop: currentTop } = this.scrollableElement;\r\n\r\n    let scrollTop = currentTop - this.props.scrollStep;\r\n    scrollTop = scrollTop < 0 ? 0 : scrollTop;\r\n\r\n    this.scrollableElement.scrollTop = scrollTop;\r\n  };\r\n\r\n  adjustMargins = () => {\r\n    if (this.props.hideScrollbar) {\r\n      const x = this.props.scrollX ? 1 : 0;\r\n      const y = this.props.scrollY ? 1 : 0;\r\n      const scrollbarSize = getScrollbarSize();\r\n      this.scrollableElement.style.marginRight = `${0 -\r\n        scrollbarSize[0] * y}px`;\r\n      this.scrollableElement.style.marginBottom = `${0 -\r\n        scrollbarSize[1] * x}px`;\r\n    }\r\n  };\r\n\r\n  scrollHandler = () => {\r\n    const {\r\n      offsetHeight: height,\r\n      scrollTop: scrollTop,\r\n      scrollHeight,\r\n    } = this.scrollableElement;\r\n    let scrollAreaClasses = '';\r\n\r\n    // Check if can scroll up\r\n    if (scrollTop) {\r\n      scrollAreaClasses += 'canScrollUp';\r\n    }\r\n\r\n    // Check if can scroll down\r\n    if (scrollTop + height < scrollHeight) {\r\n      scrollAreaClasses += ' canScrollDown';\r\n    }\r\n\r\n    if (this.state.scrollAreaClasses !== scrollAreaClasses) {\r\n      this.setState({\r\n        scrollAreaClasses,\r\n      });\r\n    }\r\n  };\r\n}\r\n","export default function throttled(delay, callback) {\r\n  let isThrottled = false,\r\n    args,\r\n    context;\r\n\r\n  function wrapper() {\r\n    if (isThrottled) {\r\n      args = arguments;\r\n      context = this;\r\n      return;\r\n    }\r\n\r\n    isThrottled = true;\r\n    callback.apply(this, arguments);\r\n\r\n    setTimeout(() => {\r\n      isThrottled = false;\r\n      if (args) {\r\n        wrapper.apply(context, args);\r\n        args = context = null;\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n","/**\r\n * Get the vertical and horizontal scrollbar sizes\r\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\r\n *\r\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\r\n */\r\nexport default function getScrollbarSize() {\r\n  const inner = document.createElement('p');\r\n  inner.style.width = '100%';\r\n  inner.style.height = '100%';\r\n\r\n  const outer = document.createElement('div');\r\n  outer.style.position = 'absolute';\r\n  outer.style.top = '0px';\r\n  outer.style.left = '0px';\r\n  outer.style.visibility = 'hidden';\r\n  outer.style.width = '100px';\r\n  outer.style.height = '100px';\r\n  outer.style.overflow = 'hidden';\r\n  outer.appendChild(inner);\r\n\r\n  document.body.appendChild(outer);\r\n\r\n  const w1 = inner.offsetWidth;\r\n  const h1 = inner.offsetHeight;\r\n  outer.style.overflow = 'scroll';\r\n  let w2 = inner.offsetWidth;\r\n  let h2 = inner.offsetHeight;\r\n\r\n  if (w1 === w2) {\r\n    w2 = outer.clientWidth;\r\n  }\r\n\r\n  if (h1 === h2) {\r\n    h2 = outer.clientHeight;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n\r\n  return [w1 - w2, h1 - h2];\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TableList.styl';\r\n\r\nexport class TableList extends Component {\r\n  static propTypes = {\r\n    customHeader: PropTypes.node,\r\n    defaultItems: PropTypes.object,\r\n    children: PropTypes.node.isRequired,\r\n    headerTitle: PropTypes.string,\r\n    headless: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    headless: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tableList\">\r\n        {!this.props.headless && (\r\n          <div className=\"tableListHeader\" onClick={this.onHeaderClick}>\r\n            {this.getHeader()}\r\n          </div>\r\n        )}\r\n        <div className=\"tableListContent\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getHeader = () => {\r\n    if (this.props.customHeader) {\r\n      return this.props.customHeader;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"tableListHeaderTitle\">{this.props.headerTitle}</div>\r\n          <div className=\"numberOfItems\">{this.props.children.length}</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import './MeasurementTable.styl';\r\n\r\nimport React, { Component } from 'react';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport { MeasurementTableItem } from './MeasurementTableItem.js';\r\nimport { OverlayTrigger } from './../overlayTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\r\nimport { TableList } from './../tableList';\r\nimport { Tooltip } from './../tooltip';\r\n\r\nclass MeasurementTable extends Component {\r\n  static propTypes = {\r\n    measurementCollection: PropTypes.array.isRequired,\r\n    timepoints: PropTypes.array.isRequired,\r\n    overallWarnings: PropTypes.object.isRequired,\r\n    readOnly: PropTypes.bool,\r\n    onItemClick: PropTypes.func,\r\n    onRelabelClick: PropTypes.func,\r\n    onDeleteClick: PropTypes.func,\r\n    onEditDescriptionClick: PropTypes.func,\r\n    selectedMeasurementNumber: PropTypes.number,\r\n    t: PropTypes.func,\r\n    saveFunction: PropTypes.func,\r\n    onSaveComplete: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    overallWarnings: {\r\n      warningList: [],\r\n    },\r\n    readOnly: false,\r\n  };\r\n\r\n  state = {\r\n    selectedKey: null,\r\n  };\r\n\r\n  render() {\r\n    const { overallWarnings, saveFunction, t } = this.props;\r\n    const hasOverallWarnings = overallWarnings.warningList.length > 0;\r\n\r\n    return (\r\n      <div className=\"measurementTable\">\r\n        <div className=\"measurementTableHeader\">\r\n          {hasOverallWarnings && (\r\n            <OverlayTrigger\r\n              key={'overwall-warning'}\r\n              placement=\"left\"\r\n              overlay={\r\n                <Tooltip\r\n                  placement=\"left\"\r\n                  className=\"in tooltip-warning\"\r\n                  id=\"tooltip-left\"\r\n                  style={{}}\r\n                >\r\n                  <div className=\"warningTitle\">\r\n                    {t('Criteria nonconformities')}\r\n                  </div>\r\n                  <div className=\"warningContent\">\r\n                    {this.getWarningContent()}\r\n                  </div>\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <span className=\"warning-status\">\r\n                <span className=\"warning-border\">\r\n                  <Icon name=\"exclamation-triangle\" />\r\n                </span>\r\n              </span>\r\n            </OverlayTrigger>\r\n          )}\r\n          {this.getTimepointsHeader()}\r\n        </div>\r\n        <ScrollableArea>\r\n          <div>{this.getMeasurementsGroups()}</div>\r\n        </ScrollableArea>\r\n        <div className=\"measurementTableFooter\">\r\n          {saveFunction && (\r\n            <button\r\n              onClick={this.saveFunction}\r\n              className=\"saveBtn\"\r\n              data-cy=\"save-measurements-btn\"\r\n            >\r\n              <Icon name=\"save\" width=\"14px\" height=\"14px\" />\r\n              Save measurements\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  saveFunction = async event => {\r\n    const { saveFunction, onSaveComplete } = this.props;\r\n    if (saveFunction) {\r\n      try {\r\n        const result = await saveFunction();\r\n        if (onSaveComplete) {\r\n          onSaveComplete({\r\n            title: 'STOW SR',\r\n            message: result.message,\r\n            type: 'success',\r\n          });\r\n        }\r\n      } catch (error) {\r\n        if (onSaveComplete) {\r\n          onSaveComplete({\r\n            title: 'STOW SR',\r\n            message: error.message,\r\n            type: 'error',\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getMeasurementsGroups = () => {\r\n    return this.props.measurementCollection.map((measureGroup, index) => {\r\n      return (\r\n        <TableList\r\n          key={index}\r\n          customHeader={this.getCustomHeader(measureGroup)}\r\n        >\r\n          {this.getMeasurements(measureGroup)}\r\n        </TableList>\r\n      );\r\n    });\r\n  };\r\n\r\n  getMeasurements = measureGroup => {\r\n    const selectedKey = this.props.selectedMeasurementNumber\r\n      ? this.props.selectedMeasurementNumber\r\n      : this.state.selectedKey;\r\n    return measureGroup.measurements.map((measurement, index) => {\r\n      const key = measurement.measurementNumber;\r\n      const itemIndex = measurement.itemNumber || index + 1;\r\n      const itemClass =\r\n        selectedKey === key && !this.props.readOnly ? 'selected' : '';\r\n      return (\r\n        <MeasurementTableItem\r\n          key={key}\r\n          itemIndex={itemIndex}\r\n          itemClass={itemClass}\r\n          measurementData={measurement}\r\n          onItemClick={this.onItemClick}\r\n          onRelabel={this.props.onRelabelClick}\r\n          onDelete={this.props.onDeleteClick}\r\n          onEditDescription={this.props.onEditDescriptionClick}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  onItemClick = (event, measurementData) => {\r\n    if (this.props.readOnly) return;\r\n\r\n    this.setState({\r\n      selectedKey: measurementData.measurementNumber,\r\n    });\r\n\r\n    if (this.props.onItemClick) {\r\n      this.props.onItemClick(event, measurementData);\r\n    }\r\n  };\r\n\r\n  getCustomHeader = measureGroup => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"tableListHeaderTitle\">\r\n          {this.props.t(measureGroup.groupName)}\r\n        </div>\r\n        {measureGroup.maxMeasurements && (\r\n          <div className=\"maxMeasurements\">\r\n            {this.props.t('MAX')} {measureGroup.maxMeasurements}\r\n          </div>\r\n        )}\r\n        <div className=\"numberOfItems\">{measureGroup.measurements.length}</div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  getTimepointsHeader = () => {\r\n    const { timepoints, t } = this.props;\r\n\r\n    return timepoints.map((timepoint, index) => {\r\n      return (\r\n        <div key={index} className=\"measurementTableHeaderItem\">\r\n          <div className=\"timepointLabel\">{t(timepoint.key)}</div>\r\n          <div className=\"timepointDate\">{timepoint.date}</div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  getWarningContent = () => {\r\n    const { warningList = '' } = this.props.overallWarnings;\r\n\r\n    if (Array.isArray(warningList)) {\r\n      const listedWarnings = warningList.map((warn, index) => {\r\n        return <li key={index}>{warn}</li>;\r\n      });\r\n\r\n      return <ol>{listedWarnings}</ol>;\r\n    } else {\r\n      return <React.Fragment>{warningList}</React.Fragment>;\r\n    }\r\n  };\r\n}\r\n\r\nconst connectedComponent = withTranslation(['MeasurementTable', 'Common'])(\r\n  MeasurementTable\r\n);\r\nexport { connectedComponent as MeasurementTable };\r\nexport default connectedComponent;\r\n","import React from 'react';\r\nimport detect from 'browser-detect';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './AboutContent.styl';\r\n\r\nconst AboutContent = () => {\r\n  const { t } = useTranslation('AboutContent');\r\n\r\n  const { os, version, name } = detect();\r\n  const capitalize = s =>\r\n    s.substr(0, 1).toUpperCase() + s.substr(1).toLowerCase();\r\n\r\n  const itemsPreset = () => {\r\n    return [\r\n      {\r\n        name: t('Repository URL'),\r\n        value: 'https://github.com/OHIF/Viewers/',\r\n        link: 'https://github.com/OHIF/Viewers/',\r\n      },\r\n      {\r\n        name: t('Latest Master Commits'),\r\n        value: 'https://github.com/OHIF/Viewers/commits/master',\r\n        link: 'https://github.com/OHIF/Viewers/commits/master',\r\n      },\r\n      {\r\n        name: 'Version Number',\r\n        value: process.env.VERSION_NUMBER,\r\n      },\r\n      {\r\n        name: t('Build Number'),\r\n        value: process.env.BUILD_NUM,\r\n      },\r\n      {\r\n        name: t('Browser'),\r\n        value: `${capitalize(name)} ${version}`,\r\n      },\r\n      {\r\n        name: t('OS'),\r\n        value: os,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const renderTableRow = ({ name, value, link }) => (\r\n    <tr key={name} style={{ backgroundColor: 'transparent' }}>\r\n      <td>{name}</td>\r\n      <td>\r\n        {link ? (\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\r\n            {value}\r\n          </a>\r\n        ) : (\r\n          value\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <div className=\"AboutContent\" data-cy=\"about-modal\">\r\n      <div className=\"btn-group\">\r\n        <a\r\n          className=\"btn btn-default\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://groups.google.com/forum/#!forum/cornerstone-platform\"\r\n        >\r\n          {t('Visit the forum')}\r\n        </a>\r\n        {` `}\r\n        <a\r\n          className=\"btn btn-default\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/OHIF/Viewers/issues/new/choose\"\r\n        >\r\n          {t('Report an issue')}\r\n        </a>\r\n        {` `}\r\n        <a\r\n          className=\"btn btn-default\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://ohif.org\"\r\n        >\r\n          {t('More details')}\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <h3>{t('Version Information')}</h3>\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t('Name')}</th>\r\n              <th>{t('Value')}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{itemsPreset().map(item => renderTableRow(item))}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AboutContent };\r\nexport default AboutContent;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// Style\r\nimport './TabComponents.styl';\r\n\r\n/**\r\n * Take name of the tab and create the data-cy value for it\r\n *\r\n * @param {string} [name=''] tab name\r\n * @returns {string} data-cy value\r\n */\r\nconst getDataCy = (name = '') => {\r\n  return name\r\n    .split(' ')\r\n    .join('-')\r\n    .toLowerCase();\r\n};\r\n\r\n/**\r\n * Single tab data information\r\n *\r\n * @typedef {Object} tabData\r\n * @property {string} name - name of the tab\r\n * @property {Object} Component - tab component to be rendered\r\n * @property {Object} customProps - tab custom properties\r\n * @property {bool} hidden - bool to define if tab is hidden of not\r\n */\r\n\r\n/**\r\n * Take a list of components data and render then into tabs\r\n *\r\n * @param {Object} props\r\n * @param {[tabData]} props.tabs array of tab data\r\n * @param {Object} props.customProps common custom properties\r\n */\r\nfunction TabComponents({ tabs, customProps = {} }) {\r\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\r\n\r\n  return (\r\n    tabs.length > 0 && (\r\n      <div className=\"TabComponents\">\r\n        <div className=\"TabComponents_tabHeader\">\r\n          <div className=\"TabComponents_tabHeader_selector\">\r\n            <div className=\"dialog-separator-after\">\r\n              <ul className=\"nav nav-tabs\">\r\n                {tabs.map((tab, index) => {\r\n                  const { name, hidden = false } = tab;\r\n                  return (\r\n                    !hidden && (\r\n                      <li\r\n                        key={index}\r\n                        onClick={() => {\r\n                          setCurrentTabIndex(index);\r\n                        }}\r\n                        className={classnames(\r\n                          'nav-link',\r\n                          index === currentTabIndex && 'active'\r\n                        )}\r\n                        data-cy={getDataCy(name)}\r\n                      >\r\n                        <button>{name}</button>\r\n                      </li>\r\n                    )\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {tabs.map((tab, index) => {\r\n          const {\r\n            Component,\r\n            customProps: tabCustomProps,\r\n            hidden = false,\r\n          } = tab;\r\n          return (\r\n            !hidden && (\r\n              <div\r\n                key={index}\r\n                className={classnames(\r\n                  'TabComponents_content',\r\n                  index === currentTabIndex && 'active'\r\n                )}\r\n              >\r\n                <Component {...customProps} {...tabCustomProps} />\r\n              </div>\r\n            )\r\n          );\r\n        })}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nTabComponents.propTypes = {\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      Component: PropTypes.any,\r\n      customProps: PropTypes.object,\r\n      hidden: PropTypes.bool,\r\n    })\r\n  ),\r\n  customProps: PropTypes.object,\r\n};\r\n\r\nexport { TabComponents };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TabFooter.styl';\r\n\r\n// In case translate is not passed\r\nconst translate = word => word;\r\n\r\nfunction TabFooter({\r\n  onResetPreferences,\r\n  onSave,\r\n  onCancel,\r\n  hasErrors,\r\n  t = translate,\r\n}) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <button\r\n        className=\"btn btn-danger pull-left\"\r\n        data-cy=\"reset-default-btn\"\r\n        onClick={onResetPreferences}\r\n      >\r\n        {t('Reset to Defaults')}\r\n      </button>\r\n      <div>\r\n        <div\r\n          onClick={onCancel}\r\n          data-cy=\"cancel-btn\"\r\n          className=\"btn btn-default\"\r\n        >\r\n          {t('Cancel')}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          data-cy=\"save-btn\"\r\n          disabled={hasErrors}\r\n          onClick={onSave}\r\n        >\r\n          {t('Save')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTabFooter.propTypes = {\r\n  onResetPreferences: PropTypes.func,\r\n  onSave: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  hasErrors: PropTypes.bool,\r\n  t: PropTypes.func,\r\n};\r\n\r\nexport { TabFooter };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { hotkeys } from '@ohif/core';\r\n\r\n/**\r\n * Take the pressed key array and return the readable string for the keys\r\n *\r\n * @param {Array} [keys=[]]\r\n * @returns {string} string representation of an array of keys\r\n */\r\nconst formatKeysForInput = (keys = []) => keys.join('+');\r\n\r\n/**\r\n * formats given keys sequence to insert the modifier keys in the first index of the array\r\n * @param {string} sequence keys sequence from MouseTrap Record -> \"shift+left\"\r\n * @returns {Array} keys in array-format -> ['shift','left']\r\n */\r\nconst getKeys = ({ sequence, modifier_keys }) => {\r\n  const keysArray = sequence.join(' ').split('+');\r\n  let keys = [];\r\n  let modifiers = [];\r\n  keysArray.forEach(key => {\r\n    if (modifier_keys && modifier_keys.includes(key)) {\r\n      modifiers.push(key);\r\n    } else {\r\n      keys.push(key);\r\n    }\r\n  });\r\n  return [...modifiers, ...keys];\r\n};\r\n\r\n/**\r\n * HotkeyField\r\n * Renders a hotkey input\r\n *\r\n * @param {object} props component props\r\n * @param {Array[]} props.keys array of keys to be controlled by this field\r\n * @param {function} props.handleChange Callback function to communicate parent once value is changed\r\n * @param {string} props.classNames string caontaining classes to be added in the input field\r\n * @param {Array[]} props.modifier_keys\r\n */\r\nfunction HotkeyField({ keys, handleChange, classNames, modifier_keys }) {\r\n  const inputValue = formatKeysForInput(keys);\r\n\r\n  const onInputKeyDown = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    hotkeys.record(sequence => {\r\n      const keys = getKeys({ sequence, modifier_keys });\r\n      hotkeys.unpause();\r\n      handleChange(keys);\r\n    });\r\n  };\r\n\r\n  const onFocus = () => {\r\n    hotkeys.pause();\r\n    hotkeys.startRecording();\r\n  };\r\n\r\n  return (\r\n    <input\r\n      readOnly={true}\r\n      type=\"text\"\r\n      value={inputValue}\r\n      className={classNames}\r\n      onKeyDown={onInputKeyDown}\r\n      onFocus={onFocus}\r\n    />\r\n  );\r\n}\r\n\r\nHotkeyField.propTypes = {\r\n  keys: PropTypes.array.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  classNames: PropTypes.string,\r\n  modifier_keys: PropTypes.array,\r\n  allowed_keys: PropTypes.array,\r\n};\r\n\r\nexport { HotkeyField };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './LanguageSwitcher.styl';\r\n\r\nconst LanguageSwitcher = ({ language, onLanguageChange, languages }) => {\r\n  const onChange = event => {\r\n    const { value } = event.target;\r\n    onLanguageChange(value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      name=\"language-select\"\r\n      id=\"language-select\"\r\n      className=\"language-select\"\r\n      value={language}\r\n      onChange={onChange}\r\n    >\r\n      {languages.map(lng => (\r\n        <option key={lng.value} value={lng.value}>\r\n          {lng.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nLanguageSwitcher.propTypes = {\r\n  language: PropTypes.string.isRequired,\r\n  languages: PropTypes.array.isRequired,\r\n  onLanguageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { LanguageSwitcher };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './checkbox.css';\r\n\r\nexport class Checkbox extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { checked: !!props.checked, label: props.label };\r\n  }\r\n\r\n  handleChange(e) {\r\n    const checked = e.target.checked;\r\n    this.setState({ checked });\r\n    if (this.props.onChange) this.props.onChange(checked);\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    const { checked = false, label } = props;\r\n\r\n    if (this.state.checked !== checked || this.state.label !== label) {\r\n      this.setState({\r\n        checked,\r\n        label,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let checkbox;\r\n    if (this.state.checked) {\r\n      checkbox = <span className=\"ohif-checkbox ohif-checked\" />;\r\n    } else {\r\n      checkbox = <span className=\"ohif-checkbox\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"ohif-check-container\">\r\n        <form>\r\n          <label className=\"ohif-check-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={this.state.checked}\r\n              onChange={this.handleChange.bind(this)}\r\n            />\r\n            {checkbox}\r\n            {this.state.label}\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './CineDialog.styl';\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport { withTranslation } from '../../contextProviders';\r\nimport { Icon } from './../../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CineDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cineFrameRate: props.cineFrameRate,\r\n      isPlaying: props.isPlaying,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    /** Minimum value for range slider */\r\n    cineMinFrameRate: PropTypes.number.isRequired,\r\n    /** Maximum value for range slider */\r\n    cineMaxFrameRate: PropTypes.number.isRequired,\r\n    /** Increment range slider can \"step\" in either direction. */\r\n    cineStepFrameRate: PropTypes.number.isRequired,\r\n    cineFrameRate: PropTypes.number.isRequired,\r\n    /** 'True' if playing, 'False' if paused. */\r\n    isPlaying: PropTypes.bool.isRequired,\r\n    onPlayPauseChanged: PropTypes.func,\r\n    onFrameRateChanged: PropTypes.func,\r\n    onClickNextButton: PropTypes.func,\r\n    onClickBackButton: PropTypes.func,\r\n    onClickSkipToStart: PropTypes.func,\r\n    onClickSkipToEnd: PropTypes.func,\r\n    /** i18next translation function */\r\n    t: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    cineMinFrameRate: 1,\r\n    cineMaxFrameRate: 90,\r\n    cineStepFrameRate: 1,\r\n    cineFrameRate: 24,\r\n    isPlaying: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // TODO: Not sure if we should just switch this to a stateless\r\n    // fully-controlled component instead\r\n    if (\r\n      this.props.isPlaying !== prevProps.isPlaying ||\r\n      this.props.isPlaying !== this.state.isPlaying\r\n    ) {\r\n      this.setState({\r\n        isPlaying: this.props.isPlaying,\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.props.cineFrameRate !== prevProps.cineFrameRate ||\r\n      this.props.cineFrameRate !== this.state.cineFrameRate\r\n    ) {\r\n      this.setState({\r\n        cineFrameRate: this.props.cineFrameRate,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n\r\n    let value = target.value;\r\n\r\n    if (target.type === 'range') {\r\n      value = parseFloat(target.value);\r\n    }\r\n\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n\r\n    if (name === 'cineFrameRate' && this.props.onFrameRateChanged) {\r\n      this.props.onFrameRateChanged(parseFloat(value));\r\n    }\r\n  };\r\n\r\n  onClickPlayPause = () => {\r\n    const value = !this.state.isPlaying;\r\n\r\n    this.setState({\r\n      isPlaying: value,\r\n    });\r\n\r\n    if (this.props.onPlayPauseChanged) {\r\n      this.props.onPlayPauseChanged(value);\r\n    }\r\n  };\r\n\r\n  onClickNextButton = event => {\r\n    if (this.props.onClickNextButton) {\r\n      this.props.onClickNextButton(event);\r\n    }\r\n  };\r\n\r\n  onClickBackButton = event => {\r\n    if (this.props.onClickBackButton) {\r\n      this.props.onClickBackButton(event);\r\n    }\r\n  };\r\n\r\n  onClickSkipToStart = event => {\r\n    if (this.props.onClickSkipToStart) {\r\n      this.props.onClickSkipToStart(event);\r\n    }\r\n  };\r\n\r\n  onClickSkipToEnd = event => {\r\n    if (this.props.onClickSkipToEnd) {\r\n      this.props.onClickSkipToEnd(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    return (\r\n      <div className=\"CineDialog\">\r\n        <div className=\"noselect double-row-style\">\r\n          <div className=\"cine-controls\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                title={t('Skip to first image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickSkipToStart}\r\n              >\r\n                <Icon name=\"fast-backward\" />\r\n              </button>\r\n              <button\r\n                title={t('Previous image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickBackButton}\r\n              >\r\n                <Icon name=\"step-backward\" />\r\n              </button>\r\n              <button\r\n                title={t('Play / Stop')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickPlayPause}\r\n              >\r\n                <Icon name={this.state.isPlaying ? 'stop' : 'play'} />\r\n              </button>\r\n              <button\r\n                title={t('Next image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickNextButton}\r\n              >\r\n                <Icon name=\"step-forward\" />\r\n              </button>\r\n              <button\r\n                title={t('Skip to last image')}\r\n                className=\"btn\"\r\n                data-toggle=\"tooltip\"\r\n                onClick={this.onClickSkipToEnd}\r\n              >\r\n                <Icon name=\"fast-forward\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"cine-options\">\r\n            <div className=\"fps-section\">\r\n              <input\r\n                type=\"range\"\r\n                name=\"cineFrameRate\"\r\n                min={this.props.cineMinFrameRate}\r\n                max={this.props.cineMaxFrameRate}\r\n                step={this.props.cineStepFrameRate}\r\n                value={this.state.cineFrameRate}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <span className=\"fps\">\r\n              {this.state.cineFrameRate.toFixed(1)} {t('fps')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedComponent = withTranslation('CineDialog')(CineDialog);\r\nexport { connectedComponent as CineDialog };\r\nexport default connectedComponent;\r\n","import React, {\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  createRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './ViewportDownloadForm.styl';\r\nimport { TextInput, Select, Icon } from '@ohif/ui';\r\nimport classnames from 'classnames';\r\n\r\nconst FILE_TYPE_OPTIONS = [\r\n  {\r\n    key: 'jpg',\r\n    value: 'jpg',\r\n  },\r\n  {\r\n    key: 'png',\r\n    value: 'png',\r\n  },\r\n];\r\n\r\nconst DEFAULT_FILENAME = 'image';\r\nconst REFRESH_VIEWPORT_TIMEOUT = 1000;\r\n\r\nconst ViewportDownloadForm = ({\r\n  activeViewport,\r\n  onClose,\r\n  updateViewportPreview,\r\n  enableViewport,\r\n  disableViewport,\r\n  toggleAnnotations,\r\n  loadImage,\r\n  downloadBlob,\r\n  defaultSize,\r\n  minimumSize,\r\n  maximumSize,\r\n  canvasClass,\r\n}) => {\r\n  const [t] = useTranslation('ViewportDownloadForm');\r\n\r\n  const [filename, setFilename] = useState(DEFAULT_FILENAME);\r\n  const [fileType, setFileType] = useState('jpg');\r\n\r\n  const [dimensions, setDimensions] = useState({\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [showAnnotations, setShowAnnotations] = useState(true);\r\n\r\n  const [keepAspect, setKeepAspect] = useState(true);\r\n  const [aspectMultiplier, setAspectMultiplier] = useState({\r\n    width: 1,\r\n    height: 1,\r\n  });\r\n\r\n  const [viewportElement, setViewportElement] = useState();\r\n  const [viewportElementDimensions, setViewportElementDimensions] = useState({\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [downloadCanvas, setDownloadCanvas] = useState({\r\n    ref: createRef(),\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [viewportPreview, setViewportPreview] = useState({\r\n    src: null,\r\n    width: defaultSize,\r\n    height: defaultSize,\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    width: false,\r\n    height: false,\r\n    filename: false,\r\n  });\r\n\r\n  const hasError = Object.values(error).includes(true);\r\n\r\n  const refreshViewport = useRef(null);\r\n\r\n  const downloadImage = () => {\r\n    downloadBlob(\r\n      filename || DEFAULT_FILENAME,\r\n      fileType,\r\n      viewportElement,\r\n      downloadCanvas.ref.current\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param {object} event - Input change event\r\n   * @param {string} dimension - \"height\" | \"width\"\r\n   */\r\n  const onDimensionsChange = (event, dimension) => {\r\n    const oppositeDimension = dimension === 'height' ? 'width' : 'height';\r\n    const sanitizedTargetValue = event.target.value.replace(/\\D/, '');\r\n    const isEmpty = sanitizedTargetValue === '';\r\n    const newDimensions = { ...dimensions };\r\n    const updatedDimension = isEmpty\r\n      ? ''\r\n      : Math.min(sanitizedTargetValue, maximumSize);\r\n\r\n    if (updatedDimension === dimensions[dimension]) {\r\n      return;\r\n    }\r\n\r\n    newDimensions[dimension] = updatedDimension;\r\n\r\n    if (keepAspect && newDimensions[oppositeDimension] !== '') {\r\n      newDimensions[oppositeDimension] = Math.round(\r\n        newDimensions[dimension] * aspectMultiplier[oppositeDimension]\r\n      );\r\n    }\r\n\r\n    // In current code, keepAspect is always `true`\r\n    // And we always start w/ a square width/height\r\n    setDimensions(newDimensions);\r\n\r\n    // Only update if value is non-empty\r\n    if (!isEmpty) {\r\n      setViewportElementDimensions(newDimensions);\r\n      setDownloadCanvas(state => ({\r\n        ...state,\r\n        ...newDimensions,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const error_messages = {\r\n    width: t('minWidthError'),\r\n    height: t('minHeightError'),\r\n    filename: t('emptyFilenameError'),\r\n  };\r\n\r\n  const renderErrorHandler = errorType => {\r\n    if (!error[errorType]) {\r\n      return null;\r\n    }\r\n\r\n    return <div className=\"input-error\">{error_messages[errorType]}</div>;\r\n  };\r\n\r\n  const onKeepAspectToggle = () => {\r\n    const { width, height } = dimensions;\r\n    const aspectMultiplier = { ...aspectMultiplier };\r\n    if (!keepAspect) {\r\n      const base = Math.min(width, height);\r\n      aspectMultiplier.width = width / base;\r\n      aspectMultiplier.height = height / base;\r\n      setAspectMultiplier(aspectMultiplier);\r\n    }\r\n\r\n    setKeepAspect(!keepAspect);\r\n  };\r\n\r\n  const validSize = value => (value >= minimumSize ? value : minimumSize);\r\n  const loadAndUpdateViewports = useCallback(async () => {\r\n    const { width: scaledWidth, height: scaledHeight } = await loadImage(\r\n      activeViewport,\r\n      viewportElement,\r\n      dimensions.width,\r\n      dimensions.height\r\n    );\r\n\r\n    toggleAnnotations(showAnnotations, viewportElement);\r\n\r\n    const scaledDimensions = {\r\n      height: validSize(scaledHeight),\r\n      width: validSize(scaledWidth),\r\n    };\r\n\r\n    setViewportElementDimensions(scaledDimensions);\r\n    setDownloadCanvas(state => ({\r\n      ...state,\r\n      ...scaledDimensions,\r\n    }));\r\n\r\n    const {\r\n      dataUrl,\r\n      width: viewportElementWidth,\r\n      height: viewportElementHeight,\r\n    } = await updateViewportPreview(\r\n      viewportElement,\r\n      downloadCanvas.ref.current,\r\n      fileType\r\n    );\r\n\r\n    setViewportPreview(state => ({\r\n      ...state,\r\n      src: dataUrl,\r\n      width: validSize(viewportElementWidth),\r\n      height: validSize(viewportElementHeight),\r\n    }));\r\n  }, [\r\n    activeViewport,\r\n    viewportElement,\r\n    showAnnotations,\r\n    loadImage,\r\n    toggleAnnotations,\r\n    updateViewportPreview,\r\n    fileType,\r\n    downloadCanvas.ref,\r\n    minimumSize,\r\n    maximumSize,\r\n    viewportElementDimensions,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    enableViewport(viewportElement);\r\n\r\n    return () => {\r\n      disableViewport(viewportElement);\r\n    };\r\n  }, [disableViewport, enableViewport, viewportElement]);\r\n\r\n  useEffect(() => {\r\n    if (refreshViewport.current !== null) {\r\n      clearTimeout(refreshViewport.current);\r\n    }\r\n\r\n    refreshViewport.current = setTimeout(() => {\r\n      refreshViewport.current = null;\r\n      loadAndUpdateViewports();\r\n    }, REFRESH_VIEWPORT_TIMEOUT);\r\n  }, [\r\n    activeViewport,\r\n    viewportElement,\r\n    showAnnotations,\r\n    dimensions,\r\n    loadImage,\r\n    toggleAnnotations,\r\n    updateViewportPreview,\r\n    fileType,\r\n    downloadCanvas.ref,\r\n    minimumSize,\r\n    maximumSize,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const { width, height } = dimensions;\r\n    const hasError = {\r\n      width: width < minimumSize,\r\n      height: height < minimumSize,\r\n      filename: !filename,\r\n    };\r\n\r\n    setError({ ...hasError });\r\n  }, [dimensions, filename, minimumSize]);\r\n\r\n  return (\r\n    <div className=\"ViewportDownloadForm\">\r\n      <div className=\"title\">{t('formTitle')}</div>\r\n\r\n      <div className=\"file-info-container\" data-cy=\"file-info-container\">\r\n        <div className=\"dimension-wrapper\">\r\n          <div className=\"dimensions\">\r\n            <div className=\"width\">\r\n              <TextInput\r\n                type=\"number\"\r\n                min={minimumSize}\r\n                max={maximumSize}\r\n                value={dimensions.width}\r\n                label={t('imageWidth')}\r\n                onChange={evt => onDimensionsChange(evt, 'width')}\r\n                data-cy=\"image-width\"\r\n              />\r\n              {renderErrorHandler('width')}\r\n            </div>\r\n            <div className=\"height\">\r\n              <TextInput\r\n                type=\"number\"\r\n                min={minimumSize}\r\n                max={maximumSize}\r\n                value={dimensions.height}\r\n                label={t('imageHeight')}\r\n                onChange={evt => onDimensionsChange(evt, 'height')}\r\n                data-cy=\"image-height\"\r\n              />\r\n              {renderErrorHandler('height')}\r\n            </div>\r\n          </div>\r\n          <div className=\"keep-aspect-wrapper\">\r\n            <button\r\n              id=\"keep-aspect\"\r\n              className={classnames(\r\n                'form-button btn',\r\n                keepAspect ? 'active' : ''\r\n              )}\r\n              data-cy=\"keep-aspect\"\r\n              alt={t('keepAspectRatio')}\r\n              onClick={onKeepAspectToggle}\r\n            >\r\n              <Icon\r\n                name={keepAspect ? 'link' : 'unlink'}\r\n                alt={keepAspect ? 'Dismiss Aspect' : 'Keep Aspect'}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <div className=\"file-name\">\r\n            <TextInput\r\n              type=\"text\"\r\n              data-cy=\"file-name\"\r\n              value={filename}\r\n              onChange={event => setFilename(event.target.value)}\r\n              label={t('filename')}\r\n              id=\"file-name\"\r\n            />\r\n            {renderErrorHandler('filename')}\r\n          </div>\r\n          <div className=\"file-type\">\r\n            <Select\r\n              value={fileType}\r\n              data-cy=\"file-type\"\r\n              onChange={event => setFileType(event.target.value)}\r\n              options={FILE_TYPE_OPTIONS}\r\n              label={t('fileType')}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <div className=\"show-annotations\">\r\n            <label htmlFor=\"show-annotations\" className=\"form-check-label\">\r\n              <input\r\n                id=\"show-annotations\"\r\n                data-cy=\"show-annotations\"\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={showAnnotations}\r\n                onChange={event => setShowAnnotations(event.target.checked)}\r\n              />\r\n              {t('showAnnotations')}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          height: viewportElementDimensions.height,\r\n          width: viewportElementDimensions.width,\r\n          position: 'absolute',\r\n          left: '9999px',\r\n        }}\r\n        ref={ref => setViewportElement(ref)}\r\n      >\r\n        <canvas\r\n          className={canvasClass}\r\n          style={{\r\n            height: downloadCanvas.height,\r\n            width: downloadCanvas.width,\r\n            display: 'block',\r\n          }}\r\n          width={downloadCanvas.width}\r\n          height={downloadCanvas.height}\r\n          ref={downloadCanvas.ref}\r\n        ></canvas>\r\n      </div>\r\n\r\n      {viewportPreview.src ? (\r\n        <div className=\"preview\" data-cy=\"image-preview\">\r\n          <div className=\"preview-header\"> {t('imagePreview')}</div>\r\n          <img\r\n            className=\"viewport-preview\"\r\n            src={viewportPreview.src}\r\n            alt={t('imagePreview')}\r\n            data-cy=\"image-preview\"\r\n            data-cy=\"viewport-preview-img\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"loading-image\">\r\n          <Icon name=\"circle-notch\" className=\"icon-spin\" />\r\n          {t('loadingPreview')}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"actions\">\r\n        <div className=\"action-cancel\">\r\n          <button\r\n            type=\"button\"\r\n            data-cy=\"cancel-btn\"\r\n            className=\"btn btn-danger\"\r\n            onClick={onClose}\r\n          >\r\n            {t('Buttons:Cancel')}\r\n          </button>\r\n        </div>\r\n        <div className=\"action-save\">\r\n          <button\r\n            disabled={hasError}\r\n            onClick={downloadImage}\r\n            className=\"btn btn-primary\"\r\n            data-cy=\"download-btn\"\r\n          >\r\n            {t('Buttons:Download')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nViewportDownloadForm.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  activeViewport: PropTypes.object,\r\n  updateViewportPreview: PropTypes.func.isRequired,\r\n  enableViewport: PropTypes.func.isRequired,\r\n  disableViewport: PropTypes.func.isRequired,\r\n  toggleAnnotations: PropTypes.func.isRequired,\r\n  loadImage: PropTypes.func.isRequired,\r\n  downloadBlob: PropTypes.func.isRequired,\r\n  /** A default width & height, between the minimum and maximum size */\r\n  defaultSize: PropTypes.number.isRequired,\r\n  minimumSize: PropTypes.number.isRequired,\r\n  maximumSize: PropTypes.number.isRequired,\r\n  canvasClass: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ViewportDownloadForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './StudiesItem.styl';\r\n\r\nexport class StudiesItem extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    studyData: PropTypes.object.isRequired,\r\n    active: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      StudyDate,\r\n      StudyDescription,\r\n      modalities,\r\n      studyAvailable,\r\n    } = this.props.studyData;\r\n    const activeClass = this.props.active ? ' active' : '';\r\n    const hasDescriptionAndDate = StudyDate && StudyDescription;\r\n    return (\r\n      <div\r\n        className={`studyBrowseItem${activeClass}`}\r\n        onClick={this.props.onClick}\r\n      >\r\n        <div className=\"studyItemBox\">\r\n          <div className=\"studyModality\">\r\n            <div\r\n              className=\"studyModalityText\"\r\n              style={this.getModalitiesStyle()}\r\n            >\r\n              {modalities}\r\n            </div>\r\n          </div>\r\n          <div className=\"studyText\">\r\n            {hasDescriptionAndDate ? (\r\n              <React.Fragment>\r\n                <div className=\"studyDate\">{StudyDate}</div>\r\n                <div className=\"studyDescription\">{StudyDescription}</div>\r\n              </React.Fragment>\r\n            ) : (\r\n              <div className=\"studyAvailability\">\r\n                {studyAvailable ? (\r\n                  <React.Fragment>N/A</React.Fragment>\r\n                ) : (\r\n                  <React.Fragment>Click to load</React.Fragment>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getModalitiesStyle = () => {\r\n    return {};\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StudiesItem } from './StudiesItem.js';\r\nimport './StudiesList.styl';\r\n\r\nexport class StudiesList extends Component {\r\n  static propTypes = {\r\n    class: PropTypes.string,\r\n    studyListData: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    activeStudyInstanceUID: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`studiesList ${this.props.class}`}>\r\n        {this.getBrowserItems()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBrowserItems = () => {\r\n    return this.props.studyListData.map((studyData, index) => {\r\n      return (\r\n        <StudiesItem\r\n          key={index}\r\n          studyData={studyData}\r\n          active={\r\n            studyData.StudyInstanceUID === this.props.activeStudyInstanceUID\r\n          }\r\n          onClick={event => this.props.onClick(studyData)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Thumbnail } from './../studyBrowser';\r\nimport './SeriesList.styl';\r\n\r\nexport class SeriesList extends Component {\r\n  static propTypes = {\r\n    seriesItems: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    activeDisplaySetInstanceUID: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"study-browser-series clearfix thumbnails-wrapper\">\r\n          <div className=\"study-series-container\">{this.getSeriesItems()}</div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getSeriesItems = () => {\r\n    return this.props.seriesItems.map((seriesData, index) => {\r\n      return (\r\n        <Thumbnail\r\n          key={seriesData.displaySetInstanceUID}\r\n          id={`series_thumb_${index}`}\r\n          {...seriesData}\r\n          active={\r\n            seriesData.displaySetInstanceUID ===\r\n            this.props.activeDisplaySetInstanceUID\r\n          }\r\n          onClick={() => this.props.onClick(seriesData)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StudiesList } from './StudiesList.js';\r\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\r\nimport { SeriesList } from './SeriesList.js';\r\n\r\nimport './QuickSwitch.styl';\r\n\r\nexport class QuickSwitch extends Component {\r\n  static propTypes = {\r\n    side: PropTypes.string,\r\n    studyListData: PropTypes.array.isRequired,\r\n    onSeriesSelected: PropTypes.func.isRequired,\r\n    seriesData: PropTypes.array,\r\n    onStudySelected: PropTypes.func,\r\n    activeStudyInstanceUID: PropTypes.string,\r\n    activeDisplaySetInstanceUID: PropTypes.string,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seriesQuickSwitchOpen: false,\r\n      sideClass: this.props.side || '',\r\n      activeStudyInstanceUID: this.props.activeStudyInstanceUID,\r\n      activeDisplaySetInstanceUID: this.props.activeDisplaySetInstanceUID,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const props = this.props;\r\n\r\n    if (props.activeStudyInstanceUID !== prevProps.activeStudyInstanceUID) {\r\n      this.setState({\r\n        activeStudyInstanceUID: props.activeStudyInstanceUID,\r\n      });\r\n    }\r\n\r\n    if (\r\n      props.activeDisplaySetInstanceUID !==\r\n      prevProps.activeDisplaySetInstanceUID\r\n    ) {\r\n      this.setState({\r\n        activeDisplaySetInstanceUID: props.activeDisplaySetInstanceUID,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const quickSwitchClass = this.state.seriesQuickSwitchOpen\r\n      ? 'series-triggered'\r\n      : '';\r\n\r\n    return (\r\n      <div\r\n        className={`series-quick-switch clearfix noselect ${this.state.sideClass} ${quickSwitchClass}`}\r\n        onMouseLeave={this.hideSeriesSwitch}\r\n      >\r\n        <div className=\"series-switch\" onMouseEnter={this.showSeriesSwitch}>\r\n          <div className=\"title-label\">Series</div>\r\n          <div className=\"series-box\">\r\n            {this.getSmallListItems()}\r\n            <ScrollableArea scrollStep={201} class=\"series-browser\">\r\n              <SeriesList\r\n                seriesItems={this.getSeriesItems()}\r\n                onClick={this.onSeriesClick}\r\n                activeDisplaySetInstanceUID={\r\n                  this.state.activeDisplaySetInstanceUID\r\n                }\r\n              />\r\n            </ScrollableArea>\r\n          </div>\r\n        </div>\r\n        <div className=\"study-switch\">\r\n          <div className=\"title-label\">Study</div>\r\n          <div className=\"study-box\">\r\n            <ScrollableArea scrollStep={91} class=\"study-browser\">\r\n              <StudiesList\r\n                studyListData={this.props.studyListData}\r\n                onClick={this.onStudyClick}\r\n                activeStudyInstanceUID={this.state.activeStudyInstanceUID}\r\n              />\r\n            </ScrollableArea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getSeriesItems = () => {\r\n    let seriesData;\r\n\r\n    if (this.props.seriesData) {\r\n      seriesData = this.props.seriesData;\r\n    } else if (this.state.activeStudyInstanceUID) {\r\n      const study = this.props.studyListData.find(\r\n        study => study.StudyInstanceUID === this.state.activeStudyInstanceUID\r\n      );\r\n\r\n      seriesData = study.thumbnails;\r\n    } else {\r\n      seriesData = this.props.studyListData[0].thumbnails;\r\n    }\r\n\r\n    return seriesData || [];\r\n  };\r\n\r\n  getSmallListItems = () => {\r\n    const seriesItems = this.getSeriesItems() || [];\r\n    return seriesItems.map((seriesData, index) => {\r\n      const active =\r\n        seriesData.displaySetInstanceUID ===\r\n        this.state.activeDisplaySetInstanceUID;\r\n      return (\r\n        <div key={index} className={`series-item ${active ? 'active' : ''}`} />\r\n      );\r\n    });\r\n  };\r\n\r\n  onStudyClick = studyDataSelected => {\r\n    if (this.props.onStudySelected) {\r\n      this.props.onStudySelected(studyDataSelected);\r\n    }\r\n    this.setState({\r\n      activeStudyInstanceUID: studyDataSelected.StudyInstanceUID,\r\n      seriesQuickSwitchOpen: true,\r\n    });\r\n  };\r\n\r\n  onSeriesClick = seriesDataSelected => {\r\n    this.setState({\r\n      activeDisplaySetInstanceUID: seriesDataSelected.displaySetInstanceUID,\r\n    });\r\n\r\n    this.props.onSeriesSelected(seriesDataSelected);\r\n  };\r\n\r\n  showSeriesSwitch = () => {\r\n    this.setState({\r\n      seriesQuickSwitchOpen: true,\r\n    });\r\n  };\r\n\r\n  hideSeriesSwitch = () => {\r\n    this.setState({\r\n      seriesQuickSwitchOpen: false,\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Icon } from './../../elements/Icon';\r\nimport './RoundedButtonGroup.css';\r\n\r\n// TODO: Rename to Toggle?\r\nclass RoundedButtonGroup extends Component {\r\n  static className = 'RoundedButtonGroup';\r\n\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        value: PropTypes.any,\r\n        label: PropTypes.string,\r\n        stateEvent: PropTypes.string,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n      })\r\n    ),\r\n    value: PropTypes.string,\r\n    onValueChanged: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: [],\r\n    value: null,\r\n  };\r\n\r\n  state = {\r\n    badgeNumbers: [],\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.onStateEvent = this.onStateEvent.bind(this);\r\n  }\r\n\r\n  onClickOption = value => {\r\n    let newValue = value;\r\n    if (this.props.value === value) {\r\n      newValue = null;\r\n    }\r\n\r\n    if (this.props.onValueChanged) {\r\n      this.props.onValueChanged(newValue);\r\n    }\r\n  };\r\n\r\n  onStateEvent(event) {\r\n    const optionIndex = this.props.options.findIndex(\r\n      o => o.value === event.detail.target\r\n    );\r\n    if (optionIndex > -1) {\r\n      const badgeNumbers = this.state.badgeNumbers;\r\n      badgeNumbers[optionIndex] = event.detail.badgeNumber;\r\n      this.setState({ badgeNumbers });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.options.forEach(option => {\r\n      if (option.stateEvent) {\r\n        document.addEventListener(option.stateEvent, this.onStateEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.props.options.forEach((option, index) => {\r\n      if (\r\n        option.stateEvent &&\r\n        option.stateEvent !==\r\n          (prevProps.options[index]\r\n            ? prevProps.options[index].stateEvent\r\n            : null)\r\n      ) {\r\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\r\n        document.addEventListener(option.stateEvent, this.onStateEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.options.forEach(option => {\r\n      if (option.stateEvent) {\r\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let className = classnames(\r\n      RoundedButtonGroup.className,\r\n      'clearfix center-table'\r\n    );\r\n\r\n    const buttons = this.props.options.map((option, index) => {\r\n      const className = classnames({\r\n        roundedButtonWrapper: true,\r\n        noselect: true,\r\n        active: this.props.value === option.value,\r\n      });\r\n\r\n      const optionText = option.label && <span>{option.label}</span>;\r\n      const iconProps =\r\n        typeof option.icon === 'string' ? { name: option.icon } : option.icon;\r\n\r\n      const bottomLabel = option.bottomLabel && (\r\n        <div className=\"bottomLabel\">{option.bottomLabel}</div>\r\n      );\r\n\r\n      let badgeNumber = this.state.badgeNumbers[index];\r\n      const badgeNumberOverflow = String(badgeNumber).length > 2;\r\n      badgeNumber = badgeNumber\r\n        ? badgeNumberOverflow\r\n          ? 99\r\n          : badgeNumber\r\n        : null;\r\n\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={className}\r\n          onClick={() => this.onClickOption(option.value)}\r\n        >\r\n          <div className=\"roundedButton\">\r\n            {optionText}\r\n            {badgeNumber && (\r\n              <div className=\"badgeNumber-container\">\r\n                <span className=\"badgeNumber\">\r\n                  {badgeNumber}\r\n                  {badgeNumberOverflow && '+'}\r\n                </span>\r\n              </div>\r\n            )}\r\n            {iconProps && <Icon {...iconProps} />}\r\n          </div>\r\n          {bottomLabel}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <div className={className}>{buttons}</div>;\r\n  }\r\n}\r\n\r\nexport { RoundedButtonGroup };\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class InputRadio extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    itemData: PropTypes.object.isRequired,\r\n    labelClass: PropTypes.string,\r\n    id: PropTypes.string.isRequired,\r\n    onSelected: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const labelClass = this.props.labelClass ? this.props.labelClass : '';\r\n    return (\r\n      <label\r\n        className={'wrapperLabel radioLabel ' + labelClass}\r\n        htmlFor={this.props.id}\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          id={this.props.id}\r\n          className=\"radioInput\"\r\n          value={this.props.value}\r\n          onChange={this.onSelected}\r\n        />\r\n        <span className=\"wrapperText\">{this.props.label}</span>\r\n      </label>\r\n    );\r\n  }\r\n\r\n  onSelected = evt => {\r\n    this.props.onSelected(evt, this.props.itemData);\r\n  };\r\n}\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from './../../elements/Icon';\r\n\r\nexport default class SelectTreeBreadcrumb extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onSelected: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"selectTreeBreadcrumb\">\r\n        <label\r\n          className=\"wrapperLabel radioLabel\"\r\n          htmlFor=\"selectTreeBreadcrumb\"\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            id=\"selectTreeBreadcrumb\"\r\n            className=\"treeNode radioInput\"\r\n            value={this.props.value}\r\n            onChange={this.props.onSelected}\r\n          />\r\n          <span className=\"wrapperText\">\r\n            <span className=\"backIcon\">\r\n              <Icon name=\"fast-backward\" />\r\n            </span>\r\n            {this.props.label}\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './SelectTree.styl';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport InputRadio from './InputRadio.js';\r\nimport PropTypes from 'prop-types';\r\nimport SelectTreeBreadcrumb from './SelectTreeBreadcrumb.js';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nexport class SelectTree extends Component {\r\n  static propTypes = {\r\n    autoFocus: PropTypes.bool,\r\n    searchEnabled: PropTypes.bool,\r\n    selectTreeFirstTitle: PropTypes.string,\r\n    selectTreeSecondTitle: PropTypes.string,\r\n    /** Called when 'componentDidUpdate' is triggered */\r\n    onComponentChange: PropTypes.func,\r\n    /** [{ label, value, items[]}] - An array of items than can be expanded to show child items */\r\n    items: PropTypes.array.isRequired,\r\n    /** fn(evt, item) - Called when a child item is selected; receives event and selected item */\r\n    onSelected: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    searchEnabled: true,\r\n    autoFocus: true,\r\n    selectTreeFirstTitle: 'First Level itens',\r\n    items: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: null,\r\n      currentNode: null,\r\n      value: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const treeItems = this.getTreeItems();\r\n\r\n    return (\r\n      <div className=\"selectTree selectTreeRoot\">\r\n        <div className=\"treeContent\">\r\n          {this.headerItem()}\r\n          <div className=\"treeOptions\">\r\n            {this.state.currentNode && (\r\n              <SelectTreeBreadcrumb\r\n                onSelected={this.onBreadcrumbSelected}\r\n                label={this.state.currentNode.label}\r\n                value={this.state.currentNode.value}\r\n              />\r\n            )}\r\n            <div className=\"treeInputsWrapper\">\r\n              <div className=\"treeInputs\">{treeItems}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.onComponentChange) {\r\n      this.props.onComponentChange();\r\n    }\r\n  };\r\n\r\n  isLeafSelected = item => item && !Array.isArray(item.items);\r\n\r\n  getLabelClass = item => {\r\n    let labelClass = 'treeLeaf';\r\n    if (this.state.searchTerm || Array.isArray(item.items)) {\r\n      labelClass = 'treeNode';\r\n    }\r\n    return labelClass;\r\n  };\r\n\r\n  filterItems() {\r\n    const filteredItems = [];\r\n    const rawItems = cloneDeep(this.props.items);\r\n    rawItems.forEach(item => {\r\n      if (Array.isArray(item.items)) {\r\n        item.items.forEach(item => {\r\n          const label = item.label.toLowerCase();\r\n          const searchTerm = this.state.searchTerm.toLowerCase();\r\n          if (label.indexOf(searchTerm) !== -1) {\r\n            filteredItems.push(item);\r\n          }\r\n        });\r\n      } else {\r\n        const label = item.label.toLowerCase();\r\n        const searchTerm = this.state.searchTerm.toLowerCase();\r\n        if (label.indexOf(searchTerm) !== -1) {\r\n          filteredItems.push(item);\r\n        }\r\n      }\r\n    });\r\n    return filteredItems;\r\n  }\r\n\r\n  getTreeItems() {\r\n    const storageKey = 'SelectTree';\r\n    let treeItems;\r\n\r\n    if (this.state.searchTerm) {\r\n      treeItems = this.filterItems();\r\n    } else if (this.state.currentNode) {\r\n      treeItems = cloneDeep(this.state.currentNode.items);\r\n    } else {\r\n      treeItems = cloneDeep(this.props.items);\r\n    }\r\n\r\n    return treeItems.map((item, index) => {\r\n      let itemKey = index;\r\n      if (this.state.currentNode) {\r\n        itemKey += `_${this.state.currentNode.value}`;\r\n      }\r\n      return (\r\n        <InputRadio\r\n          key={itemKey}\r\n          id={`${storageKey}_${item.value}`}\r\n          name={index}\r\n          itemData={item}\r\n          value={item.value}\r\n          label={item.label}\r\n          labelClass={this.getLabelClass(item)}\r\n          onSelected={this.onSelected}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  headerItem = () => {\r\n    let title = this.props.selectTreeFirstTitle;\r\n    if (this.state.currentNode && this.props.selectTreeSecondTitle) {\r\n      title = this.props.selectTreeSecondTitle;\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapperLabel treeHeader\">\r\n        <div className=\"wrapperText\">{title}</div>\r\n        {this.props.searchEnabled && (\r\n          <div className=\"wrapperSearch\">\r\n            <div className=\"searchIcon\">\r\n              <Icon name=\"search\" />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"searchInput\"\r\n              placeholder=\"Search labels\"\r\n              autoFocus={this.props.autoFocus}\r\n              onChange={this.searchLocations}\r\n              value={this.state.searchTerm ? this.state.searchTerm : ''}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  searchLocations = evt => {\r\n    this.setState({\r\n      currentNode: null,\r\n      searchTerm: evt.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onSelected = (event, item) => {\r\n    if (this.isLeafSelected(item)) {\r\n      this.setState({\r\n        searchTerm: null,\r\n        currentNode: null,\r\n        value: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentNode: item,\r\n      });\r\n    }\r\n    return this.props.onSelected(event, item);\r\n  };\r\n\r\n  onBreadcrumbSelected = () => {\r\n    this.setState({\r\n      currentNode: null,\r\n    });\r\n  };\r\n}\r\n","import React, { Component, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextInput } from '@ohif/ui';\r\n\r\nimport './SimpleDialog.styl';\r\n\r\nclass SimpleDialog extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    componentRef: PropTypes.any,\r\n    componentStyle: PropTypes.object,\r\n    rootClass: PropTypes.string,\r\n    isOpen: PropTypes.bool,\r\n    headerTitle: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    isOpen: true,\r\n    componentStyle: {},\r\n    rootClass: '',\r\n  };\r\n\r\n  static InputDialog = ({ onSubmit, defaultValue, title, label, onClose }) => {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const onSubmitHandler = () => {\r\n      onSubmit(value);\r\n    };\r\n\r\n    return (\r\n      <div className=\"InputDialog\">\r\n        <SimpleDialog\r\n          headerTitle={title}\r\n          onClose={onClose}\r\n          onConfirm={onSubmitHandler}\r\n        >\r\n          <TextInput\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={event => setValue(event.target.value)}\r\n            label={label}\r\n          />\r\n        </SimpleDialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.isOpen && (\r\n          <div\r\n            className={`simpleDialog ${this.props.rootClass} `}\r\n            ref={this.props.componentRef}\r\n            style={this.props.componentStyle}\r\n          >\r\n            <form>\r\n              <div className=\"header\">\r\n                <span className=\"closeBtn\" onClick={this.onClose}>\r\n                  <span className=\"closeIcon\">x</span>\r\n                </span>\r\n                <h4 className=\"title\">{this.props.headerTitle}</h4>\r\n              </div>\r\n              <div className=\"content\">{this.props.children}</div>\r\n              <div className=\"footer\">\r\n                <button className=\"btn btn-default\" onClick={this.onClose}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={this.onConfirm}>\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  onClose = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.props.onClose();\r\n  };\r\n\r\n  onConfirm = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.props.onConfirm();\r\n  };\r\n}\r\n\r\nexport { SimpleDialog };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-modal';\r\nimport classNames from 'classnames';\r\n\r\nimport './OHIFModal.styl';\r\n\r\nconst customStyle = {\r\n  overlay: {\r\n    zIndex: 1071,\r\n    backgroundColor: 'rgb(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n};\r\n\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nconst OHIFModal = ({\r\n  className,\r\n  closeButton,\r\n  shouldCloseOnEsc,\r\n  isOpen,\r\n  fullscreen,\r\n  title,\r\n  onClose,\r\n  children,\r\n}) => {\r\n  const renderHeader = () => {\r\n    return (\r\n      title && (\r\n        <div className=\"OHIFModal__header\" data-cy=\"modal-header\">\r\n          <h4>{title}</h4>\r\n          {closeButton && (\r\n            <button data-cy=\"close-button\" onClick={onClose}>\r\n              ×\r\n            </button>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const classes = fullscreen\r\n    ? classNames('OHIFModal', className, 'OHIFModal-fullscreen')\r\n    : classNames('OHIFModal', className);\r\n\r\n  return (\r\n    <Modal\r\n      className={classes}\r\n      data-cy=\"modal\"\r\n      shouldCloseOnEsc={shouldCloseOnEsc}\r\n      isOpen={isOpen}\r\n      title={title}\r\n      style={customStyle}\r\n    >\r\n      <>\r\n        {renderHeader()}\r\n        <div className=\"OHIFModal__content\" data-cy=\"modal-content\">\r\n          {children}\r\n        </div>\r\n      </>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nOHIFModal.propTypes = {\r\n  className: PropTypes.string,\r\n  closeButton: PropTypes.bool,\r\n  shouldCloseOnEsc: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default OHIFModal;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './ContextMenu.css';\r\n\r\nconst ContextMenu = ({ items, onClick }) => {\r\n  return (\r\n    <div className=\"ContextMenu\" onContextMenu={e => e.preventDefault()}>\r\n      <ul>\r\n        {items.map((item, index) => (\r\n          <li key={index}>\r\n            <button className=\"form-action\" onClick={() => onClick(item)}>\r\n              <span key={index}>{item.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContextMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContextMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@ohif/ui';\r\n\r\nimport './ErrorPage.css';\r\n\r\nconst ErrorPage = ({ error, title, description, onRetry }) => {\r\n  return (\r\n    <div className=\"ErrorPage\">\r\n      {title && <h3>{title}</h3>}\r\n      <p>{description}</p>\r\n      <Icon\r\n        className=\"retry-icon\"\r\n        name=\"rotate-right\"\r\n        width=\"25px\"\r\n        height=\"25px\"\r\n        onClick={onRetry}\r\n      />\r\n      {error && (\r\n        <div className=\"error-container\">\r\n          <pre>{error.message}</pre>\r\n          <pre>{error.stack}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorPage.propTypes = {\r\n  error: PropTypes.object,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  onRetry: PropTypes.func\r\n};\r\n\r\nErrorPage.defaultProps = {\r\n  description: 'Oh snap, something went wrong, please try reloading',\r\n  onRetry: () => window.location.reload()\r\n};\r\n\r\nexport default ErrorPage;\r\n","import ErrorPage from './ErrorPage';\r\nexport default ErrorPage;\r\n","//  If you want to continue using CSS stylesheets and classes...\r\n//  https://github.com/airbnb/react-dates#initialize\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport './CustomDateRangePicker.css';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport moment from 'moment';\r\nimport i18n from '@ohif/i18n';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction CustomDateRangePicker(props) {\r\n  moment.locale(i18n.language); // using i18n in the date picker\r\n\r\n  const { t } = useTranslation('DatePicker');\r\n\r\n  const {\r\n    onDatesChange,\r\n    startDate,\r\n    endDate,\r\n    presets,\r\n    ...dateRangePickerProps\r\n  } = props;\r\n\r\n  const renderDatePresets = () => {\r\n    const { presets } = props;\r\n\r\n    return (\r\n      <div className=\"PresetDateRangePicker_panel\">\r\n        {presets.map(({ text, start, end }) => {\r\n          const isSelected = startDate === start && endDate === end;\r\n\r\n          return (\r\n            <button\r\n              key={text}\r\n              type=\"button\"\r\n              className={`PresetDateRangePicker_button ${\r\n                isSelected ? 'PresetDateRangePicker_button__selected' : ''\r\n              }`}\r\n              onClick={() =>\r\n                onDatesChange({\r\n                  startDate: start,\r\n                  endDate: end,\r\n                  preset: true,\r\n                })\r\n              }\r\n            >\r\n              {text}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  const renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\r\n    const containerStyle = {\r\n      margin: '0 5px',\r\n    };\r\n\r\n    const renderYearsOptions = () => {\r\n      const yearsRange = 20;\r\n      const options = [];\r\n\r\n      for (let i = 0; i < yearsRange; i++) {\r\n        const year = moment().year() - i;\r\n        options.push(<option value={year}>{year}</option>);\r\n      }\r\n\r\n      return options;\r\n    };\r\n\r\n    renderMonthElement.propTypes = {\r\n      onMonthSelect: PropTypes.func,\r\n      onYearSelect: PropTypes.func,\r\n    };\r\n\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <div style={containerStyle}>\r\n          <select\r\n            className=\"DateRangePicker_select\"\r\n            value={month.month()}\r\n            onChange={e => onMonthSelect(month, e.target.value)}\r\n          >\r\n            {moment.months().map((label, value) => (\r\n              <option key={value} value={value}>\r\n                {label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div style={containerStyle}>\r\n          {}\r\n          <select\r\n            className=\"DateRangePicker_select\"\r\n            value={month.year()}\r\n            onChange={e => onYearSelect(month, e.target.value)}\r\n          >\r\n            {renderYearsOptions()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      {...dateRangePickerProps}\r\n      startDate={startDate}\r\n      endDate={endDate}\r\n      renderCalendarInfo={renderDatePresets}\r\n      onDatesChange={onDatesChange}\r\n      renderMonthElement={renderMonthElement}\r\n      startDatePlaceholderText={t('Start Date')}\r\n      endDatePlaceholderText={t('End Date')}\r\n      phrases={{\r\n        closeDatePicker: t('Common:Close'),\r\n        clearDates: t('Clear dates'),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nCustomDateRangePicker.propTypes = {\r\n  presets: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      text: PropTypes.string,\r\n      start: PropTypes.required,\r\n      end: PropTypes.required,\r\n    })\r\n  ),\r\n  onDatesChange: PropTypes.func.isRequired,\r\n  startDate: PropTypes.instanceOf(Date),\r\n  endDate: PropTypes.instanceOf(Date),\r\n  month: PropTypes.instanceOf(Date),\r\n};\r\n\r\nexport default CustomDateRangePicker;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { isInclusivelyBeforeDay } from 'react-dates';\r\nimport CustomDateRangePicker from './CustomDateRangePicker.js';\r\nimport { Icon } from './../../elements/Icon';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst getDateEntry = (datePicked, rangeDatePicked) => {\r\n  return rangeDatePicked || datePicked || null;\r\n};\r\n\r\nconst getDateEntryFromRange = (today, numOfDays, edge = 'start') => {\r\n  if (typeof numOfDays !== 'number') {\r\n    return;\r\n  }\r\n\r\n  if (edge === 'end') {\r\n    return today;\r\n  } else {\r\n    today.subtract(numOfDays, 'days');\r\n  }\r\n};\r\n\r\nfunction TableSearchFilter(props) {\r\n  const {\r\n    meta,\r\n    values,\r\n    onSort,\r\n    onValueChange,\r\n    sortFieldName,\r\n    sortDirection,\r\n    // TODO: Rename\r\n    studyListDateFilterNumDays,\r\n  } = props;\r\n\r\n  const { studyDateTo, studyDateFrom } = values || {};\r\n  const [focusedInput, setFocusedInput] = useState(null);\r\n  const { t, ready: translationsAreReady } = useTranslation('Common');\r\n\r\n  const sortIcons = ['sort', 'sort-up', 'sort-down'];\r\n  const sortIconForSortField =\r\n    sortDirection === 'asc' ? sortIcons[1] : sortIcons[2];\r\n\r\n  const today = moment();\r\n  const lastWeek = moment().subtract(7, 'day');\r\n  const lastMonth = moment().subtract(1, 'month');\r\n\r\n  const defaultStartDate = getDateEntryFromRange(\r\n    today,\r\n    studyListDateFilterNumDays,\r\n    'start'\r\n  );\r\n  const defaultEndDate = getDateEntryFromRange(\r\n    today,\r\n    studyListDateFilterNumDays,\r\n    'end'\r\n  );\r\n\r\n  const studyDatePresets = [\r\n    {\r\n      text: t('Today'),\r\n      start: today,\r\n      end: today,\r\n    },\r\n    {\r\n      text: t('Last 7 days'),\r\n      start: lastWeek,\r\n      end: today,\r\n    },\r\n    {\r\n      text: t('Last 30 days'),\r\n      start: lastMonth,\r\n      end: today,\r\n    },\r\n  ];\r\n\r\n  return translationsAreReady\r\n    ? meta.map((field, i) => {\r\n        const { displayText, fieldName, inputType } = field;\r\n        const isSortField = sortFieldName === fieldName;\r\n        const sortIcon = isSortField ? sortIconForSortField : sortIcons[0];\r\n\r\n        return (\r\n          <th key={`${fieldName}-${i}`}>\r\n            <label\r\n              htmlFor={`filter-${fieldName}`}\r\n              onClick={() => onSort(fieldName)}\r\n            >\r\n              {`${displayText}`}\r\n              <Icon name={sortIcon} style={{ fontSize: '12px' }} />\r\n            </label>\r\n            {inputType === 'text' && (\r\n              <input\r\n                type=\"text\"\r\n                id={`filter-${fieldName}`}\r\n                className=\"form-control studylist-search\"\r\n                value={values[fieldName]}\r\n                onChange={e => onValueChange(fieldName, e.target.value)}\r\n              />\r\n            )}\r\n            {inputType === 'date-range' && (\r\n              // https://github.com/airbnb/react-dates\r\n              <CustomDateRangePicker\r\n                // Required\r\n                startDate={getDateEntry(studyDateFrom, defaultStartDate)}\r\n                startDateId=\"start-date\"\r\n                endDate={getDateEntry(studyDateTo, defaultEndDate)}\r\n                endDateId=\"end-date\"\r\n                // TODO: We need a dynamic way to determine which fields values to update\r\n                onDatesChange={({ startDate, endDate, preset = false }) => {\r\n                  onValueChange('studyDateFrom', startDate);\r\n                  onValueChange('studyDateTo', endDate);\r\n                }}\r\n                focusedInput={focusedInput}\r\n                onFocusChange={updatedVal => setFocusedInput(updatedVal)}\r\n                // Optional\r\n                numberOfMonths={1} // For med and small screens? 2 for large?\r\n                showClearDates={true}\r\n                anchorDirection=\"left\"\r\n                presets={studyDatePresets}\r\n                hideKeyboardShortcutsPanel={true}\r\n                isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\r\n              />\r\n            )}\r\n          </th>\r\n        );\r\n      })\r\n    : null;\r\n}\r\n\r\nTableSearchFilter.propTypes = {\r\n  meta: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      displayText: PropTypes.string.isRequired,\r\n      fieldName: PropTypes.string.isRequired,\r\n      inputType: PropTypes.oneOf(['text', 'date-range']).isRequired,\r\n      size: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  sortFieldName: PropTypes.string,\r\n  sortDirection: PropTypes.oneOf([null, 'asc', 'desc']),\r\n};\r\n\r\nTableSearchFilter.defaultProps = {};\r\n\r\nexport { TableSearchFilter };\r\nexport default TableSearchFilter;\r\n","import React from 'react';\r\nimport { Icon } from './../../elements/Icon';\r\n// TODO: useTranslation\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nfunction StudyListLoadingText({ t: translate }) {\r\n  return (\r\n    <div className=\"loading-text\">\r\n      {translate('Loading')}... <Icon name=\"circle-notch\" animation=\"pulse\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst connectedComponent = withTranslation('StudyListLoadingText')(\r\n  StudyListLoadingText\r\n);\r\n\r\nexport { connectedComponent as StudyListLoadingText };\r\n","import './StudyList.styl';\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport TableSearchFilter from './TableSearchFilter.js';\r\nimport PropTypes from 'prop-types';\r\nimport { StudyListLoadingText } from './StudyListLoadingText.js';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst getContentFromUseMediaValue = (\r\n  displaySize,\r\n  contentArrayMap,\r\n  defaultContent\r\n) => {\r\n  const content =\r\n    displaySize in contentArrayMap\r\n      ? contentArrayMap[displaySize]\r\n      : defaultContent;\r\n\r\n  return content;\r\n};\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nfunction StudyList(props) {\r\n  const {\r\n    isLoading,\r\n    hasError,\r\n    studies,\r\n    sort,\r\n    onSort: handleSort,\r\n    filterValues,\r\n    onFilterChange: handleFilterChange,\r\n    onSelectItem: handleSelectItem,\r\n    studyListDateFilterNumDays,\r\n    displaySize,\r\n  } = props;\r\n  const { t, ready: translationsAreReady } = useTranslation('StudyList');\r\n\r\n  const largeTableMeta = [\r\n    {\r\n      displayText: t('PatientName'),\r\n      fieldName: 'PatientName',\r\n      inputType: 'text',\r\n      size: 330,\r\n    },\r\n    {\r\n      displayText: t('MRN'),\r\n      fieldName: 'PatientID',\r\n      inputType: 'text',\r\n      size: 378,\r\n    },\r\n    {\r\n      displayText: t('AccessionNumber'),\r\n      fieldName: 'AccessionNumber',\r\n      inputType: 'text',\r\n      size: 180,\r\n    },\r\n    {\r\n      displayText: t('StudyDate'),\r\n      fieldName: 'StudyDate',\r\n      inputType: 'date-range',\r\n      size: 300,\r\n    },\r\n    {\r\n      displayText: t('Modality'),\r\n      fieldName: 'modalities',\r\n      inputType: 'text',\r\n      size: 114,\r\n    },\r\n    {\r\n      displayText: t('StudyDescription'),\r\n      fieldName: 'StudyDescription',\r\n      inputType: 'text',\r\n      size: 335,\r\n    },\r\n  ];\r\n\r\n  const mediumTableMeta = [\r\n    {\r\n      displayText: `${t('PatientName')} / ${t('MRN')}`,\r\n      fieldName: 'patientNameOrId',\r\n      inputType: 'text',\r\n      size: 250,\r\n    },\r\n    {\r\n      displayText: t('Description'),\r\n      fieldName: 'accessionOrModalityOrDescription',\r\n      inputType: 'text',\r\n      size: 350,\r\n    },\r\n    {\r\n      displayText: t('StudyDate'),\r\n      fieldName: 'StudyDate',\r\n      inputType: 'date-range',\r\n      size: 300,\r\n    },\r\n  ];\r\n\r\n  const smallTableMeta = [\r\n    {\r\n      displayText: t('Search'),\r\n      fieldName: 'allFields',\r\n      inputType: 'text',\r\n      size: 100,\r\n    },\r\n  ];\r\n\r\n  const tableMeta = getContentFromUseMediaValue(\r\n    displaySize,\r\n    { large: largeTableMeta, medium: mediumTableMeta, small: smallTableMeta },\r\n    smallTableMeta\r\n  );\r\n\r\n  const totalSize = tableMeta\r\n    .map(field => field.size)\r\n    .reduce((prev, next) => prev + next);\r\n\r\n  return translationsAreReady ? (\r\n    <table className=\"table table--striped table--hoverable\">\r\n      <colgroup>\r\n        {tableMeta.map((field, i) => {\r\n          const size = field.size;\r\n          const percentWidth = (size / totalSize) * 100.0;\r\n\r\n          return <col key={i} style={{ width: `${percentWidth}%` }} />;\r\n        })}\r\n      </colgroup>\r\n      <thead className=\"table-head\">\r\n        <tr className=\"filters\">\r\n          <TableSearchFilter\r\n            meta={tableMeta}\r\n            values={filterValues}\r\n            onSort={handleSort}\r\n            onValueChange={handleFilterChange}\r\n            sortFieldName={sort.fieldName}\r\n            sortDirection={sort.direction}\r\n            studyListDateFilterNumDays={studyListDateFilterNumDays}\r\n          />\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"table-body\" data-cy=\"study-list-results\">\r\n        {/* I'm not in love with this approach, but it's the quickest way for now\r\n         *\r\n         * - Display different content based on loading, empty, results state\r\n         *\r\n         * This is not ideal because it create a jump in focus. For loading especially,\r\n         * We should keep our current results visible while we load the new ones.\r\n         */}\r\n        {/* LOADING */}\r\n        {isLoading && (\r\n          <tr className=\"no-hover\">\r\n            <td colSpan={tableMeta.length}>\r\n              <StudyListLoadingText />\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {!isLoading && hasError && (\r\n          <tr className=\"no-hover\">\r\n            <td colSpan={tableMeta.length}>\r\n              <div className=\"notFound\">\r\n                {t('There was an error fetching studies')}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {/* EMPTY */}\r\n        {!isLoading && !studies.length && (\r\n          <tr className=\"no-hover\">\r\n            <td colSpan={tableMeta.length}>\r\n              <div className=\"notFound\">{t('No matching results')}</div>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {!isLoading &&\r\n          studies.map((study, index) => (\r\n            <TableRow\r\n              key={`${study.StudyInstanceUID}-${index}`}\r\n              onClick={StudyInstanceUID => handleSelectItem(StudyInstanceUID)}\r\n              AccessionNumber={study.AccessionNumber || ''}\r\n              modalities={study.modalities}\r\n              PatientID={study.PatientID || ''}\r\n              PatientName={study.PatientName || ''}\r\n              StudyDate={study.StudyDate}\r\n              StudyDescription={study.StudyDescription || ''}\r\n              StudyInstanceUID={study.StudyInstanceUID}\r\n              displaySize={displaySize}\r\n            />\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  ) : null;\r\n}\r\n\r\nStudyList.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  hasError: PropTypes.bool.isRequired,\r\n  studies: PropTypes.array.isRequired,\r\n  onSelectItem: PropTypes.func.isRequired,\r\n  // ~~ SORT\r\n  sort: PropTypes.shape({\r\n    fieldName: PropTypes.string,\r\n    direction: PropTypes.oneOf(['desc', 'asc', null]),\r\n  }).isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  // ~~ FILTERS\r\n  filterValues: PropTypes.shape({\r\n    PatientName: PropTypes.string.isRequired,\r\n    PatientID: PropTypes.string.isRequired,\r\n    AccessionNumber: PropTypes.string.isRequired,\r\n    StudyDate: PropTypes.string.isRequired,\r\n    modalities: PropTypes.string.isRequired,\r\n    StudyDescription: PropTypes.string.isRequired,\r\n    patientNameOrId: PropTypes.string.isRequired,\r\n    accessionOrModalityOrDescription: PropTypes.string.isRequired,\r\n    allFields: PropTypes.string.isRequired,\r\n    studyDateTo: PropTypes.any,\r\n    studyDateFrom: PropTypes.any,\r\n  }).isRequired,\r\n  onFilterChange: PropTypes.func.isRequired,\r\n  studyListDateFilterNumDays: PropTypes.number,\r\n  displaySize: PropTypes.string,\r\n};\r\n\r\nStudyList.defaultProps = {};\r\n\r\nfunction TableRow(props) {\r\n  const {\r\n    AccessionNumber,\r\n    isHighlighted,\r\n    modalities,\r\n    PatientID,\r\n    PatientName,\r\n    StudyDate,\r\n    StudyDescription,\r\n    StudyInstanceUID,\r\n    onClick: handleClick,\r\n    displaySize,\r\n  } = props;\r\n\r\n  const { t } = useTranslation('StudyList');\r\n\r\n  const largeRowTemplate = (\r\n    <tr\r\n      onClick={() => handleClick(StudyInstanceUID)}\r\n      className={classNames({ active: isHighlighted })}\r\n    >\r\n      <td className={classNames({ 'empty-value': !PatientName })}>\r\n        {PatientName || `(${t('Empty')})`}\r\n      </td>\r\n      <td>{PatientID}</td>\r\n      <td>{AccessionNumber}</td>\r\n      <td>{StudyDate}</td>\r\n      <td className={classNames({ 'empty-value': !modalities })}>\r\n        {modalities || `(${t('Empty')})`}\r\n      </td>\r\n      <td>{StudyDescription}</td>\r\n    </tr>\r\n  );\r\n\r\n  const mediumRowTemplate = (\r\n    <tr\r\n      onClick={() => handleClick(StudyInstanceUID)}\r\n      className={classNames({ active: isHighlighted })}\r\n    >\r\n      <td className={classNames({ 'empty-value': !PatientName })}>\r\n        {PatientName || `(${t('Empty')})`}\r\n        <div style={{ color: '#60656f' }}>{PatientID}</div>\r\n      </td>\r\n      <td>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {/* DESCRIPTION */}\r\n          <div\r\n            className=\"hide-xs\"\r\n            style={{\r\n              whiteSpace: 'pre-wrap',\r\n              flexGrow: 1,\r\n            }}\r\n          >\r\n            {StudyDescription}\r\n          </div>\r\n\r\n          {/* MODALITY & ACCESSION */}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              maxWidth: '80px',\r\n              width: '80px',\r\n            }}\r\n          >\r\n            <div\r\n              className={classNames({\r\n                modalities: modalities,\r\n                'empty-value': !modalities,\r\n              })}\r\n              aria-label={modalities}\r\n              title={modalities}\r\n            >\r\n              {modalities || `(${t('Empty')})`}\r\n            </div>\r\n            <div\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                overflow: 'hidden',\r\n              }}\r\n              aria-label={AccessionNumber}\r\n              title={AccessionNumber}\r\n            >\r\n              {AccessionNumber}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n      {/* DATE */}\r\n      <td style={{ textAlign: 'center' }}>{StudyDate}</td>\r\n    </tr>\r\n  );\r\n\r\n  const smallRowTemplate = (\r\n    <tr\r\n      onClick={() => handleClick(StudyInstanceUID)}\r\n      className={classNames({ active: isHighlighted })}\r\n    >\r\n      <td style={{ position: 'relative', overflow: 'hidden' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {/* NAME AND ID */}\r\n          <div\r\n            className={classNames({ 'empty-value': !PatientName })}\r\n            style={{ width: '150px', minWidth: '150px' }}\r\n          >\r\n            <div style={{ fontWeight: 500, paddingTop: '3px' }}>\r\n              {PatientName || `(${t('Empty')})`}\r\n            </div>\r\n            <div style={{ color: '#60656f' }}>{PatientID}</div>\r\n          </div>\r\n\r\n          {/* DESCRIPTION */}\r\n          <div\r\n            className=\"hide-xs\"\r\n            style={{\r\n              whiteSpace: 'pre-wrap',\r\n              flexGrow: 1,\r\n              paddingLeft: '35px',\r\n            }}\r\n          >\r\n            {StudyDescription}\r\n          </div>\r\n\r\n          {/* MODALITY & DATE */}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              maxWidth: '80px',\r\n              width: '80px',\r\n            }}\r\n          >\r\n            <div\r\n              className={classNames({\r\n                modalities: modalities,\r\n                'empty-value': !modalities,\r\n              })}\r\n              aria-label={modalities}\r\n              title={modalities}\r\n            >\r\n              {modalities || `(${t('Empty')})`}\r\n            </div>\r\n            <div>{StudyDate}</div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  const rowTemplate = getContentFromUseMediaValue(\r\n    displaySize,\r\n    {\r\n      large: largeRowTemplate,\r\n      medium: mediumRowTemplate,\r\n      small: smallRowTemplate,\r\n    },\r\n    smallRowTemplate\r\n  );\r\n\r\n  return rowTemplate;\r\n}\r\n\r\nTableRow.propTypes = {\r\n  AccessionNumber: PropTypes.string.isRequired,\r\n  isHighlighted: PropTypes.bool,\r\n  modalities: PropTypes.string,\r\n  PatientID: PropTypes.string.isRequired,\r\n  PatientName: PropTypes.string.isRequired,\r\n  StudyDate: PropTypes.string.isRequired,\r\n  StudyDescription: PropTypes.string.isRequired,\r\n  StudyInstanceUID: PropTypes.string.isRequired,\r\n  displaySize: PropTypes.string,\r\n};\r\n\r\nTableRow.defaultProps = {\r\n  isHighlighted: false,\r\n};\r\n\r\nexport { StudyList };\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './PaginationArea.styl';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nclass TablePagination extends PureComponent {\r\n  static defaultProps = {\r\n    pageOptions: [5, 10, 25, 50, 100],\r\n    rowsPerPage: 25,\r\n    currentPage: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    /* Values to show in \"Rows per page\" select dropdown */\r\n    pageOptions: PropTypes.array,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    nextPageFunc: PropTypes.func,\r\n    prevPageFunc: PropTypes.func,\r\n    onRowsPerPageChange: PropTypes.func,\r\n    recordCount: PropTypes.number.isRequired,\r\n  };\r\n\r\n  nextPage = () => {\r\n    this.props.nextPageFunc(this.props.currentPage);\r\n  };\r\n\r\n  prevPage = () => {\r\n    this.props.prevPageFunc(this.props.currentPage);\r\n  };\r\n\r\n  onRowsPerPageChange = event => {\r\n    this.props.onRowsPerPageChange(parseInt(event.target.value));\r\n  };\r\n\r\n  renderPaginationButtons() {\r\n    return (\r\n      <div className=\"col-xs-8 col-sm-9 col-md-9\">\r\n        <div className=\"form-inline form-group page-buttons noselect\">\r\n          <React.Fragment>\r\n            <ul className=\"pagination-control no-margins\">\r\n              <li className=\"page-item prev\">\r\n                <button\r\n                  onClick={this.prevPage}\r\n                  disabled={this.props.currentPage === 0}\r\n                  className=\"btn page-link\"\r\n                >\r\n                  {this.props.t('Previous')}\r\n                </button>\r\n              </li>\r\n              <li className=\"page-item next\">\r\n                <button\r\n                  onClick={this.nextPage}\r\n                  disabled={\r\n                    this.props.recordCount === 0 ||\r\n                    this.props.rowsPerPage > this.props.recordCount\r\n                  }\r\n                  className=\"btn page-link\"\r\n                >\r\n                  {this.props.t('Next')}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRowsPerPageDropdown() {\r\n    return (\r\n      <div className=\"form-inline form-group rows-per-page\">\r\n        <span>{this.props.t('Show')}</span>\r\n        <select\r\n          onChange={this.onRowsPerPageChange}\r\n          defaultValue={this.props.rowsPerPage}\r\n        >\r\n          {this.props.pageOptions.map(pageNumber => {\r\n            return (\r\n              <option key={pageNumber} value={pageNumber}>\r\n                {pageNumber}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <span>{this.props.t('RowsPerPage')}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pagination-area\">\r\n        <div className=\"rows-dropdown\">{this.renderRowsPerPageDropdown()}</div>\r\n        <div className=\"pagination-buttons\">\r\n          <div className=\"form-inline form-group page-number pull-right\">\r\n            {this.renderPaginationButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedComponent = withTranslation('Common')(TablePagination);\r\nexport { connectedComponent as TablePagination };\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport { Icon } from './../../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PageToolbar extends PureComponent {\r\n  static propTypes = {\r\n    onImport: PropTypes.func,\r\n  };\r\n\r\n  onImport = event => {\r\n    if (this.props.onImport) {\r\n      this.props.onImport(event);\r\n    }\r\n  };\r\n\r\n  getImportTool() {\r\n    if (this.props.onImport) {\r\n      return (\r\n        <div className=\"addNewStudy btn-file\">\r\n          <label\r\n            htmlFor=\"btnImport\"\r\n            style={{ width: '18px' }}\r\n            onClick={this.onImport}\r\n          >\r\n            <Icon name=\"plus\" />\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"studylistToolbar\">{this.getImportTool()}</div>;\r\n  }\r\n}\r\n\r\nexport { PageToolbar };\r\n","import './ExpandableToolMenu.styl';\r\n\r\nimport { OverlayTrigger } from '../components/overlayTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ToolbarButton from './ToolbarButton.js';\r\nimport { Tooltip } from '../components/tooltip';\r\n\r\nclass ExpandableToolMenu extends React.Component {\r\n  static propTypes = {\r\n    /** Button label */\r\n    label: PropTypes.string.isRequired,\r\n    /** Array of buttons to render when expanded */\r\n    buttons: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.string.isRequired,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n      })\r\n    ).isRequired,\r\n    icon: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n      }),\r\n    ]),\r\n    onGroupMenuClick: PropTypes.func,\r\n    activeCommand: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    buttons: [],\r\n    icon: 'ellipse-circle',\r\n    label: 'More',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false,\r\n    };\r\n  }\r\n\r\n  toolbarMenuOverlay = () => (\r\n    <Tooltip\r\n      placement=\"bottom\"\r\n      className=\"tooltip-toolbar-overlay\"\r\n      id={`${Math.random()}_tooltip-toolbar-overlay}`}\r\n    >\r\n      {this.getButtons()}\r\n    </Tooltip>\r\n  );\r\n\r\n  getButtons = () => {\r\n    return this.props.buttons.map((button, index) => {\r\n      return (\r\n        <ToolbarButton\r\n          key={index}\r\n          {...button}\r\n          isActive={button.id === this.props.activeCommand}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  isActive = () => {\r\n    let isActive = false;\r\n    if (this.props.activeCommand) {\r\n      this.props.buttons.forEach(button => {\r\n        if (this.props.activeCommand === button.id) {\r\n          isActive = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return isActive;\r\n  };\r\n\r\n  activeIcon = () => {\r\n    if (this.props.activeCommand) {\r\n      return (\r\n        this.props.buttons.find(btn => this.props.activeCommand === btn.id)\r\n          .icon || this.props.icon\r\n      );\r\n    }\r\n\r\n    return this.props.icon;\r\n  };\r\n\r\n  onExpandableToolClick = () => {\r\n    if (this.props.onGroupMenuClick) {\r\n      this.props.onGroupMenuClick();\r\n    }\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded,\r\n    });\r\n  };\r\n\r\n  onOverlayHide = () => {\r\n    this.setState({\r\n      isExpanded: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const getToolBarButtonComponent = () => {\r\n      return (\r\n        <ToolbarButton\r\n          key=\"menu-button\"\r\n          type=\"tool\"\r\n          label={this.props.label}\r\n          icon={this.activeIcon()}\r\n          className={'toolbar-button expandableToolMenu'}\r\n          isActive={this.isActive()}\r\n          isExpandable={true}\r\n          isExpanded={this.state.isExpanded}\r\n        />\r\n      );\r\n    };\r\n\r\n    const toolbarComponent = getToolBarButtonComponent();\r\n\r\n    return (\r\n      <OverlayTrigger\r\n        key=\"menu-button\"\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        rootClose={true}\r\n        handleHide={this.onOverlayHide}\r\n        onClick={this.onExpandableToolClick}\r\n        overlay={this.toolbarMenuOverlay()}\r\n      >\r\n        {toolbarComponent}\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpandableToolMenu;\r\n","import './ToolbarSection.styl';\r\n\r\nimport React, { PureComponent } from 'react';\r\n\r\nimport ExpandableToolMenu from '../../viewer/ExpandableToolMenu';\r\nimport PropTypes from 'prop-types';\r\nimport ToolbarButton from '../../viewer/ToolbarButton';\r\nimport classnames from 'classnames';\r\n\r\nclass ToolbarSection extends PureComponent {\r\n  static defaultProps = {\r\n    className: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    buttons: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.string.isRequired,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n        /** Optional: Expandable Tool Menu */\r\n        buttons: PropTypes.arrayOf(PropTypes.shape({})),\r\n      })\r\n    ).isRequired,\r\n    /** Array of string button ids that should show as active */\r\n    activeButtons: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    /** Class for toolbar section container */\r\n    className: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    const items = this.props.buttons.map((button, index) => {\r\n      if (button.buttons && Array.isArray(button.buttons)) {\r\n        return (\r\n          <ExpandableToolMenu\r\n            key={`expandable-${index}`}\r\n            {...button}\r\n            activeCommand={button.activeButton}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ToolbarButton\r\n            key={index}\r\n            {...button}\r\n            isActive={this.props.activeButtons.includes(button.id)}\r\n          />\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className={classnames('ToolbarSection', this.props.className)}>\r\n        {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ToolbarSection };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport './ErrorFallback.css';\r\n\r\nconst ErrorFallback = ({ error, componentStack, resetErrorBoundary }) => {\r\n  return (\r\n    <div className=\"ErrorFallback\" role=\"alert\">\r\n      <p>Something went wrong.</p>\r\n      <pre>{error.message}</pre>\r\n      <pre>{componentStack}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OHIFErrorBoundary = ({\r\n  context = 'OHIF',\r\n  onReset = () => { },\r\n  onError = () => { },\r\n  fallbackComponent,\r\n  children,\r\n}) => {\r\n  const onErrorHandler = (error, componentStack) => {\r\n    console.error(`${context} Error Boundary`, error, componentStack);\r\n    onError(error, componentStack);\r\n  };\r\n\r\n  const onResetHandler = () => {\r\n    onReset();\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      FallbackComponent={fallbackComponent || ErrorFallback}\r\n      onReset={onResetHandler}\r\n      onError={onErrorHandler}\r\n    >\r\n      {children}\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nOHIFErrorBoundary.propTypes = {\r\n  context: PropTypes.string,\r\n  onReset: PropTypes.func,\r\n  onError: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n  fallbackComponent: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\r\n};\r\n\r\nexport default OHIFErrorBoundary;\r\n","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport isEqual from 'lodash.isequal';\r\n/**\r\n * Get display size value for matched mediaQueryList\r\n * @param {MediaQueryList[]} mediaQueryMap - Array of mappings, containing MediaQueryLists\r\n * @param {Array} mediaTypesAliases - Array of strings representing each mediaQueryAlias.\r\n * @param {string} defaultDisplaySize - default display size value. Fallback value.\r\n */\r\nconst getDisplaySize = (\r\n  mediaQueryMap,\r\n  mediaTypesAliases,\r\n  defaultDisplaySize\r\n) => {\r\n  if ((!mediaTypesAliases && !defaultDisplaySize) || !mediaQueryMap) {\r\n    return;\r\n  }\r\n\r\n  // Get index of first media query that matches\r\n  const index = mediaQueryMap.findIndex(mql => mql.matches);\r\n\r\n  // Return related value or defaultDisplaySize if none\r\n  return index >= 0 && typeof mediaTypesAliases[index] !== 'undefined'\r\n    ? mediaTypesAliases[index]\r\n    : defaultDisplaySize;\r\n};\r\n/**\r\n * Map each window MediaQueryLists\r\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\r\n */\r\nconst getMediaQueryMap = mediaQueriesStringList => {\r\n  return (\r\n    mediaQueriesStringList &&\r\n    mediaQueriesStringList.map(q => window.matchMedia(q))\r\n  );\r\n};\r\n\r\nconst getMediaTypeAlias = (mediaQuery, state) => {\r\n  const { media } = mediaQuery;\r\n  const { mediaQueriesStringList, mediaTypesAliases } = state;\r\n\r\n  const index = mediaQueriesStringList.findIndex(originalMediaQuery => {\r\n    const { media: toCompareMedia } = window.matchMedia(originalMediaQuery);\r\n    return toCompareMedia === media;\r\n  });\r\n\r\n  return mediaTypesAliases[index];\r\n};\r\n\r\n/**\r\n * Hook to get current displaySize value.\r\n *\r\n * Its state changes and also displaySize value changes in case viewport is resized.\r\n * Its state changes in case mediaQueriesStringList or mediaTypesAliases changes.\r\n *\r\n * Current hook only offers displayMedia size, it wont expose method to change its state.\r\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\r\n * @param {Array} mediaTypesAliases - array of aliases. Each value represents one mediaQueryList from array mediaQueriesStringList\r\n * @param {String} defaultMediaType - default mediaTypeAlias\r\n * @returns {String} current displayMedia size based on viewport size.\r\n *\r\n * @example <caption>Example to getDisplayMedia Size based on viewport size</caption>\r\n *\r\n *    const displaySize = useMedia(\r\n *    ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\r\n *    // Value to return for matched media query\r\n *    ['large', 'medium', 'small'],\r\n *      // Default value\r\n *    'medium');\r\n *\r\n *  const currentDisplaySize = useMedia();\r\n *\r\n */\r\nconst useMedia = (\r\n  mediaQueriesStringList,\r\n  mediaTypesAliases,\r\n  defaultMediaType\r\n) => {\r\n  // MediaQuery.state is the source of truth. This hook will be dependent on it.\r\n  const [state, setState] = useState(() => {\r\n    const _mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\r\n    const _displaySize = getDisplaySize(\r\n      _mediaQueryMap,\r\n      mediaTypesAliases,\r\n      defaultMediaType\r\n    );\r\n\r\n    return {\r\n      mediaQueryMap: _mediaQueryMap,\r\n      displaySize: _displaySize,\r\n      mediaQueriesStringList,\r\n      mediaTypesAliases,\r\n      defaultMediaType,\r\n    };\r\n  });\r\n  let mount = useRef(false);\r\n\r\n  const updateDisplaySize = displaySize => {\r\n    if (mount.current) {\r\n      setState({ ...state, displaySize });\r\n    }\r\n  };\r\n\r\n  const updateState = value => {\r\n    const {\r\n      mediaQueriesStringList,\r\n      mediaTypesAliases,\r\n      defaultMediaType,\r\n    } = value;\r\n\r\n    const mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\r\n    const displaySize = getDisplaySize(\r\n      mediaQueryMap,\r\n      mediaTypesAliases,\r\n      defaultMediaType\r\n    );\r\n    // immutable state\r\n    // last chance to avoid setState of unmount component\r\n    if (mount.current) {\r\n      setState({\r\n        ...state,\r\n        mediaQueriesStringList,\r\n        mediaTypesAliases,\r\n        displaySize,\r\n        mediaQueryMap,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onMediaQueryChange = useCallback(mediaQuery => {\r\n    if (mediaQuery.matches) {\r\n      const nextDisplaySize = getMediaTypeAlias(mediaQuery, state);\r\n      updateDisplaySize(nextDisplaySize);\r\n    }\r\n  }, []);\r\n\r\n  // update state of MediaQuery in case mediaQueriesStringList or mediaTypesAliases has changed\r\n  useEffect(() => {\r\n    const {\r\n      mediaQueriesStringList: _mediaQueriesStringList,\r\n      mediaTypesAliases: _mediaTypesAliases,\r\n    } = state;\r\n    if (\r\n      (mediaQueriesStringList &&\r\n        !isEqual(mediaQueriesStringList, _mediaQueriesStringList)) ||\r\n      (mediaTypesAliases && !isEqual(mediaTypesAliases, _mediaTypesAliases))\r\n    ) {\r\n      updateState({\r\n        mediaQueriesStringList,\r\n        mediaTypesAliases,\r\n      });\r\n    }\r\n  }, [mediaQueriesStringList, mediaTypesAliases]);\r\n\r\n  // re-assign window resizing listeners\r\n  useEffect(() => {\r\n    const { mediaQueryMap } = state;\r\n    mediaQueryMap.forEach(mql => {\r\n      mql.removeListener(onMediaQueryChange);\r\n      mql.addListener(onMediaQueryChange);\r\n    });\r\n  }, [state.mediaQueryMap]);\r\n\r\n  useEffect(() => {\r\n    mount.current = true;\r\n\r\n    return () => {\r\n      mount.current = false;\r\n      const { mediaQueryMap } = state;\r\n      mediaQueryMap.forEach(mql => {\r\n        mql.removeListener(onMediaQueryChange);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return state.displaySize;\r\n};\r\n\r\nexport { useMedia };\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * A hook to set a value\r\n *\r\n * @param {*} value - A value to \"set\"\r\n * @param {number} delay - The debounce delay for setting the value\r\n * @returns\r\n */\r\nexport default function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time useEffect is\r\n      // re-called. useEffect will only be re-called if value changes (see the\r\n      // inputs array below).\r\n      //\r\n      // This is how we prevent debouncedValue from changing if value is changed\r\n      // within the delay period. Timeout gets cleared and restarted.\r\n      //\r\n      // To put it in context, if the user is typing within our app's search\r\n      // box, we don't want the debouncedValue to update until they've stopped\r\n      // typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you need to be\r\n    // able to change that dynamically.\r\n    [value]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import './Select.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: this.props.value,\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ value });\r\n    if (this.props.onChange) this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select\r\n        className=\"select-ohif\"\r\n        value={this.state.selected}\r\n        onChange={this.handleChange}\r\n      >\r\n        {this.props.options.map(({ key, value }) => {\r\n          return (\r\n            <option key={key} value={value}>\r\n              {key}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      key: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Select;\r\n","import './Select.css';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        key: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ value });\r\n    if (this.props.onChange) this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"select-ohif-container\">\r\n        {this.props.label && (\r\n          <label className=\"select-ohif-label\" htmlFor={this.id}>{this.props.label}</label>\r\n        )}\r\n        <select className=\"form-control select-ohif\" {...this.props}>\r\n          {this.props.options.map(({ key, value }) => {\r\n            return (\r\n              <option key={key} value={value}>\r\n                {key}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Select };\r\n","import './Label.css';\r\n\r\nimport React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Label extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: this.props.text };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"label-ohif\" htmlFor={this.props.for}>\r\n        {this.props.text}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nLabel.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  for: PropTypes.string,\r\n};\r\n\r\nexport { Label };\r\n","import './Range.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Range extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: props.value || 0 };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    if (this.props.onChange) this.props.onChange(event);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"range\"\r\n          value={this.state.value}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          step={this.props.step || 1}\r\n          onChange={this.handleChange}\r\n          id={this.props.id}\r\n          className=\"range\"\r\n        />\r\n        {this.props.showPercentage && <span>{`${this.state.value}%`}</span>}\r\n        {this.props.showValue && (\r\n          <span>\r\n            {this.props.valueRenderer\r\n              ? this.props.valueRenderer(this.state.value)\r\n              : this.state.value}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRange.propTypes = {\r\n  value: PropTypes.number,\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  step: PropTypes.number,\r\n  id: PropTypes.string,\r\n  valueRenderer: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  showPercentage: PropTypes.bool,\r\n  showValue: PropTypes.bool,\r\n};\r\n\r\nRange.defaultProps = {\r\n  showPercentage: false,\r\n  showValue: false,\r\n};\r\n\r\nexport { Range };\r\n","import './TextArea.css';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TextArea extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: this.props.value };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n    if (this.props.onChange) this.props.onChange();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea\r\n        className=\"textarea-ohif\"\r\n        value={this.state.value}\r\n        Rows={this.props.Rows}\r\n        cols={this.props.cols}\r\n        onChange={this.handleChange}\r\n        id={this.props.id}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  value: PropTypes.string,\r\n  Rows: PropTypes.number,\r\n  cols: PropTypes.number,\r\n  id: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { TextArea };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextInput.css';\r\n\r\nclass TextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    id: PropTypes.string,\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: '',\r\n    id: `TextInput-${new Date().toTimeString()}`,\r\n    label: undefined,\r\n    type: 'text',\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-ohif-container\">\r\n        {this.props.label && (\r\n          <label className=\"input-ohif-label\" htmlFor={this.props.id}>{this.props.label}</label>\r\n        )}\r\n        <input\r\n          type={this.props.type}\r\n          id={this.props.id}\r\n          className=\"form-control input-ohif\"\r\n          {...this.props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TextInput };\r\n","import './DropdownMenu.css';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Icon } from '../Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DropdownMenu extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    titleElement: PropTypes.node,\r\n    title: PropTypes.string,\r\n    align: PropTypes.oneOf(['left', 'center', 'right']),\r\n    /** Items to render in the select's drop down */\r\n    list: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        icon: PropTypes.object,\r\n        onClick: PropTypes.func,\r\n        link: PropTypes.string,\r\n      })\r\n    ),\r\n  };\r\n\r\n  getListItems = () => {\r\n    const { list, align } = this.props;\r\n\r\n    return list.map(({ icon, title, link, onClick }, key) => {\r\n      if (link) {\r\n        return (\r\n          <a\r\n            href={link || '#'}\r\n            key={key}\r\n            className=\"dd-item\"\r\n            onClick={() => this.handleOnClick(onClick)}\r\n          >\r\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\r\n            <span>{title}</span>\r\n          </a>\r\n        );\r\n      } else {\r\n        return (\r\n          <button\r\n            key={key}\r\n            className=\"dd-item\"\r\n            data-cy=\"dd-item-menu\"\r\n            onClick={() => this.handleOnClick(onClick)}\r\n          >\r\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\r\n            <span>{title}</span>\r\n          </button>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  renderList = () => {\r\n    const { align } = this.props;\r\n\r\n    if (!this.state.open) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={`dd-menu-list ${align || 'left'}`}>\r\n        {this.getListItems()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleOnClick = onClick => {\r\n    this.toggleList();\r\n\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  handleMouseClick = e => {\r\n    if (this.node.contains(e.target)) {\r\n      return;\r\n    }\r\n\r\n    this.toggleList();\r\n  };\r\n\r\n  renderTitleElement = () => {\r\n    const { titleElement, title } = this.props;\r\n\r\n    if (titleElement) {\r\n      return titleElement;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"dd-title\">{title}</span>\r\n        <span className=\"dd-caret-down\" />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  toggleList = () => {\r\n    const { open } = this.state;\r\n    let state = true;\r\n\r\n    document.addEventListener('mousedown', this.handleMouseClick, false);\r\n\r\n    if (open) {\r\n      document.removeEventListener('mousedown', this.handleMouseClick, false);\r\n      state = false;\r\n    }\r\n\r\n    this.setState({\r\n      open: state,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"dd-menu\"\r\n        data-cy=\"options-menu\"\r\n        ref={node => (this.node = node)}\r\n      >\r\n        <div className=\"dd-menu-toggle\" onClick={this.toggleList}>\r\n          {this.renderTitleElement()}\r\n        </div>\r\n\r\n        {this.renderList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { DropdownMenu };\r\n","import React, { Component } from 'react';\r\n\r\nimport { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PlayClipButton extends Component {\r\n  static propTypes = {\r\n    isPlaying: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    isPlaying: false,\r\n  };\r\n\r\n  render() {\r\n    const iconName = this.props.isPlaying ? 'stop' : 'play';\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <button\r\n          id=\"playClip\"\r\n          type=\"button\"\r\n          className=\"imageViewerCommand btn btn-sm btn-default\"\r\n          data-container=\"body\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"Play/Stop Clip\"\r\n        >\r\n          <Icon name={iconName} />\r\n        </button>\r\n        <button\r\n          id=\"toggleCineDialog\"\r\n          type=\"button\"\r\n          className=\"imageViewerCommand btn btn-sm btn-default\"\r\n          data-container=\"body\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"Toggle CINE Dialog\"\r\n        >\r\n          <Icon name=\"youtube\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Icon } from './../elements/Icon';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport function SimpleToolbarButton(props) {\r\n  const className = classnames(props.className, 'btn btn-sm btn-default');\r\n\r\n  return (\r\n    <button\r\n      id={props.id}\r\n      type=\"button\"\r\n      className={className}\r\n      data-container=\"body\"\r\n      data-toggle=\"tooltip\"\r\n      data-placement=\"bottom\"\r\n      title={props.title}\r\n    >\r\n      {props.icon && <Icon name={props.icon} />}\r\n    </button>\r\n  );\r\n}\r\n\r\nSimpleToolbarButton.propTypes = {\r\n  icon: PropTypes.string,\r\n  title: PropTypes.string,\r\n  className: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\nexport default SimpleToolbarButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SimpleToolbarButton from './SimpleToolbarButton';\r\nimport PlayClipButton from './PlayClipButton';\r\nimport { LayoutButton } from './../components/layoutButton';\r\n\r\n// TODO: This should not be built in the `@ohif/ui` component\r\nfunction getDefaultButtonData() {\r\n  var buttonData = [\r\n    {\r\n      id: 'wwwc',\r\n      title: 'WW/WC',\r\n      className: 'imageViewerTool',\r\n      icon: 'sun',\r\n    },\r\n    {\r\n      id: 'wwwcRegion',\r\n      title: 'Window by Region',\r\n      className: 'imageViewerTool',\r\n      icon: 'stop',\r\n    },\r\n    {\r\n      id: 'magnify',\r\n      title: 'Magnify',\r\n      className: 'imageViewerTool',\r\n      icon: 'circle',\r\n    },\r\n    {\r\n      id: 'annotate',\r\n      title: 'Annotation',\r\n      className: 'imageViewerTool',\r\n      icon: 'arrows-alt-h',\r\n    },\r\n    {\r\n      id: 'invert',\r\n      title: 'Invert',\r\n      className: 'imageViewerCommand',\r\n      icon: 'adjust',\r\n    },\r\n    {\r\n      id: 'zoom',\r\n      title: 'Zoom',\r\n      className: 'imageViewerTool',\r\n      icon: 'search-plus',\r\n    },\r\n    {\r\n      id: 'pan',\r\n      title: 'Pan',\r\n      className: 'imageViewerTool',\r\n      icon: 'arrows',\r\n    },\r\n    {\r\n      id: 'stackScroll',\r\n      title: 'Stack Scroll',\r\n      className: 'imageViewerTool',\r\n      icon: 'bars',\r\n    },\r\n    {\r\n      id: 'length',\r\n      title: 'Length Measurement',\r\n      className: 'imageViewerTool',\r\n      icon: 'arrows-alt-v',\r\n    },\r\n    {\r\n      id: 'angle',\r\n      title: 'Angle Measurement',\r\n      className: 'imageViewerTool',\r\n      icon: 'fa fa-angle-left',\r\n    },\r\n    {\r\n      id: 'dragProbe',\r\n      title: 'Pixel Probe',\r\n      className: 'imageViewerTool',\r\n      icon: 'fa fa-dot-circle-o',\r\n    },\r\n    {\r\n      id: 'ellipticalRoi',\r\n      title: 'Elliptical ROI',\r\n      className: 'imageViewerTool',\r\n      icon: 'circle-o',\r\n    },\r\n    {\r\n      id: 'rectangleRoi',\r\n      title: 'Rectangle ROI',\r\n      className: 'imageViewerTool',\r\n      icon: 'square-o',\r\n    },\r\n    {\r\n      id: 'resetViewport',\r\n      title: 'Reset Viewport',\r\n      className: 'imageViewerCommand',\r\n      icon: 'reset',\r\n    },\r\n    {\r\n      id: 'clearTools',\r\n      title: 'Clear tools',\r\n      className: 'imageViewerCommand',\r\n      icon: 'trash',\r\n    },\r\n  ];\r\n  return buttonData;\r\n}\r\n\r\nexport default class Toolbar extends Component {\r\n  static propTypes = {\r\n    buttons: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        icon: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n          }),\r\n        ]),\r\n      })\r\n    ).isRequired,\r\n    includeLayoutButton: PropTypes.bool.isRequired,\r\n    includePlayClipButton: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    buttons: getDefaultButtonData(),\r\n    includeLayoutButton: true,\r\n    includePlayClipButton: true,\r\n  };\r\n\r\n  render() {\r\n    var maybePlayClipButton;\r\n    if (this.props.includePlayClipButton) {\r\n      maybePlayClipButton = <PlayClipButton />;\r\n    }\r\n\r\n    var maybeLayoutButton;\r\n    if (this.props.includeLayoutButton) {\r\n      maybeLayoutButton = <LayoutButton />;\r\n    }\r\n\r\n    return (\r\n      <div id=\"toolbar\">\r\n        <div className=\"btn-group\">\r\n          {this.props.buttons.map((button, i) => {\r\n            return <SimpleToolbarButton {...button} key={i} />;\r\n          })}\r\n          {maybePlayClipButton}\r\n          {maybeLayoutButton}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\n\r\nconst isTouchDevice = !!('ontouchstart' in window || navigator.maxTouchPoints);\r\n\r\n// See https://github.com/react-dnd/react-dnd/issues/186#issuecomment-335429067\r\n// https://github.com/react-dnd/react-dnd/issues/186#issuecomment-282789420\r\n//\r\n// http://react-dnd.github.io/react-dnd/docs/api/drag-drop-context\r\nexport default function viewerbaseDragDropContext(DecoratedClass) {\r\n  const backend = isTouchDevice ? TouchBackend : HTML5Backend;\r\n  const opts = isTouchDevice ? { enableMouseEvents: true } : {};\r\n\r\n  return (props) => (\r\n    <DndProvider backend={backend} opts={opts}>\r\n      <DecoratedClass {...props}/>\r\n    </DndProvider>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ErrorPage } from '@ohif/ui';\r\n\r\nexport const retryImport = (fn, retriesLeft = 5, interval = 1000) =>\r\n  new Promise((resolve, reject) => {\r\n    fn().then(resolve).catch((error) => {\r\n      setTimeout(() => {\r\n        if (retriesLeft === 1) {\r\n          /* reject('maximum retries exceeded'); */\r\n          reject(error);\r\n          return;\r\n        }\r\n\r\n        /* Passing on \"reject\" is the important part */\r\n        retry(fn, retriesLeft - 1, interval).then(resolve, reject);\r\n      }, interval);\r\n    });\r\n  });\r\n\r\nconst onError = (error, setState) => setState({ component: ErrorPage });\r\n\r\n/**\r\n * We use this function to lazy load the import of a component to leverage 'Code Splitting'\r\n * Link: https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\r\n */\r\nconst asyncComponent = (importComponent, options = { onError }) => props => {\r\n  const [state, setState] = useState({ component: null });\r\n\r\n  const isFunction = item => typeof item === 'function';\r\n  const isChunkError = error => error.toString().indexOf('ChunkLoadError') > -1;\r\n\r\n  useEffect(() => {\r\n    const addDynamicallyLoadedComponentToState = async () => {\r\n      try {\r\n        const { default: component } = await importComponent();\r\n        setState({ component });\r\n        if (options.onLoaded && isFunction(options.onLoaded)) {\r\n          options.onLoaded(component);\r\n        }\r\n      } catch (error) {\r\n        console.error('[AsyncComponent] Failed to import chunk:', error);\r\n\r\n        if (options.onError && isFunction(options.onError)) {\r\n          options.onError(error, setState);\r\n          return;\r\n        }\r\n\r\n        if (isChunkError(error)) {\r\n          console.error('[AsyncComponent] Reloading due to chunk error');\r\n          window.location.reload();\r\n        }\r\n      }\r\n    };\r\n\r\n    addDynamicallyLoadedComponentToState();\r\n  }, []);\r\n\r\n  const Component = state.component;\r\n  return Component ? <Component {...props} /> : null;\r\n};\r\n\r\nexport default asyncComponent;\r\n","import {\r\n  ContextMenu,\r\n  Checkbox,\r\n  CineDialog,\r\n  ViewportDownloadForm,\r\n  LayoutButton,\r\n  LayoutChooser,\r\n  MeasurementTable,\r\n  MeasurementTableItem,\r\n  Overlay,\r\n  OverlayTrigger,\r\n  PageToolbar,\r\n  QuickSwitch,\r\n  RoundedButtonGroup,\r\n  SelectTree,\r\n  SimpleDialog,\r\n  StudyBrowser,\r\n  StudyList,\r\n  TableList,\r\n  TableListItem,\r\n  Thumbnail,\r\n  TabComponents,\r\n  TabFooter,\r\n  HotkeyField,\r\n  LanguageSwitcher,\r\n  TableSearchFilter,\r\n  TablePagination,\r\n  ToolbarSection,\r\n  Tooltip,\r\n  AboutContent,\r\n  OHIFModal,\r\n  ErrorBoundary,\r\n  ErrorPage,\r\n} from './components';\r\nimport { useDebounce, useMedia } from './hooks';\r\n\r\n// Elements\r\nimport {\r\n  ICONS,\r\n  Icon,\r\n  DropdownMenu as Dropdown,\r\n  Select,\r\n  OldSelect,\r\n  Label,\r\n  Range,\r\n  TextArea,\r\n  TextInput,\r\n} from './elements';\r\n\r\n// Alias this for now as not all dependents are using strict versioning\r\nimport ExpandableToolMenu from './viewer/ExpandableToolMenu.js';\r\nimport PlayClipButton from './viewer/PlayClipButton.js';\r\nimport { ScrollableArea } from './ScrollableArea/ScrollableArea.js';\r\nimport Toolbar from './viewer/Toolbar.js';\r\nimport ToolbarButton from './viewer/ToolbarButton.js';\r\nimport ViewerbaseDragDropContext from './utils/viewerbaseDragDropContext.js';\r\nimport { asyncComponent, retryImport } from './utils/asyncComponent';\r\nimport {\r\n  SnackbarProvider,\r\n  useSnackbarContext,\r\n  withSnackbar,\r\n  DialogProvider,\r\n  useDialog,\r\n  withDialog,\r\n  ModalProvider,\r\n  ModalConsumer,\r\n  useModal,\r\n  withModal,\r\n  LoggerProvider,\r\n  withLogger,\r\n  useLogger,\r\n} from './contextProviders';\r\n\r\nexport {\r\n  // Elements\r\n  ICONS,\r\n  //\r\n  Checkbox,\r\n  Dropdown,\r\n  Label,\r\n  TextArea,\r\n  TextInput,\r\n  CineDialog,\r\n  ContextMenu,\r\n  ViewportDownloadForm,\r\n  ExpandableToolMenu,\r\n  Icon,\r\n  LayoutButton,\r\n  LayoutChooser,\r\n  MeasurementTable,\r\n  MeasurementTableItem,\r\n  Overlay,\r\n  OverlayTrigger,\r\n  PlayClipButton,\r\n  PageToolbar,\r\n  QuickSwitch,\r\n  Range,\r\n  RoundedButtonGroup,\r\n  ScrollableArea,\r\n  Select,\r\n  OldSelect,\r\n  SelectTree,\r\n  SimpleDialog,\r\n  StudyBrowser,\r\n  StudyList,\r\n  TableList,\r\n  TableListItem,\r\n  Thumbnail,\r\n  TabComponents,\r\n  TabFooter,\r\n  HotkeyField,\r\n  LanguageSwitcher,\r\n  TableSearchFilter,\r\n  TablePagination,\r\n  Toolbar,\r\n  ToolbarButton,\r\n  ToolbarSection,\r\n  Tooltip,\r\n  AboutContent,\r\n  SnackbarProvider,\r\n  useSnackbarContext,\r\n  withSnackbar,\r\n  ModalProvider,\r\n  useModal,\r\n  ModalConsumer,\r\n  withModal,\r\n  OHIFModal,\r\n  DialogProvider,\r\n  withDialog,\r\n  useDialog,\r\n  ErrorBoundary,\r\n  ErrorPage,\r\n  LoggerProvider,\r\n  withLogger,\r\n  useLogger,\r\n  // Hooks\r\n  useDebounce,\r\n  useMedia,\r\n  // Utils\r\n  ViewerbaseDragDropContext,\r\n  asyncComponent,\r\n  retryImport,\r\n};\r\n","import metadataProvider from './classes/MetadataProvider';\r\nimport {\r\n  getBoundingBox,\r\n  pixelToPage,\r\n  repositionTextBox,\r\n} from './lib/cornerstone.js';\r\n\r\nconst cornerstone = {\r\n  metadataProvider,\r\n  getBoundingBox,\r\n  pixelToPage,\r\n  repositionTextBox,\r\n};\r\n\r\nexport default cornerstone;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nfunction getBoundingBox(context, textLines, x, y, options) {\r\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\r\n    textLines = [textLines];\r\n  }\r\n\r\n  const padding = 5;\r\n  const font = cornerstoneTools.textStyle.getFont();\r\n  const fontSize = cornerstoneTools.textStyle.getFontSize();\r\n\r\n  context.save();\r\n  context.font = font;\r\n  context.textBaseline = 'top';\r\n\r\n  // Find the longest text width in the array of text data\r\n  let maxWidth = 0;\r\n\r\n  textLines.forEach(text => {\r\n    // Get the text width in the current font\r\n    const width = context.measureText(text).width;\r\n\r\n    // Find the maximum with for all the text Rows;\r\n    maxWidth = Math.max(maxWidth, width);\r\n  });\r\n\r\n  // Calculate the bounding box for this text box\r\n  const boundingBox = {\r\n    width: maxWidth + padding * 2,\r\n    height: padding + textLines.length * (fontSize + padding),\r\n  };\r\n\r\n  if (options && options.centering && options.centering.x === true) {\r\n    x -= boundingBox.width / 2;\r\n  }\r\n\r\n  if (options && options.centering && options.centering.y === true) {\r\n    y -= boundingBox.height / 2;\r\n  }\r\n\r\n  boundingBox.left = x;\r\n  boundingBox.top = y;\r\n\r\n  context.restore();\r\n\r\n  // Return the bounding box so it can be used for pointNearHandle\r\n  return boundingBox;\r\n}\r\n\r\nfunction pixelToPage(element, position) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const result = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  // Stop here if the cornerstone element is not enabled or position is not an object\r\n  if (!enabledElement || typeof position !== 'object') {\r\n    return result;\r\n  }\r\n\r\n  const canvas = enabledElement.canvas;\r\n\r\n  const canvasOffset = $(canvas).offset();\r\n  result.x += canvasOffset.left;\r\n  result.y += canvasOffset.top;\r\n\r\n  const canvasPosition = cornerstone.pixelToCanvas(element, position);\r\n  result.x += canvasPosition.x;\r\n  result.y += canvasPosition.y;\r\n\r\n  return result;\r\n}\r\n\r\nfunction repositionTextBox(eventData, measurementData, config) {\r\n  // Stop here if it's not a measurement creating\r\n  if (!measurementData.isCreating) {\r\n    return;\r\n  }\r\n\r\n  const element = eventData.element;\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const image = enabledElement.image;\r\n\r\n  const allowedBorders = OHIF.uiSettings.autoPositionMeasurementsTextCallOuts;\r\n  const allow = {\r\n    T: !allowedBorders || allowedBorders.includes('T'),\r\n    R: !allowedBorders || allowedBorders.includes('R'),\r\n    B: !allowedBorders || allowedBorders.includes('B'),\r\n    L: !allowedBorders || allowedBorders.includes('L'),\r\n  };\r\n\r\n  const getAvailableBlankAreas = (enabledElement, labelWidth, labelHeight) => {\r\n    const { element, canvas, image } = enabledElement;\r\n\r\n    const topLeft = cornerstone.pixelToCanvas(element, {\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n\r\n    const bottomRight = cornerstone.pixelToCanvas(element, {\r\n      x: image.width,\r\n      y: image.height,\r\n    });\r\n\r\n    const $canvas = $(canvas);\r\n    const canvasWidth = $canvas.outerWidth();\r\n    const canvasHeight = $canvas.outerHeight();\r\n\r\n    const result = {};\r\n    result['x-1'] = allow.L && topLeft.x > labelWidth;\r\n    result['y-1'] = allow.T && topLeft.y > labelHeight;\r\n    result.x1 = allow.R && canvasWidth - bottomRight.x > labelWidth;\r\n    result.y1 = allow.B && canvasHeight - bottomRight.y > labelHeight;\r\n\r\n    return result;\r\n  };\r\n\r\n  const getRenderingInformation = (limits, tool) => {\r\n    const mid = {};\r\n    mid.x = limits.x / 2;\r\n    mid.y = limits.y / 2;\r\n\r\n    const directions = {};\r\n    directions.x = tool.x < mid.x ? -1 : 1;\r\n    directions.y = tool.y < mid.y ? -1 : 1;\r\n\r\n    const diffX = directions.x < 0 ? tool.x : limits.x - tool.x;\r\n    const diffY = directions.y < 0 ? tool.y : limits.y - tool.y;\r\n    let cornerAxis = diffY < diffX ? 'y' : 'x';\r\n\r\n    const map = {\r\n      'x-1': 'L',\r\n      'y-1': 'T',\r\n      x1: 'R',\r\n      y1: 'B',\r\n    };\r\n\r\n    let current = 0;\r\n    while (current < 4 && !allow[map[cornerAxis + directions[cornerAxis]]]) {\r\n      // Invert the direction for the next iteration\r\n      directions[cornerAxis] *= -1;\r\n\r\n      // Invert the tempCornerAxis\r\n      cornerAxis = cornerAxis === 'x' ? 'y' : 'x';\r\n\r\n      current++;\r\n    }\r\n\r\n    return {\r\n      directions,\r\n      cornerAxis,\r\n    };\r\n  };\r\n\r\n  const calculateAxisCenter = (axis, start, end) => {\r\n    const a = start[axis];\r\n    const b = end[axis];\r\n    const lowest = Math.min(a, b);\r\n    const highest = Math.max(a, b);\r\n    return lowest + (highest - lowest) / 2;\r\n  };\r\n\r\n  const getTextBoxSizeInPixels = (element, bounds) => {\r\n    const topLeft = cornerstone.pageToPixel(element, 0, 0);\r\n    const bottomRight = cornerstone.pageToPixel(element, bounds.x, bounds.y);\r\n    return {\r\n      x: bottomRight.x - topLeft.x,\r\n      y: bottomRight.y - topLeft.y,\r\n    };\r\n  };\r\n\r\n  function getTextBoxOffset(config, cornerAxis, toolAxis, boxSize) {\r\n    config = config || {};\r\n    const centering = config.centering || {};\r\n    const centerX = !!centering.x;\r\n    const centerY = !!centering.y;\r\n    const halfBoxSizeX = boxSize.x / 2;\r\n    const halfBoxSizeY = boxSize.y / 2;\r\n    const offset = {\r\n      x: [],\r\n      y: [],\r\n    };\r\n\r\n    if (cornerAxis === 'x') {\r\n      const offsetY = centerY ? 0 : halfBoxSizeY;\r\n\r\n      offset.x[-1] = centerX ? halfBoxSizeX : 0;\r\n      offset.x[1] = centerX ? -halfBoxSizeX : -boxSize.x;\r\n      offset.y[-1] = offsetY;\r\n      offset.y[1] = offsetY;\r\n    } else {\r\n      const offsetX = centerX ? 0 : halfBoxSizeX;\r\n\r\n      offset.x[-1] = offsetX;\r\n      offset.x[1] = offsetX;\r\n      offset.y[-1] = centerY ? halfBoxSizeY : 0;\r\n      offset.y[1] = centerY ? -halfBoxSizeY : -boxSize.y;\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  const handles = measurementData.handles;\r\n  const textBox = handles.textBox;\r\n\r\n  const $canvas = $(enabledElement.canvas);\r\n  const canvasWidth = $canvas.outerWidth();\r\n  const canvasHeight = $canvas.outerHeight();\r\n  const offset = $canvas.offset();\r\n  const canvasDimensions = {\r\n    x: canvasWidth,\r\n    y: canvasHeight,\r\n  };\r\n\r\n  const bounds = {};\r\n  bounds.x = textBox.boundingBox.width;\r\n  bounds.y = textBox.boundingBox.height;\r\n\r\n  const getHandlePosition = key => {\r\n    const { x, y } = handles[key];\r\n\r\n    return { x, y };\r\n  };\r\n  const start = getHandlePosition('start');\r\n  const end = getHandlePosition('end');\r\n\r\n  const tool = {};\r\n  tool.x = calculateAxisCenter('x', start, end);\r\n  tool.y = calculateAxisCenter('y', start, end);\r\n\r\n  let limits = {};\r\n  limits.x = image.width;\r\n  limits.y = image.height;\r\n\r\n  let { directions, cornerAxis } = getRenderingInformation(limits, tool);\r\n\r\n  const availableAreas = getAvailableBlankAreas(\r\n    enabledElement,\r\n    bounds.x,\r\n    bounds.y\r\n  );\r\n  const tempDirections = Object.assign({}, directions);\r\n  let tempCornerAxis = cornerAxis;\r\n  let foundPlace = false;\r\n  let current = 0;\r\n  while (current < 4) {\r\n    if (availableAreas[tempCornerAxis + tempDirections[tempCornerAxis]]) {\r\n      foundPlace = true;\r\n      break;\r\n    }\r\n\r\n    // Invert the direction for the next iteration\r\n    tempDirections[tempCornerAxis] *= -1;\r\n\r\n    // Invert the tempCornerAxis\r\n    tempCornerAxis = tempCornerAxis === 'x' ? 'y' : 'x';\r\n\r\n    current++;\r\n  }\r\n\r\n  let cornerAxisPosition;\r\n  if (foundPlace) {\r\n    directions = Object.assign({}, directions, tempDirections);\r\n    cornerAxis = tempCornerAxis;\r\n    cornerAxisPosition = directions[cornerAxis] < 0 ? 0 : limits[cornerAxis];\r\n  } else {\r\n    limits = Object.assign({}, limits, canvasDimensions);\r\n\r\n    const toolPositionOnCanvas = cornerstone.pixelToCanvas(element, tool);\r\n    const renderingInformation = getRenderingInformation(\r\n      limits,\r\n      toolPositionOnCanvas\r\n    );\r\n    directions = renderingInformation.directions;\r\n    cornerAxis = renderingInformation.cornerAxis;\r\n\r\n    const position = {\r\n      x: directions.x < 0 ? offset.left : offset.left + canvasWidth,\r\n      y: directions.y < 0 ? offset.top : offset.top + canvasHeight,\r\n    };\r\n\r\n    const pixelPosition = cornerstone.pageToPixel(\r\n      element,\r\n      position.x,\r\n      position.y\r\n    );\r\n    cornerAxisPosition = pixelPosition[cornerAxis];\r\n  }\r\n\r\n  const toolAxis = cornerAxis === 'x' ? 'y' : 'x';\r\n  const boxSize = getTextBoxSizeInPixels(element, bounds);\r\n\r\n  textBox[cornerAxis] = cornerAxisPosition;\r\n  textBox[toolAxis] = tool[toolAxis];\r\n\r\n  // Adjust the text box position reducing its size from the corner axis\r\n  const textBoxOffset = getTextBoxOffset(config, cornerAxis, toolAxis, boxSize);\r\n  textBox[cornerAxis] += textBoxOffset[cornerAxis][directions[cornerAxis]];\r\n\r\n  // Preventing the text box from partially going outside the canvas area\r\n  const topLeft = cornerstone.pixelToCanvas(element, textBox);\r\n  const bottomRight = {\r\n    x: topLeft.x + bounds.x,\r\n    y: topLeft.y + bounds.y,\r\n  };\r\n  const canvasBorders = {\r\n    x0: offset.left,\r\n    y0: offset.top,\r\n    x1: offset.left + canvasWidth,\r\n    y1: offset.top + canvasHeight,\r\n  };\r\n  if (topLeft[toolAxis] < 0) {\r\n    const x = canvasBorders.x0;\r\n    const y = canvasBorders.y0;\r\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\r\n    textBox[toolAxis] = pixelPosition[toolAxis];\r\n  } else if (bottomRight[toolAxis] > canvasDimensions[toolAxis]) {\r\n    const x = canvasBorders.x1 - bounds.x;\r\n    const y = canvasBorders.y1 - bounds.y;\r\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\r\n    textBox[toolAxis] = pixelPosition[toolAxis];\r\n  }\r\n}\r\n\r\nexport { getBoundingBox, pixelToPage, repositionTextBox };\r\n","import validate from 'validate.js';\r\n\r\nvalidate.validators.equals = function(value, options, key, attributes) {\r\n  if (options && value !== options.value) {\r\n    return key + 'must equal ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.doesNotEqual = function(value, options, key) {\r\n  if (options && value === options.value) {\r\n    return key + 'cannot equal ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.contains = function(value, options, key) {\r\n  if (options && value.indexOf && value.indexOf(options.value) === -1) {\r\n    return key + 'must contain ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.doesNotContain = function(value, options, key) {\r\n  if (options && value.indexOf && value.indexOf(options.value) !== -1) {\r\n    return key + 'cannot contain ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.startsWith = function(value, options, key) {\r\n  if (options && value.startsWith && !value.startsWith(options.value)) {\r\n    return key + 'must start with ' + options.value;\r\n  }\r\n};\r\n\r\nvalidate.validators.endsWith = function(value, options, key) {\r\n  if (options && value.endsWith && !value.endsWith(options.value)) {\r\n    return key + 'must end with ' + options.value;\r\n  }\r\n};\r\n\r\nexport { validate };\r\n","// Define an empty object to store callbacks that are used to retrieve custom attributes\r\n// The simplest example for a custom attribute is the Timepoint type (i.e. baseline or follow-up)\r\n// used in the LesionTracker application.\r\n//\r\n// Timepoint type can be obtained given a studyId, and this is done through a custom callback.\r\n// Developers can define attributes (i.e. attributeId = timepointType) with a name ('Timepoint Type')\r\n// and a callback function that is used to calculate them.\r\n//\r\n// The input to the callback, which is called during viewport-image matching rule evaluation\r\n// is the set of attributes that contains the specified attribute. In our example, timepointType is\r\n// linked to the study attributes, and so the inputs to the callback is an object containing\r\n// the study attributes.\r\nconst CustomAttributeRetrievalCallbacks = {};\r\n\r\n/**\r\n * Adds a custom attribute to be used in the HangingProtocol UI and matching rules, including a\r\n * callback that will be used to calculate the attribute value.\r\n *\r\n * @param attributeId The ID used to refer to the attribute (e.g. 'timepointType')\r\n * @param attributeName The name of the attribute to be displayed (e.g. 'Timepoint Type')\r\n * @param callback The function used to calculate the attribute value from the other attributes at its level (e.g. study/series/image)\r\n */\r\nfunction addCustomAttribute(attributeId, attributeName, callback) {\r\n  CustomAttributeRetrievalCallbacks[attributeId] = {\r\n    name: attributeName,\r\n    callback: callback,\r\n  };\r\n}\r\n\r\nexport { CustomAttributeRetrievalCallbacks, addCustomAttribute };\r\n","import OHIFError from '../classes/OHIFError.js';\r\nimport metadata from '../classes/metadata/';\r\nimport { validate } from './lib/validate.js';\r\nimport { CustomAttributeRetrievalCallbacks } from './customAttributes';\r\n\r\n/**\r\n * Import Constants\r\n */\r\nconst { InstanceMetadata } = metadata;\r\n\r\n/**\r\n * Match a Metadata instance against rules using Validate.js for validation.\r\n * @param  {InstanceMetadata} metadataInstance Metadata instance object\r\n * @param  {Array} rules Array of MatchingRules instances (StudyMatchingRule|SeriesMatchingRule|ImageMatchingRule) for the match\r\n * @return {Object}      Matching Object with score and details (which rule passed or failed)\r\n */\r\nconst match = (metadataInstance, rules) => {\r\n  // Make sure the supplied data is valid.\r\n  if (!(metadataInstance instanceof InstanceMetadata)) {\r\n    throw new OHIFError(\r\n      'HPMatcher::match metadataInstance must be an instance of InstanceMetadata'\r\n    );\r\n  }\r\n\r\n  const options = {\r\n    format: 'grouped',\r\n  };\r\n\r\n  const details = {\r\n    passed: [],\r\n    failed: [],\r\n  };\r\n\r\n  let requiredFailed = false;\r\n  let score = 0;\r\n\r\n  rules.forEach(rule => {\r\n    const attribute = rule.attribute;\r\n\r\n    // Do not use the custom attribute from the metadataInstance since it is subject to change\r\n    if (CustomAttributeRetrievalCallbacks.hasOwnProperty(attribute)) {\r\n      const customAttribute = CustomAttributeRetrievalCallbacks[attribute];\r\n      metadataInstance.setCustomAttribute(\r\n        attribute,\r\n        customAttribute.callback(metadataInstance)\r\n      );\r\n    }\r\n\r\n    // Format the constraint as required by Validate.js\r\n    const testConstraint = {\r\n      [attribute]: rule.constraint,\r\n    };\r\n\r\n    // Create a single attribute object to be validated, since metadataInstance is an\r\n    // instance of Metadata (StudyMetadata, SeriesMetadata or InstanceMetadata)\r\n    const attributeValue = metadataInstance.customAttributeExists(attribute)\r\n      ? metadataInstance.getCustomAttribute(attribute)\r\n      : metadataInstance.getTagValue(attribute);\r\n    const attributeMap = {\r\n      [attribute]: attributeValue,\r\n    };\r\n\r\n    // Use Validate.js to evaluate the constraints on the specified metadataInstance\r\n    let errorMessages;\r\n    try {\r\n      errorMessages = validate(attributeMap, testConstraint, [options]);\r\n    } catch (e) {\r\n      errorMessages = ['Something went wrong during validation.', e];\r\n    }\r\n\r\n    if (!errorMessages) {\r\n      // If no errorMessages were returned, then validation passed.\r\n\r\n      // Add the rule's weight to the total score\r\n      score += parseInt(rule.weight, 10);\r\n\r\n      // Log that this rule passed in the matching details object\r\n      details.passed.push({\r\n        rule,\r\n      });\r\n    } else {\r\n      // If errorMessages were present, then validation failed\r\n\r\n      // If the rule that failed validation was Required, then\r\n      // mark that a required Rule has failed\r\n      if (rule.required) {\r\n        requiredFailed = true;\r\n      }\r\n\r\n      // Log that this rule failed in the matching details object\r\n      // and include any error messages\r\n      details.failed.push({\r\n        rule,\r\n        errorMessages,\r\n      });\r\n    }\r\n  });\r\n\r\n  // If a required Rule has failed Validation, set the matching score to zero\r\n  if (requiredFailed) {\r\n    score = 0;\r\n  }\r\n\r\n  return {\r\n    score,\r\n    details,\r\n    requiredFailed,\r\n  };\r\n};\r\n\r\nconst HPMatcher = {\r\n  match,\r\n};\r\n\r\nexport { HPMatcher };\r\n","// Define an empty object to store callbacks that are used to apply custom viewport settings\r\n// after a viewport is rendered.\r\nconst CustomViewportSettings = {};\r\n\r\n/**\r\n * Adds a custom setting that can be chosen in the HangingProtocol UI and applied to a Viewport\r\n *\r\n * @param settingId The ID used to refer to the setting (e.g. 'displayCADMarkers')\r\n * @param settingName The name of the setting to be displayed (e.g. 'Display CAD Markers')\r\n * @param options\r\n * @param callback A function to be run after a viewport is rendered with a series\r\n */\r\nfunction addCustomViewportSetting(settingId, settingName, options, callback) {\r\n  CustomViewportSettings[settingId] = {\r\n    id: settingId,\r\n    text: settingName,\r\n    options: options,\r\n    callback: callback,\r\n  };\r\n}\r\n\r\nexport { CustomViewportSettings, addCustomViewportSetting };\r\n","const comparators = [\r\n  {\r\n    id: 'equals',\r\n    name: '= (Equals)',\r\n    validator: 'equals',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must equal this value.',\r\n  },\r\n  {\r\n    id: 'doesNotEqual',\r\n    name: '!= (Does not equal)',\r\n    validator: 'doesNotEqual',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must not equal this value.',\r\n  },\r\n  {\r\n    id: 'contains',\r\n    name: 'Contains',\r\n    validator: 'contains',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must contain this value.',\r\n  },\r\n  {\r\n    id: 'doesNotContain',\r\n    name: 'Does not contain',\r\n    validator: 'doesNotContain',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must not contain this value.',\r\n  },\r\n  {\r\n    id: 'startsWith',\r\n    name: 'Starts with',\r\n    validator: 'startsWith',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must start with this value.',\r\n  },\r\n  {\r\n    id: 'endsWith',\r\n    name: 'Ends with',\r\n    validator: 'endsWith',\r\n    validatorOption: 'value',\r\n    description: 'The attribute must end with this value.',\r\n  },\r\n  {\r\n    id: 'onlyInteger',\r\n    name: 'Only Integers',\r\n    validator: 'numericality',\r\n    validatorOption: 'onlyInteger',\r\n    description: \"Real numbers won't be allowed.\",\r\n  },\r\n  {\r\n    id: 'greaterThan',\r\n    name: '> (Greater than)',\r\n    validator: 'numericality',\r\n    validatorOption: 'greaterThan',\r\n    description: 'The attribute has to be greater than this value.',\r\n  },\r\n  {\r\n    id: 'greaterThanOrEqualTo',\r\n    name: '>= (Greater than or equal to)',\r\n    validator: 'numericality',\r\n    validatorOption: 'greaterThanOrEqualTo',\r\n    description: 'The attribute has to be at least this value.',\r\n  },\r\n  {\r\n    id: 'lessThanOrEqualTo',\r\n    name: '<= (Less than or equal to)',\r\n    validator: 'numericality',\r\n    validatorOption: 'lessThanOrEqualTo',\r\n    description: 'The attribute can be this value at the most.',\r\n  },\r\n  {\r\n    id: 'lessThan',\r\n    name: '< (Less than)',\r\n    validator: 'numericality',\r\n    validatorOption: 'lessThan',\r\n    description: 'The attribute has to be less than this value.',\r\n  },\r\n  {\r\n    id: 'odd',\r\n    name: 'Odd',\r\n    validator: 'numericality',\r\n    validatorOption: 'odd',\r\n    description: 'The attribute has to be odd.',\r\n  },\r\n  {\r\n    id: 'even',\r\n    name: 'Even',\r\n    validator: 'numericality',\r\n    validatorOption: 'even',\r\n    description: 'The attribute has to be even.',\r\n  },\r\n];\r\n\r\n// Immutable object\r\nObject.freeze(comparators);\r\n\r\nexport { comparators };\r\n","import { comparators } from '../lib/comparators';\r\nimport guid from '../../utils/guid';\r\n\r\nconst EQUALS_REGEXP = /^equals$/;\r\n\r\n/**\r\n * This Class represents a Rule to be evaluated given a set of attributes\r\n * Rules have:\r\n * - An attribute (e.g. 'SeriesDescription')\r\n * - A constraint Object, in the form required by Validate.js:\r\n *\r\n * rule.constraint = {\r\n *   contains: {\r\n *      value: 'T-1'\r\n *      }\r\n *   };\r\n *\r\n *  Note: In this example we use the 'contains' Validator, which is a custom Validator defined in Viewerbase\r\n *\r\n * - A value for whether or not they are Required to be matched (default: False)\r\n * - A value for their relative weighting during Protocol or Image matching (default: 1)\r\n */\r\nexport default class Rule {\r\n  /**\r\n   * The Constructor for the Class to create a Rule with the bare\r\n   * minimum information\r\n   *\r\n   * @param name The desired name for the Rule\r\n   */\r\n  constructor(attribute, constraint, required, weight) {\r\n    // Create a new UUID for this Rule\r\n    this.id = guid();\r\n\r\n    // Set the Rule's weight (defaults to 1)\r\n    this.weight = weight || 1;\r\n\r\n    // If an attribute is specified, assign it\r\n    if (attribute) {\r\n      this.attribute = attribute;\r\n    }\r\n\r\n    // If a constraint is specified, assign it\r\n    if (constraint) {\r\n      this.constraint = constraint;\r\n    }\r\n\r\n    // If a value for 'required' is specified, assign it\r\n    if (required === undefined) {\r\n      // If no value was specified, default to False\r\n      this.required = false;\r\n    } else {\r\n      this.required = required;\r\n    }\r\n\r\n    // Cache for constraint info object\r\n    this._constraintInfo = void 0;\r\n\r\n    // Cache for validator and value object\r\n    this._validatorAndValue = void 0;\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Rule class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a Protocol with the Object data.\r\n   *\r\n   * @param input A Rule as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // Check if the input already has an ID\r\n    // If so, keep it. It not, create a new UUID\r\n    this.id = input.id || guid();\r\n\r\n    // Assign the specified input data to the Rule\r\n    this.required = input.required;\r\n    this.weight = input.weight;\r\n    this.attribute = input.attribute;\r\n    this.constraint = input.constraint;\r\n  }\r\n\r\n  /**\r\n   * Get the constraint info object for the current constraint\r\n   * @return {Object\\undefined} Constraint object or undefined if current constraint\r\n   *                            is not valid or not found in comparators list\r\n   */\r\n  getConstraintInfo() {\r\n    let constraintInfo = this._constraintInfo;\r\n    // Check if info is cached already\r\n    if (constraintInfo !== void 0) {\r\n      return constraintInfo;\r\n    }\r\n\r\n    const ruleConstraint = Object.keys(this.constraint)[0];\r\n\r\n    if (ruleConstraint !== void 0) {\r\n      constraintInfo = comparators.find(\r\n        comparator => ruleConstraint === comparator.id\r\n      );\r\n    }\r\n\r\n    // Cache this information for later use\r\n    this._constraintInfo = constraintInfo;\r\n\r\n    return constraintInfo;\r\n  }\r\n\r\n  /**\r\n   * Check if current rule is related to priors\r\n   * @return {Boolean} True if a rule is related to priors or false otherwise\r\n   */\r\n  isRuleForPrior() {\r\n    // @TODO: Should we check this too? this.attribute === 'relativeTime'\r\n    return this.attribute === 'abstractPriorValue';\r\n  }\r\n\r\n  /**\r\n   * If the current rule is a rule for priors, returns the number of referenced priors. Otherwise, returns -1.\r\n   * @return {Number} The number of referenced priors or -1 if not applicable. Returns zero if the actual value could not be determined.\r\n   */\r\n  getNumberOfPriorsReferenced() {\r\n    if (!this.isRuleForPrior()) {\r\n      return -1;\r\n    }\r\n\r\n    // Get rule's validator and value\r\n    const ruleValidatorAndValue = this.getConstraintValidatorAndValue();\r\n    const { value, validator } = ruleValidatorAndValue;\r\n    const intValue = parseInt(value, 10) || 0; // avoid possible NaN\r\n\r\n    // \"Equal to\" validators\r\n    if (EQUALS_REGEXP.test(validator)) {\r\n      // In this case, -1 (the oldest prior) indicates that at least one study is used\r\n      return intValue < 0 ? 1 : intValue;\r\n    }\r\n\r\n    // Default cases return value\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Get the constraint validator and value\r\n   * @return {Object|undefined} Returns an object containing the validator and it's value or undefined\r\n   */\r\n  getConstraintValidatorAndValue() {\r\n    let validatorAndValue = this._validatorAndValue;\r\n\r\n    // Check if validator and value are cached already\r\n    if (validatorAndValue !== void 0) {\r\n      return validatorAndValue;\r\n    }\r\n\r\n    // Get the constraint info object\r\n    const constraintInfo = this.getConstraintInfo();\r\n\r\n    // Constraint info object exists and is valid\r\n    if (constraintInfo !== void 0) {\r\n      const validator = constraintInfo.validator;\r\n      const currentValidator = this.constraint[validator];\r\n\r\n      if (currentValidator) {\r\n        const constraintValidator = constraintInfo.validatorOption;\r\n        const constraintValue = currentValidator[constraintValidator];\r\n\r\n        validatorAndValue = {\r\n          value: constraintValue,\r\n          validator: constraintInfo.id,\r\n        };\r\n\r\n        this._validatorAndValue = validatorAndValue;\r\n      }\r\n    }\r\n\r\n    return validatorAndValue;\r\n  }\r\n}\r\n","import Rule from './Rule';\r\n\r\n/**\r\n * The ProtocolMatchingRule Class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {ProtocolMatchingRule}\r\n */\r\nclass ProtocolMatchingRule extends Rule {}\r\n\r\n/**\r\n * The StudyMatchingRule Class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {StudyMatchingRule}\r\n */\r\nclass StudyMatchingRule extends Rule {}\r\n\r\n/**\r\n * The SeriesMatchingRule Class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {SeriesMatchingRule}\r\n */\r\nclass SeriesMatchingRule extends Rule {}\r\n\r\n/**\r\n * The ImageMatchingRule class extends the Rule Class.\r\n *\r\n * At present it does not add any new methods or attributes\r\n * @type {ImageMatchingRule}\r\n */\r\nclass ImageMatchingRule extends Rule {}\r\n\r\nexport {\r\n  ProtocolMatchingRule,\r\n  StudyMatchingRule,\r\n  SeriesMatchingRule,\r\n  ImageMatchingRule,\r\n};\r\n","/**\r\n * Removes the first instance of an element from an array, if an equal value exists\r\n *\r\n * @param array\r\n * @param input\r\n *\r\n * @returns {boolean} Whether or not the element was found and removed\r\n */\r\nconst removeFromArray = (array, input) => {\r\n  // If the array is empty, stop here\r\n  if (!array || !array.length) {\r\n    return false;\r\n  }\r\n\r\n  array.forEach((value, index) => {\r\n    // TODO: Double check whether or not this deep equality check is necessary\r\n    //if (_.isEqual(value, input)) {\r\n    if (value === input) {\r\n      indexToRemove = index;\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (indexToRemove === void 0) {\r\n    return false;\r\n  }\r\n\r\n  array.splice(indexToRemove, 1);\r\n  return true;\r\n};\r\n\r\nexport { removeFromArray };\r\n","/**\r\n * The ViewportStructure class represents the layout and layout properties that\r\n * Viewports are displayed in. ViewportStructure has a type, which corresponds to\r\n * a layout template, and a set of properties, which depend on the type.\r\n *\r\n * @type {ViewportStructure}\r\n */\r\nexport default class ViewportStructure {\r\n  constructor(type, properties) {\r\n    this.type = type;\r\n    this.properties = properties;\r\n  }\r\n\r\n  /**\r\n   * Occasionally the ViewportStructure class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a ViewportStructure with the Object data.\r\n   *\r\n   * @param input The ViewportStructure as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    this.type = input.type;\r\n    this.properties = input.properties;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the layout template name based on the layout type\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getLayoutTemplateName() {\r\n    // Viewport structure can be updated later when we build more complex display layouts\r\n    switch (this.type) {\r\n      case 'grid':\r\n        return 'gridLayout';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of Viewports required for this layout\r\n   * given the layout type and properties\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getNumViewports() {\r\n    // Viewport structure can be updated later when we build more complex display layouts\r\n    switch (this.type) {\r\n      case 'grid':\r\n        // For the typical grid layout, we only need to multiply Rows by Columns to\r\n        // obtain the number of viewports\r\n        return this.properties.Rows * this.properties.Columns;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  StudyMatchingRule,\r\n  SeriesMatchingRule,\r\n  ImageMatchingRule,\r\n} from './rules';\r\nimport { removeFromArray } from '../lib/removeFromArray';\r\n\r\n/**\r\n * This Class defines a Viewport in the Hanging Protocol Stage. A Viewport contains\r\n * arrays of Rules that are matched in the ProtocolEngine in order to determine which\r\n * images should be hung.\r\n *\r\n * @type {Viewport}\r\n */\r\nexport default class Viewport {\r\n  constructor() {\r\n    this.viewportSettings = {};\r\n    this.imageMatchingRules = [];\r\n    this.seriesMatchingRules = [];\r\n    this.studyMatchingRules = [];\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Viewport class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a Viewport with the Object data.\r\n   *\r\n   * @param input The Viewport as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // If ImageMatchingRules exist, create them from the Object data\r\n    // and add them to the Viewport's imageMatchingRules array\r\n    if (input.imageMatchingRules) {\r\n      input.imageMatchingRules.forEach(ruleObject => {\r\n        var rule = new ImageMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n        this.imageMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If SeriesMatchingRules exist, create them from the Object data\r\n    // and add them to the Viewport's seriesMatchingRules array\r\n    if (input.seriesMatchingRules) {\r\n      input.seriesMatchingRules.forEach(ruleObject => {\r\n        var rule = new SeriesMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n        this.seriesMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If StudyMatchingRules exist, create them from the Object data\r\n    // and add them to the Viewport's studyMatchingRules array\r\n    if (input.studyMatchingRules) {\r\n      input.studyMatchingRules.forEach(ruleObject => {\r\n        var rule = new StudyMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n        this.studyMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If ViewportSettings exist, add them to the current protocol\r\n    if (input.viewportSettings) {\r\n      this.viewportSettings = input.viewportSettings;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and removes a rule from whichever array it exists in.\r\n   * It is not required to specify if it exists in studyMatchingRules,\r\n   * seriesMatchingRules, or imageMatchingRules\r\n   *\r\n   * @param rule\r\n   */\r\n  removeRule(rule) {\r\n    var array;\r\n    if (rule instanceof StudyMatchingRule) {\r\n      array = this.studyMatchingRules;\r\n    } else if (rule instanceof SeriesMatchingRule) {\r\n      array = this.seriesMatchingRules;\r\n    } else if (rule instanceof ImageMatchingRule) {\r\n      array = this.imageMatchingRules;\r\n    }\r\n\r\n    removeFromArray(array, rule);\r\n  }\r\n}\r\n","import ViewportStructure from './ViewportStructure';\r\nimport Viewport from './Viewport';\r\nimport guid from '../../utils/guid';\r\n\r\n/**\r\n * A Stage is one step in the Display Set Sequence for a Hanging Protocol\r\n *\r\n * Stages are defined as a ViewportStructure and an array of Viewports\r\n *\r\n * @type {Stage}\r\n */\r\nexport default class Stage {\r\n  constructor(ViewportStructure, name) {\r\n    // Create a new UUID for this Stage\r\n    this.id = guid();\r\n\r\n    // Assign the name and ViewportStructure provided\r\n    this.name = name;\r\n    this.viewportStructure = ViewportStructure;\r\n\r\n    // Create an empty array for the Viewports\r\n    this.viewports = [];\r\n\r\n    // Set the created date to Now\r\n    this.createdDate = new Date();\r\n  }\r\n\r\n  /**\r\n   * Creates a clone of the current Stage with a new name\r\n   *\r\n   * @param name\r\n   * @returns {Stage|*}\r\n   */\r\n  createClone(name) {\r\n    // Create a new JavaScript independent of the current Protocol\r\n    var currentStage = Object.assign({}, this);\r\n\r\n    // Create a new Stage to return\r\n    var clonedStage = new Stage();\r\n\r\n    // Assign the desired properties\r\n    currentStage.id = clonedStage.id;\r\n    clonedStage.fromObject(currentStage);\r\n\r\n    // If we have specified a name, assign it\r\n    if (name) {\r\n      clonedStage.name = name;\r\n    }\r\n\r\n    // Return the cloned Stage\r\n    return clonedStage;\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Stage class needs to be instantiated from a JavaScript Object.\r\n   * This function fills in a Protocol with the Object data.\r\n   *\r\n   * @param input A Stage as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // Check if the input already has an ID\r\n    // If so, keep it. It not, create a new UUID\r\n    this.id = input.id || guid();\r\n\r\n    // Assign the input name to the Stage\r\n    this.name = input.name;\r\n\r\n    // If a ViewportStructure is present in the input, add it from the\r\n    // input data\r\n    this.viewportStructure = new ViewportStructure();\r\n    this.viewportStructure.fromObject(input.viewportStructure);\r\n\r\n    // If any viewports are present in the input object\r\n    if (input.viewports) {\r\n      input.viewports.forEach(viewportObject => {\r\n        // Create a new Viewport with their data\r\n        var viewport = new Viewport();\r\n        viewport.fromObject(viewportObject);\r\n\r\n        // Add it to the viewports array\r\n        this.viewports.push(viewport);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { ProtocolMatchingRule } from './rules';\r\nimport { removeFromArray } from '../lib/removeFromArray';\r\nimport Stage from './Stage';\r\nimport guid from '../../utils/guid';\r\nimport user from '../../user';\r\n\r\n/**\r\n * This class represents a Hanging Protocol at the highest level\r\n *\r\n * @type {Protocol}\r\n */\r\nexport default class Protocol {\r\n  /**\r\n   * The Constructor for the Class to create a Protocol with the bare\r\n   * minimum information\r\n   *\r\n   * @param name The desired name for the Protocol\r\n   */\r\n  constructor(name) {\r\n    // Create a new UUID for this Protocol\r\n    this.id = guid();\r\n\r\n    // Store a value which determines whether or not a Protocol is locked\r\n    // This is probably temporary, since we will eventually have role / user\r\n    // checks for editing. For now we just need it to prevent changes to the\r\n    // default protocols.\r\n    this.locked = false;\r\n\r\n    // Boolean value to indicate if the protocol has updated priors information\r\n    // it's set in \"updateNumberOfPriorsReferenced\" function\r\n    this.hasUpdatedPriorsInformation = false;\r\n\r\n    // Apply the desired name\r\n    this.name = name;\r\n\r\n    // Set the created and modified dates to Now\r\n    this.createdDate = new Date();\r\n    this.modifiedDate = new Date();\r\n\r\n    // If we are logged in while creating this Protocol,\r\n    // store this information as well\r\n    if (user.userLoggedIn && user.userLoggedIn()) {\r\n      this.createdBy = user.getUserId();\r\n      this.modifiedBy = user.getUserId();\r\n    }\r\n\r\n    // Create two empty Sets specifying which roles\r\n    // have read and write access to this Protocol\r\n    this.availableTo = new Set();\r\n    this.editableBy = new Set();\r\n\r\n    // Define empty arrays for the Protocol matching rules\r\n    // and Stages\r\n    this.protocolMatchingRules = [];\r\n    this.stages = [];\r\n\r\n    // Define auxiliary values for priors\r\n    this.numberOfPriorsReferenced = -1;\r\n  }\r\n\r\n  getNumberOfPriorsReferenced(skipCache = false) {\r\n    let numberOfPriorsReferenced =\r\n      skipCache !== true ? this.numberOfPriorsReferenced : -1;\r\n\r\n    // Check if information is cached already\r\n    if (numberOfPriorsReferenced > -1) {\r\n      return numberOfPriorsReferenced;\r\n    }\r\n\r\n    numberOfPriorsReferenced = 0;\r\n\r\n    // Search each study matching rule for prior rules\r\n    // Each stage can have many viewports that can have\r\n    // multiple study matching rules.\r\n    this.stages.forEach(stage => {\r\n      if (!stage.viewports) {\r\n        return;\r\n      }\r\n\r\n      stage.viewports.forEach(viewport => {\r\n        if (!viewport.studyMatchingRules) {\r\n          return;\r\n        }\r\n\r\n        viewport.studyMatchingRules.forEach(rule => {\r\n          // If the current rule is not a priors rule, it will return -1 then numberOfPriorsReferenced will continue to be 0\r\n          const priorsReferenced = rule.getNumberOfPriorsReferenced();\r\n          if (priorsReferenced > numberOfPriorsReferenced) {\r\n            numberOfPriorsReferenced = priorsReferenced;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    this.numberOfPriorsReferenced = numberOfPriorsReferenced;\r\n\r\n    return numberOfPriorsReferenced;\r\n  }\r\n\r\n  updateNumberOfPriorsReferenced() {\r\n    this.getNumberOfPriorsReferenced(true);\r\n  }\r\n\r\n  /**\r\n   * Method to update the modifiedDate when the Protocol\r\n   * has been changed\r\n   */\r\n  protocolWasModified() {\r\n    // If we are logged in while modifying this Protocol,\r\n    // store this information as well\r\n    if (user.userLoggedIn && user.userLoggedIn()) {\r\n      this.modifiedBy = user.getUserId();\r\n    }\r\n\r\n    // Protocol has been modified, so mark priors information\r\n    // as \"outdated\"\r\n    this.hasUpdatedPriorsInformation = false;\r\n\r\n    // Update number of priors referenced info\r\n    this.updateNumberOfPriorsReferenced();\r\n\r\n    // Update the modifiedDate with the current Date/Time\r\n    this.modifiedDate = new Date();\r\n  }\r\n\r\n  /**\r\n   * Occasionally the Protocol class needs to be instantiated from a JavaScript Object\r\n   * containing the Protocol data. This function fills in a Protocol with the Object\r\n   * data.\r\n   *\r\n   * @param input A Protocol as a JavaScript Object, e.g. retrieved from JSON\r\n   */\r\n  fromObject(input) {\r\n    // Check if the input already has an ID\r\n    // If so, keep it. It not, create a new UUID\r\n    this.id = input.id || guid();\r\n\r\n    // Assign the input name to the Protocol\r\n    this.name = input.name;\r\n\r\n    // Retrieve locked status, use !! to make it truthy\r\n    // so that undefined values will be set to false\r\n    this.locked = !!input.locked;\r\n\r\n    // TODO: Check how to regenerate Set from Object\r\n    //this.availableTo = new Set(input.availableTo);\r\n    //this.editableBy = new Set(input.editableBy);\r\n\r\n    // If the input contains Protocol matching rules\r\n    if (input.protocolMatchingRules) {\r\n      input.protocolMatchingRules.forEach(ruleObject => {\r\n        // Create new Rules from the stored data\r\n        var rule = new ProtocolMatchingRule();\r\n        rule.fromObject(ruleObject);\r\n\r\n        // Add them to the Protocol\r\n        this.protocolMatchingRules.push(rule);\r\n      });\r\n    }\r\n\r\n    // If the input contains data for various Stages in the\r\n    // display set sequence\r\n    if (input.stages) {\r\n      input.stages.forEach(stageObject => {\r\n        // Create Stages from the stored data\r\n        var stage = new Stage();\r\n        stage.fromObject(stageObject);\r\n\r\n        // Add them to the Protocol\r\n        this.stages.push(stage);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a clone of the current Protocol with a new name\r\n   *\r\n   * @param name\r\n   * @returns {Protocol|*}\r\n   */\r\n  createClone(name) {\r\n    // Create a new JavaScript independent of the current Protocol\r\n    var currentProtocol = Object.assign({}, this);\r\n\r\n    // Create a new Protocol to return\r\n    var clonedProtocol = new Protocol();\r\n\r\n    // Apply the desired properties\r\n    currentProtocol.id = clonedProtocol.id;\r\n    clonedProtocol.fromObject(currentProtocol);\r\n\r\n    // If we have specified a name, assign it\r\n    if (name) {\r\n      clonedProtocol.name = name;\r\n    }\r\n\r\n    // Unlock the clone\r\n    clonedProtocol.locked = false;\r\n\r\n    // Return the cloned Protocol\r\n    return clonedProtocol;\r\n  }\r\n\r\n  /**\r\n   * Adds a Stage to this Protocol's display set sequence\r\n   *\r\n   * @param stage\r\n   */\r\n  addStage(stage) {\r\n    this.stages.push(stage);\r\n\r\n    // Update the modifiedDate and User that last\r\n    // modified this Protocol\r\n    this.protocolWasModified();\r\n  }\r\n\r\n  /**\r\n   * Adds a Rule to this Protocol's array of matching rules\r\n   *\r\n   * @param rule\r\n   */\r\n  addProtocolMatchingRule(rule) {\r\n    this.protocolMatchingRules.push(rule);\r\n\r\n    // Update the modifiedDate and User that last\r\n    // modified this Protocol\r\n    this.protocolWasModified();\r\n  }\r\n\r\n  /**\r\n   * Removes a Rule from this Protocol's array of matching rules\r\n   *\r\n   * @param rule\r\n   */\r\n  removeProtocolMatchingRule(rule) {\r\n    var wasRemoved = removeFromArray(this.protocolMatchingRules, rule);\r\n\r\n    // Update the modifiedDate and User that last\r\n    // modified this Protocol\r\n    if (wasRemoved) {\r\n      this.protocolWasModified();\r\n    }\r\n  }\r\n}\r\n","import OHIFError from '../classes/OHIFError.js';\r\nimport metadata from '../classes/metadata/';\r\nimport { StudyMetadataSource } from '../classes/StudyMetadataSource.js';\r\nimport { isImage } from '../utils/isImage.js';\r\nimport { HPMatcher } from './HPMatcher.js';\r\nimport { sortByScore } from './lib/sortByScore';\r\nimport log from '../log.js';\r\nimport sortBy from '../utils/sortBy.js';\r\nimport { CustomViewportSettings } from './customViewportSettings';\r\nimport Protocol from './classes/Protocol';\r\nimport { ProtocolStore } from './protocolStore/classes';\r\n\r\n/**\r\n * Import Constants\r\n */\r\nconst { StudyMetadata, InstanceMetadata } = metadata;\r\n\r\n// Useful constants\r\nconst ABSTRACT_PRIOR_VALUE = 'abstractPriorValue';\r\n\r\nexport default class ProtocolEngine {\r\n  matchedProtocols = new Map();\r\n  matchedProtocolScores = {};\r\n\r\n  /**\r\n   * Constructor\r\n   * @param  {ProtocolStore} protocolStore Protocol Store used to keep track of all hanging protocols\r\n   * @param  {Array} studies Array of study metadata\r\n   * @param  {Map} priorStudies Map of prior studies\r\n   * @param  {Object} studyMetadataSource Instance of StudyMetadataSource (ohif-viewerbase) Object to get study metadata\r\n   * @param  {Object} options\r\n   */\r\n  constructor(\r\n    protocolStore,\r\n    studies,\r\n    priorStudies,\r\n    studyMetadataSource,\r\n    options = {}\r\n  ) {\r\n    // -----------\r\n    // Type Validations\r\n    if (!(studyMetadataSource instanceof StudyMetadataSource)) {\r\n      throw new OHIFError(\r\n        'ProtocolEngine::constructor studyMetadataSource is not an instance of StudyMetadataSource'\r\n      );\r\n    }\r\n\r\n    if (\r\n      !(studies instanceof Array) &&\r\n      !studies.every(study => study instanceof StudyMetadata)\r\n    ) {\r\n      throw new OHIFError(\r\n        \"ProtocolEngine::constructor studies is not an array or it's items are not instances of StudyMetadata\"\r\n      );\r\n    }\r\n\r\n    // --------------\r\n    // Initialization\r\n    this.protocolStore = protocolStore;\r\n    this.studies = studies;\r\n    this.priorStudies = priorStudies instanceof Map ? priorStudies : new Map();\r\n    this.studyMetadataSource = studyMetadataSource;\r\n    this.options = options;\r\n\r\n    // Put protocol engine in a known state\r\n    this.reset();\r\n\r\n    // Create an array for new stage ids to be stored\r\n    // while editing a stage\r\n    this.newStageIds = [];\r\n  }\r\n\r\n  /**\r\n   * Resets the ProtocolEngine to the best match\r\n   */\r\n  reset() {\r\n    const protocol = this.getBestProtocolMatch();\r\n\r\n    this.setHangingProtocol(protocol);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the current Stage from the current Protocol and stage index\r\n   *\r\n   * @returns {*} The Stage model for the currently displayed Stage\r\n   */\r\n  getCurrentStageModel() {\r\n    return this.protocol.stages[this.stage];\r\n  }\r\n\r\n  /**\r\n   * Finds the best protocols from Protocol Store, matching each protocol matching rules\r\n   * with the given study. The best protocol are orded by score and returned in an array\r\n   * @param  {Object} study StudyMetadata instance object\r\n   * @return {Array}       Array of match objects or an empty array if no match was found\r\n   *                       Each match object has the score of the matching and the matched\r\n   *                       protocol\r\n   */\r\n  findMatchByStudy(study) {\r\n    log.trace('ProtocolEngine::findMatchByStudy');\r\n\r\n    const matched = [];\r\n    const studyInstance = study.getFirstInstance();\r\n\r\n    // Set custom attribute for study metadata\r\n    const numberOfAvailablePriors = this.getNumberOfAvailablePriors(\r\n      study.getObjectID()\r\n    );\r\n\r\n    this.protocolStore.getProtocol().forEach(protocol => {\r\n      // Clone the protocol's protocolMatchingRules array\r\n      // We clone it so that we don't accidentally add the\r\n      // numberOfPriorsReferenced rule to the Protocol itself.\r\n      let rules = protocol.protocolMatchingRules.slice();\r\n      if (!rules) {\r\n        return;\r\n      }\r\n\r\n      // Check if the study has the minimun number of priors used by the protocol.\r\n      const numberOfPriorsReferenced = protocol.getNumberOfPriorsReferenced();\r\n      if (numberOfPriorsReferenced > numberOfAvailablePriors) {\r\n        return;\r\n      }\r\n\r\n      // Run the matcher and get matching details\r\n      const matchedDetails = HPMatcher.match(studyInstance, rules);\r\n      const score = matchedDetails.score;\r\n\r\n      // The protocol matched some rule, add it to the matched list\r\n      if (score > 0) {\r\n        matched.push({\r\n          score,\r\n          protocol,\r\n        });\r\n      }\r\n    });\r\n\r\n    // If no matches were found, select the default protocol\r\n    if (!matched.length) {\r\n      const defaultProtocol = this.protocolStore.getProtocol('defaultProtocol');\r\n\r\n      return [\r\n        {\r\n          score: 1,\r\n          protocol: defaultProtocol,\r\n        },\r\n      ];\r\n    }\r\n\r\n    // Sort the matched list by score\r\n    sortByScore(matched);\r\n\r\n    log.trace('ProtocolEngine::findMatchByStudy matched', matched);\r\n\r\n    return matched;\r\n  }\r\n\r\n  _clearMatchedProtocols() {\r\n    this.matchedProtocols.clear();\r\n    this.matchedProtocolScores = {};\r\n  }\r\n  /**\r\n   * Populates the MatchedProtocols Collection by running the matching procedure\r\n   */\r\n  updateProtocolMatches() {\r\n    log.trace('ProtocolEngine::updateProtocolMatches');\r\n\r\n    // Clear all data currently in matchedProtocols\r\n    this._clearMatchedProtocols();\r\n\r\n    // For each study, find the matching protocols\r\n    this.studies.forEach(study => {\r\n      const matched = this.findMatchByStudy(study);\r\n\r\n      // For each matched protocol, check if it is already in MatchedProtocols\r\n      matched.forEach(matchedDetail => {\r\n        const protocol = matchedDetail.protocol;\r\n        if (!protocol) {\r\n          return;\r\n        }\r\n\r\n        // If it is not already in the MatchedProtocols Collection, insert it with its score\r\n        if (!this.matchedProtocols.has(protocol.id)) {\r\n          log.trace(\r\n            'ProtocolEngine::updateProtocolMatches inserting protocol match',\r\n            matchedDetail\r\n          );\r\n          this.matchedProtocols.set(protocol.id, protocol);\r\n          this.matchedProtocolScores[protocol.id] = matchedDetail.score;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  _largestKeyByValue(obj) {\r\n    return Object.keys(obj).reduce((a, b) => (obj[a] > obj[b] ? a : b));\r\n  }\r\n\r\n  _getHighestScoringProtocol() {\r\n    if (!Object.keys(this.matchedProtocolScores).length) {\r\n      return this.protocolStore.getProtocol('defaultProtocol');\r\n    }\r\n    const highestScoringProtocolId = this._largestKeyByValue(\r\n      this.matchedProtocolScores\r\n    );\r\n    return this.matchedProtocols.get(highestScoringProtocolId);\r\n  }\r\n\r\n  /**\r\n   * Return the best matched Protocol to the current study or set of studies\r\n   * @returns {*}\r\n   */\r\n  getBestProtocolMatch() {\r\n    // Run the matching to populate matchedProtocols Set and Map\r\n    this.updateProtocolMatches();\r\n\r\n    // Retrieve the highest scoring Protocol\r\n    const bestMatch = this._getHighestScoringProtocol();\r\n\r\n    log.trace('ProtocolEngine::getBestProtocolMatch bestMatch', bestMatch);\r\n\r\n    return bestMatch;\r\n  }\r\n\r\n  /**\r\n   * Get the number of prior studies supplied in the priorStudies map property.\r\n   *\r\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\r\n   * @returns {number} The number of available prior studies with the same PatientID\r\n   */\r\n  getNumberOfAvailablePriors(studyObjectID) {\r\n    return this.getAvailableStudyPriors(studyObjectID).length;\r\n  }\r\n\r\n  /**\r\n   * Get the array of prior studies from a specific study.\r\n   *\r\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\r\n   * @returns {Array} The array of available priors or an empty array\r\n   */\r\n  getAvailableStudyPriors(studyObjectID) {\r\n    const priors = this.priorStudies.get(studyObjectID);\r\n\r\n    return priors instanceof Array ? priors : [];\r\n  }\r\n\r\n  // Match images given a list of Studies and a Viewport's image matching reqs\r\n  matchImages(viewport, viewportIndex) {\r\n    log.trace('ProtocolEngine::matchImages');\r\n\r\n    const {\r\n      studyMatchingRules,\r\n      seriesMatchingRules,\r\n      imageMatchingRules: instanceMatchingRules,\r\n    } = viewport;\r\n\r\n    const matchingScores = [];\r\n    const currentStudy = this.studies[0]; // @TODO: Should this be: this.studies[this.currentStudy] ???\r\n    const firstInstance = currentStudy.getFirstInstance();\r\n\r\n    let highestStudyMatchingScore = 0;\r\n    let highestSeriesMatchingScore = 0;\r\n\r\n    // Set custom attribute for study metadata and it's first instance\r\n    currentStudy.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\r\n    if (firstInstance instanceof InstanceMetadata) {\r\n      firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\r\n    }\r\n\r\n    // Only used if study matching rules has abstract prior values defined...\r\n    let priorStudies;\r\n\r\n    studyMatchingRules.forEach(rule => {\r\n      if (rule.attribute === ABSTRACT_PRIOR_VALUE) {\r\n        const validatorType = Object.keys(rule.constraint)[0];\r\n        const validator = Object.keys(rule.constraint[validatorType])[0];\r\n\r\n        let abstractPriorValue = rule.constraint[validatorType][validator];\r\n        abstractPriorValue = parseInt(abstractPriorValue, 10);\r\n        // TODO: Restrict or clarify validators for abstractPriorValue?\r\n\r\n        // No need to call it more than once...\r\n        if (!priorStudies) {\r\n          priorStudies = this.getAvailableStudyPriors(\r\n            currentStudy.getObjectID()\r\n          );\r\n        }\r\n\r\n        // TODO: Revisit this later: What about two studies with the same\r\n        // study date?\r\n\r\n        let priorStudy;\r\n        if (abstractPriorValue === -1) {\r\n          priorStudy = priorStudies[priorStudies.length - 1];\r\n        } else {\r\n          const studyIndex = Math.max(abstractPriorValue - 1, 0);\r\n          priorStudy = priorStudies[studyIndex];\r\n        }\r\n\r\n        // Invalid data\r\n        if (!priorStudy instanceof StudyMetadata) {\r\n          return;\r\n        }\r\n\r\n        const priorStudyObjectID = priorStudy.getObjectID();\r\n\r\n        // Check if study metadata is already in studies list\r\n        if (\r\n          this.studies.find(study => study.getObjectID() === priorStudyObjectID)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        // Get study metadata if necessary and load study in the viewer (each viewer should provide it's own load study method)\r\n        this.studyMetadataSource.loadStudy(priorStudy).then(\r\n          studyMetadata => {\r\n            // Set the custom attribute abstractPriorValue for the study metadata\r\n            studyMetadata.setCustomAttribute(\r\n              ABSTRACT_PRIOR_VALUE,\r\n              abstractPriorValue\r\n            );\r\n\r\n            // Also add custom attribute\r\n            const firstInstance = studyMetadata.getFirstInstance();\r\n            if (firstInstance instanceof InstanceMetadata) {\r\n              firstInstance.setCustomAttribute(\r\n                ABSTRACT_PRIOR_VALUE,\r\n                abstractPriorValue\r\n              );\r\n            }\r\n\r\n            // Insert the new study metadata\r\n            this.studies.push(studyMetadata);\r\n\r\n            // Update the viewport to refresh layout manager with new study\r\n            this.updateViewports(viewportIndex);\r\n          },\r\n          error => {\r\n            log.warn(error);\r\n            throw new OHIFError(\r\n              `ProtocolEngine::matchImages could not get study metadata for the Study with the following ObjectID: ${priorStudyObjectID}`\r\n            );\r\n          }\r\n        );\r\n      }\r\n      // TODO: Add relative Date / time\r\n    });\r\n\r\n    this.studies.forEach(study => {\r\n      const studyMatchDetails = HPMatcher.match(\r\n        study.getFirstInstance(),\r\n        studyMatchingRules\r\n      );\r\n\r\n      // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\r\n      if (\r\n        studyMatchDetails.requiredFailed === true ||\r\n        studyMatchDetails.score < highestStudyMatchingScore\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      highestStudyMatchingScore = studyMatchDetails.score;\r\n\r\n      study.forEachSeries(series => {\r\n        const seriesMatchDetails = HPMatcher.match(\r\n          series.getFirstInstance(),\r\n          seriesMatchingRules\r\n        );\r\n\r\n        // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\r\n        if (\r\n          seriesMatchDetails.requiredFailed === true ||\r\n          seriesMatchDetails.score < highestSeriesMatchingScore\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        highestSeriesMatchingScore = seriesMatchDetails.score;\r\n\r\n        series.forEachInstance((instance, index) => {\r\n          // This tests to make sure there is actually image data in this instance\r\n          // TODO: Change this when we add PDF and MPEG support\r\n          // See https://ohiforg.atlassian.net/browse/LT-227\r\n          if (\r\n            !isImage(instance.getTagValue('SOPClassUID')) &&\r\n            !instance.getTagValue('Rows')\r\n          ) {\r\n            return;\r\n          }\r\n\r\n          const instanceMatchDetails = HPMatcher.match(\r\n            instance,\r\n            instanceMatchingRules\r\n          );\r\n\r\n          // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\r\n          if (instanceMatchDetails.requiredFailed === true) {\r\n            return;\r\n          }\r\n\r\n          const matchDetails = {\r\n            passed: [],\r\n            failed: [],\r\n          };\r\n\r\n          matchDetails.passed = matchDetails.passed.concat(\r\n            instanceMatchDetails.details.passed\r\n          );\r\n          matchDetails.passed = matchDetails.passed.concat(\r\n            seriesMatchDetails.details.passed\r\n          );\r\n          matchDetails.passed = matchDetails.passed.concat(\r\n            studyMatchDetails.details.passed\r\n          );\r\n\r\n          matchDetails.failed = matchDetails.failed.concat(\r\n            instanceMatchDetails.details.failed\r\n          );\r\n          matchDetails.failed = matchDetails.failed.concat(\r\n            seriesMatchDetails.details.failed\r\n          );\r\n          matchDetails.failed = matchDetails.failed.concat(\r\n            studyMatchDetails.details.failed\r\n          );\r\n\r\n          const totalMatchScore =\r\n            instanceMatchDetails.score +\r\n            seriesMatchDetails.score +\r\n            studyMatchDetails.score;\r\n          const currentSOPInstanceUID = instance.getSOPInstanceUID();\r\n\r\n          const imageDetails = {\r\n            StudyInstanceUID: study.getStudyInstanceUID(),\r\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n            SOPInstanceUID: currentSOPInstanceUID,\r\n            currentImageIdIndex: index,\r\n            matchingScore: totalMatchScore,\r\n            matchDetails: matchDetails,\r\n            sortingInfo: {\r\n              score: totalMatchScore,\r\n              study:\r\n                instance.getTagValue('StudyDate') +\r\n                instance.getTagValue('StudyTime'),\r\n              series: parseInt(instance.getTagValue('SeriesNumber')), // TODO: change for seriesDateTime\r\n              instance: parseInt(instance.getTagValue('InstanceNumber')), // TODO: change for acquisitionTime\r\n            },\r\n          };\r\n\r\n          // Find the displaySet\r\n          const displaySet = study.findDisplaySet(displaySet =>\r\n            displaySet.images.find(\r\n              image => image.getSOPInstanceUID() === currentSOPInstanceUID\r\n            )\r\n          );\r\n\r\n          // If the instance was found, set the displaySet ID\r\n          if (displaySet) {\r\n            imageDetails.displaySetInstanceUID = displaySet.getUID();\r\n            imageDetails.imageId = instance.getImageId();\r\n          }\r\n\r\n          matchingScores.push(imageDetails);\r\n        });\r\n      });\r\n    });\r\n\r\n    // Sort the matchingScores\r\n    const sortingFunction = sortBy(\r\n      {\r\n        name: 'score',\r\n        reverse: true,\r\n      },\r\n      {\r\n        name: 'study',\r\n        reverse: true,\r\n      },\r\n      {\r\n        name: 'instance',\r\n      },\r\n      {\r\n        name: 'series',\r\n      }\r\n    );\r\n    matchingScores.sort((a, b) =>\r\n      sortingFunction(a.sortingInfo, b.sortingInfo)\r\n    );\r\n\r\n    const bestMatch = matchingScores[0];\r\n\r\n    log.trace('ProtocolEngine::matchImages bestMatch', bestMatch);\r\n\r\n    return {\r\n      bestMatch,\r\n      matchingScores,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Sets the current layout\r\n   *\r\n   * @param {number} numRows\r\n   * @param {number} numColumns\r\n   */\r\n  setLayout(numRows, numColumns) {\r\n    if (numRows < 1 && numColumns < 1) {\r\n      log.error(`Invalid layout ${numRows} x ${numColumns}`);\r\n      return;\r\n    }\r\n\r\n    if (typeof this.options.setLayout !== 'function') {\r\n      log.error('Hanging Protocol Engine setLayout callback is not defined');\r\n      return;\r\n    }\r\n\r\n    let viewports = [];\r\n    const numViewports = numRows * numColumns;\r\n\r\n    for (let i = 0; i < numViewports; i++) {\r\n      viewports.push({});\r\n    }\r\n\r\n    this.options.setLayout({ numRows, numColumns, viewports });\r\n  }\r\n\r\n  /**\r\n   * Rerenders viewports that are part of the current layout manager\r\n   * using the matching rules internal to each viewport.\r\n   *\r\n   * If this function is provided the index of a viewport, only the specified viewport\r\n   * is rerendered.\r\n   *\r\n   * @param viewportIndex\r\n   */\r\n  updateViewports(viewportIndex) {\r\n    log.trace(\r\n      `ProtocolEngine::updateViewports viewportIndex: ${viewportIndex}`\r\n    );\r\n\r\n    // Make sure we have an active protocol with a non-empty array of display sets\r\n    if (!this.getNumProtocolStages()) {\r\n      return;\r\n    }\r\n\r\n    // Retrieve the current stage\r\n    const stageModel = this.getCurrentStageModel();\r\n\r\n    // If the current stage does not fulfill the requirements to be displayed,\r\n    // stop here.\r\n    if (\r\n      !stageModel ||\r\n      !stageModel.viewportStructure ||\r\n      !stageModel.viewports ||\r\n      !stageModel.viewports.length\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Retrieve the layoutTemplate associated with the current display set's viewport structure\r\n    // If no such template name exists, stop here.\r\n    const layoutTemplateName = stageModel.viewportStructure.getLayoutTemplateName();\r\n    if (!layoutTemplateName) {\r\n      return;\r\n    }\r\n\r\n    // Retrieve the properties associated with the current display set's viewport structure template\r\n    // If no such layout properties exist, stop here.\r\n    const layoutProps = stageModel.viewportStructure.properties;\r\n    if (!layoutProps) {\r\n      return;\r\n    }\r\n\r\n    // Create an empty array to store the output viewportData\r\n    const viewportData = [];\r\n\r\n    // Empty the matchDetails associated with the ProtocolEngine.\r\n    // This will be used to store the pass/fail details and score\r\n    // for each of the viewport matching procedures\r\n    this.matchDetails = [];\r\n\r\n    // Loop through each viewport\r\n    stageModel.viewports.forEach((viewport, viewportIndex) => {\r\n      const details = this.matchImages(viewport, viewportIndex);\r\n\r\n      this.matchDetails[viewportIndex] = details;\r\n\r\n      // Convert any YES/NO values into true/false for Cornerstone\r\n      const cornerstoneViewportParams = {};\r\n\r\n      // Cache viewportSettings keys\r\n      const viewportSettingsKeys = Object.keys(viewport.viewportSettings);\r\n\r\n      viewportSettingsKeys.forEach(key => {\r\n        let value = viewport.viewportSettings[key];\r\n        if (value === 'YES') {\r\n          value = true;\r\n        } else if (value === 'NO') {\r\n          value = false;\r\n        }\r\n\r\n        cornerstoneViewportParams[key] = value;\r\n      });\r\n\r\n      // imageViewerViewports occasionally needs relevant layout data in order to set\r\n      // the element style of the viewport in question\r\n      const currentViewportData = {\r\n        viewportIndex,\r\n        viewport: cornerstoneViewportParams,\r\n        ...layoutProps,\r\n      };\r\n\r\n      const customSettings = [];\r\n      viewportSettingsKeys.forEach(id => {\r\n        const setting = CustomViewportSettings[id];\r\n        if (!setting) {\r\n          return;\r\n        }\r\n\r\n        customSettings.push({\r\n          id: id,\r\n          value: viewport.viewportSettings[id],\r\n        });\r\n      });\r\n\r\n      currentViewportData.renderedCallback = element => {\r\n        //console.log('renderedCallback for ' + element.id);\r\n        customSettings.forEach(customSetting => {\r\n          log.trace(\r\n            `ProtocolEngine::currentViewportData.renderedCallback Applying custom setting: ${customSetting.id}`\r\n          );\r\n          log.trace(\r\n            `ProtocolEngine::currentViewportData.renderedCallback with value: ${customSetting.value}`\r\n          );\r\n\r\n          const setting = CustomViewportSettings[customSetting.id];\r\n          setting.callback(element, customSetting.value);\r\n        });\r\n      };\r\n\r\n      let currentMatch = details.bestMatch;\r\n      let currentPosition = 1;\r\n      const scoresLength = details.matchingScores.length;\r\n      while (\r\n        currentPosition < scoresLength &&\r\n        viewportData.find(a => a.imageId === currentMatch.imageId)\r\n      ) {\r\n        currentMatch = details.matchingScores[currentPosition];\r\n        currentPosition++;\r\n      }\r\n\r\n      if (currentMatch && currentMatch.imageId) {\r\n        currentViewportData.StudyInstanceUID = currentMatch.StudyInstanceUID;\r\n        currentViewportData.SeriesInstanceUID = currentMatch.SeriesInstanceUID;\r\n        currentViewportData.SOPInstanceUID = currentMatch.SOPInstanceUID;\r\n        currentViewportData.currentImageIdIndex =\r\n          currentMatch.currentImageIdIndex;\r\n        currentViewportData.displaySetInstanceUID =\r\n          currentMatch.displaySetInstanceUID;\r\n        currentViewportData.imageId = currentMatch.imageId;\r\n      }\r\n\r\n      // @TODO Why should we throw an exception when a best match is not found? This was aborting the whole process.\r\n      // if (!currentViewportData.displaySetInstanceUID) {\r\n      //     throw new OHIFError('ProtocolEngine::updateViewports No matching display set found?');\r\n      // }\r\n\r\n      viewportData.push(currentViewportData);\r\n    });\r\n\r\n    this.setLayout(layoutProps.Rows, layoutProps.Columns);\r\n\r\n    if (typeof this.options.setViewportSpecificData !== 'function') {\r\n      log.error(\r\n        'Hanging Protocol Engine setViewportSpecificData callback is not defined'\r\n      );\r\n      return;\r\n    }\r\n\r\n    // If viewportIndex is defined, then update only that viewport\r\n    if (viewportIndex !== undefined && viewportData[viewportIndex]) {\r\n      this.options.setViewportSpecificData(\r\n        viewportIndex,\r\n        viewportData[viewportIndex]\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Update all viewports\r\n    viewportData.forEach(viewportSpecificData => {\r\n      this.options.setViewportSpecificData(\r\n        viewportSpecificData.viewportIndex,\r\n        viewportSpecificData\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the current Hanging Protocol to the specified Protocol\r\n   * An optional argument can also be used to prevent the updating of the Viewports\r\n   *\r\n   * @param newProtocol\r\n   * @param updateViewports\r\n   */\r\n  setHangingProtocol(newProtocol, updateViewports = true) {\r\n    log.trace('ProtocolEngine::setHangingProtocol newProtocol', newProtocol);\r\n    log.trace(\r\n      `ProtocolEngine::setHangingProtocol updateViewports = ${updateViewports}`\r\n    );\r\n\r\n    // Reset the array of newStageIds\r\n    this.newStageIds = [];\r\n\r\n    if (Protocol.prototype.isPrototypeOf(newProtocol)) {\r\n      this.protocol = newProtocol;\r\n    } else {\r\n      this.protocol = new Protocol();\r\n      this.protocol.fromObject(newProtocol);\r\n    }\r\n\r\n    this.stage = 0;\r\n\r\n    // Update viewports by default\r\n    if (updateViewports) {\r\n      this.updateViewports();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the next stage is available\r\n   * @return {Boolean} True if next stage is available or false otherwise\r\n   */\r\n  isNextStageAvailable() {\r\n    const numberOfStages = this.getNumProtocolStages();\r\n\r\n    return this.stage + 1 < numberOfStages;\r\n  }\r\n\r\n  /**\r\n   * Check if the previous stage is available\r\n   * @return {Boolean} True if previous stage is available or false otherwise\r\n   */\r\n  isPreviousStageAvailable() {\r\n    return this.stage - 1 >= 0;\r\n  }\r\n\r\n  /**\r\n   * Changes the current stage to a new stage index in the display set sequence.\r\n   * It checks if the next stage exists.\r\n   *\r\n   * @param {Integer} stageAction An integer value specifying wheater next (1) or previous (-1) stage\r\n   * @return {Boolean} True if new stage has set or false, otherwise\r\n   */\r\n  setCurrentProtocolStage(stageAction) {\r\n    // Check if previous or next stage is available\r\n    if (stageAction === -1 && !this.isPreviousStageAvailable()) {\r\n      return false;\r\n    } else if (stageAction === 1 && !this.isNextStageAvailable()) {\r\n      return false;\r\n    }\r\n\r\n    // Sets the new stage\r\n    this.stage += stageAction;\r\n\r\n    // Log the new stage\r\n    log.trace(`ProtocolEngine::setCurrentProtocolStage stage = ${this.stage}`);\r\n\r\n    // Since stage has changed, we need to update the viewports\r\n    // and redo matchings\r\n    this.updateViewports();\r\n\r\n    // Everything went well\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the number of Stages in the current Protocol or\r\n   * undefined if no protocol or stages are set\r\n   */\r\n  getNumProtocolStages() {\r\n    if (\r\n      !this.protocol ||\r\n      !this.protocol.stages ||\r\n      !this.protocol.stages.length\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return this.protocol.stages.length;\r\n  }\r\n\r\n  /**\r\n   * Switches to the next protocol stage in the display set sequence\r\n   */\r\n  nextProtocolStage() {\r\n    log.trace('ProtocolEngine::nextProtocolStage');\r\n\r\n    if (!this.setCurrentProtocolStage(1)) {\r\n      log.trace('ProtocolEngine::nextProtocolStage failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to the previous protocol stage in the display set sequence\r\n   */\r\n  previousProtocolStage() {\r\n    log.trace('ProtocolEngine::previousProtocolStage');\r\n\r\n    if (!this.setCurrentProtocolStage(-1)) {\r\n      log.trace('ProtocolEngine::previousProtocolStage failed');\r\n    }\r\n  }\r\n}\r\n","// Sorts an array by score\r\nconst sortByScore = arr => {\r\n  arr.sort((a, b) => {\r\n    return b.score - a.score;\r\n  });\r\n};\r\n\r\nexport { sortByScore };\r\n","import Protocol from '../../classes/Protocol';\r\n\r\n// The ProtocolStore class allows persisting hanging protocols using different strategies.\r\n// For example, one strategy stores hanging protocols in the application server while\r\n// another strategy stores them in a remote machine, but only one strategy can be used at a time.\r\n\r\nexport default class ProtocolStore {\r\n  constructor(strategy) {\r\n    this.strategy = strategy;\r\n  }\r\n\r\n  /**\r\n   * Get a Protocol instance or array of Protocol instances for the given protocol object or array\r\n   * @param  {Object|array} protocolObject Protocol plain object or array of Protocol plain objects\r\n   * @return {Protocol|array} Protocol instance or array of Protocol intances for the given protocol object or array\r\n   */\r\n  static getProtocolInstance(protocolObject) {\r\n    let result = protocolObject;\r\n\r\n    // If result is an array of protocols objects\r\n    if (result instanceof Array) {\r\n      result.forEach((protocol, index) => {\r\n        // Check if protocol is an instance of Protocol\r\n        if (!(protocol instanceof Protocol)) {\r\n          const protocolInstance = new Protocol();\r\n          protocolInstance.fromObject(protocol);\r\n          result[index] = protocolInstance;\r\n        }\r\n      });\r\n    } else if (result !== void 0 && !(result instanceof Protocol)) {\r\n      // Check if result exists and is not an instance of Protocol\r\n      const protocolInstance = new Protocol();\r\n      protocolInstance.fromObject(result);\r\n      result = protocolInstance;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Registers a function to be called when the protocol store is ready to persist hanging protocols\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param callback The function to be called as a callback\r\n   */\r\n  onReady(callback) {\r\n    this.strategy.onReady(callback);\r\n  }\r\n\r\n  /**\r\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol\r\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\r\n   */\r\n  getProtocol(protocolId) {\r\n    let result = this.strategy.getProtocol(protocolId);\r\n    return ProtocolStore.getProtocolInstance(result);\r\n  }\r\n\r\n  /**\r\n   * Stores the hanging protocol\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocol The hanging protocol to be stored\r\n   */\r\n  addProtocol(protocol) {\r\n    this.strategy.addProtocol(protocol);\r\n  }\r\n\r\n  /**\r\n   * Updates the hanging protocol by protocolId\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol to update\r\n   * @param protocol The updated hanging protocol\r\n   */\r\n  updateProtocol(protocolId, protocol) {\r\n    this.strategy.updateProtocol(protocolId, protocol);\r\n  }\r\n\r\n  /**\r\n   * Removes the hanging protocol\r\n   *\r\n   * NOTE: Strategies should implement this function\r\n   *\r\n   * @param protocolId The protocol ID used to remove the hanging protocol\r\n   */\r\n  removeProtocol(protocolId) {\r\n    this.strategy.removeProtocol(protocolId);\r\n  }\r\n}\r\n","import Protocol from '../classes/Protocol';\r\nimport ViewportStructure from '../classes/ViewportStructure';\r\nimport Viewport from '../classes/Viewport';\r\nimport Stage from '../classes/Stage';\r\n\r\nfunction getDefaultProtocol() {\r\n  const protocol = new Protocol('Default');\r\n  protocol.id = 'defaultProtocol';\r\n  protocol.locked = true;\r\n\r\n  const oneByOne = new ViewportStructure('grid', {\r\n    Rows: 1,\r\n    Columns: 1,\r\n  });\r\n\r\n  const viewport = new Viewport();\r\n  const first = new Stage(oneByOne, 'oneByOne');\r\n  first.viewports.push(viewport);\r\n\r\n  protocol.stages.push(first);\r\n\r\n  return protocol;\r\n}\r\n\r\nconst defaultProtocol = getDefaultProtocol();\r\n\r\nexport default defaultProtocol;\r\n","import ProtocolEngine from './ProtocolEngine.js';\r\nimport { ProtocolStore, ProtocolStrategy } from './protocolStore';\r\nimport { addCustomAttribute } from './customAttributes';\r\nimport { addCustomViewportSetting } from './customViewportSettings';\r\n\r\nconst hangingProtocols = {\r\n  ProtocolEngine,\r\n  ProtocolStore,\r\n  ProtocolStrategy,\r\n  addCustomAttribute,\r\n  addCustomViewportSetting,\r\n};\r\n\r\nexport default hangingProtocols;\r\n","import log from '../../../log';\r\nimport defaultProtocol from '../defaultProtocol';\r\n\r\nexport default class ProtocolStrategy {\r\n  constructor() {\r\n    this.hangingProtocols = new Map();\r\n    this.defaultsAdded = false;\r\n  }\r\n\r\n  /**\r\n   * Registers a function to be called when the hangingProtocols collection is subscribed\r\n   * The callback is called only one time when the subscription is ready\r\n   *\r\n   * @param callback The function to be called as a callback\r\n   */\r\n  onReady(callback) {\r\n    if (!this.defaultsAdded) {\r\n      log.info('Inserting the default hanging protocol...');\r\n      this.addProtocol(defaultProtocol);\r\n      this.defaultsAdded = true;\r\n    }\r\n\r\n    callback();\r\n  }\r\n\r\n  /**\r\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol\r\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\r\n   */\r\n  getProtocol(protocolId) {\r\n    // Return the hanging protocol by protocolId if defined\r\n    if (protocolId) {\r\n      return this.hangingProtocols.get(protocolId);\r\n    }\r\n\r\n    // Otherwise, return all protocols\r\n    return Array.from(this.hangingProtocols.values());\r\n  }\r\n\r\n  /**\r\n   * Stores the hanging protocol\r\n   *\r\n   * @param protocol The hanging protocol to be stored\r\n   */\r\n  addProtocol(protocol) {\r\n    this.hangingProtocols.set(protocol.id, protocol);\r\n  }\r\n\r\n  /**\r\n   * Updates the hanging protocol by protocolId\r\n   *\r\n   * @param protocolId The protocol ID used to find the hanging protocol to update\r\n   * @param protocol The updated hanging protocol\r\n   */\r\n  updateProtocol(protocolId, protocol) {\r\n    if (!this.hangingProtocols.has(protocolId)) {\r\n      return;\r\n    }\r\n\r\n    this.hangingProtocols.set(protocolId, protocol);\r\n  }\r\n\r\n  /**\r\n   * Removes the hanging protocol\r\n   *\r\n   * @param protocolId The protocol ID used to remove the hanging protocol\r\n   */\r\n  removeProtocol(protocolId) {\r\n    if (!this.hangingProtocols.has(protocolId)) {\r\n      return;\r\n    }\r\n\r\n    this.hangingProtocols.delete(protocolId);\r\n  }\r\n}\r\n","//import Dropdown from './ui/dropdown/class.js';\r\n\r\n/*\r\n * Defines the base OHIF header object\r\n */\r\n//const dropdown = new OHIF.ui.Dropdown();\r\nconst header = {};\r\n\r\nexport default header;\r\n","// Transforms a shallow object with keys separated by \".\" into a nested object\r\nfunction getNestedObject(shallowObject) {\r\n  const nestedObject = {};\r\n  for (let key in shallowObject) {\r\n    if (!shallowObject.hasOwnProperty(key)) continue;\r\n    const value = shallowObject[key];\r\n    const propertyArray = key.split('.');\r\n    let currentObject = nestedObject;\r\n    while (propertyArray.length) {\r\n      const currentProperty = propertyArray.shift();\r\n      if (!propertyArray.length) {\r\n        currentObject[currentProperty] = value;\r\n      } else {\r\n        if (!currentObject[currentProperty]) {\r\n          currentObject[currentProperty] = {};\r\n        }\r\n\r\n        currentObject = currentObject[currentProperty];\r\n      }\r\n    }\r\n  }\r\n\r\n  return nestedObject;\r\n}\r\n\r\n// Transforms a nested object into a shallowObject merging its keys with \".\" character\r\nfunction getShallowObject(nestedObject) {\r\n  const shallowObject = {};\r\n  const putValues = (baseKey, nestedObject, resultObject) => {\r\n    for (let key in nestedObject) {\r\n      if (!nestedObject.hasOwnProperty(key)) continue;\r\n      let currentKey = baseKey ? `${baseKey}.${key}` : key;\r\n      const currentValue = nestedObject[key];\r\n      if (typeof currentValue === 'object') {\r\n        if (currentValue instanceof Array) {\r\n          currentKey += '[]';\r\n        }\r\n\r\n        putValues(currentKey, currentValue, resultObject);\r\n      } else {\r\n        resultObject[currentKey] = currentValue;\r\n      }\r\n    }\r\n  };\r\n\r\n  putValues('', nestedObject, shallowObject);\r\n  return shallowObject;\r\n}\r\n\r\nconst object = {\r\n  getNestedObject,\r\n  getShallowObject,\r\n};\r\n\r\nexport default object;\r\n","// TODO: This is duplicated in TypeSafeCollection\r\nfunction isObject(subject) {\r\n  return (\r\n    subject instanceof Object ||\r\n    (typeof subject === 'object' && subject !== null)\r\n  );\r\n}\r\n\r\n// TODO: This is duplicated in TypeSafeCollection\r\nfunction isString(subject) {\r\n  return typeof subject === 'string';\r\n}\r\n\r\n// Search for some string inside any object or array\r\nfunction search(object, query, property = null, result = []) {\r\n  // Create the search pattern\r\n  const pattern = new RegExp(query.trim(), 'i');\r\n\r\n  Object.keys(object).forEach(key => {\r\n    const item = object[key];\r\n\r\n    // Stop here if item is empty\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    // Get the value to be compared\r\n    const value = isString(property) ? item[property] : item;\r\n\r\n    // Check if the value match the pattern\r\n    if (isString(value) && pattern.test(value)) {\r\n      // Add the current item to the result\r\n      result.push(item);\r\n    }\r\n\r\n    if (isObject(item)) {\r\n      // Search recursively the item if the current item is an object\r\n      search(item, query, property, result);\r\n    }\r\n  });\r\n\r\n  // Return the found items\r\n  return result;\r\n}\r\n\r\n// Encode any string into a safe format for HTML id attribute\r\nfunction encodeId(input) {\r\n  const string = input && input.toString ? input.toString() : input;\r\n\r\n  // Return an underscore if the given string is empty or if it's not a string\r\n  if (string === '' || typeof string !== 'string') {\r\n    return '_';\r\n  }\r\n\r\n  // Create a converter to replace non accepted chars\r\n  const converter = match => '_' + match[0].charCodeAt(0).toString(16) + '_';\r\n\r\n  // Encode the given string and return it\r\n  return string.replace(/[^a-zA-Z0-9-]/g, converter);\r\n}\r\n\r\nconst string = {\r\n  search,\r\n  encodeId,\r\n};\r\n\r\nexport default string;\r\n","import unsavedChanges from './unsavedChanges.js';\r\nimport handleError from './handleError.js';\r\nimport isCharacterKeyPress from './isCharacterKeyPress.js';\r\nimport getOffset from './getOffset.js';\r\nimport getScrollbarSize from './getScrollbarSize.js';\r\n\r\nconst ui = {\r\n  getScrollbarSize,\r\n  getOffset,\r\n  isCharacterKeyPress,\r\n  handleError,\r\n};\r\n\r\nexport default ui;\r\n","/**\r\n * Get the vertical and horizontal scrollbar sizes\r\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\r\n *\r\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\r\n */\r\nexport default function getScrollbarSize() {\r\n  const inner = document.createElement('p');\r\n  inner.style.width = '100%';\r\n  inner.style.height = '100%';\r\n\r\n  const outer = document.createElement('div');\r\n  outer.style.position = 'absolute';\r\n  outer.style.top = '0px';\r\n  outer.style.left = '0px';\r\n  outer.style.visibility = 'hidden';\r\n  outer.style.width = '100px';\r\n  outer.style.height = '100px';\r\n  outer.style.overflow = 'hidden';\r\n  outer.appendChild(inner);\r\n\r\n  document.body.appendChild(outer);\r\n\r\n  const w1 = inner.offsetWidth;\r\n  const h1 = inner.offsetHeight;\r\n  outer.style.overflow = 'scroll';\r\n  let w2 = inner.offsetWidth;\r\n  let h2 = inner.offsetHeight;\r\n\r\n  if (w1 === w2) {\r\n    w2 = outer.clientWidth;\r\n  }\r\n\r\n  if (h1 === h2) {\r\n    h2 = outer.clientHeight;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n\r\n  return [w1 - w2, h1 - h2];\r\n}\r\n","/**\r\n * Get the offset for the given element\r\n *\r\n * @param {Object} element DOM element which will have the offser calculated\r\n * @returns {Object} Object containing the top and left offset\r\n */\r\nexport default function getOffset(element) {\r\n  let top = 0;\r\n  let left = 0;\r\n  if (element.offsetParent) {\r\n    do {\r\n      left += element.offsetLeft;\r\n      top += element.offsetTop;\r\n    } while ((element = element.offsetParent));\r\n  }\r\n\r\n  return {\r\n    left,\r\n    top,\r\n  };\r\n}\r\n","/**\r\n * Check if the pressed key combination will result in a character input\r\n * Got from https://stackoverflow.com/questions/4179708/how-to-detect-if-the-pressed-key-will-produce-a-character-inside-an-input-text\r\n *\r\n * @returns {Boolean} Whether the pressed key combination will input a character or not\r\n */\r\nexport default function isCharacterKeyPress(event) {\r\n  if (typeof event.which === 'undefined') {\r\n    // This is IE, which only fires keypress events for printable keys\r\n    return true;\r\n  } else if (typeof event.which === 'number' && event.which > 0) {\r\n    // In other browsers except old versions of WebKit, event.which is\r\n    // only greater than zero if the keypress is a printable key.\r\n    // We need to filter out backspace and ctrl/alt/meta key combinations\r\n    return (\r\n      !event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 8\r\n    );\r\n  }\r\n\r\n  return false;\r\n}\r\n","import log from '../log.js';\r\n\r\nexport default function handleError(error) {\r\n  let { title, message } = error;\r\n\r\n  if (!title) {\r\n    if (error instanceof Error) {\r\n      title = error.name;\r\n    }\r\n  }\r\n\r\n  if (!message) {\r\n    if (error instanceof Error) {\r\n      message = error.message;\r\n    }\r\n  }\r\n\r\n  const data = Object.assign(\r\n    {\r\n      title,\r\n      message,\r\n      class: 'themed',\r\n      hideConfirm: true,\r\n      cancelLabel: 'Dismiss',\r\n      cancelClass: 'btn-secondary',\r\n    },\r\n    error || {}\r\n  );\r\n\r\n  log.error(error);\r\n  // TODO: Find a better way to handle errors instead of displaying a dialog for all of them.\r\n  // OHIF.ui.showDialog('dialogForm', data);\r\n}\r\n","import './lib';\r\n\r\nimport { ExtensionManager, MODULE_TYPES } from './extensions';\r\nimport { ServicesManager } from './services';\r\nimport classes, { CommandsManager, HotkeysManager } from './classes/';\r\n\r\nimport DICOMWeb from './DICOMWeb';\r\nimport DICOMSR from './DICOMSR';\r\nimport cornerstone from './cornerstone.js';\r\nimport hangingProtocols from './hanging-protocols';\r\nimport header from './header.js';\r\nimport log from './log.js';\r\nimport measurements from './measurements';\r\nimport metadata from './classes/metadata/';\r\nimport object from './object.js';\r\nimport redux from './redux/';\r\nimport string from './string.js';\r\nimport studies from './studies/';\r\nimport ui from './ui';\r\nimport user from './user.js';\r\nimport errorHandler from './errorHandler.js';\r\nimport utils, { hotkeys } from './utils/';\r\nimport str2ab from './utils/str2ab';\r\n\r\nimport {\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  MeasurementService,\r\n  LoggerService,\r\n} from './services';\r\n\r\nconst OHIF = {\r\n  MODULE_TYPES,\r\n  //\r\n  CommandsManager,\r\n  ExtensionManager,\r\n  HotkeysManager,\r\n  ServicesManager,\r\n  //\r\n  utils,\r\n  hotkeys,\r\n  studies,\r\n  redux,\r\n  classes,\r\n  metadata,\r\n  header,\r\n  cornerstone,\r\n  string,\r\n  ui,\r\n  user,\r\n  errorHandler,\r\n  object,\r\n  log,\r\n  DICOMWeb,\r\n  DICOMSR,\r\n  viewer: {},\r\n  measurements,\r\n  hangingProtocols,\r\n  //\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  MeasurementService,\r\n  LoggerService,\r\n};\r\n\r\nexport {\r\n  MODULE_TYPES,\r\n  //\r\n  CommandsManager,\r\n  ExtensionManager,\r\n  HotkeysManager,\r\n  ServicesManager,\r\n  //\r\n  utils,\r\n  hotkeys,\r\n  studies,\r\n  redux,\r\n  classes,\r\n  metadata,\r\n  header,\r\n  cornerstone,\r\n  string,\r\n  ui,\r\n  user,\r\n  errorHandler,\r\n  object,\r\n  log,\r\n  DICOMWeb,\r\n  DICOMSR,\r\n  measurements,\r\n  hangingProtocols,\r\n  //\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  MeasurementService,\r\n  LoggerService,\r\n\r\n  str2ab,\r\n};\r\n\r\nexport { OHIF };\r\n\r\nexport default OHIF;\r\n","import getAttribute from './getAttribute.js';\r\nimport getAuthorizationHeader from './getAuthorizationHeader.js';\r\nimport getModalities from './getModalities.js';\r\nimport getName from './getName.js';\r\nimport getNumber from './getNumber.js';\r\nimport getString from './getString.js';\r\n\r\nconst DICOMWeb = {\r\n  getAttribute,\r\n  getAuthorizationHeader,\r\n  getModalities,\r\n  getName,\r\n  getNumber,\r\n  getString,\r\n};\r\n\r\nexport default DICOMWeb;\r\n","/**\r\n * Returns the specified element as a dicom attribute group/element.\r\n *\r\n * @param element - The group/element of the element (e.g. '00280009')\r\n * @param [defaultValue] - The value to return if the element is not present\r\n * @returns {*}\r\n */\r\nexport default function getAttribute(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return convertToInt(element.Value);\r\n}\r\n\r\nfunction convertToInt(input) {\r\n  function padFour(input) {\r\n    const l = input.length;\r\n\r\n    if (l == 0) return '0000';\r\n    if (l == 1) return '000' + input;\r\n    if (l == 2) return '00' + input;\r\n    if (l == 3) return '0' + input;\r\n\r\n    return input;\r\n  }\r\n\r\n  let output = '';\r\n  for (let i = 0; i < input.length; i++) {\r\n    for (let j = 0; j < input[i].length; j++) {\r\n      output += padFour(input[i].charCodeAt(j).toString(16));\r\n    }\r\n  }\r\n\r\n  return parseInt(output, 16);\r\n}\r\n","import user from '../user';\r\n\r\n/**\r\n * Returns the Authorization header as part of an Object.\r\n *\r\n * @export\r\n * @param {Object} [server={}]\r\n * @param {Object} [server.requestOptions]\r\n * @param {string|function} [server.requestOptions.auth]\r\n * @returns {Object} { Authorization }\r\n */\r\nexport default function getAuthorizationHeader({ requestOptions } = {}) {\r\n  const headers = {};\r\n\r\n  // Check for OHIF.user since this can also be run on the server\r\n  const accessToken = user && user.getAccessToken && user.getAccessToken();\r\n\r\n  // Auth for a specific server\r\n  if (requestOptions && requestOptions.auth) {\r\n    if (typeof requestOptions.auth === 'function') {\r\n      // Custom Auth Header\r\n      headers.Authorization = requestOptions.auth(requestOptions);\r\n    } else {\r\n      // HTTP Basic Auth (user:password)\r\n      headers.Authorization = `Basic ${btoa(requestOptions.auth)}`;\r\n    }\r\n  }\r\n  // Auth for the user's default\r\n  else if (accessToken) {\r\n    headers.Authorization = `Bearer ${accessToken}`;\r\n  }\r\n\r\n  return headers;\r\n}\r\n","export default function getModalities(Modality, ModalitiesInStudy) {\r\n  if (!Modality && !ModalitiesInStudy) {\r\n    return {};\r\n  }\r\n\r\n  const modalities = Modality || {\r\n    vr: 'CS',\r\n    Value: [],\r\n  };\r\n\r\n  if (ModalitiesInStudy) {\r\n    if (modalities.vr && modalities.vr === ModalitiesInStudy.vr) {\r\n      for (let i = 0; i < ModalitiesInStudy.Value.length; i++) {\r\n        const value = ModalitiesInStudy.Value[i];\r\n        if (modalities.Value.indexOf(value) === -1) {\r\n          modalities.Value.push(value);\r\n        }\r\n      }\r\n    } else {\r\n      return ModalitiesInStudy;\r\n    }\r\n  }\r\n\r\n  return modalities;\r\n}\r\n","/**\r\n * Returns the Alphabetic version of a PN\r\n *\r\n * @param element - The group/element of the element (e.g. '00200013')\r\n * @param [defaultValue] - The default value to return if the element is not found\r\n * @returns {*}\r\n */\r\nexport default function getName(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n  // Return the Alphabetic component group\r\n  if (element.Value[0].Alphabetic) {\r\n    return element.Value[0].Alphabetic;\r\n  }\r\n  // Orthanc does not return PN properly so this is a temporary workaround\r\n  return element.Value[0];\r\n}\r\n","/**\r\n * Returns the first string value as a Javascript Number\r\n * @param element - The group/element of the element (e.g. '00200013')\r\n * @param [defaultValue] - The default value to return if the element does not exist\r\n * @returns {*}\r\n */\r\nexport default function getNumber(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return parseFloat(element.Value[0]);\r\n}\r\n","/**\r\n * Returns the specified element as a string.  Multi-valued elements will be separated by a backslash\r\n *\r\n * @param element - The group/element of the element (e.g. '00200013')\r\n * @param [defaultValue] - The value to return if the element is not present\r\n * @returns {*}\r\n */\r\nexport default function getString(element, defaultValue) {\r\n  if (!element) {\r\n    return defaultValue;\r\n  }\r\n  // Value is not present if the attribute has a zero length value\r\n  if (!element.Value) {\r\n    return defaultValue;\r\n  }\r\n  // Sanity check to make sure we have at least one entry in the array.\r\n  if (!element.Value.length) {\r\n    return defaultValue;\r\n  }\r\n  // Join the array together separated by backslash\r\n  // NOTE: Orthanc does not correctly split values into an array so the join is a no-op\r\n  return element.Value.join('\\\\');\r\n}\r\n","import React from 'react';\r\nimport adjust from './icons/adjust.svg';\r\n// Icons\r\nimport angleDoubleDown from './icons/angle-double-down.svg';\r\nimport angleDoubleUp from './icons/angle-double-up.svg';\r\nimport angleLeft from './icons/angle-left.svg';\r\nimport arrows from './icons/arrows.svg';\r\nimport arrowsAltH from './icons/arrows-alt-h.svg';\r\nimport arrowsAltV from './icons/arrows-alt-v.svg';\r\nimport bars from './icons/bars.svg';\r\nimport brain from './icons/brain.svg';\r\nimport brush from './icons/brush.svg';\r\nimport caretDown from './icons/caret-down.svg';\r\nimport caretUp from './icons/caret-up.svg';\r\nimport check from './icons/check.svg';\r\nimport checkCircle from './icons/check-circle.svg';\r\nimport checkCircleO from './icons/check-circle-o.svg';\r\nimport chevronDown from './icons/chevron-down.svg';\r\nimport circle from './icons/circle.svg';\r\nimport circleNotch from './icons/circle-notch.svg';\r\nimport circleO from './icons/circle-o.svg';\r\nimport clipboard from './icons/clipboard.svg';\r\nimport cog from './icons/cog.svg';\r\nimport createComment from './icons/create-comment.svg';\r\nimport createScreenCapture from './icons/create-screen-capture.svg';\r\nimport crosshairs from './icons/crosshairs.svg';\r\nimport cube from './icons/cube.svg';\r\nimport d3Rotate from './icons/3d-rotate.svg';\r\nimport database from './icons/database.svg';\r\nimport dotCircle from './icons/dot-circle.svg';\r\nimport edit from './icons/edit.svg';\r\nimport ellipseCircle from './icons/ellipse-circle.svg';\r\nimport ellipseH from './icons/ellipse-h.svg';\r\nimport ellipseV from './icons/ellipse-v.svg';\r\nimport exclamationCircle from './icons/exclamation-circle.svg';\r\nimport exclamationTriangle from './icons/exclamation-triangle.svg';\r\nimport fastBackward from './icons/fast-backward.svg';\r\nimport fastForward from './icons/fast-forward.svg';\r\nimport stop from './icons/stop.svg';\r\nimport info from './icons/info.svg';\r\nimport inlineEdit from './icons/inline-edit.svg';\r\nimport level from './icons/level.svg';\r\nimport link from './icons/link.svg';\r\nimport linkCircles from './icons/link-circles.svg';\r\nimport list from './icons/list.svg';\r\nimport liver from './icons/liver.svg';\r\nimport lock from './icons/lock.svg';\r\nimport lockAlt from './icons/lock-alt.svg';\r\nimport lung from './icons/lung.svg';\r\nimport measureNonTarget from './icons/measure-non-target.svg';\r\nimport measureTarget from './icons/measure-target.svg';\r\nimport measureTargetCr from './icons/measure-target-cr.svg';\r\nimport measureTargetNe from './icons/measure-target-ne.svg';\r\nimport measureTargetUn from './icons/measure-target-un.svg';\r\nimport measureTemp from './icons/measure-temp.svg';\r\nimport objectGroup from './icons/object-group.svg';\r\nimport ohifLogo from './icons/ohif-logo.svg';\r\nimport ohifTextLogo from './icons/ohif-text-logo.svg';\r\nimport oval from './icons/oval.svg';\r\nimport palette from './icons/palette.svg';\r\nimport play from './icons/play.svg';\r\nimport plus from './icons/plus.svg';\r\nimport powerOff from './icons/power-off.svg';\r\nimport reset from './icons/reset.svg';\r\nimport rotate from './icons/rotate.svg';\r\nimport rotateRight from './icons/rotate-right.svg';\r\nimport saveRegular from './icons/save-regular.svg';\r\nimport scissors from './icons/scissors.svg';\r\nimport search from './icons/search.svg';\r\nimport searchPlus from './icons/search-plus.svg';\r\nimport softTissue from './icons/soft-tissue.svg';\r\nimport sort from './icons/sort.svg';\r\nimport sortDown from './icons/sort-down.svg';\r\nimport sortUp from './icons/sort-up.svg';\r\nimport sphere from './icons/sphere.svg';\r\nimport squareO from './icons/square-o.svg';\r\nimport star from './icons/star.svg';\r\nimport stepBackward from './icons/step-backward.svg';\r\nimport stepForward from './icons/step-forward.svg';\r\nimport sun from './icons/sun.svg';\r\nimport th from './icons/th.svg';\r\nimport thLarge from './icons/th-large.svg';\r\nimport thList from './icons/th-list.svg';\r\nimport times from './icons/times.svg';\r\nimport trash from './icons/trash.svg';\r\nimport unlink from './icons/unlink.svg';\r\nimport user from './icons/user.svg';\r\nimport youtube from './icons/youtube.svg';\r\nimport eye from './icons/eye.svg';\r\nimport eyeClosed from './icons/eye-closed.svg';\r\nimport envelopeSquare from './icons/envelope-square.svg';\r\n\r\nconst ICONS = {\r\n  eye,\r\n  'eye-closed': eyeClosed,\r\n  brush,\r\n  scissors,\r\n  user,\r\n  sort,\r\n  th,\r\n  star,\r\n  'sort-up': sortUp,\r\n  sphere,\r\n  'sort-down': sortDown,\r\n  info,\r\n  cube,\r\n  crosshairs,\r\n  'dot-circle': dotCircle,\r\n  'angle-left': angleLeft,\r\n  '3d-rotate': d3Rotate,\r\n  plus,\r\n  'chevron-down': chevronDown,\r\n  'angle-double-down': angleDoubleDown,\r\n  'angle-double-up': angleDoubleUp,\r\n  'arrows-alt-h': arrowsAltH,\r\n  'arrows-alt-v': arrowsAltV,\r\n  bars,\r\n  'caret-down': caretDown,\r\n  'caret-up': caretUp,\r\n  'check-circle-o': checkCircleO,\r\n  check,\r\n  circle,\r\n  'circle-o': circleO,\r\n  times,\r\n  'create-comment': createComment,\r\n  'create-screen-capture': createScreenCapture,\r\n  edit,\r\n  'fast-backward': fastBackward,\r\n  'fast-forward': fastForward,\r\n  'object-group': objectGroup,\r\n  search,\r\n  'power-off': powerOff,\r\n  'inline-edit': inlineEdit,\r\n  list,\r\n  'ohif-logo': ohifLogo,\r\n  'ohif-text-logo': ohifTextLogo,\r\n  lock,\r\n  play,\r\n  database,\r\n  cog,\r\n  'circle-notch': circleNotch,\r\n  'square-o': squareO,\r\n  'check-circle': checkCircle,\r\n  'lock-alt': lockAlt,\r\n  'step-backward': stepBackward,\r\n  'step-forward': stepForward,\r\n  clipboard: clipboard,\r\n  stop,\r\n  'th-large': thLarge,\r\n  'th-list': thList,\r\n  sun,\r\n  palette,\r\n  youtube,\r\n  oval,\r\n  'ellipse-h': ellipseH,\r\n  'ellipse-v': ellipseV,\r\n  adjust,\r\n  level,\r\n  'link-circles': linkCircles,\r\n  'search-plus': searchPlus,\r\n  'measure-non-target': measureNonTarget,\r\n  'measure-target': measureTarget,\r\n  'measure-target-cr': measureTargetCr,\r\n  'measure-target-un': measureTargetUn,\r\n  'measure-target-ne': measureTargetNe,\r\n  'measure-temp': measureTemp,\r\n  'ellipse-circle': ellipseCircle,\r\n  arrows,\r\n  reset,\r\n  rotate,\r\n  'rotate-right': rotateRight,\r\n  trash,\r\n  unlink,\r\n  'exclamation-circle': exclamationCircle,\r\n  link,\r\n  'exclamation-triangle': exclamationTriangle,\r\n  brain,\r\n  'soft-tissue': softTissue,\r\n  lung,\r\n  liver,\r\n  save: saveRegular,\r\n  'envelope-square': envelopeSquare,\r\n};\r\n\r\n/**\r\n * Return the matching SVG Icon as a React Component.\r\n * Results in an inlined SVG Element. If there's no match,\r\n * return `null`\r\n */\r\nexport default function getIcon(key, props) {\r\n  if (!key || !ICONS[key]) {\r\n    return React.createElement('div', null, 'Missing Icon');\r\n  }\r\n\r\n  return React.createElement(ICONS[key], props);\r\n}\r\n\r\nexport { ICONS };\r\n","import './Icon.styl';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport getIcon from './getIcon.js';\r\n\r\nconst Icon = props => {\r\n  return getIcon(props.name, props);\r\n};\r\n\r\nIcon.propTypes = {\r\n  /** The string name of the icon to display */\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Icon;\r\n","import { ICONS } from './getIcon.js';\r\nimport Icon from './Icon.js';\r\n\r\nexport { Icon, ICONS };\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst ModalContext = createContext(null);\r\nconst { Provider } = ModalContext;\r\n\r\nexport const useModal = () => useContext(ModalContext);\r\n\r\n/**\r\n * UI Modal\r\n *\r\n * @typedef {Object} ModalProps\r\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\r\n * @property {Object} [contentProps=null] Modal content props.\r\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\r\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\r\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\r\n * @property {string} [title=null] Should the modal render the title independently of the body content.\r\n * @property {string} [customClassName=null] The custom class to style the modal.\r\n */\r\n\r\nconst ModalProvider = ({ children, modal: Modal, service }) => {\r\n  const DEFAULT_OPTIONS = {\r\n    content: null,\r\n    contentProps: null,\r\n    shouldCloseOnEsc: false,\r\n    isOpen: true,\r\n    onClose: null,\r\n    closeButton: true,\r\n    showScrollbar: false,\r\n    title: null,\r\n    customClassName: '',\r\n    fullscreen: false,\r\n  };\r\n\r\n  const [options, setOptions] = useState(DEFAULT_OPTIONS);\r\n\r\n  /**\r\n   * Show the modal and override its configuration props.\r\n   *\r\n   * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, closeButton, title, customClassName }\r\n   * @returns void\r\n   */\r\n  const show = useCallback(props => setOptions({ ...options, ...props }), [\r\n    options,\r\n  ]);\r\n\r\n  /**\r\n   * Hide the modal and set its properties to default.\r\n   *\r\n   * @returns void\r\n   */\r\n  const hide = useCallback(() => setOptions(DEFAULT_OPTIONS), [\r\n    DEFAULT_OPTIONS,\r\n  ]);\r\n\r\n  /**\r\n   * Sets the implementation of a modal service that can be used by extensions.\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ hide, show });\r\n    }\r\n  }, [hide, service, show]);\r\n\r\n  const {\r\n    content: ModalContent,\r\n    contentProps,\r\n    isOpen,\r\n    onClose,\r\n    title,\r\n    customClassName,\r\n    shouldCloseOnEsc,\r\n    fullscreen,\r\n    closeButton,\r\n    showScrollbar,\r\n    noScroll,\r\n  } = options;\r\n\r\n  return (\r\n    <Provider value={{ show, hide }}>\r\n      {ModalContent && (\r\n        <Modal\r\n          className={classNames(\r\n            customClassName,\r\n            ModalContent.className,\r\n            { visibleScrollbar: showScrollbar },\r\n            { noScroll }\r\n          )}\r\n          shouldCloseOnEsc={shouldCloseOnEsc}\r\n          isOpen={isOpen}\r\n          title={title}\r\n          fullscreen={fullscreen}\r\n          closeButton={closeButton}\r\n          onClose={() => {\r\n            if (onClose) {\r\n              onClose();\r\n            }\r\n\r\n            hide();\r\n          }}\r\n        >\r\n          <ModalContent {...contentProps} show={show} hide={hide} />\r\n        </Modal>\r\n      )}\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Higher Order Component to use the modal methods through a Class Component.\r\n *\r\n * @returns\r\n */\r\nexport const withModal = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { show, hide } = useModal();\r\n    return <Component {...props} modal={{ show, hide }} />;\r\n  };\r\n};\r\n\r\nModalProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nModalProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  modal: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default ModalProvider;\r\n\r\nexport const ModalConsumer = ModalContext.Consumer;\r\n","import React, { useEffect } from 'react';\r\n\r\nconst SnackbarItem = ({ options, onClose }) => {\r\n  const handleClose = () => {\r\n    onClose(options.id);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    options.action.onClick({ ...options, close: handleClose });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (options.autoClose) {\r\n      setTimeout(() => {\r\n        handleClose();\r\n      }, options.duration);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`${options.visible ? '' : 'sb-hidden'} sb-${\r\n        options.type\r\n      } sb-item`}\r\n    >\r\n      <span className=\"sb-closeBtn\" onClick={handleClose}>\r\n        <span className=\"sb-closeIcon\">x</span>\r\n      </span>\r\n      {options.title && <div className=\"sb-title\">{options.title}</div>}\r\n      {options.message && <div className=\"sb-message\">{options.message}</div>}\r\n      {options.action && (\r\n        <button className=\"sb-action\" onClick={handleClick}>\r\n          {options.action.label}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnackbarItem;\r\n","import React from 'react';\r\nimport SnackbarItem from './SnackbarItem';\r\nimport './Snackbar.css';\r\nimport { useSnackbarContext } from '../../contextProviders';\r\n\r\nconst SnackbarContainer = () => {\r\n  const { snackbarItems, hide } = useSnackbarContext();\r\n\r\n  const renderItem = item => {\r\n    return <SnackbarItem key={item.itemId} options={item} onClose={hide} />;\r\n  };\r\n\r\n  if (!snackbarItems) {\r\n    return null;\r\n  }\r\n\r\n  const renderItems = () => {\r\n    const items = {\r\n      topLeft: [],\r\n      topCenter: [],\r\n      topRight: [],\r\n      bottomLeft: [],\r\n      bottomCenter: [],\r\n      bottomRight: [],\r\n    };\r\n\r\n    snackbarItems.map(item => {\r\n      items[item.position].push(item);\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {Object.keys(items).map(pos => {\r\n          if (!items[pos].length) {\r\n            return null;\r\n          }\r\n\r\n          return (\r\n            <div key={pos} className={`sb-container sb-${pos}`}>\r\n              {items[pos].map((item, index) => (\r\n                <div key={item.id + index}>{renderItem(item)}</div>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <>{renderItems()}</>;\r\n};\r\n\r\nexport default SnackbarContainer;\r\n","export default {\r\n  INFO: 'info',\r\n  WARNING: 'warning',\r\n  SUCCESS: 'success',\r\n  ERROR: 'error',\r\n};\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useContext,\r\n  useCallback,\r\n  useEffect,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classes } from '@ohif/core';\r\n\r\nimport SnackbarContainer from '../components/snackbar/SnackbarContainer';\r\nimport SnackbarTypes from '../components/snackbar/SnackbarTypes';\r\n\r\nconst { LogManager } = classes;\r\n\r\nconst SnackbarContext = createContext(null);\r\n\r\nexport const useSnackbarContext = () => useContext(SnackbarContext);\r\n\r\nconst SnackbarProvider = ({ children, service }) => {\r\n  const DEFAULT_OPTIONS = {\r\n    title: '',\r\n    message: '',\r\n    duration: 5000,\r\n    autoClose: true,\r\n    position: 'bottomRight',\r\n    type: SnackbarTypes.INFO,\r\n    action: null,\r\n  };\r\n\r\n  const [count, setCount] = useState(1);\r\n  const [snackbarItems, setSnackbarItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const onLogHandler = ({ type, notify, title, message }) => {\r\n      if (notify) {\r\n        show({ type, title, message });\r\n      }\r\n    };\r\n\r\n    LogManager.subscribe(LogManager.EVENTS.OnLog, onLogHandler);\r\n\r\n    return () => {\r\n      LogManager.unsubscribe(LogManager.EVENTS.OnLog, onLogHandler);\r\n    };\r\n  }, [show]);\r\n\r\n  const show = useCallback(\r\n    options => {\r\n      if (!options || (!options.title && !options.message)) {\r\n        console.warn(\r\n          'Snackbar cannot be rendered without required parameters: title | message'\r\n        );\r\n\r\n        return null;\r\n      }\r\n\r\n      if (options.type === 'error') {\r\n        console.error(options.error);\r\n      }\r\n\r\n      const newItem = {\r\n        ...DEFAULT_OPTIONS,\r\n        ...options,\r\n        id: count,\r\n        visible: true,\r\n      };\r\n\r\n      setSnackbarItems(state => [...state, newItem]);\r\n      setCount(count + 1);\r\n    },\r\n    [count, DEFAULT_OPTIONS]\r\n  );\r\n\r\n  const hide = useCallback(\r\n    id => {\r\n      const hideItem = items => {\r\n        const newItems = items.map(item => {\r\n          if (item.id === id) {\r\n            item.visible = false;\r\n          }\r\n\r\n          return item;\r\n        });\r\n\r\n        return newItems;\r\n      };\r\n\r\n      setSnackbarItems(state => hideItem(state));\r\n\r\n      setTimeout(() => {\r\n        setSnackbarItems(state => [...state.filter(item => item.id !== id)]);\r\n      }, 1000);\r\n    },\r\n    [setSnackbarItems]\r\n  );\r\n\r\n  const hideAll = () => {\r\n    // reset count\r\n    setCount(1);\r\n\r\n    // remove all items from array\r\n    setSnackbarItems(() => []);\r\n  };\r\n\r\n  /**\r\n   * Sets the implementation of a notification service that can be used by extensions.\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ hide, show });\r\n    }\r\n  }, [service, hide, show]);\r\n\r\n  /**\r\n   * expose snackbar methods to window for debug purposes\r\n   * TODO: Check if it's really necessary\r\n   */\r\n  window.snackbar = {\r\n    show,\r\n    hide,\r\n    hideAll,\r\n  };\r\n\r\n  return (\r\n    <SnackbarContext.Provider value={{ show, hide, hideAll, snackbarItems }}>\r\n      {!!snackbarItems && <SnackbarContainer />}\r\n      {children}\r\n    </SnackbarContext.Provider>\r\n  );\r\n};\r\n\r\nSnackbarProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nSnackbarProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\n/**\r\n *\r\n * High Order Component to use the snackbar methods through a Class Component\r\n *\r\n */\r\nexport const withSnackbar = Component => {\r\n  return function WrappedComponent(props) {\r\n    const snackbarContext = {\r\n      ...useSnackbarContext(),\r\n    };\r\n    return <Component {...props} snackbarContext={snackbarContext} />;\r\n  };\r\n};\r\n\r\nexport default SnackbarProvider;\r\n","// Reference > https://reactjs.org/docs/context.html\r\nimport React from 'react';\r\nimport {\r\n  withTranslation as I18NextWithTranslation,\r\n  I18nextProvider,\r\n} from 'react-i18next';\r\nimport i18n from '@ohif/i18n';\r\n\r\nconst WrapperI18n = Component => {\r\n  const WrapperComponent = props => (\r\n    <I18nextProvider i18n={i18n}>\r\n      <Component {...props} />\r\n    </I18nextProvider>\r\n  );\r\n\r\n  return WrapperComponent;\r\n};\r\n\r\nconst withTranslation = namespace => Component => {\r\n  const TranslatedComponent = props => {\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return WrapperI18n(I18NextWithTranslation(namespace)(TranslatedComponent));\r\n};\r\n\r\nexport { withTranslation };\r\nexport default withTranslation;\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useContext,\r\n  useCallback,\r\n  useEffect,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Draggable from 'react-draggable';\r\nimport classNames from 'classnames';\r\n\r\nimport { utils } from '@ohif/core';\r\n\r\nimport './DialogProvider.styl';\r\n\r\nconst DialogContext = createContext(null);\r\n\r\nexport const useDialog = () => useContext(DialogContext);\r\n\r\nconst DialogProvider = ({ children, service }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dialogs, setDialogs] = useState([]);\r\n  const [lastDialogId, setLastDialogId] = useState(null);\r\n  const [lastDialogPosition, setLastDialogPosition] = useState(null);\r\n  const [centerPositions, setCenterPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCenterPositions(\r\n      dialogs.map(dialog => ({\r\n        id: dialog.id,\r\n        ...getCenterPosition(dialog.id),\r\n      }))\r\n    );\r\n  }, [dialogs]);\r\n\r\n  const getCenterPosition = id => {\r\n    const root = document.querySelector('#root');\r\n    const centerX = root.offsetLeft + root.offsetWidth / 2;\r\n    const centerY = root.offsetTop + root.offsetHeight / 2;\r\n    const item = document.querySelector(`#draggableItem-${id}`);\r\n    const itemBounds = item.getBoundingClientRect();\r\n    return {\r\n      x: centerX - itemBounds.width / 2,\r\n      y: centerY - itemBounds.height / 2,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Creates a new dialog and return its id.\r\n   *\r\n   * @param {DialogProps} props The dialog props.\r\n   * @returns The new dialog id.\r\n   */\r\n  const create = useCallback(props => {\r\n    const { id } = props;\r\n\r\n    let dialogId = id;\r\n    if (!dialogId) {\r\n      dialogId = utils.guid();\r\n    }\r\n\r\n    setDialogs(dialogs => [...dialogs, { ...props, id: dialogId }]);\r\n    setLastDialogId(dialogId);\r\n\r\n    return dialogId;\r\n  }, []);\r\n\r\n  /**\r\n   * Dismisses the dialog with a given id.\r\n   *\r\n   * @param {Object} props -\r\n   * @property {string} props.id The dialog id.\r\n   * @returns void\r\n   */\r\n  const dismiss = useCallback(\r\n    ({ id }) =>\r\n      setDialogs(dialogs => dialogs.filter(dialog => dialog.id !== id)),\r\n    []\r\n  );\r\n\r\n  /**\r\n   * Sets the implementation of a dialog service that can be used by extensions.\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ create, dismiss, dismissAll });\r\n    }\r\n  }, [create, dismiss, service]);\r\n\r\n  /**\r\n   * Moves the dialog to the foreground if clicked.\r\n   *\r\n   * @param {string} id The dialog id.\r\n   * @returns void\r\n   */\r\n  const _bringToFront = useCallback(id => {\r\n    setDialogs(dialogs => {\r\n      const topDialog = dialogs.find(dialog => dialog.id === id);\r\n      return topDialog\r\n        ? [...dialogs.filter(dialog => dialog.id !== id), topDialog]\r\n        : dialogs;\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * UI Dialog\r\n   *\r\n   * @typedef {Object} DialogProps\r\n   * @property {string} id The dialog id.\r\n   * @property {DialogContent} content The dialog content.\r\n   * @property {Object} contentProps The dialog content props.\r\n   * @property {boolean} isDraggable Controls if dialog content is draggable or not.\r\n   * @property {boolean} showOverlay Controls dialog overlay.\r\n   * @property {boolean} centralize Center the dialog on the screen.\r\n   * @property {boolean} preservePosition Use last position instead of default.\r\n   * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\r\n   * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\r\n   * @property {Function} onStop Called when dragging stops.\r\n   * @property {Function} onDrag Called while dragging.\r\n   */\r\n\r\n  useEffect(() => _bringToFront(lastDialogId), [_bringToFront, lastDialogId]);\r\n\r\n  /**\r\n   * Dismisses all dialogs.\r\n   *\r\n   * @returns void\r\n   */\r\n  const dismissAll = () => {\r\n    setDialogs([]);\r\n  };\r\n\r\n  /**\r\n   * Indicate if there are no dialogs present.\r\n   *\r\n   * @returns True if no dialogs are present.\r\n   */\r\n  const isEmpty = () => dialogs && dialogs.length < 1;\r\n\r\n  const renderDialogs = () =>\r\n    dialogs.map(dialog => {\r\n      const {\r\n        id,\r\n        content: DialogContent,\r\n        contentProps,\r\n        defaultPosition,\r\n        centralize = false,\r\n        preservePosition = true,\r\n        isDraggable = true,\r\n        onStart,\r\n        onStop,\r\n        onDrag,\r\n        showOverlay,\r\n      } = dialog;\r\n\r\n      let position =\r\n        (preservePosition && lastDialogPosition) || defaultPosition;\r\n      if (centralize) {\r\n        position = centerPositions.find(position => position.id === id);\r\n      }\r\n\r\n      const dragableItem = () => (\r\n        <Draggable\r\n          key={id}\r\n          disabled={!isDraggable}\r\n          position={position}\r\n          defaultPosition={position}\r\n          bounds=\"parent\"\r\n          onStart={event => {\r\n            const e = event || window.event;\r\n            const target = e.target || e.srcElement;\r\n            const BLACKLIST = [\r\n              'SVG',\r\n              'BUTTON',\r\n              'PATH',\r\n              'INPUT',\r\n              'SPAN',\r\n              'LABEL',\r\n            ];\r\n            if (BLACKLIST.includes(target.tagName.toUpperCase())) {\r\n              return false;\r\n            }\r\n\r\n            if (validCallback(onStart)) {\r\n              return onStart(event);\r\n            }\r\n          }}\r\n          onStop={event => {\r\n            setIsDragging(false);\r\n\r\n            if (validCallback(onStop)) {\r\n              return onStop(event);\r\n            }\r\n          }}\r\n          onDrag={event => {\r\n            setIsDragging(true);\r\n            _bringToFront(id);\r\n            _updateLastDialogPosition(id);\r\n\r\n            if (validCallback(onDrag)) {\r\n              return onDrag(event);\r\n            }\r\n          }}\r\n        >\r\n          <div\r\n            id={`draggableItem-${id}`}\r\n            className={classNames(\r\n              'DraggableItem',\r\n              isDragging && 'dragging',\r\n              isDraggable && 'draggable'\r\n            )}\r\n            style={{ zIndex: '999', position: 'absolute' }}\r\n            onClick={() => _bringToFront(id)}\r\n          >\r\n            <DialogContent {...dialog} {...contentProps} />\r\n          </div>\r\n        </Draggable>\r\n      );\r\n\r\n      return showOverlay ? (\r\n        <div className=\"Overlay\" key={id}>\r\n          {dragableItem()}\r\n        </div>\r\n      ) : (\r\n        dragableItem()\r\n      );\r\n    });\r\n\r\n  /**\r\n   * Update the last dialog position to be used as the new default position.\r\n   *\r\n   * @returns void\r\n   */\r\n  const _updateLastDialogPosition = dialogId => {\r\n    const draggableItemBounds = document\r\n      .querySelector(`#draggableItem-${dialogId}`)\r\n      .getBoundingClientRect();\r\n    setLastDialogPosition({\r\n      x: draggableItemBounds.x,\r\n      y: draggableItemBounds.y,\r\n    });\r\n  };\r\n\r\n  const validCallback = callback => callback && typeof callback === 'function';\r\n\r\n  return (\r\n    <DialogContext.Provider value={{ create, dismiss, dismissAll, isEmpty }}>\r\n      {!isEmpty() && <div className=\"DraggableArea\">{renderDialogs()}</div>}\r\n      {children}\r\n    </DialogContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * High Order Component to use the dialog methods through a Class Component\r\n *\r\n */\r\nexport const withDialog = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { create, dismiss, dismissAll, isEmpty } = useDialog();\r\n    return (\r\n      <Component {...props} dialog={{ create, dismiss, dismissAll, isEmpty }} />\r\n    );\r\n  };\r\n};\r\n\r\nDialogProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nDialogProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default DialogProvider;\r\n","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoggerContext = createContext(null);\r\nconst { Provider } = LoggerContext;\r\n\r\nexport const useLogger = () => useContext(LoggerContext);\r\n\r\nconst LoggerProvider = ({ children, service }) => {\r\n  const [state, setState] = useState({\r\n    errors: [],\r\n    infos: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onErrorHandler = ({ error: errorObject, message }) => {\r\n      error({ error: errorObject, message });\r\n    };\r\n    window.addEventListener('error', onErrorHandler);\r\n    return () => {\r\n      window.removeEventListener('error', onErrorHandler);\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * Logs an error\r\n   *\r\n   * @param {object} props { error, stack, message, displayOnConsole }\r\n   * @returns void\r\n   */\r\n  const error = ({\r\n    error = {},\r\n    stack = '',\r\n    message = '',\r\n    displayOnConsole = true,\r\n  }) => {\r\n    const errorObject = { error, stack, message, displayOnConsole };\r\n    setState(state => ({ ...state, errors: [...state.errors, errorObject] }));\r\n\r\n    if (displayOnConsole) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Logs an info\r\n   *\r\n   * @param {object} props { message, displayOnConsole }\r\n   * @returns void\r\n   */\r\n  const info = ({ message = '', displayOnConsole = true }) => {\r\n    setState(state => ({\r\n      ...state,\r\n      infos: state.infos.push({ message, displayOnConsole }),\r\n    }));\r\n\r\n    if (displayOnConsole) {\r\n      console.info(message);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the implementation of a log service that can be used by extensions\r\n   *\r\n   * @returns void\r\n   */\r\n  useEffect(() => {\r\n    if (service) {\r\n      service.setServiceImplementation({ error, info });\r\n    }\r\n  }, [error, service, info]);\r\n\r\n  return <Provider value={{ info, error, state }}>{children}</Provider>;\r\n};\r\n\r\n/**\r\n * Higher Order Component to use the log methods through a Class Component\r\n *\r\n * @returns\r\n */\r\nexport const withLogger = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { error, info, state } = useLogger();\r\n    return <Component {...props} logger={{ error, info, state }} />;\r\n  };\r\n};\r\n\r\nLoggerProvider.defaultProps = {\r\n  service: null,\r\n};\r\n\r\nLoggerProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  service: PropTypes.shape({\r\n    setServiceImplementation: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default LoggerProvider;\r\n\r\nexport const LogConsumer = LoggerContext.Consumer;\r\n","export {\r\n  default as ModalProvider,\r\n  useModal,\r\n  withModal,\r\n  ModalConsumer,\r\n} from './ModalProvider.js';\r\nexport {\r\n  default as SnackbarProvider,\r\n  useSnackbarContext,\r\n  withSnackbar,\r\n} from './SnackbarProvider.js';\r\nexport {\r\n  default as LanguageProvider,\r\n  withTranslation,\r\n} from './LanguageProvider.js';\r\nexport {\r\n  default as DialogProvider,\r\n  withDialog,\r\n  useDialog,\r\n} from './DialogProvider.js';\r\nexport {\r\n  default as LoggerProvider,\r\n  withLogger,\r\n  useLogger,\r\n} from './LoggerProvider.js';\r\n","/**\r\n * Create a random GUID\r\n *\r\n * @return {string}\r\n */\r\nconst guid = () => {\r\n  const getFourRandomValues = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  };\r\n  return (\r\n    getFourRandomValues() +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    '-' +\r\n    getFourRandomValues() +\r\n    getFourRandomValues() +\r\n    getFourRandomValues()\r\n  );\r\n};\r\n\r\nexport default guid;\r\n","// These should be overridden by the implementation\r\nconst errorHandler = {\r\n  getHTTPErrorHandler: () => null,\r\n};\r\n\r\nexport default errorHandler;\r\n","// @TODO: improve this object\r\n/**\r\n * Objects to be used to throw errors\r\n */\r\nclass OHIFError extends Error {\r\n  constructor(message) {\r\n    super();\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.name = this.constructor.name;\r\n  }\r\n}\r\n\r\nexport default OHIFError;\r\n","import retry from 'retry';\r\n\r\nconst defaultRetryOptions = {\r\n  retries: 5,\r\n  factor: 3,\r\n  minTimeout: 1 * 1000,\r\n  maxTimeout: 60 * 1000,\r\n  randomize: true,\r\n  retryableStatusCodes: [429, 500],\r\n};\r\n\r\nlet retryOptions = { ...defaultRetryOptions };\r\n\r\n/**\r\n * Request hook used to add retry functionality to XHR requests.\r\n *\r\n * @param {XMLHttpRequest} request XHR request instance\r\n * @param {object} metadata Metadata about the request\r\n * @param {object} metadata.url URL\r\n * @param {object} metadata.method HTTP method\r\n * @returns {XMLHttpRequest} request instance optionally modified\r\n */\r\nconst xhrRetryRequestHook = (request, metadata) => {\r\n  const { url, method } = metadata;\r\n\r\n  function faultTolerantRequestSend(...args) {\r\n    const operation = retry.operation(retryOptions);\r\n\r\n    operation.attempt(function operationAttempt(currentAttempt) {\r\n      const originalOnReadyStateChange = request.onreadystatechange;\r\n\r\n      /** Overriding/extending XHR function */\r\n      request.onreadystatechange = function onReadyStateChange(...args) {\r\n        originalOnReadyStateChange.apply(request, args);\r\n\r\n        if (retryOptions.retryableStatusCodes.includes(request.status)) {\r\n          const errorMessage = `Attempt to request ${url} failed.`;\r\n          const attemptFailedError = new Error(errorMessage);\r\n          operation.retry(attemptFailedError);\r\n        }\r\n      };\r\n\r\n      /** Call open only on retry (after headers and other things were set in the xhr instance) */\r\n      if (currentAttempt > 1) {\r\n        console.warn(`Requesting ${url}... (attempt: ${currentAttempt})`);\r\n        request.open(method, url, true);\r\n      }\r\n    });\r\n\r\n    originalRequestSend.apply(request, args);\r\n  }\r\n\r\n  /** Overriding/extending XHR function */\r\n  const originalRequestSend = request.send;\r\n  request.send = faultTolerantRequestSend;\r\n\r\n  return request;\r\n};\r\n\r\n/**\r\n * Returns a configured retry request hook function\r\n * that can be used to add retry functionality to XHR request.\r\n *\r\n * Default options:\r\n *   retries: 5\r\n *   factor: 3\r\n *   minTimeout: 1 * 1000\r\n *   maxTimeout: 60 * 1000\r\n *   randomize: true\r\n *\r\n * @param {object} options\r\n * @param {number} options.retires number of retries\r\n * @param {number} options.factor factor\r\n * @param {number} options.minTimeout the min timeout\r\n * @param {number} options.maxTimeout the max timeout\r\n * @param {boolean} options.randomize randomize\r\n * @param {array} options.retryableStatusCodes status codes that can trigger retry\r\n * @returns {function} the configured retry request function\r\n */\r\nexport const getXHRRetryRequestHook = (options = {}) => {\r\n  retryOptions = { ...defaultRetryOptions };\r\n  if ('retries' in options) {\r\n    retryOptions.retries = options.retries;\r\n  }\r\n  if ('factor' in options) {\r\n    retryOptions.factor = options.factor;\r\n  }\r\n  if ('minTimeout' in options) {\r\n    retryOptions.minTimeout = options.minTimeout;\r\n  }\r\n  if ('maxTimeout' in options) {\r\n    retryOptions.maxTimeout = options.maxTimeout;\r\n  }\r\n  if ('randomize' in options) {\r\n    retryOptions.randomize = options.randomize;\r\n  }\r\n  if ('retryableStatusCodes' in options) {\r\n    retryOptions.retryableStatusCodes = options.retryableStatusCodes;\r\n  }\r\n  return xhrRetryRequestHook;\r\n};\r\n\r\nexport default getXHRRetryRequestHook;\r\n","// These should be overridden by the implementation\r\nlet user = {\r\n  userLoggedIn: () => false,\r\n  getUserId: () => null,\r\n  getName: () => null,\r\n  getAccessToken: () => null,\r\n  login: () => new Promise((resolve, reject) => reject()),\r\n  logout: () => new Promise((resolve, reject) => reject()),\r\n  getData: key => null,\r\n  setData: (key, value) => null,\r\n};\r\n\r\nexport default user;\r\n","/**\r\n * Constants\r\n */\r\n\r\nconst STRING = 'string';\r\nconst NUMBER = 'number';\r\nconst FUNCTION = 'function';\r\nconst OBJECT = 'object';\r\n\r\n/**\r\n * Class Definition\r\n */\r\n\r\nexport class Metadata {\r\n  /**\r\n   * Constructor and Instance Methods\r\n   */\r\n\r\n  constructor(data, uid) {\r\n    // Define the main \"_data\" private property as an immutable property.\r\n    // IMPORTANT: This property can only be set during instance construction.\r\n    Object.defineProperty(this, '_data', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: data,\r\n    });\r\n\r\n    // Define the main \"_uid\" private property as an immutable property.\r\n    // IMPORTANT: This property can only be set during instance construction.\r\n    Object.defineProperty(this, '_uid', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: uid,\r\n    });\r\n\r\n    // Define \"_custom\" properties as an immutable property.\r\n    // IMPORTANT: This property can only be set during instance construction.\r\n    Object.defineProperty(this, '_custom', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: Object.create(null),\r\n    });\r\n  }\r\n\r\n  getData() {\r\n    return this._data;\r\n  }\r\n\r\n  getDataProperty(propertyName) {\r\n    let propertyValue;\r\n    const _data = this._data;\r\n    if (\r\n      _data instanceof Object ||\r\n      (typeof _data === OBJECT && _data !== null)\r\n    ) {\r\n      propertyValue = _data[propertyName];\r\n    }\r\n    return propertyValue;\r\n  }\r\n\r\n  /**\r\n   * Get unique object ID\r\n   */\r\n  getObjectID() {\r\n    return this._uid;\r\n  }\r\n\r\n  /**\r\n   * Set custom attribute value\r\n   * @param {String} attribute Custom attribute name\r\n   * @param {Any} value     Custom attribute value\r\n   */\r\n  setCustomAttribute(attribute, value) {\r\n    this._custom[attribute] = value;\r\n  }\r\n\r\n  /**\r\n   * Get custom attribute value\r\n   * @param  {String} attribute Custom attribute name\r\n   * @return {Any}              Custom attribute value\r\n   */\r\n  getCustomAttribute(attribute) {\r\n    return this._custom[attribute];\r\n  }\r\n\r\n  /**\r\n   * Check if a custom attribute exists\r\n   * @param  {String} attribute Custom attribute name\r\n   * @return {Boolean}          True if custom attribute exists or false if not\r\n   */\r\n  customAttributeExists(attribute) {\r\n    return attribute in this._custom;\r\n  }\r\n\r\n  /**\r\n   * Set custom attributes in batch mode.\r\n   * @param {Object} attributeMap An object whose own properties will be used as custom attributes.\r\n   */\r\n  setCustomAttributes(attributeMap) {\r\n    const _hasOwn = Object.prototype.hasOwnProperty;\r\n    const _custom = this._custom;\r\n    for (let attribute in attributeMap) {\r\n      if (_hasOwn.call(attributeMap, attribute)) {\r\n        _custom[attribute] = attributeMap[attribute];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Static Methods\r\n   */\r\n\r\n  static isValidUID(uid) {\r\n    return typeof uid === STRING && uid.length > 0;\r\n  }\r\n\r\n  static isValidIndex(index) {\r\n    return typeof index === NUMBER && index >= 0 && (index | 0) === index;\r\n  }\r\n\r\n  static isValidCallback(callback) {\r\n    return typeof callback === FUNCTION;\r\n  }\r\n}\r\n","const state = {\r\n  enabledElements: {},\r\n};\r\n\r\n/**\r\n * Sets the enabled element `dom` reference for an active viewport.\r\n * @param {HTMLElement} dom Active viewport element.\r\n * @return void\r\n */\r\nconst setEnabledElement = (viewportIndex, element) =>\r\n  (state.enabledElements[viewportIndex] = element);\r\n\r\n/**\r\n * Grabs the enabled element `dom` reference of an active viewport.\r\n *\r\n * @return {HTMLElement} Active viewport element.\r\n */\r\nconst getEnabledElement = viewportIndex => state.enabledElements[viewportIndex];\r\n\r\nexport { setEnabledElement, getEnabledElement };\r\n","import { Metadata } from './Metadata';\r\nimport OHIFError from '../OHIFError.js';\r\n\r\n/**\r\n * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could\r\n * possibly cause circular dependency issues.\r\n */\r\n\r\nconst UNDEFINED = 'undefined';\r\nconst STRING = 'string';\r\n\r\nexport class InstanceMetadata extends Metadata {\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _imageId: {\r\n        configurable: true, // configurable so that it can be redefined in sub-classes...\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n    });\r\n    // Initialize Public Properties\r\n    this._definePublicProperties();\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  /**\r\n   * Define Public Properties\r\n   * This method should only be called during initialization (inside the class constructor)\r\n   */\r\n  _definePublicProperties() {\r\n    /**\r\n     * Property: this.SOPInstanceUID\r\n     * Same as this.getSOPInstanceUID()\r\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\r\n     * sopInstanceCollection.findBy({\r\n     *   SOPInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\r\n     * });\r\n     */\r\n    Object.defineProperty(this, 'SOPInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      get: function() {\r\n        return this.getSOPInstanceUID();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  /**\r\n   * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\r\n   */\r\n  getStudyInstanceUID() {\r\n    return this.getTagValue('StudyInstanceUID', null);\r\n  }\r\n\r\n  /**\r\n   * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\r\n   */\r\n  getSeriesInstanceUID() {\r\n    return this.getTagValue('SeriesInstanceUID', null);\r\n  }\r\n\r\n  /**\r\n   * Returns the SOPInstanceUID of the current instance.\r\n   */\r\n  getSOPInstanceUID() {\r\n    return this.getTagValue('SOPInstanceUID', null);\r\n  }\r\n\r\n  // @TODO: Improve this... (E.g.: blob data)\r\n  getStringValue(tagOrProperty, index, defaultValue) {\r\n    let value = this.getTagValue(tagOrProperty, defaultValue);\r\n\r\n    if (typeof value !== STRING && typeof value !== UNDEFINED) {\r\n      value = value.toString();\r\n    }\r\n\r\n    return InstanceMetadata.getIndexedValue(value, index, defaultValue);\r\n  }\r\n\r\n  // @TODO: Improve this... (E.g.: blob data)\r\n  getFloatValue(tagOrProperty, index, defaultValue) {\r\n    let value = this.getTagValue(tagOrProperty, defaultValue);\r\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\r\n\r\n    if (value instanceof Array) {\r\n      value.forEach((val, idx) => {\r\n        value[idx] = parseFloat(val);\r\n      });\r\n\r\n      return value;\r\n    }\r\n\r\n    return typeof value === STRING ? parseFloat(value) : value;\r\n  }\r\n\r\n  // @TODO: Improve this... (E.g.: blob data)\r\n  getIntValue(tagOrProperty, index, defaultValue) {\r\n    let value = this.getTagValue(tagOrProperty, defaultValue);\r\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\r\n\r\n    if (value instanceof Array) {\r\n      value.forEach((val, idx) => {\r\n        value[idx] = parseFloat(val);\r\n      });\r\n\r\n      return value;\r\n    }\r\n\r\n    return typeof value === STRING ? parseInt(value) : value;\r\n  }\r\n\r\n  /**\r\n   * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.\r\n   */\r\n  getTagValue(tagOrProperty, defaultValue) {\r\n    /**\r\n     * Please override this method on a specialized class.\r\n     */\r\n    throw new OHIFError(\r\n      'InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Compares the current instance with another one.\r\n   * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.\r\n   * @returns {boolean} Returns true if both instances refer to the same instance.\r\n   */\r\n  equals(instance) {\r\n    const self = this;\r\n    return (\r\n      instance === self ||\r\n      (instance instanceof InstanceMetadata &&\r\n        instance.getSOPInstanceUID() === self.getSOPInstanceUID())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if the tagOrProperty exists\r\n   * @param  {String} tagOrProperty tag or property be checked\r\n   * @return {Boolean}   True if the tag or property exists or false if doesn't\r\n   */\r\n  tagExists(tagOrProperty) {\r\n    /**\r\n     * Please override this method\r\n     */\r\n    throw new OHIFError(\r\n      'InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get custom image id of a sop instance\r\n   * @return {Any}          sop instance image id\r\n   */\r\n  getImageId(frame) {\r\n    /**\r\n     * Please override this method\r\n     */\r\n    throw new OHIFError(\r\n      'InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Static Methods\r\n   */\r\n\r\n  /**\r\n   * Get an value based that can be index based. This function is called by all getters. See above functions.\r\n   *     - If value is a String and has indexes:\r\n   *         - If undefined index: returns an array of the split values.\r\n   *         - If defined index:\r\n   *             - If invalid: returns defaultValue\r\n   *             - If valid: returns the indexed value\r\n   *      - If value is not a String, returns default value.\r\n   */\r\n  static getIndexedValue(value, index, defaultValue) {\r\n    let result = defaultValue;\r\n\r\n    if (typeof value === STRING) {\r\n      const hasIndexValues = value.indexOf('\\\\') !== -1;\r\n\r\n      result = value;\r\n\r\n      if (hasIndexValues) {\r\n        const splitValues = value.split('\\\\');\r\n        if (Metadata.isValidIndex(index)) {\r\n          const indexedValue = splitValues[index];\r\n\r\n          result = typeof indexedValue !== STRING ? defaultValue : indexedValue;\r\n        } else {\r\n          result = splitValues;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { Metadata } from './Metadata';\r\nimport { InstanceMetadata } from './InstanceMetadata';\r\n\r\nexport class SeriesMetadata extends Metadata {\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _seriesInstanceUID: {\r\n        configurable: true, // configurable so that it can be redefined in sub-classes...\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n      _instances: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _firstInstance: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n    });\r\n    // Initialize Public Properties\r\n    this._definePublicProperties();\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  /**\r\n   * Define Public Properties\r\n   * This method should only be called during initialization (inside the class constructor)\r\n   */\r\n  _definePublicProperties() {\r\n    /**\r\n     * Property: this.seriesInstanceUID\r\n     * Same as this.getSeriesInstanceUID()\r\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\r\n     * seriesCollection.findBy({\r\n     *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\r\n     * });\r\n     */\r\n    Object.defineProperty(this, 'seriesInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      get: function() {\r\n        return this.getSeriesInstanceUID();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  /**\r\n   * Returns the SeriesInstanceUID of the current series.\r\n   */\r\n  getSeriesInstanceUID() {\r\n    return this._seriesInstanceUID;\r\n  }\r\n\r\n  /**\r\n   * Append an instance to the current series.\r\n   * @param {InstanceMetadata} instance The instance to be added to the current series.\r\n   * @returns {boolean} Returns true on success, false otherwise.\r\n   */\r\n  addInstance(instance) {\r\n    let result = false;\r\n    if (\r\n      instance instanceof InstanceMetadata &&\r\n      this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0\r\n    ) {\r\n      this._instances.push(instance);\r\n      result = true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the first instance of the current series retaining a consistent result across multiple calls.\r\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\r\n   */\r\n  getFirstInstance() {\r\n    let instance = this._firstInstance;\r\n    if (!(instance instanceof InstanceMetadata)) {\r\n      instance = null;\r\n      const found = this.getInstanceByIndex(0);\r\n      if (found instanceof InstanceMetadata) {\r\n        this._firstInstance = found;\r\n        instance = found;\r\n      }\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Find an instance by index.\r\n   * @param {number} index An integer representing a list index.\r\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\r\n   */\r\n  getInstanceByIndex(index) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidIndex(index)) {\r\n      found = this._instances[index];\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find an instance by SOPInstanceUID.\r\n   * @param {string} uid An UID string.\r\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\r\n   */\r\n  getInstanceByUID(uid) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidUID(uid)) {\r\n      found = this._instances.find(instance => {\r\n        return instance.getSOPInstanceUID() === uid;\r\n      });\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of instances within the current series.\r\n   * @returns {number} The number of instances in the current series.\r\n   */\r\n  getInstanceCount() {\r\n    return this._instances.length;\r\n  }\r\n\r\n  /**\r\n   * Invokes the supplied callback for each instance in the current series passing\r\n   * two arguments: instance (an InstanceMetadata instance) and index (the integer\r\n   * index of the instance within the current series)\r\n   * @param {function} callback The callback function which will be invoked for each instance in the series.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  forEachInstance(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      this._instances.forEach((instance, index) => {\r\n        callback.call(null, instance, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the index of an instance inside the series.\r\n   * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.\r\n   * @returns {number} The index of the instance inside the series or -1 if not found.\r\n   */\r\n  indexOfInstance(instance) {\r\n    return this._instances.indexOf(instance);\r\n  }\r\n\r\n  /**\r\n   * Search the associated instances using the supplied callback as criteria. The callback is passed\r\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer\r\n   * index of the instance within its series)\r\n   * @param {function} callback The callback function which will be invoked for each instance.\r\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\r\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\r\n   */\r\n  findInstance(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      return this._instances.find((instance, index) => {\r\n        return callback.call(null, instance, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compares the current series with another one.\r\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\r\n   * @returns {boolean} Returns true if both instances refer to the same series.\r\n   */\r\n  equals(series) {\r\n    const self = this;\r\n    return (\r\n      series === self ||\r\n      (series instanceof SeriesMetadata &&\r\n        series.getSeriesInstanceUID() === self.getSeriesInstanceUID())\r\n    );\r\n  }\r\n}\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Transition, {\r\n  ENTERED,\r\n  ENTERING,\r\n} from 'react-transition-group/Transition';\r\n\r\nconst propTypes = {\r\n  /**\r\n   * Show the component; triggers the fade in or fade out animation\r\n   */\r\n  in: PropTypes.bool,\r\n\r\n  /**\r\n   * Wait until the first \"enter\" transition to mount the component (add it to the DOM)\r\n   */\r\n  mountOnEnter: PropTypes.bool,\r\n\r\n  /**\r\n   * Unmount the component (remove it from the DOM) when it is faded out\r\n   */\r\n  unmountOnExit: PropTypes.bool,\r\n\r\n  /**\r\n   * Run the fade in animation when the component mounts, if it is initially\r\n   * shown\r\n   */\r\n  appear: PropTypes.bool,\r\n\r\n  /**\r\n   * Duration of the fade animation in milliseconds, to ensure that finishing\r\n   * callbacks are fired even if the original browser transition end events are\r\n   * canceled\r\n   */\r\n  timeout: PropTypes.number,\r\n\r\n  /**\r\n   * Callback fired before the component fades in\r\n   */\r\n  onEnter: PropTypes.func,\r\n  /**\r\n   * Callback fired after the component starts to fade in\r\n   */\r\n  onEntering: PropTypes.func,\r\n  /**\r\n   * Callback fired after the has component faded in\r\n   */\r\n  onEntered: PropTypes.func,\r\n  /**\r\n   * Callback fired before the component fades out\r\n   */\r\n  onExit: PropTypes.func,\r\n  /**\r\n   * Callback fired after the component starts to fade out\r\n   */\r\n  onExiting: PropTypes.func,\r\n  /**\r\n   * Callback fired after the component has faded out\r\n   */\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  in: false,\r\n  timeout: 300,\r\n  mountOnEnter: false,\r\n  unmountOnExit: false,\r\n  appear: false,\r\n};\r\n\r\nconst fadeStyles = {\r\n  [ENTERING]: 'in',\r\n  [ENTERED]: 'in',\r\n};\r\n\r\nclass Fade extends React.Component {\r\n  render() {\r\n    const { className, children, ...props } = this.props;\r\n\r\n    return (\r\n      <Transition {...props}>\r\n        {(status, innerProps) =>\r\n          React.cloneElement(children, {\r\n            ...innerProps,\r\n            className: classNames(\r\n              'fade',\r\n              className,\r\n              children.props.className,\r\n              fadeStyles[status]\r\n            ),\r\n          })\r\n        }\r\n      </Transition>\r\n    );\r\n  }\r\n}\r\n\r\nFade.propTypes = propTypes;\r\nFade.defaultProps = defaultProps;\r\n\r\nexport default Fade;\r\n","import classNames from 'classnames';\r\nimport React, { cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Overlay as BaseOverlay } from 'react-overlays';\r\nimport elementType from 'prop-types-extra/lib/elementType';\r\nimport { withTranslation } from '../../contextProviders';\r\n\r\nimport Fade from './Fade';\r\n\r\nconst propTypes = {\r\n  /**\r\n   * Set the visibility of the Overlay\r\n   */\r\n  show: PropTypes.bool,\r\n  /**\r\n   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay\r\n   */\r\n  rootClose: PropTypes.bool,\r\n  /**\r\n   * A callback invoked by the overlay when it wishes to be hidden. Required if\r\n   * `rootClose` is specified.\r\n   */\r\n  onHide: PropTypes.func,\r\n\r\n  /**\r\n   * Use animation\r\n   */\r\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\r\n\r\n  /**\r\n   * Callback fired before the Overlay transitions in\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Overlay begins to transition in\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Overlay finishes transitioning in\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired right before the Overlay transitions out\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Overlay begins to transition out\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Overlay finishes transitioning out\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * Sets the direction of the Overlay.\r\n   */\r\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n};\r\n\r\nconst defaultProps = {\r\n  animation: Fade,\r\n  rootClose: false,\r\n  show: false,\r\n  placement: 'right',\r\n};\r\n\r\nclass Overlay extends React.Component {\r\n  render() {\r\n    const { animation, children, ...props } = this.props;\r\n\r\n    const transition = animation === true ? Fade : animation || null;\r\n\r\n    let child;\r\n\r\n    if (!transition) {\r\n      child = cloneElement(children, {\r\n        className: classNames(children.props.className, 'in'),\r\n      });\r\n    } else {\r\n      child = children;\r\n    }\r\n\r\n    return (\r\n      <BaseOverlay {...props} transition={transition}>\r\n        {child}\r\n      </BaseOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nOverlay.propTypes = propTypes;\r\nOverlay.defaultProps = defaultProps;\r\n\r\nconst connectedComponent = withTranslation()(Overlay);\r\nexport { connectedComponent as Overlay };\r\nexport default connectedComponent;\r\n","/**\r\n * Safe chained function\r\n *\r\n * Will only create a new function if needed,\r\n * otherwise will pass back existing functions or null.\r\n *\r\n * @param {function} functions to chain\r\n * @returns {function|null}\r\n */\r\nfunction createChainedFunction(...funcs) {\r\n  return funcs\r\n    .filter(f => f != null)\r\n    .reduce((acc, f) => {\r\n      if (typeof f !== 'function') {\r\n        throw new Error(\r\n          'Invalid Argument Type, must only provide functions, undefined, or null.'\r\n        );\r\n      }\r\n\r\n      if (acc === null) {\r\n        return f;\r\n      }\r\n\r\n      return function chainedFunction(...args) {\r\n        acc.apply(this, args);\r\n        f.apply(this, args);\r\n      };\r\n    }, null);\r\n}\r\n\r\nexport default createChainedFunction;\r\n","import contains from 'dom-helpers/query/contains';\r\nimport React, { cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport warning from 'warning';\r\n\r\nimport { Overlay } from './Overlay';\r\n\r\nimport createChainedFunction from './createChainedFunction';\r\n\r\n/**\r\n * Check if value one is inside or equal to the of value\r\n *\r\n * @param {string} one\r\n * @param {string|array} of\r\n * @returns {boolean}\r\n */\r\nfunction isOneOf(one, of) {\r\n  if (Array.isArray(of)) {\r\n    return of.indexOf(one) >= 0;\r\n  }\r\n  return one === of;\r\n}\r\n\r\nconst triggerType = PropTypes.oneOf(['click', 'hover', 'focus']);\r\n\r\nconst propTypes = {\r\n  /**\r\n   * Specify which action or actions trigger Overlay visibility\r\n   */\r\n  trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]),\r\n\r\n  /**\r\n   * A millisecond delay amount to show and hide the Overlay once triggered\r\n   */\r\n  delay: PropTypes.number,\r\n  /**\r\n   * A millisecond delay amount before showing the Overlay once triggered.\r\n   */\r\n  delayShow: PropTypes.number,\r\n  /**\r\n   * A millisecond delay amount before hiding the Overlay once triggered.\r\n   */\r\n  delayHide: PropTypes.number,\r\n\r\n  // FIXME: This should be `defaultShow`.\r\n  /**\r\n   * The initial visibility state of the Overlay. For more nuanced visibility\r\n   * control, consider using the Overlay component directly.\r\n   */\r\n  defaultOverlayShown: PropTypes.bool,\r\n\r\n  /**\r\n   * An element or text to overlay next to the target.\r\n   */\r\n  overlay: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * A function to be called once the hide is triggered\r\n   */\r\n  handleHide: PropTypes.func,\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onMouseOut: PropTypes.func,\r\n  /**\r\n   * @private\r\n   */\r\n  onMouseOver: PropTypes.func,\r\n\r\n  // Overridden props from `<Overlay>`.\r\n  /**\r\n   * @private\r\n   */\r\n  target: PropTypes.oneOf([null]),\r\n  /**\r\n   * @private\r\n   */\r\n  onHide: PropTypes.oneOf([null]),\r\n  /**\r\n   * @private\r\n   */\r\n  show: PropTypes.oneOf([null]),\r\n};\r\n\r\nconst defaultProps = {\r\n  defaultOverlayShown: false,\r\n  trigger: ['hover', 'focus'],\r\n};\r\n\r\nclass OverlayTrigger extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.handleDelayedShow = this.handleDelayedShow.bind(this);\r\n    this.handleDelayedHide = this.handleDelayedHide.bind(this);\r\n    this.handleHide = createChainedFunction(\r\n      this.handleHide.bind(this),\r\n      props.handleHide\r\n    );\r\n\r\n    this.handleMouseOver = e =>\r\n      this.handleMouseOverOut(this.handleDelayedShow, e, 'fromElement');\r\n    this.handleMouseOut = e =>\r\n      this.handleMouseOverOut(this.handleDelayedHide, e, 'toElement');\r\n\r\n    this._mountNode = null;\r\n\r\n    this.state = {\r\n      show: props.defaultOverlayShown,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._mountNode = document.createElement('div');\r\n    this.renderOverlay();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderOverlay();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ReactDOM.unmountComponentAtNode(this._mountNode);\r\n    this._mountNode = null;\r\n\r\n    clearTimeout(this._hoverShowDelay);\r\n    clearTimeout(this._hoverHideDelay);\r\n  }\r\n\r\n  handleDelayedHide() {\r\n    if (this._hoverShowDelay != null) {\r\n      clearTimeout(this._hoverShowDelay);\r\n      this._hoverShowDelay = null;\r\n      return;\r\n    }\r\n\r\n    if (!this.state.show || this._hoverHideDelay != null) {\r\n      return;\r\n    }\r\n\r\n    const delay =\r\n      this.props.delayHide != null ? this.props.delayHide : this.props.delay;\r\n\r\n    if (!delay) {\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    this._hoverHideDelay = setTimeout(() => {\r\n      this._hoverHideDelay = null;\r\n      this.hide();\r\n    }, delay);\r\n  }\r\n\r\n  handleDelayedShow() {\r\n    if (this._hoverHideDelay != null) {\r\n      clearTimeout(this._hoverHideDelay);\r\n      this._hoverHideDelay = null;\r\n      return;\r\n    }\r\n\r\n    if (this.state.show || this._hoverShowDelay != null) {\r\n      return;\r\n    }\r\n\r\n    const delay =\r\n      this.props.delayShow != null ? this.props.delayShow : this.props.delay;\r\n\r\n    if (!delay) {\r\n      this.show();\r\n      return;\r\n    }\r\n\r\n    this._hoverShowDelay = setTimeout(() => {\r\n      this._hoverShowDelay = null;\r\n      this.show();\r\n    }, delay);\r\n  }\r\n\r\n  handleHide() {\r\n    this.hide();\r\n  }\r\n\r\n  // Simple implementation of mouseEnter and mouseLeave.\r\n  // React's built version is broken: https://github.com/facebook/react/issues/4251\r\n  // for cases when the trigger is disabled and mouseOut/Over can cause flicker\r\n  // moving from one child element to another.\r\n  handleMouseOverOut(handler, e, relatedNative) {\r\n    const target = e.currentTarget;\r\n    const related = e.relatedTarget || e.nativeEvent[relatedNative];\r\n\r\n    if ((!related || related !== target) && !contains(target, related)) {\r\n      handler(e);\r\n    }\r\n  }\r\n\r\n  handleToggle() {\r\n    if (this.state.show) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  makeOverlay(overlay, props) {\r\n    return (\r\n      <Overlay\r\n        {...props}\r\n        show={this.state.show}\r\n        onHide={this.handleHide}\r\n        target={this}\r\n      >\r\n        {overlay}\r\n      </Overlay>\r\n    );\r\n  }\r\n\r\n  show() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  renderOverlay() {\r\n    ReactDOM.unstable_renderSubtreeIntoContainer(\r\n      this,\r\n      this._overlay,\r\n      this._mountNode\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      trigger,\r\n      overlay,\r\n      children,\r\n      onBlur,\r\n      onClick,\r\n      onFocus,\r\n      onMouseOut,\r\n      onMouseOver,\r\n      ...props\r\n    } = this.props;\r\n\r\n    delete props.delay;\r\n    delete props.delayShow;\r\n    delete props.delayHide;\r\n    delete props.defaultOverlayShown;\r\n\r\n    const child = React.Children.only(children);\r\n    const childProps = child.props;\r\n    const triggerProps = {};\r\n\r\n    if (this.state.show) {\r\n      triggerProps['aria-describedby'] = overlay.props.id;\r\n    }\r\n\r\n    // FIXME: The logic here for passing through handlers on this component is\r\n    // inconsistent. We shouldn't be passing any of these props through.\r\n\r\n    triggerProps.onClick = createChainedFunction(childProps.onClick, onClick);\r\n\r\n    if (isOneOf('click', trigger)) {\r\n      triggerProps.onClick = createChainedFunction(\r\n        triggerProps.onClick,\r\n        this.handleToggle\r\n      );\r\n    }\r\n\r\n    if (isOneOf('hover', trigger)) {\r\n      warning(\r\n        !(trigger === 'hover'),\r\n        '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the ' +\r\n          'visibility of the overlay to just mouse users. Consider also ' +\r\n          'including the `\"focus\"` trigger so that touch and keyboard only ' +\r\n          'users can see the overlay as well.'\r\n      );\r\n\r\n      triggerProps.onMouseOver = createChainedFunction(\r\n        childProps.onMouseOver,\r\n        onMouseOver,\r\n        this.handleMouseOver\r\n      );\r\n      triggerProps.onMouseOut = createChainedFunction(\r\n        childProps.onMouseOut,\r\n        onMouseOut,\r\n        this.handleMouseOut\r\n      );\r\n    }\r\n\r\n    if (isOneOf('focus', trigger)) {\r\n      triggerProps.onFocus = createChainedFunction(\r\n        childProps.onFocus,\r\n        onFocus,\r\n        this.handleDelayedShow\r\n      );\r\n      triggerProps.onBlur = createChainedFunction(\r\n        childProps.onBlur,\r\n        onBlur,\r\n        this.handleDelayedHide\r\n      );\r\n    }\r\n\r\n    this._overlay = this.makeOverlay(overlay, props);\r\n\r\n    return cloneElement(child, triggerProps);\r\n  }\r\n}\r\n\r\nOverlayTrigger.propTypes = propTypes;\r\nOverlayTrigger.defaultProps = defaultProps;\r\n\r\nexport { OverlayTrigger };\r\n","export { Overlay } from './Overlay.js';\r\nexport { OverlayTrigger } from './OverlayTrigger.js';\r\n","import React, { useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getActiveContexts } from '../store/layout/selectors.js';\r\n\r\nlet AppContext = React.createContext({});\r\n\r\nexport const CONTEXTS = {\r\n  CORNERSTONE: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n  VTK: 'ACTIVE_VIEWPORT::VTK'\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const AppProvider = ({ children, config }) => {\r\n  const activeContexts = useSelector(state => getActiveContexts(state));\r\n\r\n  return (\r\n    <AppContext.Provider value={{ appConfig: config, activeContexts }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const withAppContext = Component => {\r\n  return function WrappedComponent(props) {\r\n    const { appConfig, activeContexts } = useAppContext();\r\n    return (\r\n      <Component {...props} appConfig={appConfig} activeContexts={activeContexts} />\r\n    );\r\n  };\r\n};\r\n\r\nexport default AppContext;\r\n","import './Tooltip.styl';\r\n\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  /** Sets the direction the Tooltip is positioned towards. */\r\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n  /** The \"top\" position value for the Tooltip. */\r\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /** The \"left\" position value for the Tooltip. */\r\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /** The \"top\" position value for the Tooltip arrow. */\r\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /** The \"left\" position value for the Tooltip arrow. */\r\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n\r\nconst defaultProps = {\r\n  placement: 'right',\r\n};\r\n\r\nclass Tooltip extends React.Component {\r\n  render() {\r\n    const {\r\n      placement,\r\n      positionTop,\r\n      positionLeft,\r\n      arrowOffsetTop,\r\n      arrowOffsetLeft,\r\n      className,\r\n      style,\r\n      children,\r\n    } = this.props;\r\n\r\n    const outerStyle = {\r\n      top: positionTop,\r\n      left: positionLeft,\r\n      ...style,\r\n    };\r\n\r\n    const arrowStyle = {\r\n      top: arrowOffsetTop,\r\n      left: arrowOffsetLeft,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        role=\"tooltip\"\r\n        className={classNames(className, 'tooltip', placement)}\r\n        style={outerStyle}\r\n      >\r\n        <div className=\"tooltip-arrow\" style={arrowStyle} />\r\n        <div className=\"tooltip-inner\">{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTooltip.propTypes = propTypes;\r\nTooltip.defaultProps = defaultProps;\r\n\r\nexport { Tooltip };\r\n","export { Tooltip } from './Tooltip.js';\r\n","import { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../../DICOMWeb';\r\nimport str2ab from '../str2ab';\r\n\r\nimport errorHandler from '../../errorHandler';\r\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\r\n\r\nexport default async function fetchPaletteColorLookupTableData(\r\n  instance,\r\n  server\r\n) {\r\n  const {\r\n    PaletteColorLookupTableUID,\r\n    RedPaletteColorLookupTableDescriptor,\r\n    GreenPaletteColorLookupTableDescriptor,\r\n    BluePaletteColorLookupTableDescriptor,\r\n    RedPaletteColorLookupTableData,\r\n    GreenPaletteColorLookupTableData,\r\n    BluePaletteColorLookupTableData,\r\n  } = instance;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let entry;\r\n    if (_paletteColorCache.isValidUID(PaletteColorLookupTableUID)) {\r\n      entry = _paletteColorCache.get(PaletteColorLookupTableUID);\r\n\r\n      if (entry) {\r\n        return resolve(entry);\r\n      }\r\n    }\r\n\r\n    // no entry in cache... Fetch remote data.\r\n    const promises = [\r\n      _getPaletteColor(\r\n        server,\r\n        RedPaletteColorLookupTableData,\r\n        RedPaletteColorLookupTableDescriptor\r\n      ),\r\n      _getPaletteColor(\r\n        server,\r\n        GreenPaletteColorLookupTableData,\r\n        GreenPaletteColorLookupTableDescriptor\r\n      ),\r\n      _getPaletteColor(\r\n        server,\r\n        BluePaletteColorLookupTableData,\r\n        BluePaletteColorLookupTableDescriptor\r\n      ),\r\n    ];\r\n\r\n    Promise.all(promises).then(\r\n      ([\r\n        RedPaletteColorLookupTableData,\r\n        GreenPaletteColorLookupTableData,\r\n        BluePaletteColorLookupTableData,\r\n      ]) => {\r\n        // when PaletteColorLookupTableUID is present, the entry can be cached...\r\n        _paletteColorCache.add({\r\n          RedPaletteColorLookupTableData,\r\n          GreenPaletteColorLookupTableData,\r\n          BluePaletteColorLookupTableData,\r\n          PaletteColorLookupTableUID,\r\n        });\r\n\r\n        instance.RedPaletteColorLookupTableData = RedPaletteColorLookupTableData;\r\n        instance.GreenPaletteColorLookupTableData = GreenPaletteColorLookupTableData;\r\n        instance.BluePaletteColorLookupTableData = BluePaletteColorLookupTableData;\r\n\r\n        resolve();\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Simple cache schema for retrieved color palettes.\r\n */\r\nconst _paletteColorCache = {\r\n  count: 0,\r\n  maxAge: 24 * 60 * 60 * 1000, // 24h cache?\r\n  entries: {},\r\n  isValidUID: function(PaletteColorLookupTableUID) {\r\n    return (\r\n      typeof PaletteColorLookupTableUID === 'string' &&\r\n      PaletteColorLookupTableUID.length > 0\r\n    );\r\n  },\r\n  get: function(PaletteColorLookupTableUID) {\r\n    let entry = null;\r\n    if (this.entries.hasOwnProperty(PaletteColorLookupTableUID)) {\r\n      entry = this.entries[PaletteColorLookupTableUID];\r\n      // check how the entry is...\r\n      if (Date.now() - entry.time > this.maxAge) {\r\n        // entry is too old... remove entry.\r\n        delete this.entries[PaletteColorLookupTableUID];\r\n        this.count--;\r\n        entry = null;\r\n      }\r\n    }\r\n    return entry;\r\n  },\r\n  add: function(entry) {\r\n    if (this.isValidUID(entry.uid)) {\r\n      let PaletteColorLookupTableUID = entry.uid;\r\n      if (this.entries.hasOwnProperty(PaletteColorLookupTableUID) !== true) {\r\n        this.count++; // increment cache entry count...\r\n      }\r\n      entry.time = Date.now();\r\n      this.entries[PaletteColorLookupTableUID] = entry;\r\n      // @TODO: Add logic to get rid of old entries and reduce memory usage...\r\n    }\r\n  },\r\n};\r\n\r\nfunction _getPaletteColor(server, paletteColorLookupTableData, lutDescriptor) {\r\n  const numLutEntries = lutDescriptor[0] ? lutDescriptor[0] : 65536;\r\n  const bits = lutDescriptor[2];\r\n\r\n  const arrayBufferToPaletteColorLUT = arraybuffer => {\r\n    const byteArray = bits === 16 ?\r\n      new Uint16Array(arraybuffer) :\r\n      new Uint8Array(arraybuffer);\r\n    const lut = [];\r\n\r\n    for (let i = 0; i < numLutEntries; i++) {\r\n      lut[i] = byteArray[i];\r\n    }\r\n\r\n    return lut;\r\n  };\r\n\r\n  if (paletteColorLookupTableData.BulkDataURI) {\r\n    let uri = paletteColorLookupTableData.BulkDataURI;\r\n\r\n    // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\r\n    // incorrect bulk data URIs\r\n    if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\r\n      uri = uri.replace('http', 'https');\r\n    }\r\n\r\n    const config = {\r\n      url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\r\n      headers: DICOMWeb.getAuthorizationHeader(server),\r\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n      requestHooks: [getXHRRetryRequestHook()],\r\n    };\r\n    const dicomWeb = new api.DICOMwebClient(config);\r\n    const options = {\r\n      BulkDataURI: uri,\r\n    };\r\n\r\n    return dicomWeb\r\n      .retrieveBulkData(options)\r\n      .then(result => result[0])\r\n      .then(arrayBufferToPaletteColorLUT);\r\n  } else if (paletteColorLookupTableData.InlineBinary) {\r\n    const inlineBinaryData = atob(paletteColorLookupTableData.InlineBinary);\r\n    const arraybuffer = str2ab(inlineBinaryData);\r\n\r\n    return new Promise(resolve => {\r\n      resolve(arrayBufferToPaletteColorLUT(arraybuffer));\r\n    });\r\n  } else {\r\n    return Promise.resolve(\r\n      arrayBufferToPaletteColorLUT(paletteColorLookupTableData)\r\n    );\r\n  }\r\n}\r\n","export default function unpackOverlay(arrayBuffer) {\r\n  const bitArray = new Uint8Array(arrayBuffer);\r\n  const byteArray = new Uint8Array(8 * bitArray.length);\r\n\r\n  for (let byteIndex = 0; byteIndex < byteArray.length; byteIndex++) {\r\n    const bitIndex = byteIndex % 8;\r\n    const bitByteIndex = Math.floor(byteIndex / 8);\r\n    byteArray[byteIndex] =\r\n      1 * ((bitArray[bitByteIndex] & (1 << bitIndex)) >> bitIndex);\r\n  }\r\n\r\n  return byteArray;\r\n}\r\n","import { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../../DICOMWeb';\r\nimport str2ab from '../str2ab';\r\nimport unpackOverlay from './unpackOverlay';\r\n\r\nimport errorHandler from '../../errorHandler';\r\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\r\n\r\nexport default async function fetchOverlayData(instance, server) {\r\n  const OverlayDataPromises = [];\r\n  const OverlayDataTags = [];\r\n\r\n  return new Promise((resolve, reject) => {\r\n    for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\r\n      let groupStr = `60${overlayGroup.toString(16)}`;\r\n\r\n      if (groupStr.length === 3) {\r\n        groupStr = `600${overlayGroup.toString(16)}`;\r\n      }\r\n\r\n      const OverlayDataTag = `${groupStr}3000`;\r\n\r\n      if (instance[OverlayDataTag] && instance[OverlayDataTag].InlineBinary) {\r\n        const inlineBinaryData = atob(instance[OverlayDataTag].InlineBinary);\r\n        const arraybuffer = str2ab(inlineBinaryData);\r\n\r\n        instance[OverlayDataTag] = unpackOverlay(arraybuffer);\r\n      } else if (\r\n        instance[OverlayDataTag] &&\r\n        instance[OverlayDataTag].BulkDataURI\r\n      ) {\r\n        OverlayDataPromises.push(\r\n          _getOverlayData(instance[OverlayDataTag], server)\r\n        );\r\n        OverlayDataTags.push(OverlayDataTag);\r\n      } else if (\r\n        instance[OverlayDataTag] &&\r\n        instance[OverlayDataTag] instanceof ArrayBuffer\r\n      ) {\r\n        instance[OverlayDataTag] = unpackOverlay(instance[OverlayDataTag]);\r\n      }\r\n    }\r\n\r\n    if (OverlayDataPromises.length) {\r\n      Promise.all(OverlayDataPromises).then(results => {\r\n        for (let i = 0; i < results.length; i++) {\r\n          instance[OverlayDataTags[i]] = results[i];\r\n        }\r\n\r\n        resolve();\r\n      });\r\n    } else {\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\nasync function _getOverlayData(tag, server) {\r\n  const { BulkDataURI } = tag;\r\n\r\n  let uri = BulkDataURI;\r\n\r\n  // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\r\n  // incorrect bulk data URIs\r\n  if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\r\n    uri = uri.replace('http', 'https');\r\n  }\r\n\r\n  const config = {\r\n    url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\r\n    headers: DICOMWeb.getAuthorizationHeader(server),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n  const options = {\r\n    BulkDataURI: uri,\r\n  };\r\n\r\n  return dicomWeb\r\n    .retrieveBulkData(options)\r\n    .then(result => result[0])\r\n    .then(unpackOverlay);\r\n}\r\n","const validNumber = val => {\r\n  if (Array.isArray(val)) {\r\n    return val.map(v => (v !== undefined ? Number(v) : v));\r\n  } else {\r\n    return val !== undefined ? Number(val) : val;\r\n  }\r\n};\r\n\r\nexport default validNumber;\r\n","import dcmjs from 'dcmjs';\r\nimport queryString from 'query-string';\r\nimport dicomParser from 'dicom-parser';\r\nimport getPixelSpacingInformation from '../utils/metadataProvider/getPixelSpacingInformation';\r\nimport fetchPaletteColorLookupTableData from '../utils/metadataProvider/fetchPaletteColorLookupTableData';\r\nimport fetchOverlayData from '../utils/metadataProvider/fetchOverlayData';\r\nimport validNumber from '../utils/metadataProvider/validNumber';\r\n\r\nclass MetadataProvider {\r\n  constructor() {\r\n    // Define the main \"metadataLookup\" private property as an immutable property.\r\n    Object.defineProperty(this, 'studies', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: new Map(),\r\n    });\r\n    Object.defineProperty(this, 'imageIdToUIDs', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: new Map(),\r\n    });\r\n    this.datasets = {};\r\n  }\r\n\r\n  async addInstance(dicomJSONDatasetOrP10ArrayBuffer, options = {}) {\r\n    let dicomJSONDataset;\r\n\r\n    // If Arraybuffer, parse to DICOMJSON before naturalizing.\r\n    if (dicomJSONDatasetOrP10ArrayBuffer instanceof ArrayBuffer) {\r\n      const dicomData = DicomMessage.readFile(dicomJSONDatasetOrP10ArrayBuffer);\r\n\r\n      dicomJSONDataset = dicomData.dict;\r\n    } else {\r\n      dicomJSONDataset = dicomJSONDatasetOrP10ArrayBuffer;\r\n    }\r\n\r\n    // Check if dataset is already naturalized.\r\n\r\n    let naturalizedDataset;\r\n\r\n    if (dicomJSONDataset['SeriesInstanceUID'] === undefined) {\r\n      naturalizedDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\r\n        dicomJSONDataset\r\n      );\r\n    } else {\r\n      naturalizedDataset = dicomJSONDataset;\r\n    }\r\n\r\n    const {\r\n      StudyInstanceUID,\r\n      SeriesInstanceUID,\r\n      SOPInstanceUID,\r\n    } = naturalizedDataset;\r\n\r\n    this._getAndCacheStudyDataset(StudyInstanceUID, dicomJSONDataset);\r\n    const study = this._getAndCacheStudy(StudyInstanceUID);\r\n    const series = this._getAndCacheSeriesFromStudy(study, SeriesInstanceUID);\r\n    const instance = this._getAndCacheInstanceFromStudy(series, SOPInstanceUID);\r\n\r\n    Object.assign(instance, naturalizedDataset);\r\n\r\n    await this._checkBulkDataAndInlineBinaries(instance, options.server);\r\n\r\n    return instance;\r\n  }\r\n\r\n  addImageIdToUIDs(imageId, uids) {\r\n    // This method is a fallback for when you don't have WADO-URI or WADO-RS.\r\n    // You can add instances fetched by any method by calling addInstance, and hook an imageId to point at it here.\r\n    // An example would be dicom hosted at some random site.\r\n\r\n    this.imageIdToUIDs.set(imageId, uids);\r\n  }\r\n\r\n  _getAndCacheStudyDataset(StudyInstanceUID, dataset) {\r\n    if (!this.datasets[StudyInstanceUID]) {\r\n      this.datasets[StudyInstanceUID] = dataset;\r\n    }\r\n  }\r\n\r\n  getStudyDataset(StudyInstanceUID) {\r\n    return this.datasets[StudyInstanceUID];\r\n  }\r\n\r\n  _getAndCacheStudy(StudyInstanceUID) {\r\n    const studies = this.studies;\r\n\r\n    let study = studies.get(StudyInstanceUID);\r\n\r\n    if (!study) {\r\n      study = { series: new Map() };\r\n      studies.set(StudyInstanceUID, study);\r\n    }\r\n\r\n    return study;\r\n  }\r\n\r\n  _getAndCacheSeriesFromStudy(study, SeriesInstanceUID) {\r\n    let series = study.series.get(SeriesInstanceUID);\r\n\r\n    if (!series) {\r\n      series = { instances: new Map() };\r\n      study.series.set(SeriesInstanceUID, series);\r\n    }\r\n\r\n    return series;\r\n  }\r\n\r\n  _getAndCacheInstanceFromStudy(series, SOPInstanceUID) {\r\n    let instance = series.instances.get(SOPInstanceUID);\r\n\r\n    if (!instance) {\r\n      instance = {};\r\n      series.instances.set(SOPInstanceUID, instance);\r\n    }\r\n\r\n    return instance;\r\n  }\r\n\r\n  async _checkBulkDataAndInlineBinaries(instance, server) {\r\n    await fetchOverlayData(instance, server);\r\n\r\n    if (instance.PhotometricInterpretation === 'PALETTE COLOR') {\r\n      await fetchPaletteColorLookupTableData(instance, server);\r\n    }\r\n  }\r\n\r\n  _getInstance(imageId) {\r\n    const uids = this._getUIDsFromImageID(imageId);\r\n\r\n    if (!uids) {\r\n      return;\r\n    }\r\n\r\n    const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = uids;\r\n\r\n    return this._getInstanceData(\r\n      StudyInstanceUID,\r\n      SeriesInstanceUID,\r\n      SOPInstanceUID\r\n    );\r\n  }\r\n\r\n  get(query, imageId, options = { fallback: false }) {\r\n    const instance = this._getInstance(imageId);\r\n\r\n    if (query === INSTANCE) {\r\n      return instance;\r\n    }\r\n\r\n    return this.getTagFromInstance(query, instance, options);\r\n  }\r\n\r\n  getTag(query, imageId, options) {\r\n    return this.get(query, imageId, options);\r\n  }\r\n\r\n  getInstance(imageId) {\r\n    return this.get(INSTANCE, imageId);\r\n  }\r\n\r\n  getTagFromInstance(\r\n    naturalizedTagOrWADOImageLoaderTag,\r\n    instance,\r\n    options = { fallback: false }\r\n  ) {\r\n    if (!instance) {\r\n      return;\r\n    }\r\n\r\n    // If its a naturalized dcmjs tag present on the instance, return.\r\n    if (instance[naturalizedTagOrWADOImageLoaderTag]) {\r\n      return instance[naturalizedTagOrWADOImageLoaderTag];\r\n    }\r\n\r\n    // Maybe its a legacy CornerstoneWADOImageLoader tag then:\r\n    return this._getCornerstoneWADOImageLoaderTag(\r\n      naturalizedTagOrWADOImageLoaderTag,\r\n      instance\r\n    );\r\n  }\r\n\r\n  _getCornerstoneWADOImageLoaderTag(wadoImageLoaderTag, instance) {\r\n    let metadata;\r\n\r\n    switch (wadoImageLoaderTag) {\r\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_SERIES_MODULE:\r\n        const { SeriesDate, SeriesTime } = instance;\r\n\r\n        let seriesDate;\r\n        let seriesTime;\r\n\r\n        if (SeriesDate) {\r\n          seriesDate = dicomParser.parseDA(SeriesDate);\r\n        }\r\n\r\n        if (SeriesTime) {\r\n          seriesTime = dicomParser.parseTM(SeriesTime);\r\n        }\r\n\r\n        metadata = {\r\n          modality: instance.Modality,\r\n          seriesInstanceUID: instance.SeriesInstanceUID,\r\n          seriesNumber: instance.SeriesNumber,\r\n          studyInstanceUID: instance.StudyInstanceUID,\r\n          seriesDate,\r\n          seriesTime,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_STUDY_MODULE:\r\n        metadata = {\r\n          patientAge: instance.PatientAge,\r\n          patientSize: instance.PatientSize,\r\n          patientWeight: instance.PatientWeight,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PLANE_MODULE:\r\n        const { ImageOrientationPatient } = instance;\r\n\r\n        // Fallback for DX images.\r\n        // TODO: We should use the rest of the results of this function\r\n        // to update the UI somehow\r\n        const { PixelSpacing } = getPixelSpacingInformation(instance);\r\n\r\n        let rowPixelSpacing;\r\n        let columnPixelSpacing;\r\n\r\n        let rowCosines;\r\n        let columnCosines;\r\n\r\n        if (PixelSpacing) {\r\n          rowPixelSpacing = validNumber(PixelSpacing[0]);\r\n          columnPixelSpacing = validNumber(PixelSpacing[1]);\r\n        }\r\n\r\n        if (ImageOrientationPatient) {\r\n          rowCosines = validNumber(ImageOrientationPatient.slice(0, 3));\r\n          columnCosines = validNumber(ImageOrientationPatient.slice(3, 6));\r\n        }\r\n\r\n        metadata = {\r\n          frameOfReferenceUID: instance.FrameOfReferenceUID,\r\n          rows: instance.Rows,\r\n          columns: instance.Columns,\r\n          imageOrientationPatient: validNumber(ImageOrientationPatient),\r\n          rowCosines,\r\n          columnCosines,\r\n          imagePositionPatient: validNumber(instance.ImagePositionPatient),\r\n          sliceThickness: validNumber(instance.SliceThickness),\r\n          sliceLocation: validNumber(instance.SliceLocation),\r\n          pixelSpacing: validNumber(PixelSpacing),\r\n          rowPixelSpacing,\r\n          columnPixelSpacing,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PIXEL_MODULE:\r\n        metadata = {\r\n          samplesPerPixel: instance.SamplesPerPixel,\r\n          photometricInterpretation: instance.PhotometricInterpretation,\r\n          rows: instance.Rows,\r\n          columns: instance.Columns,\r\n          bitsAllocated: instance.BitsAllocated,\r\n          bitsStored: instance.BitsStored,\r\n          highBit: instance.HighBit,\r\n          pixelRepresentation: instance.PixelRepresentation,\r\n          planarConfiguration: instance.PlanarConfiguration,\r\n          pixelAspectRatio: instance.PixelAspectRatio,\r\n          smallestPixelValue: instance.SmallestPixelValue,\r\n          largestPixelValue: instance.LargestPixelValue,\r\n          redPaletteColorLookupTableDescriptor:\r\n            instance.RedPaletteColorLookupTableDescriptor,\r\n          greenPaletteColorLookupTableDescriptor:\r\n            instance.GreenPaletteColorLookupTableDescriptor,\r\n          bluePaletteColorLookupTableDescriptor:\r\n            instance.BluePaletteColorLookupTableDescriptor,\r\n          redPaletteColorLookupTableData:\r\n            instance.RedPaletteColorLookupTableData,\r\n          greenPaletteColorLookupTableData:\r\n            instance.GreenPaletteColorLookupTableData,\r\n          bluePaletteColorLookupTableData:\r\n            instance.BluePaletteColorLookupTableData,\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.VOI_LUT_MODULE:\r\n        let { WindowCenter, WindowWidth } = instance;\r\n\r\n        const windowCenter = Array.isArray(WindowCenter)\r\n          ? WindowCenter\r\n          : [WindowCenter];\r\n        const windowWidth = Array.isArray(WindowWidth)\r\n          ? WindowWidth\r\n          : [WindowWidth];\r\n\r\n        metadata = {\r\n          windowCenter: validNumber(windowCenter),\r\n          windowWidth: validNumber(windowWidth),\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.MODALITY_LUT_MODULE:\r\n        const rescaleSlope = validNumber(instance.RescaleSlope);\r\n        const rescaleIntercept = validNumber(instance.RescaleIntercept);\r\n        metadata = {\r\n          rescaleIntercept,\r\n          rescaleSlope,\r\n          rescaleType: instance.RescaleType,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.SOP_COMMON_MODULE:\r\n        metadata = {\r\n          sopClassUID: instance.SOPClassUID,\r\n          sopInstanceUID: instance.SOPInstanceUID,\r\n        };\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.PET_ISOTOPE_MODULE:\r\n        const { RadiopharmaceuticalInformationSequence } = instance;\r\n\r\n        if (RadiopharmaceuticalInformationSequence) {\r\n          const RadiopharmaceuticalInformation = Array.isArray(\r\n            RadiopharmaceuticalInformationSequence\r\n          )\r\n            ? RadiopharmaceuticalInformationSequence[0]\r\n            : RadiopharmaceuticalInformationSequence;\r\n\r\n          const {\r\n            RadiopharmaceuticalStartTime,\r\n            RadionuclideTotalDose,\r\n            RadionuclideHalfLife,\r\n          } = RadiopharmaceuticalInformation;\r\n\r\n          const radiopharmaceuticalInfo = {\r\n            radiopharmaceuticalStartTime: dicomParser.parseTM(\r\n              RadiopharmaceuticalStartTime\r\n            ),\r\n            radionuclideTotalDose: RadionuclideTotalDose,\r\n            radionuclideHalfLife: RadionuclideHalfLife,\r\n          };\r\n          metadata = {\r\n            radiopharmaceuticalInfo,\r\n          };\r\n        }\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.OVERLAY_PLANE_MODULE:\r\n        const overlays = [];\r\n\r\n        for (\r\n          let overlayGroup = 0x00;\r\n          overlayGroup <= 0x1e;\r\n          overlayGroup += 0x02\r\n        ) {\r\n          let groupStr = `60${overlayGroup.toString(16)}`;\r\n\r\n          if (groupStr.length === 3) {\r\n            groupStr = `600${overlayGroup.toString(16)}`;\r\n          }\r\n\r\n          const OverlayDataTag = `${groupStr}3000`;\r\n          const OverlayData = instance[OverlayDataTag];\r\n\r\n          if (!OverlayData) {\r\n            continue;\r\n          }\r\n\r\n          const OverlayRowsTag = `${groupStr}0010`;\r\n          const OverlayColumnsTag = `${groupStr}0011`;\r\n          const OverlayType = `${groupStr}0040`;\r\n          const OverlayOriginTag = `${groupStr}0050`;\r\n          const OverlayDescriptionTag = `${groupStr}0022`;\r\n          const OverlayLabelTag = `${groupStr}1500`;\r\n          const ROIAreaTag = `${groupStr}1301`;\r\n          const ROIMeanTag = `${groupStr}1302`;\r\n          const ROIStandardDeviationTag = `${groupStr}1303`;\r\n          const OverlayOrigin = instance[OverlayOriginTag];\r\n\r\n          const overlay = {\r\n            rows: instance[OverlayRowsTag],\r\n            columns: instance[OverlayColumnsTag],\r\n            type: instance[OverlayType],\r\n            x: OverlayOrigin[0],\r\n            y: OverlayOrigin[1],\r\n            pixelData: OverlayData,\r\n            description: instance[OverlayDescriptionTag],\r\n            label: instance[OverlayLabelTag],\r\n            roiArea: instance[ROIAreaTag],\r\n            roiMean: instance[ROIMeanTag],\r\n            roiStandardDeviation: instance[ROIStandardDeviationTag],\r\n          };\r\n\r\n          overlays.push(overlay);\r\n        }\r\n\r\n        metadata = {\r\n          overlays,\r\n        };\r\n\r\n        break;\r\n\r\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_MODULE:\r\n        const { PatientName } = instance;\r\n\r\n        let patientName;\r\n        if (PatientName) {\r\n          patientName = PatientName.Alphabetic;\r\n        }\r\n\r\n        metadata = {\r\n          patientName,\r\n          patientId: instance.PatientID,\r\n        };\r\n\r\n        break;\r\n\r\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_IMAGE_MODULE:\r\n        metadata = {\r\n          sopInstanceUid: instance.SOPInstanceUID,\r\n          instanceNumber: instance.InstanceNumber,\r\n          lossyImageCompression: instance.LossyImageCompression,\r\n          lossyImageCompressionRatio: instance.LossyImageCompressionRatio,\r\n          lossyImageCompressionMethod: instance.LossyImageCompressionMethod,\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_STUDY_MODULE:\r\n        metadata = {\r\n          studyDescription: instance.StudyDescription,\r\n          studyDate: instance.StudyDate,\r\n          studyTime: instance.StudyTime,\r\n          accessionNumber: instance.AccessionNumber,\r\n        };\r\n\r\n        break;\r\n      case WADO_IMAGE_LOADER_TAGS.CINE_MODULE:\r\n        metadata = {\r\n          frameTime: instance.FrameTime,\r\n        };\r\n\r\n        break;\r\n    }\r\n\r\n    return metadata;\r\n  }\r\n\r\n  _getInstanceData(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {\r\n    const study = this.studies.get(StudyInstanceUID);\r\n\r\n    if (!study) {\r\n      return;\r\n    }\r\n\r\n    const series = study.series.get(SeriesInstanceUID);\r\n\r\n    if (!series) {\r\n      return;\r\n    }\r\n\r\n    const instance = series.instances.get(SOPInstanceUID);\r\n\r\n    return instance;\r\n  }\r\n\r\n  _getUIDsFromImageID(imageId) {\r\n    if (imageId.includes('wadors:')) {\r\n      const strippedImageId = imageId.split('studies/')[1];\r\n      const splitImageId = strippedImageId.split('/');\r\n\r\n      return {\r\n        StudyInstanceUID: splitImageId[0], // Note: splitImageId[1] === 'series'\r\n        SeriesInstanceUID: splitImageId[2], // Note: splitImageId[3] === 'instances'\r\n        SOPInstanceUID: splitImageId[4],\r\n      };\r\n    }\r\n    if (imageId.includes('wado?requestType=WADO')) {\r\n      const qs = queryString.parse(imageId);\r\n\r\n      return {\r\n        StudyInstanceUID: qs.studyUID,\r\n        SeriesInstanceUID: qs.seriesUID,\r\n        SOPInstanceUID: qs.objectUID,\r\n      };\r\n    } else {\r\n      // Maybe its a non-standard imageId\r\n      return this.imageIdToUIDs.get(imageId);\r\n    }\r\n  }\r\n}\r\n\r\nconst metadataProvider = new MetadataProvider();\r\n\r\nexport default metadataProvider;\r\n\r\nconst WADO_IMAGE_LOADER_TAGS = {\r\n  // CornerstoneWADOImageLoader specific\r\n  GENERAL_SERIES_MODULE: 'generalSeriesModule',\r\n  PATIENT_STUDY_MODULE: 'patientStudyModule',\r\n  IMAGE_PLANE_MODULE: 'imagePlaneModule',\r\n  IMAGE_PIXEL_MODULE: 'imagePixelModule',\r\n  VOI_LUT_MODULE: 'voiLutModule',\r\n  MODALITY_LUT_MODULE: 'modalityLutModule',\r\n  SOP_COMMON_MODULE: 'sopCommonModule',\r\n  PET_ISOTOPE_MODULE: 'petIsotopeModule',\r\n  OVERLAY_PLANE_MODULE: 'overlayPlaneModule',\r\n\r\n  // react-cornerstone-viewport specifc\r\n  PATIENT_MODULE: 'patientModule',\r\n  GENERAL_IMAGE_MODULE: 'generalImageModule',\r\n  GENERAL_STUDY_MODULE: 'generalStudyModule',\r\n  CINE_MODULE: 'cineModule',\r\n};\r\n\r\nconst INSTANCE = 'instance';\r\n","import log from '../../log';\r\n\r\nexport default function getPixelSpacingInformation(instance) {\r\n  // See http://gdcm.sourceforge.net/wiki/index.php/Imager_Pixel_Spacing\r\n\r\n  // TODO: Add Ultrasound region spacing\r\n  // TODO: Add manual calibration\r\n\r\n  // TODO: Use ENUMS from dcmjs\r\n  const projectionRadiographSOPClassUIDs = [\r\n    '1.2.840.10008.5.1.4.1.1.1', //\tCR Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.1.1', //\tDigital X-Ray Image Storage – for Presentation\r\n    '1.2.840.10008.5.1.4.1.1.1.1.1', //\tDigital X-Ray Image Storage – for Processing\r\n    '1.2.840.10008.5.1.4.1.1.1.2', //\tDigital Mammography X-Ray Image Storage – for Presentation\r\n    '1.2.840.10008.5.1.4.1.1.1.2.1', //\tDigital Mammography X-Ray Image Storage – for Processing\r\n    '1.2.840.10008.5.1.4.1.1.1.3', //\tDigital Intra – oral X-Ray Image Storage – for Presentation\r\n    '1.2.840.10008.5.1.4.1.1.1.3.1', //\tDigital Intra – oral X-Ray Image Storage – for Processing\r\n    '1.2.840.10008.5.1.4.1.1.12.1', //\tX-Ray Angiographic Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.1.1', //\tEnhanced XA Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.2', //\tX-Ray Radiofluoroscopic Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.2.1', //\tEnhanced XRF Image Storage\r\n    '1.2.840.10008.5.1.4.1.1.12.3', // X-Ray Angiographic Bi-plane Image Storage\tRetired\r\n  ];\r\n\r\n  const {\r\n    PixelSpacing,\r\n    ImagerPixelSpacing,\r\n    SOPClassUID,\r\n    PixelSpacingCalibrationType,\r\n    PixelSpacingCalibrationDescription,\r\n    EstimatedRadiographicMagnificationFactor,\r\n    SequenceOfUltrasoundRegions,\r\n  } = instance;\r\n  const isProjection = projectionRadiographSOPClassUIDs.includes(SOPClassUID);\r\n\r\n  const TYPES = {\r\n    NOT_APPLICABLE: 'NOT_APPLICABLE',\r\n    UNKNOWN: 'UNKNOWN',\r\n    CALIBRATED: 'CALIBRATED',\r\n    DETECTOR: 'DETECTOR',\r\n  };\r\n\r\n  if (isProjection && !ImagerPixelSpacing) {\r\n    // If only Pixel Spacing is present, and this is a projection radiograph,\r\n    // PixelSpacing should be used, but the user should be informed that\r\n    // what it means is unknown\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.UNKNOWN,\r\n      isProjection,\r\n    };\r\n  } else if (\r\n    PixelSpacing &&\r\n    ImagerPixelSpacing &&\r\n    PixelSpacing === ImagerPixelSpacing\r\n  ) {\r\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have the same values,\r\n    // then the user should be informed that the measurements are at the detector plane\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.DETECTOR,\r\n      isProjection,\r\n    };\r\n  } else if (\r\n    PixelSpacing &&\r\n    ImagerPixelSpacing &&\r\n    PixelSpacing !== ImagerPixelSpacing\r\n  ) {\r\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have different values,\r\n    // then the user should be informed that these are \"calibrated\"\r\n    // (in some unknown manner if Pixel Spacing Calibration Type and/or\r\n    // Pixel Spacing Calibration Description are absent)\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.CALIBRATED,\r\n      isProjection,\r\n      PixelSpacingCalibrationType,\r\n      PixelSpacingCalibrationDescription,\r\n    };\r\n  } else if (!PixelSpacing && ImagerPixelSpacing) {\r\n    let CorrectedImagerPixelSpacing = ImagerPixelSpacing;\r\n    if (EstimatedRadiographicMagnificationFactor) {\r\n      // Note that in IHE Mammo profile compliant displays, the value of Imager Pixel Spacing is required to be corrected by\r\n      // Estimated Radiographic Magnification Factor and the user informed of that.\r\n      // TODO: should this correction be done before all of this logic?\r\n      CorrectedImagerPixelSpacing = ImagerPixelSpacing.map(\r\n        pixelSpacing => pixelSpacing / EstimatedRadiographicMagnificationFactor\r\n      );\r\n    } else {\r\n      log.info(\r\n        'EstimatedRadiographicMagnificationFactor was not present. Unable to correct ImagerPixelSpacing.'\r\n      );\r\n    }\r\n\r\n    return {\r\n      PixelSpacing: CorrectedImagerPixelSpacing,\r\n      isProjection,\r\n    };\r\n  } else if (\r\n    SequenceOfUltrasoundRegions &&\r\n    typeof SequenceOfUltrasoundRegions === 'object'\r\n  ) {\r\n    const { PhysicalDeltaX, PhysicalDeltaY } = SequenceOfUltrasoundRegions;\r\n    const USPixelSpacing = [PhysicalDeltaX * 10, PhysicalDeltaY * 10];\r\n\r\n    return {\r\n      PixelSpacing: USPixelSpacing,\r\n    };\r\n  } else if (\r\n    SequenceOfUltrasoundRegions &&\r\n    Array.isArray(SequenceOfUltrasoundRegions) &&\r\n    SequenceOfUltrasoundRegions.length > 1\r\n  ) {\r\n    log.warn(\r\n      'Sequence of Ultrasound Regions > one entry. This is not yet implemented, all measurements will be shown in pixels.'\r\n    );\r\n  } else if (isProjection === false && !ImagerPixelSpacing) {\r\n    // If only Pixel Spacing is present, and this is not a projection radiograph,\r\n    // we can stop here\r\n    return {\r\n      PixelSpacing,\r\n      type: TYPES.NOT_APPLICABLE,\r\n      isProjection,\r\n    };\r\n  }\r\n\r\n    log.info(\r\n    'Unknown combination of PixelSpacing and ImagerPixelSpacing identified. Unable to determine spacing.'\r\n  );\r\n}\r\n","/**\r\n * adds a pause and unpause method to Mousetrap\r\n * this allows you to enable or disable keyboard shortcuts\r\n * without having to reset Mousetrap and rebind everything\r\n *\r\n * https://github.com/ccampbell/mousetrap/blob/master/plugins/pause/mousetrap-pause.js\r\n */\r\nexport default function(Mousetrap) {\r\n  var _originalStopCallback = Mousetrap.prototype.stopCallback;\r\n\r\n  Mousetrap.prototype.stopCallback = function(e, element, combo) {\r\n    var self = this;\r\n\r\n    if (self.paused) {\r\n      return true;\r\n    }\r\n\r\n    return _originalStopCallback.call(self, e, element, combo);\r\n  };\r\n\r\n  Mousetrap.prototype.pause = function() {\r\n    var self = this;\r\n    self.paused = true;\r\n  };\r\n\r\n  Mousetrap.prototype.unpause = function() {\r\n    var self = this;\r\n    self.paused = false;\r\n  };\r\n\r\n  Mousetrap.init();\r\n}\r\n","/**\r\n * This extension allows you to record a sequence using Mousetrap.\r\n * {@link https://craig.is/killing/mice}\r\n *\r\n * @author Dan Tao <daniel.tao@gmail.com>\r\n */\r\nexport default function(Mousetrap) {\r\n  /**\r\n   * the sequence currently being recorded\r\n   *\r\n   * @type {Array}\r\n   */\r\n  var _recordedSequence = [],\r\n    /**\r\n     * a callback to invoke after recording a sequence\r\n     *\r\n     * @type {Function|null}\r\n     */\r\n    _recordedSequenceCallback = null,\r\n    /**\r\n     * a list of all of the keys currently held down\r\n     *\r\n     * @type {Array}\r\n     */\r\n    _currentRecordedKeys = [],\r\n    /**\r\n     * temporary state where we remember if we've already captured a\r\n     * character key in the current combo\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _recordedCharacterKey = false,\r\n    /**\r\n     * a handle for the timer of the current recording\r\n     *\r\n     * @type {null|number}\r\n     */\r\n    _recordTimer = null,\r\n    /**\r\n     * the original handleKey method to override when Mousetrap.record() is\r\n     * called\r\n     *\r\n     * @type {Function}\r\n     */\r\n    _origHandleKey = Mousetrap.prototype.handleKey;\r\n\r\n  /**\r\n   * handles a character key event\r\n   *\r\n   * @param {string} character\r\n   * @param {Array} modifiers\r\n   * @param {Event} e\r\n   * @returns void\r\n   */\r\n  function _handleKey(character, modifiers, e) {\r\n    var self = this;\r\n\r\n    if (!self.recording) {\r\n      _origHandleKey.apply(self, arguments);\r\n      return;\r\n    }\r\n\r\n    // remember this character if we're currently recording a sequence\r\n    if (e.type == 'keydown') {\r\n      if (character.length === 1 && _recordedCharacterKey) {\r\n        _recordCurrentCombo();\r\n      }\r\n\r\n      for (let i = 0; i < modifiers.length; ++i) {\r\n        _recordKey(modifiers[i]);\r\n      }\r\n      _recordKey(character);\r\n\r\n      // once a key is released, all keys that were held down at the time\r\n      // count as a keypress\r\n    } else if (e.type == 'keyup' && _currentRecordedKeys.length > 0) {\r\n      _recordCurrentCombo();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * marks a character key as held down while recording a sequence\r\n   *\r\n   * @param {string} key\r\n   * @returns void\r\n   */\r\n  function _recordKey(key) {\r\n    // one-off implementation of Array.indexOf, since IE6-9 don't support it\r\n    for (let i = 0; i < _currentRecordedKeys.length; ++i) {\r\n      if (_currentRecordedKeys[i] === key) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    _currentRecordedKeys.push(key);\r\n\r\n    if (key.length === 1) {\r\n      _recordedCharacterKey = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * marks whatever key combination that's been recorded so far as finished\r\n   * and gets ready for the next combo\r\n   *\r\n   * @returns void\r\n   */\r\n  function _recordCurrentCombo() {\r\n    _recordedSequence.push(_currentRecordedKeys);\r\n    _currentRecordedKeys = [];\r\n    _recordedCharacterKey = false;\r\n    _finishRecording();\r\n  }\r\n\r\n  /**\r\n   * ensures each combo in a sequence is in a predictable order and formats\r\n   * key combos to be '+'-delimited\r\n   *\r\n   * modifies the sequence in-place\r\n   *\r\n   * @param {Array} sequence\r\n   * @returns void\r\n   */\r\n  function _normalizeSequence(sequence) {\r\n    for (let i = 0; i < sequence.length; ++i) {\r\n      sequence[i].sort(function(x, y) {\r\n        // modifier keys always come first, in alphabetical order\r\n        if (x.length > 1 && y.length === 1) {\r\n          return -1;\r\n        } else if (x.length === 1 && y.length > 1) {\r\n          return 1;\r\n        }\r\n\r\n        // character keys come next (list should contain no duplicates,\r\n        // so no need for equality check)\r\n        return x > y ? 1 : -1;\r\n      });\r\n\r\n      sequence[i] = sequence[i].join('+');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * finishes the current recording, passes the recorded sequence to the stored\r\n   * callback, and sets Mousetrap.handleKey back to its original function\r\n   *\r\n   * @returns void\r\n   */\r\n  function _finishRecording() {\r\n    if (_recordedSequenceCallback) {\r\n      _normalizeSequence(_recordedSequence);\r\n      _recordedSequenceCallback(_recordedSequence);\r\n    }\r\n\r\n    // reset all recorded state\r\n    _recordedSequence = [];\r\n    _recordedSequenceCallback = null;\r\n    _currentRecordedKeys = [];\r\n  }\r\n\r\n  /**\r\n   * called to set a 1 second timeout on the current recording\r\n   *\r\n   * this is so after each key press in the sequence the recording will wait for\r\n   * 1 more second before executing the callback\r\n   *\r\n   * @returns void\r\n   */\r\n  function _restartRecordTimer() {\r\n    clearTimeout(_recordTimer);\r\n    _recordTimer = setTimeout(_finishRecording, 1000);\r\n  }\r\n\r\n  /**\r\n   * records the next sequence and passes it to a callback once it's\r\n   * completed\r\n   *\r\n   * @param {Function} callback\r\n   * @returns void\r\n   */\r\n  Mousetrap.prototype.record = function(callback) {\r\n    var self = this;\r\n    self.recording = true;\r\n    _recordedSequenceCallback = function() {\r\n      self.recording = false;\r\n      callback.apply(self, arguments);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * stop recording\r\n   *\r\n   * @param {Function} callback\r\n   * @returns void\r\n   */\r\n  Mousetrap.prototype.stopRecord = function() {\r\n    var self = this;\r\n    self.recording = false;\r\n  };\r\n\r\n  /**\r\n   * start recording\r\n   *\r\n   * @param {Function} callback\r\n   * @returns void\r\n   */\r\n  Mousetrap.prototype.startRecording = function() {\r\n    var self = this;\r\n    self.recording = true;\r\n  };\r\n\r\n  Mousetrap.prototype.handleKey = function() {\r\n    var self = this;\r\n    _handleKey.apply(self, arguments);\r\n  };\r\n\r\n  Mousetrap.init();\r\n}\r\n","import Mousetrap from 'mousetrap';\r\nimport pausePlugin from './pausePlugin';\r\nimport recordPlugin from './recordPlugin';\r\n\r\nrecordPlugin(Mousetrap);\r\npausePlugin(Mousetrap);\r\n\r\nexport default Mousetrap;\r\n","const ReconstructionIssues = {\r\n  DATASET_4D: 'datasetis4D',\r\n  VARYING_IMAGESDIMENSIONS: 'imagesdimensionsvarying',\r\n  VARYING_IMAGESCOMPONENTS: 'imagescomponentsvarying',\r\n  VARYING_IMAGESORIENTATION: 'imagesorientationvarying',\r\n  MISSING_FRAMES: 'missingframes',\r\n  IRREGULAR_SPACING: 'irregularspacing',\r\n  MULTIFFRAMES: 'multiframe',\r\n};\r\n\r\nexport {ReconstructionIssues};\r\n","import { TypeSafeCollection } from '../classes/TypeSafeCollection';\r\n\r\nconst studyMetadataList = new TypeSafeCollection();\r\n\r\nfunction add(studyMetadata) {\r\n  studyMetadataList.insert(studyMetadata);\r\n}\r\n\r\nfunction get(studyInstanceUID) {\r\n  return studyMetadataList.findBy({ studyInstanceUID });\r\n}\r\n\r\nfunction all(options) {\r\n  return studyMetadataList.all(options);\r\n}\r\n\r\nfunction remove(studyInstanceUID) {\r\n  studyMetadataList.remove({ studyInstanceUID });\r\n}\r\n\r\nfunction purge() {\r\n  studyMetadataList.removeAll();\r\n}\r\n\r\nexport default {\r\n  add,\r\n  get,\r\n  all,\r\n  remove,\r\n  purge,\r\n};\r\n","import { InstanceMetadata } from './InstanceMetadata';\r\nimport getImageId from '../../utils/getImageId.js';\r\n\r\nexport class OHIFInstanceMetadata extends InstanceMetadata {\r\n  /**\r\n   * @param {Object} Instance object.\r\n   */\r\n  constructor(data, series, study, uid) {\r\n    super(data, uid);\r\n    this.init(series, study);\r\n  }\r\n\r\n  init(series, study) {\r\n    const instance = this.getData();\r\n\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _sopInstanceUID: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: instance.SOPInstanceUID,\r\n      },\r\n      _study: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: study,\r\n      },\r\n      _series: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: series,\r\n      },\r\n      _instance: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: instance,\r\n      },\r\n      _cache: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: Object.create(null),\r\n      },\r\n    });\r\n  }\r\n\r\n  // Override\r\n  getTagValue(tagOrProperty, defaultValue, bypassCache) {\r\n    // check if this property has been cached...\r\n    if (tagOrProperty in this._cache && bypassCache !== true) {\r\n      return this._cache[tagOrProperty];\r\n    }\r\n\r\n    const instanceData = this._instance.metadata;\r\n\r\n    // Search property value in the whole study metadata chain...\r\n    let rawValue;\r\n    if (tagOrProperty in instanceData) {\r\n      rawValue = instanceData[tagOrProperty];\r\n    } else if (tagOrProperty in this._series) {\r\n      rawValue = this._series[tagOrProperty];\r\n    } else if (tagOrProperty in this._study) {\r\n      rawValue = this._study[tagOrProperty];\r\n    }\r\n\r\n    if (rawValue !== void 0) {\r\n      // if rawValue value is not undefined, cache result...\r\n      this._cache[tagOrProperty] = rawValue;\r\n      return rawValue;\r\n    }\r\n\r\n    return defaultValue;\r\n  }\r\n\r\n  // Override\r\n  tagExists(tagOrProperty) {\r\n    return (\r\n      tagOrProperty in this._instance.metadata ||\r\n      tagOrProperty in this._series ||\r\n      tagOrProperty in this._study\r\n    );\r\n  }\r\n\r\n  // Override\r\n  getImageId(frame, thumbnail) {\r\n    // If _imageID is not cached, create it\r\n    if (this._imageId === null) {\r\n      this._imageId = getImageId(this.getData(), frame, thumbnail);\r\n    }\r\n\r\n    return this._imageId;\r\n  }\r\n}\r\n","import { SeriesMetadata } from './SeriesMetadata';\r\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\r\n\r\nexport class OHIFSeriesMetadata extends SeriesMetadata {\r\n  /**\r\n   * @param {Object} Series object.\r\n   */\r\n  constructor(data, study, uid) {\r\n    super(data, uid);\r\n    this.init(study);\r\n  }\r\n\r\n  init(study) {\r\n    const series = this.getData();\r\n\r\n    // define \"_seriesInstanceUID\" protected property...\r\n    Object.defineProperty(this, '_seriesInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: series.SeriesInstanceUID,\r\n    });\r\n\r\n    // populate internal list of instances...\r\n    series.instances.forEach(instance => {\r\n      this.addInstance(new OHIFInstanceMetadata(instance, series, study));\r\n    });\r\n  }\r\n}\r\n","import { StudyMetadata } from './StudyMetadata';\r\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\r\n\r\nexport class OHIFStudyMetadata extends StudyMetadata {\r\n  /**\r\n   * @param {Object} Study object.\r\n   */\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const study = this.getData();\r\n\r\n    // define \"_studyInstanceUID\" protected property\r\n    Object.defineProperty(this, '_studyInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: study.StudyInstanceUID,\r\n    });\r\n\r\n    // populate internal list of series\r\n    study.series.forEach(series => {\r\n      this.addSeries(new OHIFSeriesMetadata(series, study));\r\n    });\r\n  }\r\n}\r\n","import { InstanceMetadata } from './InstanceMetadata';\r\nimport { Metadata } from './Metadata';\r\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\r\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\r\nimport { OHIFStudyMetadata } from './OHIFStudyMetadata';\r\nimport { SeriesMetadata } from './SeriesMetadata';\r\nimport { StudyMetadata } from './StudyMetadata';\r\n\r\nconst metadata = {\r\n  Metadata,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  OHIFStudyMetadata,\r\n  OHIFSeriesMetadata,\r\n  OHIFInstanceMetadata,\r\n};\r\n\r\nexport {\r\n  Metadata,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  OHIFStudyMetadata,\r\n  OHIFSeriesMetadata,\r\n  OHIFInstanceMetadata,\r\n};\r\n\r\nexport default metadata;\r\n","import { ReconstructionIssues } from './../enums.js';\r\n\r\n/**\r\n * Checks if a series is reconstructable to a 3D volume.\r\n *\r\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {Object} value, reconstructionIssues.\r\n */\r\nfunction isDisplaySetReconstructable(instances) {\r\n  if (!instances.length) {\r\n    return { value: false };\r\n  }\r\n\r\n  const firstInstance = instances[0].getData().metadata;\r\n\r\n  const Modality = firstInstance.Modality;\r\n  const isMultiframe = firstInstance.NumberOfFrames > 1;\r\n\r\n  if (!constructableModalities.includes(Modality)) {\r\n    return { value: false };\r\n  }\r\n\r\n  // Can't reconstruct if we only have one image.\r\n  if (!isMultiframe && instances.length === 1) {\r\n    return { value: false };\r\n  }\r\n\r\n  if (isMultiframe) {\r\n    return processMultiframe();\r\n  } else {\r\n    return processSingleframe(instances);\r\n  }\r\n}\r\n\r\n/**\r\n * Process reconstructable multiframes checks\r\n * TODO: deal with multriframe checks! return false for now as can't reconstruct.\r\n * *\r\n * @returns {Object} value and reconstructionIssues.\r\n */\r\nfunction processMultiframe() {\r\n  const reconstructionIssues = [ReconstructionIssues.MULTIFRAMES];\r\n  return { value: false, reconstructionIssues };\r\n}\r\n\r\n/**\r\n * Process reconstructable single frame checks\r\n *\r\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {Object} value and reconstructionIssues.\r\n */\r\nfunction processSingleframe(instances) {\r\n  const n = instances.length;\r\n  const firstImage = instances[0].getData().metadata;\r\n  const firstImageRows = firstImage.Rows;\r\n  const firstImageColumns = firstImage.Columns;\r\n  const firstImageSamplesPerPixel = firstImage.SamplesPerPixel;\r\n  const firstImageOrientationPatient = firstImage.ImageOrientationPatient;\r\n\r\n  const reconstructionIssues = [];\r\n  // Can't reconstruct if we:\r\n  // -- Have a different dimensions within a displaySet.\r\n  // -- Have a different number of components within a displaySet.\r\n  // -- Have different orientations within a displaySet.\r\n  for (let ii = 1; ii < n; ++ii) {\r\n    const instance = instances[ii].getData().metadata;\r\n    const {\r\n      Rows,\r\n      Columns,\r\n      SamplesPerPixel,\r\n      ImageOrientationPatient,\r\n    } = instance;\r\n\r\n    if (Rows !== firstImageRows || Columns !== firstImageColumns) {\r\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESDIMENSIONS);\r\n    } else if (SamplesPerPixel !== firstImageSamplesPerPixel) {\r\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESCOMPONENTS);\r\n    } else if (\r\n      !_isSameArray(ImageOrientationPatient, firstImageOrientationPatient)\r\n    ) {\r\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESORIENTATION);\r\n    }\r\n\r\n    if (reconstructionIssues.length !== 0) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // check if dataset is 4D\r\n  if (_isDataset4D(instances)) {\r\n    reconstructionIssues.push(ReconstructionIssues.DATASET_4D);\r\n  }\r\n\r\n  return {\r\n    value: reconstructionIssues.length === 0 ? true : false,\r\n    reconstructionIssues,\r\n  };\r\n}\r\n\r\n/**\r\n *  Check is the spacing is uniform.\r\n *  The input metadata array has to be ordered by image position.\r\n *\r\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\r\n * @param {boolean} is the dataset 4D.\r\n *\r\n * @returns {Object} isUniform, reconstructionIssues and missingFrames\r\n */\r\nfunction isSpacingUniform(instances, datasetIs4D) {\r\n  const n = instances.length;\r\n  const firstImage = instances[0].getData().metadata;\r\n  const firstImagePositionPatient = firstImage.ImagePositionPatient;\r\n\r\n  const reconstructionIssues = [];\r\n  let missingFrames = 0;\r\n\r\n  // Check if frame spacing is approximately equal within a spacingTolerance.\r\n  // If spacing is on a uniform grid but we are missing frames,\r\n  // Allow reconstruction, but pass back the number of missing frames.\r\n  if (n > 2) {\r\n    const lastIpp = instances[n - 1].getData().metadata.ImagePositionPatient;\r\n\r\n    // We can't reconstruct if we are missing ImagePositionPatient values\r\n    if (firstImagePositionPatient && lastIpp) {\r\n      const averageSpacingBetweenFrames =\r\n        _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (n - 1);\r\n\r\n      let previousImagePositionPatient = firstImagePositionPatient;\r\n\r\n      for (let ii = 1; ii < n; ++ii) {\r\n        const instance = instances[ii].getData().metadata;\r\n        const { ImagePositionPatient } = instance;\r\n\r\n        const spacingBetweenFrames = _getPerpendicularDistance(\r\n          ImagePositionPatient,\r\n          previousImagePositionPatient\r\n        );\r\n\r\n        if (datasetIs4D && spacingBetweenFrames < 1e-3) {\r\n          // the dataset is 4D, if the distance is zero, means that we are\r\n          // checking the 4th dimension. Do not return, since we want still to\r\n          // check the 3rd dimension spacing.\r\n          continue;\r\n        }\r\n\r\n        const spacingIssue = _getSpacingIssue(\r\n          spacingBetweenFrames,\r\n          averageSpacingBetweenFrames\r\n        );\r\n\r\n        if (spacingIssue) {\r\n          const issue = spacingIssue.issue;\r\n\r\n          if (issue === ReconstructionIssues.MISSING_FRAMES) {\r\n            missingFrames += spacingIssue.missingFrames;\r\n          } else if (issue === ReconstructionIssues.IRREGULAR_SPACING) {\r\n            reconstructionIssues.push(issue);\r\n            break;\r\n          }\r\n        }\r\n\r\n        previousImagePositionPatient = ImagePositionPatient;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    isUniform: reconstructionIssues.length === 0 ? true : false,\r\n    missingFrames,\r\n    reconstructionIssues,\r\n  };\r\n}\r\n\r\n/**\r\n *  Check if 4D dataset.\r\n *\r\n *  Assuming that slices at different time have the same position, here we just check if\r\n *  there are multiple slices for the same ImagePositionPatient and disable MPR.\r\n *\r\n *  A better heuristic would be checking 4D tags, e.g. the presence of multiple TemporalPositionIdentifier values.\r\n *  However, some studies (e.g. https://github.com/OHIF/Viewers/issues/2113) do not have such tags.\r\n *\r\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {boolean} dataset4D value.\r\n */\r\nfunction _isDataset4D(instances) {\r\n  const n = instances.length;\r\n  for (let ii = 0; ii < n; ++ii) {\r\n    const instanceMetadataControl = instances[ii].getData().metadata;\r\n    if (\r\n      !instanceMetadataControl ||\r\n      instanceMetadataControl === undefined ||\r\n      !instanceMetadataControl.ImagePositionPatient ||\r\n      instanceMetadataControl.ImagePositionPatient === undefined\r\n    ) {\r\n      continue;\r\n    }\r\n    for (let jj = ii + 1; jj < n; ++jj) {\r\n      const instanceMetadata = instances[jj].getData().metadata;\r\n      if (\r\n        !instanceMetadata ||\r\n        instanceMetadata === undefined ||\r\n        !instanceMetadata.ImagePositionPatient ||\r\n        instanceMetadata.ImagePositionPatient === undefined\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        _isSameArray(\r\n          instanceMetadataControl.ImagePositionPatient,\r\n          instanceMetadata.ImagePositionPatient\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction _isSameArray(iop1, iop2) {\r\n  if (iop1 === undefined || !iop2 === undefined) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    Math.abs(iop1[0] - iop2[0]) < iopTolerance &&\r\n    Math.abs(iop1[1] - iop2[1]) < iopTolerance &&\r\n    Math.abs(iop1[2] - iop2[2]) < iopTolerance\r\n  );\r\n}\r\n\r\n// TODO: Is 10% a reasonable spacingTolerance for spacing?\r\nconst spacingTolerance = 0.1;\r\nconst iopTolerance = 0.01;\r\n\r\n/**\r\n * Checks for spacing issues.\r\n *\r\n * @param {number} spacing The spacing between two frames.\r\n * @param {number} averageSpacing The average spacing between all frames.\r\n *\r\n * @returns {Object} An object containing the issue and extra information if necessary.\r\n */\r\nfunction _getSpacingIssue(spacing, averageSpacing) {\r\n  const equalWithinTolerance =\r\n    Math.abs(spacing - averageSpacing) < averageSpacing * spacingTolerance;\r\n\r\n  if (equalWithinTolerance) {\r\n    return;\r\n  }\r\n\r\n  const multipleOfAverageSpacing = spacing / averageSpacing;\r\n\r\n  const numberOfSpacings = Math.round(multipleOfAverageSpacing);\r\n\r\n  const errorForEachSpacing =\r\n    Math.abs(spacing - numberOfSpacings * averageSpacing) / numberOfSpacings;\r\n\r\n  if (errorForEachSpacing < spacingTolerance * averageSpacing) {\r\n    return {\r\n      issue: ReconstructionIssues.MISSING_FRAMES,\r\n      missingFrames: numberOfSpacings - 1,\r\n    };\r\n  }\r\n\r\n  return { issue: ReconstructionIssues.IRREGULAR_SPACING };\r\n}\r\n\r\nfunction _getPerpendicularDistance(a, b) {\r\n  return Math.sqrt(\r\n    Math.pow(a[0] - b[0], 2) +\r\n      Math.pow(a[1] - b[1], 2) +\r\n      Math.pow(a[2] - b[2], 2)\r\n  );\r\n}\r\n\r\nconst constructableModalities = ['MR', 'CT', 'PT', 'NM'];\r\n\r\nexport { isDisplaySetReconstructable, isSpacingUniform };\r\n","// - createStacks\r\nimport DICOMWeb from './../../DICOMWeb';\r\nimport ImageSet from './../ImageSet';\r\nimport { InstanceMetadata } from './InstanceMetadata';\r\nimport { Metadata } from './Metadata';\r\nimport { SeriesMetadata } from './SeriesMetadata';\r\n// - createStacks\r\nimport { api } from 'dicomweb-client';\r\n// - createStacks\r\nimport { isImage } from '../../utils/isImage';\r\nimport { naturalizeSOPClassUID } from '../../utils/naturalizeSOPClassUID';\r\nimport {\r\n  isDisplaySetReconstructable,\r\n  isSpacingUniform,\r\n} from '../../utils/isDisplaySetReconstructable';\r\nimport errorHandler from '../../errorHandler';\r\nimport isLowPriorityModality from '../../utils/isLowPriorityModality';\r\nimport getXHRRetryRequestHook from '../../utils/xhrRetryRequestHook';\r\n\r\nclass StudyMetadata extends Metadata {\r\n  constructor(data, uid) {\r\n    super(data, uid);\r\n    // Initialize Private Properties\r\n    Object.defineProperties(this, {\r\n      _studyInstanceUID: {\r\n        configurable: true, // configurable so that it can be redefined in sub-classes...\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n      _series: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _displaySets: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _derivedDisplaySets: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: [],\r\n      },\r\n      _firstSeries: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n      _firstInstance: {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: null,\r\n      },\r\n    });\r\n    // Initialize Public Properties\r\n    this._definePublicProperties();\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  /**\r\n   * Define Public Properties\r\n   * This method should only be called during initialization (inside the class constructor)\r\n   */\r\n  _definePublicProperties() {\r\n    /**\r\n     * Property: this.studyInstanceUID\r\n     * Same as this.getStudyInstanceUID()\r\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\r\n     * studyCollection.findBy({\r\n     *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\r\n     * });\r\n     */\r\n    Object.defineProperty(this, 'studyInstanceUID', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      get: function() {\r\n        return this.getStudyInstanceUID();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  /**\r\n   * Getter for displaySets\r\n   * @return {Array} Array of display set object\r\n   */\r\n  getDisplaySets() {\r\n    return this._displaySets.slice();\r\n  }\r\n\r\n  /**\r\n   * Split a series metadata object into display sets\r\n   * @param {Array} sopClassHandlerModules List of SOP Class Modules\r\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\r\n   * @returns {Array} The list of display sets created for the given series object\r\n   */\r\n  _createDisplaySetsForSeries(sopClassHandlerModules, series) {\r\n    const study = this;\r\n    const displaySets = [];\r\n\r\n    const anyInstances = series.getInstanceCount() > 0;\r\n\r\n    if (!anyInstances) {\r\n      const displaySet = new ImageSet([]);\r\n      const seriesData = series.getData();\r\n\r\n      displaySet.setAttributes({\r\n        displaySetInstanceUID: displaySet.uid,\r\n        SeriesInstanceUID: seriesData.SeriesInstanceUID,\r\n        SeriesDescription: seriesData.SeriesDescription,\r\n        SeriesNumber: seriesData.SeriesNumber,\r\n        Modality: seriesData.Modality,\r\n      });\r\n\r\n      displaySets.push(displaySet);\r\n\r\n      return displaySets;\r\n    }\r\n\r\n    const sopClassUIDs = getSopClassUIDs(series);\r\n\r\n    if (sopClassHandlerModules && sopClassHandlerModules.length > 0) {\r\n      const displaySet = _getDisplaySetFromSopClassModule(\r\n        sopClassHandlerModules,\r\n        series,\r\n        study,\r\n        sopClassUIDs\r\n      );\r\n\r\n      if (displaySet) {\r\n        displaySet.sopClassModule = true;\r\n\r\n        if (displaySet.isDerived) {\r\n          this._addDerivedDisplaySet(displaySet);\r\n        }\r\n\r\n        displaySets.push(displaySet);\r\n\r\n        return displaySets;\r\n      }\r\n    }\r\n\r\n    // WE NEED A BETTER WAY TO NOTE THAT THIS IS THE DEFAULT BEHAVIOR FOR LOADING\r\n    // A DISPLAY SET IF THERE IS NO MATCHING SOP CLASS PLUGIN\r\n\r\n    // Search through the instances (InstanceMetadata object) of this series\r\n    // Split Multi-frame instances and Single-image modalities\r\n    // into their own specific display sets. Place the rest of each\r\n    // series into another display set.\r\n    const stackableInstances = [];\r\n    series.forEachInstance(instance => {\r\n      let displaySet;\r\n\r\n      // All imaging modalities must have a valid value for SOPClassUID (x00080016) or Rows (x00280010)\r\n      if (\r\n        !isImage(instance.getTagValue('SOPClassUID')) &&\r\n        !instance.getTagValue('Rows')\r\n      ) {\r\n        // we set an empty display and we add a isSOPClassUIDSupported variable to\r\n        // print a warning that the series is not supported in the thumbnail.\r\n        // SOPClassUIDNaturalized is human readable name, since for non image series,\r\n        // we could have a mismatch between the SOPClassUID and the Modality.\r\n        // For example, in the Parametric map IOD Modality is expected to match\r\n        // the value for the series used to generate Parametric map, and there is no \"PM\" modality.\r\n        const displaySet = new ImageSet([]);\r\n        const seriesData = series.getData();\r\n        displaySet.setAttributes({\r\n          displaySetInstanceUID: displaySet.uid,\r\n          SeriesDate: seriesData.SeriesDate,\r\n          SeriesTime: seriesData.SeriesTime,\r\n          SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n          SeriesNumber: instance.getTagValue('SeriesNumber'),\r\n          SeriesDescription: instance.getTagValue('SeriesDescription'),\r\n          numImageFrames: instance.getTagValue('NumberOfFrames'),\r\n          frameRate: instance.getTagValue('FrameTime'),\r\n          Modality: instance.getTagValue('Modality'),\r\n          isMultiFrame: false,\r\n          StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\r\n          InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\r\n          AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\r\n          isReconstructable: false,\r\n          isSOPClassUIDSupported: false,\r\n          SOPClassUIDNaturalized: naturalizeSOPClassUID(\r\n            instance.getTagValue('SOPClassUID')\r\n          ),\r\n          metadata: instance.getData().metadata,\r\n        });\r\n\r\n        displaySets.push(displaySet);\r\n      } else {\r\n        if (isMultiFrame(instance)) {\r\n          displaySet = makeDisplaySet(series, [instance]);\r\n\r\n          displaySet.setAttributes({\r\n            sopClassUIDs,\r\n            isClip: true,\r\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID for drag/drop purposes\r\n            numImageFrames: instance.getTagValue('NumberOfFrames'), // Override the default value of instances.length\r\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\r\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\r\n          });\r\n          displaySets.push(displaySet);\r\n        } else if (isSingleImageModality(instance.Modality)) {\r\n          displaySet = makeDisplaySet(series, [instance]);\r\n          displaySet.setAttributes({\r\n            sopClassUIDs,\r\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\r\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\r\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\r\n          });\r\n          displaySets.push(displaySet);\r\n        } else {\r\n          stackableInstances.push(instance);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (stackableInstances.length) {\r\n      const displaySet = makeDisplaySet(series, stackableInstances);\r\n      displaySet.setAttribute('StudyInstanceUID', study.getStudyInstanceUID());\r\n      displaySet.setAttributes({\r\n        sopClassUIDs,\r\n      });\r\n      displaySets.push(displaySet);\r\n    }\r\n\r\n    return displaySets;\r\n  }\r\n\r\n  /**\r\n   * Adds the displaySets to the studies list of derived displaySets.\r\n   * @param {object} displaySet The displaySet to append to the derived displaysets list.\r\n   */\r\n  _addDerivedDisplaySet(displaySet) {\r\n    this._derivedDisplaySets.push(displaySet);\r\n    // --> Perhaps that logic should exist in the extension sop class handler and this be a dumb list.\r\n    // TODO -> Get x Modality by referencedSeriesInstanceUid, FoR, etc.\r\n  }\r\n\r\n  /**\r\n   * Adds the displaySets to the studies list of derived displaySets.\r\n   * @param {array} displaySets The displaySets array to append to the derived displaysets list.\r\n   */\r\n  _addDerivedDisplaySets(displaySets) {\r\n    displaySets.map(displaySet => this._derivedDisplaySets.push(displaySet));\r\n  }\r\n\r\n  /**\r\n   * Returns the source display set of the derivated display set.\r\n   * @param {object} derivatedDisplaySet\r\n   * @param {array[StudyMetadata]} studies\r\n   * @return {object} source display set.\r\n   */\r\n  static getReferencedDisplaySet(derivatedDisplaySet, studies) {\r\n    let allDisplaySets = [];\r\n\r\n    studies.forEach(study => {\r\n      allDisplaySets = allDisplaySets.concat(study.displaySets);\r\n    });\r\n\r\n    const otherDisplaySets = allDisplaySets.filter(\r\n      ds =>\r\n        ds &&\r\n        derivatedDisplaySet &&\r\n        ds.displaySetInstanceUID !== derivatedDisplaySet.displaySetInstanceUID\r\n    );\r\n\r\n    const { metadata } = derivatedDisplaySet;\r\n\r\n    let referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\r\n      metadata,\r\n      otherDisplaySets\r\n    );\r\n\r\n    let noReferencedSeriesAvailable =\r\n      !referencedSeriesInstanceUIDs ||\r\n      referencedSeriesInstanceUIDs.length === 0;\r\n    if (noReferencedSeriesAvailable) {\r\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\r\n        metadata\r\n      );\r\n    }\r\n\r\n    noReferencedSeriesAvailable =\r\n      !referencedSeriesInstanceUIDs ||\r\n      referencedSeriesInstanceUIDs.length === 0;\r\n    if (noReferencedSeriesAvailable) {\r\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\r\n        metadata,\r\n        otherDisplaySets\r\n      );\r\n    }\r\n\r\n    const referencedSeriesAvailable =\r\n      referencedSeriesInstanceUIDs && referencedSeriesInstanceUIDs.length !== 0;\r\n    if (referencedSeriesAvailable) {\r\n      const referencedDisplaySet = otherDisplaySets.find(ds =>\r\n        referencedSeriesInstanceUIDs.includes(ds.SeriesInstanceUID)\r\n      );\r\n      return referencedDisplaySet;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of derived datasets in the study, filtered by the given filter.\r\n   * @param {object} filter An object containing search filters\r\n   * @param {object} filter.Modality\r\n   * @param {object} filter.referencedSeriesInstanceUID\r\n   * @param {object} filter.referencedFrameOfReferenceUID\r\n   * @return {Array} filtered derived display sets\r\n   */\r\n  getDerivedDatasets(filter) {\r\n    const {\r\n      Modality,\r\n      referencedSeriesInstanceUID,\r\n      referencedFrameOfReferenceUID,\r\n    } = filter;\r\n\r\n    let filteredDerivedDisplaySets = this._derivedDisplaySets;\r\n\r\n    if (Modality) {\r\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\r\n        displaySet => displaySet.Modality === Modality\r\n      );\r\n    }\r\n\r\n    if (referencedSeriesInstanceUID) {\r\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\r\n        displaySet => {\r\n          const referencedDisplaySet = StudyMetadata.getReferencedDisplaySet(\r\n            displaySet,\r\n            [this]\r\n          );\r\n          if (referencedDisplaySet) {\r\n            return (\r\n              referencedDisplaySet.SeriesInstanceUID ===\r\n              referencedSeriesInstanceUID\r\n            );\r\n          } else {\r\n            if (\r\n              !displaySet.referencedDisplaySets ||\r\n              displaySet.referencedDisplaySets.length === 0\r\n            ) {\r\n              return false;\r\n            }\r\n\r\n            const filteredReferencedDisplaySets = displaySet.referencedDisplaySets.filter(\r\n              referencedDisplaySet =>\r\n                referencedDisplaySet.SeriesInstanceUID ===\r\n                referencedSeriesInstanceUID\r\n            );\r\n\r\n            if (\r\n              filteredReferencedDisplaySets &&\r\n              filteredReferencedDisplaySets.length !== 0\r\n            ) {\r\n              return true;\r\n            }\r\n\r\n            return false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    if (referencedFrameOfReferenceUID) {\r\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\r\n        displaySet =>\r\n          displaySet.FrameOfReferenceUID === referencedFrameOfReferenceUID\r\n      );\r\n    }\r\n\r\n    return filteredDerivedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Creates a set of displaySets to be placed in the Study Metadata\r\n   * The displaySets that appear in the Study Metadata must represent\r\n   * imaging modalities. A series may be split into one or more displaySets.\r\n   *\r\n   * Furthermore, for drag/drop functionality,\r\n   * it is easiest if the stack objects also contain information about\r\n   * which study they are linked to.\r\n   *\r\n   * @param {StudyMetadata} study The study instance metadata to be used\r\n   * @returns {Array} An array of series to be placed in the Study Metadata\r\n   */\r\n  createDisplaySets(sopClassHandlerModules) {\r\n    const displaySets = [];\r\n    const anyDisplaySets = this.getSeriesCount();\r\n\r\n    if (!anyDisplaySets) {\r\n      return displaySets;\r\n    }\r\n\r\n    // Loop through the series (SeriesMetadata)\r\n    this.forEachSeries(series => {\r\n      const displaySetsForSeries = this._createDisplaySetsForSeries(\r\n        sopClassHandlerModules,\r\n        series\r\n      );\r\n\r\n      displaySetsForSeries.forEach(ds => this._insertDisplaySet(ds));\r\n    });\r\n\r\n    return this._displaySets;\r\n  }\r\n\r\n  /**\r\n   * Method to append display sets from a given series to the internal list of display sets\r\n   * @param {Array} sopClassHandlerModules A list of SOP Class Handler Modules\r\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\r\n   * @returns {boolean} Returns true on success or false on failure (e.g., the series does not belong to this study)\r\n   */\r\n  createAndAddDisplaySetsForSeries(sopClassHandlerModules, series) {\r\n    if (!this.containsSeries(series)) {\r\n      return false;\r\n    }\r\n\r\n    const displaySets = this._createDisplaySetsForSeries(\r\n      sopClassHandlerModules,\r\n      series\r\n    );\r\n\r\n    // Note: filtering in place because this._displaySets has writable: false\r\n    for (let i = this._displaySets.length - 1; i >= 0; i--) {\r\n      const displaySet = this._displaySets[i];\r\n      if (displaySet.SeriesInstanceUID === series.getSeriesInstanceUID()) {\r\n        this._displaySets.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    displaySets.forEach(displaySet => {\r\n      this.addDisplaySet(displaySet);\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Add a single display set to the list\r\n   * @param {Object} displaySet Display set object\r\n   * @returns {boolean} True on success, false on failure.\r\n   */\r\n  addDisplaySet(displaySet) {\r\n    if (displaySet instanceof ImageSet || displaySet.sopClassModule) {\r\n      this._insertDisplaySet(displaySet);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Invokes the supplied callback for each display set in the current study passing\r\n   * two arguments: display set (a ImageSet instance) and index (the integer\r\n   * index of the display set within the current study)\r\n   * @param {function} callback The callback function which will be invoked for each display set instance.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  forEachDisplaySet(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      this._displaySets.forEach((displaySet, index) => {\r\n        callback.call(null, displaySet, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert the displaySet so that the list has an increasing SeriesNumber,\r\n   * with the most recent series first for displaySets with the same SeriesNumber.\r\n   *\r\n   * If the displaySet is low priority, the same logic is applied, but is sorted within a sub list\r\n   * At the end of the list, where all low priority data is found.\r\n   */\r\n  _insertDisplaySet(displaySet) {\r\n    const { SeriesNumber } = displaySet;\r\n    const displaySets = this._displaySets;\r\n    let insertIndex = displaySets.length;\r\n    let firstIndexWithSameSeriesNumber;\r\n\r\n    // If low priority, start search from next low priority.\r\n    if (isLowPriorityModality(displaySet.Modality)) {\r\n      let startingIndex;\r\n\r\n      // Find where the first low priority displaySet is.\r\n      for (let i = 0; i < displaySets.length; i++) {\r\n        if (isLowPriorityModality(displaySets[i].Modality)) {\r\n          startingIndex = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!startingIndex) {\r\n        startingIndex = displaySets.length;\r\n      }\r\n\r\n      // Find the correct SeriesNumber location to insert within the low priority\r\n      // Modality displaySets\r\n      for (let i = startingIndex; i < displaySets.length; i++) {\r\n        if (\r\n          displaySets[i].SeriesNumber === SeriesNumber &&\r\n          !firstIndexWithSameSeriesNumber\r\n        ) {\r\n          firstIndexWithSameSeriesNumber = i;\r\n        }\r\n\r\n        if (displaySets[i].SeriesNumber > SeriesNumber) {\r\n          insertIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // Find correct SeriesNumber to insert or where the low priority modalities start.\r\n      for (let i = 0; i < displaySets.length; i++) {\r\n        if (\r\n          displaySets[i].SeriesNumber === SeriesNumber &&\r\n          !firstIndexWithSameSeriesNumber\r\n        ) {\r\n          firstIndexWithSameSeriesNumber = i;\r\n        }\r\n\r\n        if (\r\n          displaySets[i].SeriesNumber > SeriesNumber ||\r\n          isLowPriorityModality(displaySets[i].Modality)\r\n        ) {\r\n          insertIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we have multiple displaySets with the same series number, find the insert position based on\r\n    // SeriesDate and SeriesTime.\r\n    if (firstIndexWithSameSeriesNumber !== undefined) {\r\n      // If no SeriesDate, is just a placeholder displaySet, just insert anywhere, it will be re-added later.\r\n      if (displaySet.SeriesDate) {\r\n        const seriesDateTime = `${displaySet.SeriesDate}${displaySet.SeriesTime}`;\r\n\r\n        for (let i = firstIndexWithSameSeriesNumber; i < insertIndex; i++) {\r\n          const displaySetI = displaySets[i];\r\n\r\n          if (\r\n            displaySetI.SeriesDate &&\r\n            `${displaySetI.SeriesDate}${displaySetI.SeriesTime}` <\r\n              seriesDateTime\r\n          ) {\r\n            insertIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this._displaySets.some(\r\n        ds => ds.displaySetInstanceUID === displaySet.displaySetInstanceUID\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this._displaySets.splice(insertIndex, 0, displaySet);\r\n    this.displaySets = this._displaySets;\r\n  }\r\n\r\n  /**\r\n   * Search the associated display sets using the supplied callback as criteria. The callback is passed\r\n   * two arguments: display set (an ImageSet instance) and index (the integer\r\n   * index of the display set within the current study)\r\n   * @param {function} callback The callback function which will be invoked for each display set instance.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  findDisplaySet(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      return this._displaySets.find((displaySet, index) => {\r\n        return callback.call(null, displaySet, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of display sets within the current study.\r\n   * @returns {number} The number of display sets in the current study.\r\n   */\r\n  getDisplaySetCount() {\r\n    return this._displaySets.length;\r\n  }\r\n\r\n  /**\r\n   * Returns the StudyInstanceUID of the current study.\r\n   */\r\n  getStudyInstanceUID() {\r\n    return this._studyInstanceUID;\r\n  }\r\n\r\n  /**\r\n   * Getter for series\r\n   * @return {Array} Array of SeriesMetadata object\r\n   */\r\n  getSeries() {\r\n    return this._series.slice();\r\n  }\r\n\r\n  /**\r\n   * Append a series to the current study.\r\n   * @param {SeriesMetadata} series The series to be added to the current study.\r\n   * @returns {boolean} Returns true on success, false otherwise.\r\n   */\r\n  addSeries(series) {\r\n    let result = false;\r\n    if (\r\n      series instanceof SeriesMetadata &&\r\n      this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0\r\n    ) {\r\n      this._series.push(series);\r\n      result = true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a series in the current study by SeriesInstanceUID.\r\n   * @param {String} SeriesInstanceUID The SeriesInstanceUID to be updated\r\n   * @param {SeriesMetadata} series The series to be added to the current study.\r\n   * @returns {boolean} Returns true on success, false otherwise.\r\n   */\r\n  updateSeries(SeriesInstanceUID, series) {\r\n    const index = this._series.findIndex(series => {\r\n      return series.getSeriesInstanceUID() === SeriesInstanceUID;\r\n    });\r\n\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n\r\n    if (!(series instanceof SeriesMetadata)) {\r\n      throw new Error('Series must be an instance of SeriesMetadata');\r\n    }\r\n\r\n    this._series[index] = series;\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Find a series by index.\r\n   * @param {number} index An integer representing a list index.\r\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\r\n   */\r\n  getSeriesByIndex(index) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidIndex(index)) {\r\n      found = this._series[index];\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find a series by SeriesInstanceUID.\r\n   * @param {string} uid An UID string.\r\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\r\n   */\r\n  getSeriesByUID(uid) {\r\n    let found; // undefined by default...\r\n    if (Metadata.isValidUID(uid)) {\r\n      found = this._series.find(series => {\r\n        return series.getSeriesInstanceUID() === uid;\r\n      });\r\n    }\r\n    return found;\r\n  }\r\n\r\n  containsSeries(series) {\r\n    return (\r\n      series instanceof SeriesMetadata && this._series.indexOf(series) >= 0\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of series within the current study.\r\n   * @returns {number} The number of series in the current study.\r\n   */\r\n  getSeriesCount() {\r\n    return this._series.length;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the number of instances within the current study.\r\n   * @returns {number} The number of instances in the current study.\r\n   */\r\n  getInstanceCount() {\r\n    return this._series.reduce((sum, series) => {\r\n      return sum + series.getInstanceCount();\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Invokes the supplied callback for each series in the current study passing\r\n   * two arguments: series (a SeriesMetadata instance) and index (the integer\r\n   * index of the series within the current study)\r\n   * @param {function} callback The callback function which will be invoked for each series instance.\r\n   * @returns {undefined} Nothing is returned.\r\n   */\r\n  forEachSeries(callback) {\r\n    if (Metadata.isValidCallback(callback)) {\r\n      this._series.forEach((series, index) => {\r\n        callback.call(null, series, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the index of a series inside the study.\r\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\r\n   * @returns {number} The index of the series inside the study or -1 if not found.\r\n   */\r\n  indexOfSeries(series) {\r\n    return this._series.indexOf(series);\r\n  }\r\n\r\n  /**\r\n   * Compares the current study instance with another one.\r\n   * @param {StudyMetadata} study An instance of the StudyMetadata class.\r\n   * @returns {boolean} Returns true if both instances refer to the same study.\r\n   */\r\n  equals(study) {\r\n    const self = this;\r\n    return (\r\n      study === self ||\r\n      (study instanceof StudyMetadata &&\r\n        study.getStudyInstanceUID() === self.getStudyInstanceUID())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the first series of the current study retaining a consistent result across multiple calls.\r\n   * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.\r\n   */\r\n  getFirstSeries() {\r\n    let series = this._firstSeries;\r\n    if (!(series instanceof SeriesMetadata)) {\r\n      series = null;\r\n      const found = this.getSeriesByIndex(0);\r\n      if (found instanceof SeriesMetadata) {\r\n        this._firstSeries = found;\r\n        series = found;\r\n      }\r\n    }\r\n    return series;\r\n  }\r\n\r\n  /**\r\n   * Get the first image id given display instance uid.\r\n   * @return {string} The image id.\r\n   */\r\n  getFirstImageId(displaySetInstanceUID) {\r\n    try {\r\n      const displaySet = this.findDisplaySet(\r\n        displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\r\n      );\r\n      return displaySet.images[0].getImageId();\r\n    } catch (error) {\r\n      console.error('Failed to retrieve image metadata');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the first instance of the current study retaining a consistent result across multiple calls.\r\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\r\n   */\r\n  getFirstInstance() {\r\n    let instance = this._firstInstance;\r\n    if (!(instance instanceof InstanceMetadata)) {\r\n      instance = null;\r\n      const firstSeries = this.getFirstSeries();\r\n      if (firstSeries instanceof SeriesMetadata) {\r\n        const found = firstSeries.getFirstInstance();\r\n        if (found instanceof InstanceMetadata) {\r\n          this._firstInstance = found;\r\n          instance = found;\r\n        }\r\n      }\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Search the associated series to find an specific instance using the supplied callback as criteria.\r\n   * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer\r\n   * index of the instance within the current series)\r\n   * @param {function} callback The callback function which will be invoked for each instance instance.\r\n   * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata)\r\n   *                   objects or an empty object if not found.\r\n   */\r\n  findSeriesAndInstanceByInstance(callback) {\r\n    let result;\r\n\r\n    if (Metadata.isValidCallback(callback)) {\r\n      let instance;\r\n\r\n      const series = this._series.find(series => {\r\n        instance = series.findInstance(callback);\r\n        return instance instanceof InstanceMetadata;\r\n      });\r\n\r\n      // No series found\r\n      if (series instanceof SeriesMetadata) {\r\n        result = {\r\n          series,\r\n          instance,\r\n        };\r\n      }\r\n    }\r\n\r\n    return result || {};\r\n  }\r\n\r\n  /**\r\n   * Find series by instance using the supplied callback as criteria. The callback is passed\r\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\r\n   * the instance within its series)\r\n   * @param {function} callback The callback function which will be invoked for each instance.\r\n   * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it\r\n   *                                     returns a SeriesMetadata. \"undefined\" is returned otherwise\r\n   */\r\n  findSeriesByInstance(callback) {\r\n    const result = this.findSeriesAndInstanceByInstance(callback);\r\n\r\n    return result.series;\r\n  }\r\n\r\n  /**\r\n   * Find an instance using the supplied callback as criteria. The callback is passed\r\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\r\n   * the instance within its series)\r\n   * @param {function} callback The callback function which will be invoked for each instance.\r\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\r\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\r\n   */\r\n  findInstance(callback) {\r\n    const result = this.findSeriesAndInstanceByInstance(callback);\r\n\r\n    return result.instance;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @typedef StudyMetadata\r\n * @property {function} getSeriesCount - returns the number of series in the study\r\n * @property {function} forEachSeries - function that invokes callback with each series and index\r\n * @property {function} getStudyInstanceUID - returns the study's instance UID\r\n *\r\n */\r\n\r\n/**\r\n * @typedef SeriesMetadata\r\n * @property {function} getSeriesInstanceUID - returns the series's instance UID\r\n * @property {function} getData - ???\r\n * @property {function} forEachInstance - ???\r\n */\r\n\r\nconst dwc = api.DICOMwebClient;\r\n\r\nconst isMultiFrame = instance => {\r\n  return instance.getTagValue('NumberOfFrames') > 1;\r\n};\r\n\r\n/**\r\n * Creates a display set for a series.\r\n * Checks if a series is reconstructable to a 3D volume.\r\n * If reconstructable, the frames are sorted.\r\n *\r\n * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\r\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\r\n *\r\n * @returns {Object} imageSet.\r\n */\r\nconst makeDisplaySet = (series, instances) => {\r\n  const instance = instances[0];\r\n  const imageSet = new ImageSet(instances);\r\n  const seriesData = series.getData();\r\n\r\n  // set appropriate attributes to image set...\r\n  imageSet.setAttributes({\r\n    displaySetInstanceUID: imageSet.uid, // create a local alias for the imageSet UID\r\n    SeriesDate: seriesData.SeriesDate,\r\n    SeriesTime: seriesData.SeriesTime,\r\n    SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n    SeriesNumber: instance.getTagValue('SeriesNumber'),\r\n    SeriesDescription: instance.getTagValue('SeriesDescription'),\r\n    numImageFrames: instances.length,\r\n    frameRate: instance.getTagValue('FrameTime'),\r\n    Modality: instance.getTagValue('Modality'),\r\n    isMultiFrame: isMultiFrame(instance),\r\n  });\r\n\r\n  // Sort the images in this series by instanceNumber\r\n  const shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\r\n  if (shallSort) {\r\n    imageSet.sortBy((a, b) => {\r\n      // Sort by InstanceNumber (0020,0013)\r\n      return (\r\n        (parseInt(a.getTagValue('InstanceNumber', 0)) || 0) -\r\n        (parseInt(b.getTagValue('InstanceNumber', 0)) || 0)\r\n      );\r\n    });\r\n  }\r\n\r\n  // Include the first image instance number (after sorted)\r\n  imageSet.setAttribute(\r\n    'InstanceNumber',\r\n    imageSet.getImage(0).getTagValue('InstanceNumber')\r\n  );\r\n\r\n  const displayReconstructableInfo = isDisplaySetReconstructable(instances);\r\n  imageSet.isReconstructable = displayReconstructableInfo.value;\r\n\r\n  let displaySpacingInfo = undefined;\r\n  if (shallSort && imageSet.isReconstructable) {\r\n    // sort images by image position\r\n    imageSet.sortByImagePositionPatient();\r\n\r\n    // check if the spacing is uniform and update isReconstructable\r\n    const datasetIs4D = displayReconstructableInfo.reconstructionIssues.find(\r\n      issue => issue === ReconstructionIssues.DATASET_4D\r\n    );\r\n    displaySpacingInfo = isSpacingUniform(imageSet.images, datasetIs4D);\r\n    imageSet.isReconstructable = displaySpacingInfo.isUniform;\r\n\r\n    if (displaySpacingInfo.missingFrames) {\r\n      // TODO -> This is currently unused, but may be used for reconstructing\r\n      // Volumes with gaps later on.\r\n      imageSet.missingFrames = displaySpacingInfo.missingFrames;\r\n    }\r\n  }\r\n\r\n  if (!imageSet.displayReconstructableInfo) {\r\n    // It is not reconstrabale Save type of warning\r\n    imageSet.reconstructionIssues = displaySpacingInfo\r\n      ? displayReconstructableInfo.reconstructionIssues.concat(\r\n          displaySpacingInfo.reconstructionIssues\r\n        )\r\n      : displayReconstructableInfo.reconstructionIssues;\r\n  }\r\n\r\n  imageSet.isSOPClassUIDSupported = true;\r\n\r\n  return imageSet;\r\n};\r\n\r\nconst isSingleImageModality = Modality => {\r\n  return Modality === 'CR' || Modality === 'MG' || Modality === 'DX';\r\n};\r\n\r\nfunction getSopClassUIDs(series) {\r\n  const uniqueSopClassUIDsInSeries = new Set();\r\n  series.forEachInstance(instance => {\r\n    const instanceSopClassUID = instance.getTagValue('SOPClassUID');\r\n\r\n    uniqueSopClassUIDsInSeries.add(instanceSopClassUID);\r\n  });\r\n  const sopClassUIDs = Array.from(uniqueSopClassUIDsInSeries);\r\n\r\n  return sopClassUIDs;\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {SeriesMetadata} series\r\n * @param {StudyMetadata} study\r\n * @param {string[]} sopClassUIDs\r\n */\r\nfunction _getDisplaySetFromSopClassModule(\r\n  sopClassHandlerExtensions, // TODO: Update Usage\r\n  series,\r\n  study,\r\n  sopClassUIDs\r\n) {\r\n  // TODO: For now only use the plugins if all instances have the same SOPClassUID\r\n  if (sopClassUIDs.length !== 1) {\r\n    console.warn(\r\n      'getDisplaySetFromSopClassPlugin: More than one SOPClassUID in the same series is not yet supported.'\r\n    );\r\n    return;\r\n  }\r\n\r\n  const SOPClassUID = sopClassUIDs[0];\r\n  const sopClassHandlerModules = sopClassHandlerExtensions.map(extension => {\r\n    return extension.module;\r\n  });\r\n\r\n  const handlersForSopClassUID = sopClassHandlerModules.filter(module => {\r\n    return module.sopClassUIDs.includes(SOPClassUID);\r\n  });\r\n\r\n  // TODO: Sort by something, so we can determine which plugin to use\r\n  if (!handlersForSopClassUID || !handlersForSopClassUID.length) {\r\n    return;\r\n  }\r\n\r\n  const plugin = handlersForSopClassUID[0];\r\n  const headers = DICOMWeb.getAuthorizationHeader();\r\n  const errorInterceptor = errorHandler.getHTTPErrorHandler();\r\n  const dicomWebClient = new dwc({\r\n    url: study.getData().wadoRoot,\r\n    headers,\r\n    errorInterceptor,\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  });\r\n\r\n  let displaySet = plugin.getDisplaySetFromSeries(\r\n    series,\r\n    study,\r\n    dicomWebClient,\r\n    headers\r\n  );\r\n  if (displaySet && !displaySet.Modality) {\r\n    const instance = series.getFirstInstance();\r\n    displaySet.Modality = instance.getTagValue('Modality');\r\n  }\r\n  return displaySet;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * ReferencedSeriesSequence.\r\n * @param {object} derivatedDisplaySet.metadata\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\r\n  metadata\r\n) {\r\n  if (!metadata.ReferencedSeriesSequence) {\r\n    return;\r\n  }\r\n\r\n  let referencedSeriesInstanceUIDs;\r\n  const ReferencedSeriesSequence = _toArray(metadata.ReferencedSeriesSequence);\r\n\r\n  referencedSeriesInstanceUIDs = ReferencedSeriesSequence.map(\r\n    ReferencedSeries => ReferencedSeries.SeriesInstanceUID\r\n  );\r\n\r\n  return referencedSeriesInstanceUIDs;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * ReferencedImageSequence.\r\n * @param {object} derivatedDisplaySet.metadata\r\n * @param {array[object]} displaysets\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\r\n  metadata,\r\n  displaySets\r\n) {\r\n  if (!metadata.ReferencedImageSequence) {\r\n    return;\r\n  }\r\n\r\n  let referencedSeriesInstanceUIDs;\r\n  const referencedImageArray = _toArray(metadata.ReferencedImageSequence);\r\n  for (let i = 0; i < referencedImageArray.length; i++) {\r\n    const { ReferencedSOPInstanceUID } = referencedImageArray[i];\r\n    if (!ReferencedSOPInstanceUID) {\r\n      continue;\r\n    }\r\n\r\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\r\n      displaySets,\r\n      ReferencedSOPInstanceUID\r\n    );\r\n\r\n    if (\r\n      referencedSeriesInstanceUIDs &&\r\n      referencedSeriesInstanceUIDs.length !== 0\r\n    ) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return referencedSeriesInstanceUIDs;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * SourceImageSequence.\r\n * @param {object} derivatedDisplaySet.metadata\r\n * @param {array[object]} displaysets\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\r\n  metadata,\r\n  displaySets\r\n) {\r\n  let SourceImageSequence;\r\n\r\n  if (metadata.SourceImageSequence) {\r\n    SourceImageSequence = metadata.SourceImageSequence;\r\n  } else {\r\n    const { PerFrameFunctionalGroupsSequence } = metadata;\r\n    const firstFunctionalGroups = _toArray(PerFrameFunctionalGroupsSequence)[0];\r\n    if (firstFunctionalGroups) {\r\n      const { DerivationImageSequence } = firstFunctionalGroups;\r\n      SourceImageSequence = DerivationImageSequence;\r\n    }\r\n  }\r\n\r\n  if (!SourceImageSequence) {\r\n    return;\r\n  }\r\n\r\n  const sourceImageArray = _toArray(SourceImageSequence);\r\n\r\n  let referencedSeriesInstanceUIDs;\r\n  for (let i = 0; i < sourceImageArray.length; i++) {\r\n    const { ReferencedSOPInstanceUID } = sourceImageArray[i];\r\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\r\n      displaySets,\r\n      ReferencedSOPInstanceUID\r\n    );\r\n    if (\r\n      referencedSeriesInstanceUIDs &&\r\n      referencedSeriesInstanceUIDs.length !== 0\r\n    ) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return referencedSeriesInstanceUIDs;\r\n}\r\n\r\n/**\r\n * Returns the referenced series instance UIDs by searching the information in the\r\n * SOPInstanceUID of the displaySets.\r\n * @param {array[object]} displaysets\r\n * @param {string} SOPInstanceUID\r\n * @return {array[string]} referenced series instance UIDs.\r\n */\r\nfunction _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\r\n  displaySets,\r\n  SOPInstanceUID\r\n) {\r\n  const imageSets = displaySets.filter(ds => ds instanceof ImageSet);\r\n\r\n  for (let i = 0; i < imageSets.length; i++) {\r\n    const { images } = imageSets[i];\r\n    if (!images) {\r\n      continue;\r\n    }\r\n    for (let j = 0; j < images.length; j++) {\r\n      const image = images[j];\r\n      if (!image) {\r\n        continue;\r\n      }\r\n      if (image.SOPInstanceUID === SOPInstanceUID) {\r\n        return [image.getData().metadata.SeriesInstanceUID];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _toArray(arrayOrObject) {\r\n  return Array.isArray(arrayOrObject) ? arrayOrObject : [arrayOrObject];\r\n}\r\n\r\nexport { StudyMetadata };\r\n","import { sopClassDictionary } from './sopClassDictionary';\r\nimport { isImage } from './isImage';\r\n\r\n/**\r\n * Naturalize SOP Class UID which do not have image data\r\n * @param {string} SOPClassUID - SOP Class UID to be converted\r\n * @returns {string} - human readable name\r\n */\r\nexport const naturalizeSOPClassUID = SOPClassUID => {\r\n  let naturalizedName = '';\r\n  if (!SOPClassUID) return naturalizedName;\r\n  if (!isImage) return naturalizedName;\r\n\r\n  if (sopClassDictionary.MRSpectroscopyStorage === SOPClassUID) {\r\n    naturalizedName = 'MRSpectroscopy';\r\n  } else if (sopClassDictionary.EnhancedUSVolumeStorage === SOPClassUID) {\r\n    naturalizedName = 'EnhancedUSVolume';\r\n  } else if (sopClassDictionary.Sop12LeadECGWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'Sop12LeadECGWaveform';\r\n  } else if (sopClassDictionary.GeneralECGWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'GeneralECGWaveform';\r\n  } else if (sopClassDictionary.AmbulatoryECGWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'AECAmbulatoryECGWaveformGW';\r\n  } else if (sopClassDictionary.HemodynamicWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'HemodynamicWaveform';\r\n  } else if (\r\n    sopClassDictionary.CardiacElectrophysiologyWaveformStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'CardiacElectrophysiologyWaveform';\r\n  } else if (\r\n    sopClassDictionary.BasicVoiceAudioWaveformStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'BasicVoiceAudioWaveform';\r\n  } else if (sopClassDictionary.GeneralAudioWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'GGeneralAudioWaveformAW';\r\n  } else if (sopClassDictionary.ArterialPulseWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'APArterialPulseWaveformW';\r\n  } else if (sopClassDictionary.RespiratoryWaveformStorage === SOPClassUID) {\r\n    naturalizedName = 'RespiratoryWaveform';\r\n  } else if (\r\n    sopClassDictionary.GrayscaleSoftcopyPresentationStateStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'GrayscaleSoftcopyPresentationState';\r\n  } else if (\r\n    sopClassDictionary.ColorSoftcopyPresentationStateStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'ColorSoftcopyPresentationState';\r\n  } else if (\r\n    sopClassDictionary.PseudoColorSoftcopyPresentationStateStorage ===\r\n    SOPClassUID\r\n  ) {\r\n    naturalizedName = 'PseudoColorSoftcopyPresentationState';\r\n  } else if (\r\n    sopClassDictionary.BlendingSoftcopyPresentationStateStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'BlendingSoftcopyPresentationState';\r\n  } else if (\r\n    sopClassDictionary.XAXRFGrayscaleSoftcopyPresentationStateStorage ===\r\n    SOPClassUID\r\n  ) {\r\n    naturalizedName = 'XAXRFGrayscaleSoftcopyPresentationState';\r\n  } else if (sopClassDictionary.RawDataStorage === SOPClassUID) {\r\n    naturalizedName = 'RawData';\r\n  } else if (sopClassDictionary.SpatialRegistrationStorage === SOPClassUID) {\r\n    naturalizedName = 'SpatialRegistration';\r\n  } else if (sopClassDictionary.SpatialFiducialsStorage === SOPClassUID) {\r\n    naturalizedName = 'SpatialFiducials';\r\n  } else if (\r\n    sopClassDictionary.DeformableSpatialRegistrationStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'DeformableSpatialRegistration';\r\n  } else if (sopClassDictionary.SegmentationStorage === SOPClassUID) {\r\n    naturalizedName = 'SEG';\r\n  } else if (sopClassDictionary.SurfaceSegmentationStorage === SOPClassUID) {\r\n    naturalizedName = 'SurfaceSEG';\r\n  } else if (sopClassDictionary.RealWorldValueMappingStorage === SOPClassUID) {\r\n    naturalizedName = 'RealWorldValueMapping';\r\n  } else if (sopClassDictionary.SurfaceScanMeshStorage === SOPClassUID) {\r\n    naturalizedName = 'SurfaceScanMesh';\r\n  } else if (sopClassDictionary.SurfaceScanPointCloudStorage === SOPClassUID) {\r\n    naturalizedName = 'SurfaceScanPointCloud';\r\n  } else if (\r\n    sopClassDictionary.StereometricRelationshipStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'StereometricRelationship';\r\n  } else if (sopClassDictionary.LensometryMeasurementsStorage === SOPClassUID) {\r\n    naturalizedName = 'LensometryMeasurements';\r\n  } else if (\r\n    sopClassDictionary.AutorefractionMeasurementsStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'AutorefractionMeasurements';\r\n  } else if (\r\n    sopClassDictionary.KeratometryMeasurementsStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'KeratometryMeasurements';\r\n  } else if (\r\n    sopClassDictionary.SubjectiveRefractionMeasurementsStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'SubjectiveRefractionMeasurements';\r\n  } else if (\r\n    sopClassDictionary.VisualAcuityMeasurementsStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'VisualAcuityMeasurements';\r\n  } else if (\r\n    sopClassDictionary.SpectaclePrescriptionReportStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'SpectaclePrescriptionReport';\r\n  } else if (\r\n    sopClassDictionary.OphthalmicAxialMeasurementsStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'OphthalmicAxialMeasurements';\r\n  } else if (\r\n    sopClassDictionary.IntraocularLensCalculationsStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'IntraocularLensCalculations';\r\n  } else if (\r\n    sopClassDictionary.MacularGridThicknessandVolumeReport === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'MacularGridThicknessandVolume';\r\n  } else if (\r\n    sopClassDictionary.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage ===\r\n    SOPClassUID\r\n  ) {\r\n    naturalizedName = 'OphthalmicVisualFieldStaticPerimetryMeasurements';\r\n  } else if (sopClassDictionary.OphthalmicThicknessMapStorage === SOPClassUID) {\r\n    naturalizedName = 'OphthalmicThicknessMap';\r\n  } else if (sopClassDictionary.CornealTopographyMapStorage === SOPClassUID) {\r\n    naturalizedName = 'CornealTopographyMap';\r\n  } else if (sopClassDictionary.BasicTextSR === SOPClassUID) {\r\n    naturalizedName = 'BasicTextSR';\r\n  } else if (sopClassDictionary.EnhancedSR === SOPClassUID) {\r\n    naturalizedName = 'EnhancedSR';\r\n  } else if (sopClassDictionary.ComprehensiveSR === SOPClassUID) {\r\n    naturalizedName = 'ComprehensiveSR';\r\n  } else if (sopClassDictionary.Comprehensive3DSR === SOPClassUID) {\r\n    naturalizedName = 'Comprehensive3DSR';\r\n  } else if (sopClassDictionary.ProcedureLog === SOPClassUID) {\r\n    naturalizedName = 'ProcedureLog';\r\n  } else if (sopClassDictionary.MammographyCADSR === SOPClassUID) {\r\n    naturalizedName = 'MammographyCADSR';\r\n  } else if (sopClassDictionary.KeyObjectSelection === SOPClassUID) {\r\n    naturalizedName = 'KeyObject';\r\n  } else if (sopClassDictionary.ChestCADSR === SOPClassUID) {\r\n    naturalizedName = 'ChestCADSR';\r\n  } else if (sopClassDictionary.XRayRadiationDoseSR === SOPClassUID) {\r\n    naturalizedName = 'XRayRadiationDoseSR';\r\n  } else if (\r\n    sopClassDictionary.RadiopharmaceuticalRadiationDoseSR === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'RadiopharmaceuticalRadiationDoseSR';\r\n  } else if (sopClassDictionary.ColonCADSR === SOPClassUID) {\r\n    naturalizedName = 'ColonCADSR';\r\n  } else if (\r\n    sopClassDictionary.ImplantationPlanSRDocumentStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'ImplantationPlanSRDocument';\r\n  } else if (sopClassDictionary.EncapsulatedPDFStorage === SOPClassUID) {\r\n    naturalizedName = 'EncapsulatedPDF';\r\n  } else if (sopClassDictionary.EncapsulatedCDAStorage === SOPClassUID) {\r\n    naturalizedName = 'EncapsulatedCDA';\r\n  } else if (sopClassDictionary.BasicStructuredDisplayStorage === SOPClassUID) {\r\n    naturalizedName = 'BasicStructuredDisplay';\r\n  } else if (sopClassDictionary.RTDoseStorage === SOPClassUID) {\r\n    naturalizedName = 'RTDose';\r\n  } else if (sopClassDictionary.RTStructureSetStorage === SOPClassUID) {\r\n    naturalizedName = 'RTStructureSet';\r\n  } else if (sopClassDictionary.RTBeamsTreatmentRecordStorage === SOPClassUID) {\r\n    naturalizedName = 'RTBeamsTreatmentRecord';\r\n  } else if (sopClassDictionary.RTPlanStorage === SOPClassUID) {\r\n    naturalizedName = 'RTPlan';\r\n  } else if (\r\n    sopClassDictionary.RTBrachyTreatmentRecordStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'RTBrachyTreatmentRecord';\r\n  } else if (\r\n    sopClassDictionary.RTTreatmentSummaryRecordStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'RTTreatmentSummaryRecord';\r\n  } else if (sopClassDictionary.RTIonPlanStorage === SOPClassUID) {\r\n    naturalizedName = 'RTIonPlan';\r\n  } else if (\r\n    sopClassDictionary.RTIonBeamsTreatmentRecordStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'RTIonBeamsTreatmentRecord';\r\n  } else if (\r\n    sopClassDictionary.RTBeamsDeliveryInstructionStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'RTBeamsDeliveryInstruction';\r\n  } else if (sopClassDictionary.GenericImplantTemplateStorage === SOPClassUID) {\r\n    naturalizedName = 'GenericImplantTemplate';\r\n  } else if (\r\n    sopClassDictionary.ImplantAssemblyTemplateStorage === SOPClassUID\r\n  ) {\r\n    naturalizedName = 'ImplantAssemblyTemplate';\r\n  } else if (sopClassDictionary.ImplantTemplateGroupStorage === SOPClassUID) {\r\n    naturalizedName = 'ImplantTemplateGroup';\r\n  }\r\n\r\n  return naturalizedName;\r\n};\r\n","import guid from '../utils/guid.js';\r\nimport OHIFError from './OHIFError';\r\nimport { Vector3 } from 'cornerstone-math';\r\n\r\nconst OBJECT = 'object';\r\n\r\n/**\r\n * This class defines an ImageSet object which will be used across the viewer. This object represents\r\n * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the\r\n * main attributes (images and uid) it allows additional attributes to be appended to it (currently\r\n * indiscriminately, but this should be changed).\r\n */\r\nclass ImageSet {\r\n  constructor(images) {\r\n    if (Array.isArray(images) !== true) {\r\n      throw new OHIFError('ImageSet expects an array of images');\r\n    }\r\n\r\n    // @property \"images\"\r\n    Object.defineProperty(this, 'images', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: images,\r\n    });\r\n\r\n    // @property \"uid\"\r\n    Object.defineProperty(this, 'uid', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: guid(), // Unique ID of the instance\r\n    });\r\n  }\r\n\r\n  getUID() {\r\n    return this.uid;\r\n  }\r\n\r\n  setAttribute(attribute, value) {\r\n    this[attribute] = value;\r\n  }\r\n\r\n  getAttribute(attribute) {\r\n    return this[attribute];\r\n  }\r\n\r\n  setAttributes(attributes) {\r\n    if (typeof attributes === OBJECT && attributes !== null) {\r\n      const imageSet = this,\r\n        hasOwn = Object.prototype.hasOwnProperty;\r\n      for (let attribute in attributes) {\r\n        if (hasOwn.call(attributes, attribute)) {\r\n          imageSet[attribute] = attributes[attribute];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getImage(index) {\r\n    return this.images[index];\r\n  }\r\n\r\n  sortBy(sortingCallback) {\r\n    return this.images.sort(sortingCallback);\r\n  }\r\n\r\n  sortByImagePositionPatient() {\r\n    const images = this.images;\r\n    const referenceImagePositionPatient = _getImagePositionPatient(images[0]);\r\n\r\n    const refIppVec = new Vector3(\r\n      referenceImagePositionPatient[0],\r\n      referenceImagePositionPatient[1],\r\n      referenceImagePositionPatient[2]\r\n    );\r\n\r\n    const ImageOrientationPatient = _getImageOrientationPatient(images[0]);\r\n\r\n    const scanAxisNormal = new Vector3(\r\n      ImageOrientationPatient[0],\r\n      ImageOrientationPatient[1],\r\n      ImageOrientationPatient[2]\r\n    ).cross(\r\n      new Vector3(\r\n        ImageOrientationPatient[3],\r\n        ImageOrientationPatient[4],\r\n        ImageOrientationPatient[5]\r\n      )\r\n    );\r\n\r\n    const distanceImagePairs = images.map(function(image) {\r\n      const ippVec = new Vector3(..._getImagePositionPatient(image));\r\n      const positionVector = refIppVec.clone().sub(ippVec);\r\n      const distance = positionVector.dot(scanAxisNormal);\r\n\r\n      return {\r\n        distance,\r\n        image,\r\n      };\r\n    });\r\n\r\n    distanceImagePairs.sort(function(a, b) {\r\n      return b.distance - a.distance;\r\n    });\r\n\r\n    const sortedImages = distanceImagePairs.map(a => a.image);\r\n\r\n    images.sort(function(a, b) {\r\n      return sortedImages.indexOf(a) - sortedImages.indexOf(b);\r\n    });\r\n  }\r\n}\r\n\r\nfunction _getImagePositionPatient(image) {\r\n  return image.getData().metadata.ImagePositionPatient;\r\n}\r\n\r\nfunction _getImageOrientationPatient(image) {\r\n  return image.getData().metadata.ImageOrientationPatient;\r\n}\r\n\r\nexport default ImageSet;\r\n","import getWADORSImageId from './getWADORSImageId';\r\n\r\n// https://stackoverflow.com/a/6021027/3895126\r\nfunction updateQueryStringParameter(uri, key, value) {\r\n  const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\r\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\r\n  if (uri.match(regex)) {\r\n    return uri.replace(regex, '$1' + key + '=' + value + '$2');\r\n  } else {\r\n    return uri + separator + key + '=' + value;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtain an imageId for Cornerstone from an image instance\r\n *\r\n * @param instance\r\n * @param frame\r\n * @param thumbnail\r\n * @returns {string} The imageId to be used by Cornerstone\r\n */\r\nexport default function getImageId(instance, frame, thumbnail = false) {\r\n  if (!instance) {\r\n    return;\r\n  }\r\n\r\n  if (typeof instance.getImageId === 'function') {\r\n    return instance.getImageId();\r\n  }\r\n\r\n  if (instance.url) {\r\n    if (frame !== undefined) {\r\n      instance.url = updateQueryStringParameter(instance.url, 'frame', frame);\r\n    }\r\n\r\n    return instance.url;\r\n  }\r\n\r\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\r\n\r\n  if (\r\n    !instance[renderingAttr] ||\r\n    instance[renderingAttr] === 'wadouri' ||\r\n    !instance.wadorsuri\r\n  ) {\r\n    let imageId = 'dicomweb:' + instance.wadouri;\r\n    if (frame !== undefined) {\r\n      imageId += '&frame=' + frame;\r\n    }\r\n\r\n    return imageId;\r\n  } else {\r\n    return getWADORSImageId(instance, frame, thumbnail); // WADO-RS Retrieve Frame\r\n  }\r\n}\r\n","import OHIFError from './OHIFError';\r\n\r\n/**\r\n * Abstract class to fetch study metadata.\r\n */\r\nexport class StudyMetadataSource {\r\n  /**\r\n   * Get study metadata for a study with given study InstanceUID.\r\n   * @param {String} studyInstanceUID Study InstanceUID.\r\n   */\r\n  getByInstanceUID(studyInstanceUID) {\r\n    /**\r\n     * Please override this method on a specialized class.\r\n     */\r\n    throw new OHIFError(\r\n      'StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load study info and study metadata for a given study into the viewer.\r\n   * @param {StudyMetadata} study StudyMetadata object.\r\n   */\r\n  loadStudy(study) {\r\n    /**\r\n     * Please override this method on a specialized class.\r\n     */\r\n    throw new OHIFError(\r\n      'StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\r\n    );\r\n  }\r\n}\r\n","const debugMode = !!(\r\n  process.env.NODE_ENV !== 'production' && process.env.REACT_APP_I18N_DEBUG\r\n);\r\n\r\nconst detectionOptions = {\r\n  // order and from where user language should be detected\r\n  order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\r\n\r\n  // keys or params to lookup language from\r\n  lookupQuerystring: 'lng',\r\n  lookupCookie: 'i18next',\r\n  lookupLocalStorage: 'i18nextLng',\r\n  lookupFromPathIndex: 0,\r\n  lookupFromSubdomainIndex: 0,\r\n\r\n  // cache user language on\r\n  caches: ['localStorage', 'cookie'],\r\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n\r\n  // optional htmlTag with lang attribute, the default is:\r\n  htmlTag: document.documentElement\r\n};\r\n\r\nexport { debugMode, detectionOptions };\r\n","import { debugMode } from './config';\r\n\r\nexport default (message, level = 'log') => {\r\n  if (debugMode) {\r\n    // eslint-disable-next-line\r\n    console[level]('@ohif/i18n: ', message);\r\n  }\r\n};\r\n","import de from './de/';\r\nimport en_US from './en-US/';\r\nimport es from './es/';\r\nimport fr from './fr/';\r\nimport ja_JP from './ja-JP/';\r\nimport nl from './nl/';\r\nimport pt_BR from './pt-BR/';\r\nimport ru from './ru/';\r\nimport vi from './vi/';\r\nimport zh from './zh/';\r\n\r\nexport default {\r\n  ...de,\r\n  ...en_US,\r\n  ...es,\r\n  ...fr,\r\n  ...ja_JP,\r\n  ...nl,\r\n  ...pt_BR,\r\n  ...ru,\r\n  ...vi,\r\n  ...zh,\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'de': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'en-US': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'es': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'fr': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'ja-JP': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'nl': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'pt-BR': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'ru': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'vi': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","import AboutModal from './AboutModal.json';\r\nimport Buttons from './Buttons.json';\r\nimport CineDialog from './CineDialog.json';\r\nimport Common from './Common.json';\r\nimport DatePicker from './DatePicker.json';\r\nimport Header from './Header.json';\r\nimport MeasurementTable from './MeasurementTable.json';\r\nimport StudyList from './StudyList.json';\r\nimport UserPreferencesModal from './UserPreferencesModal.json';\r\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\r\n\r\nexport default { \r\n  'zh': {\r\n    AboutModal,\r\n    Buttons,\r\n    CineDialog,\r\n    Common,\r\n    DatePicker,\r\n    Header,\r\n    MeasurementTable,\r\n    StudyList,\r\n    UserPreferencesModal,\r\n    ViewportDownloadForm,\r\n  }\r\n};\r\n","const languagesMap = {\r\n  ar: 'Arabic',\r\n  am: 'Amharic',\r\n  bg: 'Bulgarian',\r\n  bn: 'Bengali',\r\n  ca: 'Catalan',\r\n  cs: 'Czech',\r\n  da: 'Danish',\r\n  de: 'German',\r\n  el: 'Greek',\r\n  en: 'English',\r\n  'en-GB': 'English (Great Britain)',\r\n  'en-US': 'English (USA)',\r\n  es: 'Spanish',\r\n  et: 'Estonian',\r\n  fa: 'Persian',\r\n  fi: 'Finnish',\r\n  fil: 'Filipino',\r\n  fr: 'French',\r\n  gu: 'Gujarati',\r\n  he: 'Hebrew',\r\n  hi: 'Hindi',\r\n  hr: 'Croatian',\r\n  hu: 'Hungarian',\r\n  id: 'Indonesian',\r\n  it: 'Italian',\r\n  ja: 'Japanese',\r\n  'ja-JP': 'Japanese (Japan)',\r\n  kn: 'Kannada',\r\n  ko: 'Korean',\r\n  lt: 'Lithuanian',\r\n  lv: 'Latvian',\r\n  ml: 'Malayalam',\r\n  mr: 'Marathi',\r\n  ms: 'Malay',\r\n  nl: 'Dutch',\r\n  no: 'Norwegian',\r\n  pl: 'Polish',\r\n  'pt-BR': 'Portuguese (Brazil)',\r\n  'pt-PT': 'Portuguese (Portugal)',\r\n  ro: 'Romanian',\r\n  ru: 'Russian',\r\n  sk: 'Slovak',\r\n  sl: 'Slovenian',\r\n  sr: 'Serbian',\r\n  sv: 'Swedish',\r\n  sw: 'Swahili',\r\n  ta: 'Tamil',\r\n  te: 'Telugu',\r\n  th: 'Thai',\r\n  tr: 'Turkish',\r\n  uk: 'Ukrainian',\r\n  vi: 'Vietnamese',\r\n  zh: 'Chinese',\r\n  'zh-CN': 'Chinese (China)',\r\n  'zh-TW': 'Chinese (Taiwan)',\r\n};\r\n\r\nexport default function getAvailableLanguagesInfo(locales) {\r\n  const availableLanguagesInfo = [];\r\n\r\n  Object.keys(locales).forEach(key => {\r\n    availableLanguagesInfo.push({\r\n      value: key,\r\n      label: languagesMap[key] || key,\r\n    });\r\n  });\r\n\r\n  return availableLanguagesInfo;\r\n}\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-locize-backend';\r\nimport LastUsed from 'locize-lastused';\r\nimport Editor from 'locize-editor';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport customDebug from './debugger';\r\nimport pkg from '../package.json';\r\nimport { debugMode, detectionOptions } from './config';\r\n\r\n// Note: The index.js files inside src/locales are dynamically generated\r\n// by the pullTranslations.sh script\r\nimport locales from './locales';\r\n\r\nfunction addLocales(newLocales) {\r\n  customDebug(`Adding locales ${newLocales}`, 'info');\r\n\r\n  let resourceBundle = [];\r\n\r\n  Object.keys(newLocales).map(key => {\r\n    Object.keys(newLocales[key]).map(namespace => {\r\n      const locale = newLocales[key][namespace];\r\n      resourceBundle.push({ key, namespace, locale });\r\n      i18n.addResourceBundle(key, namespace, locale, true, true);\r\n    });\r\n  });\r\n\r\n  customDebug(`Locales added successfully`, 'info');\r\n  customDebug(resourceBundle, 'info');\r\n}\r\n\r\n/*\r\n * Note: Developers can add the API key to use the\r\n * in-context editor using environment variables.\r\n * (DO NOT commit the API key)\r\n */\r\nconst locizeOptions = {\r\n  projectId: process.env.LOCIZE_PROJECTID,\r\n  apiKey: process.env.LOCIZE_API_KEY,\r\n  referenceLng: 'en-US',\r\n  fallbacklng: 'en-US',\r\n};\r\n\r\nconst envUseLocize = !!process.env.USE_LOCIZE;\r\nconst envApiKeyAvailable = !!process.env.LOCIZE_API_KEY;\r\nconst DEFAULT_LANGUAGE = 'en-US';\r\n\r\nfunction initI18n(\r\n  detection = detectionOptions,\r\n  useLocize = envUseLocize,\r\n  apiKeyAvailable = envApiKeyAvailable\r\n) {\r\n  let initialized;\r\n\r\n  if (useLocize) {\r\n    customDebug(`Using Locize for translation files`, 'info');\r\n    initialized = i18n\r\n      // i18next-locize-backend\r\n      // loads translations from your project, saves new keys to it (saveMissing: true)\r\n      // https://github.com/locize/i18next-locize-backend\r\n      .use(Backend)\r\n      // locize-lastused\r\n      // sets a timestamp of last access on every translation segment on locize\r\n      // -> safely remove the ones not being touched for weeks/months\r\n      // https://github.com/locize/locize-lastused\r\n      .use(LastUsed)\r\n      // locize-editor\r\n      // InContext Editor of locize ?locize=true to show it\r\n      // https://github.com/locize/locize-editor\r\n      .use(Editor)\r\n      // detect user language\r\n      // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n      .use(LanguageDetector)\r\n      // pass the i18n instance to react-i18next.\r\n      .use(initReactI18next)\r\n      // init i18next\r\n      // for all options read: https://www.i18next.com/overview/configuration-options\r\n      .init({\r\n        fallbackLng: DEFAULT_LANGUAGE,\r\n        saveMissing: apiKeyAvailable,\r\n        debug: debugMode,\r\n        keySeparator: false,\r\n        interpolation: {\r\n          escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        detection,\r\n        backend: locizeOptions,\r\n        locizeLastUsed: locizeOptions,\r\n        editor: {\r\n          ...locizeOptions,\r\n          onEditorSaved: async (lng, ns) => {\r\n            // reload that namespace in given language\r\n            await i18n.reloadResources(lng, ns);\r\n            // trigger an event on i18n which triggers a rerender\r\n            // based on bindI18n below in react options\r\n            i18n.emit('editorSaved');\r\n          },\r\n        },\r\n        react: {\r\n          useSuspense: false, // TODO: Was seeing weird errors without this\r\n          wait: true,\r\n          bindI18n: 'languageChanged editorSaved',\r\n        },\r\n      });\r\n  } else {\r\n    customDebug(`Using local translation files`, 'info');\r\n    initialized = i18n\r\n      // detect user language\r\n      // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n      .use(LanguageDetector)\r\n      // pass the i18n instance to react-i18next.\r\n      .use(initReactI18next)\r\n      // init i18next\r\n      // for all options read: https://www.i18next.com/overview/configuration-options\r\n      .init({\r\n        fallbackLng: DEFAULT_LANGUAGE,\r\n        resources: locales,\r\n        debug: debugMode,\r\n        keySeparator: false,\r\n        interpolation: {\r\n          escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        detection,\r\n        react: {\r\n          wait: true,\r\n        },\r\n      });\r\n  }\r\n\r\n  return initialized.then(function(t) {\r\n    i18n.T = t;\r\n    customDebug(`T function available.`, 'info');\r\n  });\r\n}\r\n\r\ncustomDebug(`version ${pkg.version} loaded.`, 'info');\r\n\r\ni18n.initializing = initI18n();\r\ni18n.initI18n = initI18n;\r\ni18n.addLocales = addLocales;\r\ni18n.defaultLanguage = DEFAULT_LANGUAGE;\r\n\r\nimport getAvailableLanguagesInfo from './getAvailableLanguagesInfo.js';\r\ni18n.availableLanguages = getAvailableLanguagesInfo(locales);\r\n\r\nexport default i18n;\r\n","import RetrieveMetadata from './services/wado/retrieveMetadata.js';\r\n\r\nconst moduleName = 'RetrieveStudyMetadata';\r\n// Cache for promises. Prevents unnecessary subsequent calls to the server\r\nconst StudyMetaDataPromises = new Map();\r\n\r\n/**\r\n * Retrieves study metadata\r\n *\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\r\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\r\n * as some DICOMWeb implementations only support single filters.\r\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\r\n */\r\nexport function retrieveStudyMetadata(\r\n  server,\r\n  StudyInstanceUID,\r\n  filters,\r\n  separateSeriesInstanceUIDFilters = false\r\n) {\r\n  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all\r\n  // and further requests for that metadata will always fail. On failure, we probably need to remove the\r\n  // corresponding promise from the \"StudyMetaDataPromises\" map...\r\n\r\n  if (!server) {\r\n    throw new Error(`${moduleName}: Required 'server' parameter not provided.`);\r\n  }\r\n  if (!StudyInstanceUID) {\r\n    throw new Error(\r\n      `${moduleName}: Required 'StudyInstanceUID' parameter not provided.`\r\n    );\r\n  }\r\n\r\n  // Already waiting on result? Return cached promise\r\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\r\n    return StudyMetaDataPromises.get(StudyInstanceUID);\r\n  }\r\n\r\n  // Create a promise to handle the data retrieval\r\n  let promise;\r\n\r\n  if (\r\n    filters &&\r\n    filters.seriesInstanceUID &&\r\n    separateSeriesInstanceUIDFilters\r\n  ) {\r\n    promise = __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\r\n      server,\r\n      StudyInstanceUID,\r\n      filters\r\n    );\r\n  } else {\r\n    promise = RetrieveMetadata(server, StudyInstanceUID, filters);\r\n\r\n    /*\r\n    promise = new Promise((resolve, reject) => {\r\n      RetrieveMetadata(server, StudyInstanceUID, filters).then(function(data) {\r\n        resolve(data);\r\n      }, reject);\r\n    });\r\n    */\r\n  }\r\n\r\n  // Store the promise in cache\r\n  StudyMetaDataPromises.set(StudyInstanceUID, promise);\r\n\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Splits up seriesInstanceUID filters to multiple calls for platforms\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\r\n * @param {Object} filters - Object containing filters to be applied on retrieve metadata process\r\n */\r\nfunction __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\r\n  server,\r\n  StudyInstanceUID,\r\n  filters\r\n) {\r\n  const { seriesInstanceUID } = filters;\r\n  const seriesInstanceUIDs = seriesInstanceUID.split(',');\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const promises = [];\r\n\r\n    seriesInstanceUIDs.forEach(uid => {\r\n      const seriesSpecificFilters = Object.assign({}, filters, {\r\n        seriesInstanceUID: uid,\r\n      });\r\n\r\n      promises.push(\r\n        RetrieveMetadata(server, StudyInstanceUID, seriesSpecificFilters)\r\n      );\r\n    });\r\n\r\n    Promise.all(promises).then(results => {\r\n      const data = results[0];\r\n\r\n      let series = [];\r\n\r\n      results.forEach(result => {\r\n        series = [...series, ...result.series];\r\n      });\r\n\r\n      data.series = series;\r\n\r\n      resolve(data);\r\n    }, reject);\r\n  });\r\n}\r\n\r\n/**\r\n * Delete the cached study metadata retrieval promise to ensure that the browser will\r\n * re-retrieve the study metadata when it is next requested\r\n *\r\n * @param {String} StudyInstanceUID The UID of the Study to be removed from cache\r\n *\r\n */\r\nexport function deleteStudyMetadataPromise(StudyInstanceUID) {\r\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\r\n    StudyMetaDataPromises.delete(StudyInstanceUID);\r\n  }\r\n}\r\n","/**\r\n * Convert String to ArrayBuffer\r\n *\r\n * @param {String} str Input String\r\n * @return {ArrayBuffer} Output converted ArrayBuffer\r\n */\r\nexport default function str2ab(str) {\r\n  const strLen = str.length;\r\n  const bytes = new Uint8Array(strLen);\r\n\r\n  for (let i = 0; i < strLen; i++) {\r\n    bytes[i] = str.charCodeAt(i);\r\n  }\r\n\r\n  return bytes.buffer;\r\n}\r\n","export class ObjectPath {\r\n  /**\r\n   * Set an object property based on \"path\" (namespace) supplied creating\r\n   * ... intermediary objects if they do not exist.\r\n   * @param object {Object} An object where the properties specified on path should be set.\r\n   * @param path {String} A string representing the property to be set, e.g. \"user.study.series.timepoint\".\r\n   * @param value {Any} The value of the property that will be set.\r\n   * @return {Boolean} Returns \"true\" on success, \"false\" if any intermediate component of the supplied path\r\n   * ... is not a valid Object, in which case the property cannot be set. No excpetions are thrown.\r\n   */\r\n  static set(object, path, value) {\r\n    let components = ObjectPath.getPathComponents(path),\r\n      length = components !== null ? components.length : 0,\r\n      result = false;\r\n\r\n    if (length > 0 && ObjectPath.isValidObject(object)) {\r\n      let i = 0,\r\n        last = length - 1,\r\n        currentObject = object;\r\n\r\n      while (i < last) {\r\n        let field = components[i];\r\n\r\n        if (field in currentObject) {\r\n          if (!ObjectPath.isValidObject(currentObject[field])) {\r\n            break;\r\n          }\r\n        } else {\r\n          currentObject[field] = {};\r\n        }\r\n\r\n        currentObject = currentObject[field];\r\n        i++;\r\n      }\r\n\r\n      if (i === last) {\r\n        currentObject[components[last]] = value;\r\n        result = true;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get an object property based on \"path\" (namespace) supplied traversing the object\r\n   * ... tree as necessary.\r\n   * @param object {Object} An object where the properties specified might exist.\r\n   * @param path {String} A string representing the property to be searched for, e.g. \"user.study.series.timepoint\".\r\n   * @return {Any} The value of the property if found. By default, returns the special type \"undefined\".\r\n   */\r\n  static get(object, path) {\r\n    let found, // undefined by default\r\n      components = ObjectPath.getPathComponents(path),\r\n      length = components !== null ? components.length : 0;\r\n\r\n    if (length > 0 && ObjectPath.isValidObject(object)) {\r\n      let i = 0,\r\n        last = length - 1,\r\n        currentObject = object;\r\n\r\n      while (i < last) {\r\n        let field = components[i];\r\n\r\n        const isValid = ObjectPath.isValidObject(currentObject[field]);\r\n        if (field in currentObject && isValid) {\r\n          currentObject = currentObject[field];\r\n          i++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (i === last && components[last] in currentObject) {\r\n        found = currentObject[components[last]];\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Check if the supplied argument is a real JavaScript Object instance.\r\n   * @param object {Any} The subject to be tested.\r\n   * @return {Boolean} Returns \"true\" if the object is a real Object instance and \"false\" otherwise.\r\n   */\r\n  static isValidObject(object) {\r\n    return (\r\n      typeof object === 'object' && object !== null && object instanceof Object\r\n    );\r\n  }\r\n\r\n  static getPathComponents(path) {\r\n    return typeof path === 'string' ? path.split('.') : null;\r\n  }\r\n}\r\n\r\nexport default ObjectPath;\r\n","const absoluteUrl = path => {\r\n  let absolutePath = '/';\r\n\r\n  if (!path) return absolutePath;\r\n\r\n  // TODO: Find another way to get root url\r\n  const absoluteUrl = window.location.origin;\r\n  const absoluteUrlParts = absoluteUrl.split('/');\r\n\r\n  if (absoluteUrlParts.length > 4) {\r\n    const rootUrlPrefixIndex = absoluteUrl.indexOf(absoluteUrlParts[3]);\r\n    absolutePath += absoluteUrl.substring(rootUrlPrefixIndex) + path;\r\n  } else {\r\n    absolutePath += path;\r\n  }\r\n\r\n  return absolutePath.replace(/\\/\\/+/g, '/');\r\n};\r\n\r\nexport default absoluteUrl;\r\n","// TODO: figure out where else to put this function\r\nconst addServers = (servers, store) => {\r\n  if (!servers || !store) {\r\n    throw new Error('The servers and store must be defined');\r\n  }\r\n\r\n  Object.keys(servers).forEach(serverType => {\r\n    const endpoints = servers[serverType];\r\n    endpoints.forEach(endpoint => {\r\n      const server = Object.assign({}, endpoint);\r\n      server.type = serverType;\r\n\r\n      store.dispatch({\r\n        type: 'ADD_SERVER',\r\n        server,\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default addServers;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../DICOMWeb';\r\n\r\nimport errorHandler from '../errorHandler';\r\nimport getXHRRetryRequestHook from './xhrRetryRequestHook';\r\n\r\nconst getImageId = imageObj => {\r\n  if (!imageObj) {\r\n    return;\r\n  }\r\n\r\n  return typeof imageObj.getImageId === 'function'\r\n    ? imageObj.getImageId()\r\n    : imageObj.url;\r\n};\r\n\r\nconst findImageIdOnStudies = (studies, displaySetInstanceUID) => {\r\n  const study = studies.find(study => {\r\n    const displaySet = study.displaySets.some(\r\n      displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\r\n    );\r\n    return displaySet;\r\n  });\r\n  const { series = [] } = study;\r\n  const { instances = [] } = series[0] || {};\r\n  const instance = instances[0];\r\n\r\n  return getImageId(instance);\r\n};\r\n\r\nconst someInvalidStrings = strings => {\r\n  const stringsArray = Array.isArray(strings) ? strings : [strings];\r\n  const emptyString = string => !string;\r\n  let invalid = stringsArray.some(emptyString);\r\n  return invalid;\r\n};\r\n\r\nconst getImageInstance = dataset => {\r\n  return dataset && dataset.images && dataset.images[0];\r\n};\r\n\r\nconst getImageInstanceId = imageInstance => {\r\n  return getImageId(imageInstance);\r\n};\r\n\r\nconst fetchIt = (url, headers = DICOMWeb.getAuthorizationHeader()) => {\r\n  return fetch(url, headers).then(response => response.arrayBuffer());\r\n};\r\n\r\nconst cornerstoneRetriever = imageId => {\r\n  return cornerstone.loadAndCacheImage(imageId).then(image => {\r\n    return image && image.data && image.data.byteArray.buffer;\r\n  });\r\n};\r\n\r\nconst wadorsRetriever = (\r\n  url,\r\n  studyInstanceUID,\r\n  seriesInstanceUID,\r\n  sopInstanceUID,\r\n  headers = DICOMWeb.getAuthorizationHeader(),\r\n  errorInterceptor = errorHandler.getHTTPErrorHandler()\r\n) => {\r\n  const config = {\r\n    url,\r\n    headers,\r\n    errorInterceptor,\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n\r\n  return dicomWeb.retrieveInstance({\r\n    studyInstanceUID,\r\n    seriesInstanceUID,\r\n    sopInstanceUID,\r\n  });\r\n};\r\n\r\nconst getImageLoaderType = imageId => {\r\n  const loaderRegExp = /^\\w+\\:/;\r\n  const loaderType = loaderRegExp.exec(imageId);\r\n\r\n  return (\r\n    (loaderRegExp.lastIndex === 0 &&\r\n      loaderType &&\r\n      loaderType[0] &&\r\n      loaderType[0].replace(':', '')) ||\r\n    ''\r\n  );\r\n};\r\n\r\nclass DicomLoaderService {\r\n  getLocalData(dataset, studies) {\r\n    if (dataset && dataset.localFile) {\r\n      // Use referenced imageInstance\r\n      const imageInstance = getImageInstance(dataset);\r\n      let imageId = getImageInstanceId(imageInstance);\r\n\r\n      // or Try to get it from studies\r\n      if (someInvalidStrings(imageId)) {\r\n        imageId = findImageIdOnStudies(studies, dataset.displaySetInstanceUID);\r\n      }\r\n\r\n      if (!someInvalidStrings(imageId)) {\r\n        return cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDataByImageType(dataset) {\r\n    const imageInstance = getImageInstance(dataset);\r\n\r\n    if (imageInstance) {\r\n      const imageId = getImageInstanceId(imageInstance);\r\n      let getDicomDataMethod = fetchIt;\r\n      const loaderType = getImageLoaderType(imageId);\r\n\r\n      switch (loaderType) {\r\n        case 'dicomfile':\r\n          getDicomDataMethod = cornerstoneRetriever.bind(this, imageId);\r\n          break;\r\n        case 'wadors':\r\n          const url = imageInstance.getData().wadoRoot;\r\n          const studyInstanceUID = imageInstance.getStudyInstanceUID();\r\n          const seriesInstanceUID = imageInstance.getSeriesInstanceUID();\r\n          const sopInstanceUID = imageInstance.getSOPInstanceUID();\r\n          const invalidParams = someInvalidStrings([\r\n            url,\r\n            studyInstanceUID,\r\n            seriesInstanceUID,\r\n            sopInstanceUID,\r\n          ]);\r\n          if (invalidParams) {\r\n            return;\r\n          }\r\n\r\n          getDicomDataMethod = wadorsRetriever.bind(\r\n            this,\r\n            url,\r\n            studyInstanceUID,\r\n            seriesInstanceUID,\r\n            sopInstanceUID\r\n          );\r\n          break;\r\n        case 'wadouri':\r\n          // Strip out the image loader specifier\r\n          imageId = imageId.substring(imageId.indexOf(':') + 1);\r\n\r\n          if (someInvalidStrings(imageId)) {\r\n            return;\r\n          }\r\n          getDicomDataMethod = fetchIt.bind(this, imageId);\r\n          break;\r\n      }\r\n\r\n      return getDicomDataMethod();\r\n    }\r\n  }\r\n\r\n  getDataByDatasetType(dataset) {\r\n    const {\r\n      StudyInstanceUID,\r\n      SeriesInstanceUID,\r\n      SOPInstanceUID,\r\n      authorizationHeaders,\r\n      wadoRoot,\r\n      wadoUri,\r\n    } = dataset;\r\n    // Retrieve wadors or just try to fetch wadouri\r\n    if (!someInvalidStrings(wadoRoot)) {\r\n      return wadorsRetriever(\r\n        wadoRoot,\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        SOPInstanceUID,\r\n        authorizationHeaders\r\n      );\r\n    } else if (!someInvalidStrings(wadoUri)) {\r\n      return fetchIt(wadoUri, { headers: authorizationHeaders });\r\n    }\r\n  }\r\n\r\n  *getLoaderIterator(dataset, studies) {\r\n    yield this.getLocalData(dataset, studies);\r\n    yield this.getDataByImageType(dataset);\r\n    yield this.getDataByDatasetType(dataset);\r\n  }\r\n\r\n  findDicomDataPromise(dataset, studies) {\r\n    const loaderIterator = this.getLoaderIterator(dataset, studies);\r\n    // it returns first valid retriever method.\r\n    for (const loader of loaderIterator) {\r\n      if (loader) {\r\n        return loader;\r\n      }\r\n    }\r\n\r\n    // in case of no valid loader\r\n    throw new Error('Invalid dicom data loader');\r\n  }\r\n}\r\n\r\nconst dicomLoaderService = new DicomLoaderService();\r\n\r\nexport default dicomLoaderService;\r\n","/* Enabled JPEG images downloading on IE11. */\r\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\r\n  const byteCharacters = atob(b64Data);\r\n  const byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    const byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  const blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\nexport default b64toBlob;\r\n","import studyMetadataManager from './studyMetadataManager';\r\n\r\n/**\r\n * Study schema\r\n *\r\n * @typedef {Object} Study\r\n * @property {Array} seriesList -\r\n * @property {Object} seriesMap -\r\n * @property {Object} seriesLoader -\r\n * @property {string} wadoUriRoot -\r\n * @property {string} wadoRoot -\r\n * @property {string} qidoRoot -\r\n * @property {string} patientName -\r\n * @property {string} patientId -\r\n * @property {number} patientAge -\r\n * @property {number} patientSize -\r\n * @property {number} patientWeight -\r\n * @property {string} accessionNumber -\r\n * @property {string} studyDate -\r\n * @property {string} studyTime -\r\n * @property {string} modalities -\r\n * @property {string} studyDescription -\r\n * @property {string} imageCount -\r\n * @property {string} studyInstanceUid -\r\n * @property {string} institutionName -\r\n * @property {Array} displaySets -\r\n */\r\n\r\n/**\r\n * Factory function to load and cache derived display sets.\r\n *\r\n * @param {object} referencedDisplaySet Display set\r\n * @param {string} referencedDisplaySet.displaySetInstanceUid Display set instance uid\r\n * @param {string} referencedDisplaySet.seriesDate\r\n * @param {string} referencedDisplaySet.seriesTime\r\n * @param {string} referencedDisplaySet.seriesInstanceUid\r\n * @param {string} referencedDisplaySet.seriesNumber\r\n * @param {string} referencedDisplaySet.seriesDescription\r\n * @param {number} referencedDisplaySet.numImageFrames\r\n * @param {string} referencedDisplaySet.frameRate\r\n * @param {string} referencedDisplaySet.modality\r\n * @param {boolean} referencedDisplaySet.isMultiFrame\r\n * @param {number} referencedDisplaySet.instanceNumber\r\n * @param {boolean} referencedDisplaySet.isReconstructable\r\n * @param {string} referencedDisplaySet.studyInstanceUid\r\n * @param {Array} referencedDisplaySet.sopClassUids\r\n * @param {Study[]} studies Collection of studies\r\n * @param {object} logger\r\n * @param {object} snackbar\r\n * @returns void\r\n */\r\nasync function loadAndCacheDerivedDisplaySets(\r\n  referencedDisplaySet,\r\n  studies,\r\n  logger,\r\n  snackbar\r\n) {\r\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\r\n  const promises = [];\r\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n\r\n  if (!studyMetadata) {\r\n    return promises;\r\n  }\r\n\r\n  const derivedDisplaySets = studyMetadata.getDerivedDatasets({\r\n    referencedSeriesInstanceUID: SeriesInstanceUID,\r\n  });\r\n\r\n  if (!derivedDisplaySets.length) {\r\n    return promises;\r\n  }\r\n\r\n  // Filter by type\r\n  const displaySetsPerModality = {};\r\n\r\n  derivedDisplaySets.forEach(displaySet => {\r\n    const Modality = displaySet.Modality;\r\n\r\n    if (displaySetsPerModality[Modality] === undefined) {\r\n      displaySetsPerModality[Modality] = [];\r\n    }\r\n\r\n    displaySetsPerModality[Modality].push(displaySet);\r\n  });\r\n\r\n  // For each type, see if any are loaded, if not load the most recent.\r\n  await Promise.all(\r\n    Object.keys(displaySetsPerModality).map(async key => {\r\n      const displaySets = displaySetsPerModality[key];\r\n\r\n      const isLoaded = displaySets.some(displaySet => displaySet.isLoaded);\r\n      if (isLoaded) {\r\n        return;\r\n      }\r\n\r\n      if (displaySets.some(displaySet => displaySet.loadError)) {\r\n        return;\r\n      }\r\n\r\n      // find most recent and load it.\r\n      let recentDateTime = 0;\r\n      let recentDisplaySet = displaySets[0];\r\n\r\n      displaySets.forEach(displaySet => {\r\n        const dateTime = Number(\r\n          `${displaySet.SeriesDate}${displaySet.SeriesTime}`\r\n        );\r\n        if (dateTime > recentDateTime) {\r\n          recentDateTime = dateTime;\r\n          recentDisplaySet = displaySet;\r\n        }\r\n      });\r\n\r\n      try {\r\n        if (\r\n          recentDisplaySet.hasOwnProperty('getSourceDisplaySet') &&\r\n          typeof recentDisplaySet.getSourceDisplaySet === 'function'\r\n        ) {\r\n          if (recentDisplaySet.Modality === 'SEG' && logger) {\r\n            const onDisplaySetLoadFailureHandler = error => {\r\n              const message =\r\n                error.message.includes('orthogonal') ||\r\n                error.message.includes('oblique')\r\n                  ? 'The segmentation has been detected as non coplanar,\\\r\n                    If you really think it is coplanar,\\\r\n                    please adjust the tolerance in the segmentation panel settings (at your own peril!)'\r\n                  : error.message;\r\n\r\n              logger.error({ error, message });\r\n              snackbar.show({\r\n                title: 'DICOM Segmentation Loader',\r\n                message,\r\n                type: 'error',\r\n                autoClose: false,\r\n              });\r\n            };\r\n\r\n            let activatedLabelmapIndex = -1;\r\n            while (activatedLabelmapIndex == -1) {\r\n              const {\r\n                referencedDisplaySet,\r\n                activatedLabelmapPromise,\r\n              } = await recentDisplaySet.getSourceDisplaySet(\r\n                studies,\r\n                true,\r\n                onDisplaySetLoadFailureHandler\r\n              );\r\n\r\n              activatedLabelmapIndex = await activatedLabelmapPromise;\r\n              const selectionFired = new CustomEvent(\r\n                'extensiondicomsegmentationsegselected',\r\n                {\r\n                  detail: { activatedLabelmapIndex: activatedLabelmapIndex },\r\n                }\r\n              );\r\n              document.dispatchEvent(selectionFired);\r\n\r\n              const lastDateTime = Number(\r\n                `${recentDisplaySet.SeriesDate}${recentDisplaySet.SeriesTime}`\r\n              );\r\n              recentDateTime = 0;\r\n              displaySets.forEach(displaySet => {\r\n                const dateTime = Number(\r\n                  `${displaySet.SeriesDate}${displaySet.SeriesTime}`\r\n                );\r\n                if (dateTime > recentDateTime && dateTime < lastDateTime) {\r\n                  recentDateTime = dateTime;\r\n                  recentDisplaySet = displaySet;\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            await recentDisplaySet.getSourceDisplaySet(studies);\r\n          }\r\n        } else {\r\n          await recentDisplaySet.load(referencedDisplaySet, studies);\r\n        }\r\n      } catch (error) {\r\n        recentDisplaySet.isLoaded = false;\r\n        recentDisplaySet.loadError = true;\r\n        logger.error({ error, message: error.message });\r\n        snackbar.show({\r\n          title: 'Error loading derived display set:',\r\n          message: error.message,\r\n          type: 'error',\r\n          error,\r\n          autoClose: false,\r\n        });\r\n      }\r\n    })\r\n  );\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app\r\n   * that depends on derived display sets to be loaded.\r\n   * (Implement pubsub for better tracking of derived display sets)\r\n   */\r\n  const event = new CustomEvent('deriveddisplaysetsloadedandcached');\r\n  document.dispatchEvent(event);\r\n}\r\n\r\nexport default loadAndCacheDerivedDisplaySets;\r\n","import lib from 'query-string';\r\n\r\nconst PARAM_SEPARATOR = ';';\r\nconst PARAM_PATTERN_IDENTIFIER = ':';\r\n\r\nfunction toLowerCaseFirstLetter(word) {\r\n  return word[0].toLowerCase() + word.slice(1);\r\n}\r\nconst getQueryFilters = (location = {}) => {\r\n  const { search } = location;\r\n\r\n  if (!search) {\r\n    return;\r\n  }\r\n\r\n  const searchParameters = parse(search);\r\n  const filters = {};\r\n\r\n  Object.entries(searchParameters).forEach(([key, value]) => {\r\n    filters[toLowerCaseFirstLetter(key)] = value;\r\n  });\r\n\r\n  return filters;\r\n};\r\n\r\nconst decode = (strToDecode = '') => {\r\n  try {\r\n    const decoded = window.atob(strToDecode);\r\n    return decoded;\r\n  } catch (e) {\r\n    return strToDecode;\r\n  }\r\n};\r\n\r\nconst parse = toParse => {\r\n  if (toParse) {\r\n    return lib.parse(toParse);\r\n  }\r\n\r\n  return {};\r\n};\r\nconst parseParam = paramStr => {\r\n  const _paramDecoded = decode(paramStr);\r\n  if (_paramDecoded && typeof _paramDecoded === 'string') {\r\n    return _paramDecoded.split(PARAM_SEPARATOR);\r\n  }\r\n};\r\n\r\nconst replaceParam = (path = '', paramKey, paramValue) => {\r\n  const paramPattern = `${PARAM_PATTERN_IDENTIFIER}${paramKey}`;\r\n  if (paramValue) {\r\n    return path.replace(paramPattern, paramValue);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nconst isValidPath = path => {\r\n  const paramPatternPiece = `/${PARAM_PATTERN_IDENTIFIER}`;\r\n  return path.indexOf(paramPatternPiece) < 0;\r\n};\r\n\r\nconst queryString = {\r\n  getQueryFilters,\r\n};\r\n\r\nconst paramString = {\r\n  isValidPath,\r\n  parseParam,\r\n  replaceParam,\r\n};\r\n\r\nexport { parse, queryString, paramString };\r\n","export default function makeDeferred() {\r\n  let reject, resolve, promise = new Promise(function (res, rej) {\r\n    resolve = res;\r\n    reject = rej;\r\n  });\r\n  return Object.freeze({ promise, resolve, reject });\r\n}\r\n","\r\nexport default class Queue {\r\n\r\n  constructor(limit) {\r\n    this.limit = limit;\r\n    this.size = 0;\r\n    this.awaiting = null;\r\n  }\r\n\r\n  /**\r\n   * Creates a new \"proxy\" function associated with the current execution queue\r\n   * instance. When the returned function is invoked, the queue limit is checked\r\n   * to make sure the limit of scheduled tasks is repected (throwing an\r\n   * exception when the limit has been reached and before calling the original\r\n   * function). The original function is only invoked after all the previously\r\n   * scheduled tasks have finished executing (their returned promises have\r\n   * resolved/rejected);\r\n   *\r\n   * @param {function} task The function whose execution will be associated\r\n   * with the current Queue instance;\r\n   * @returns {function} The \"proxy\" function bound to the current Queue\r\n   * instance;\r\n   */\r\n  bind(task) {\r\n    return bind(this, task);\r\n  }\r\n\r\n  bindSafe(task, onError) {\r\n    const boundTask = bind(this, task);\r\n    return async function safeTask(...args) {\r\n      try {\r\n        return await boundTask(...args);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Utils\r\n */\r\n\r\nfunction bind(queue, task) {\r\n  const cleaner = clean.bind(null, queue);\r\n  return async function boundTask(...args) {\r\n    if (queue.size >= queue.limit) {\r\n      throw new Error('Queue limit reached');\r\n    }\r\n    const promise = chain(queue.awaiting, task, args);\r\n    queue.awaiting = promise.then(cleaner, cleaner);\r\n    queue.size++;\r\n    return promise;\r\n  };\r\n}\r\n\r\nfunction clean(queue) {\r\n  if (queue.size > 0 && --queue.size === 0) {\r\n    queue.awaiting = null;\r\n  }\r\n}\r\n\r\nasync function chain(prev, task, args) {\r\n  await prev;\r\n  return task(...args);\r\n}\r\n","/**\r\n * Constants\r\n */\r\n\r\nconst SEPARATOR = '/';\r\n\r\n/**\r\n * API\r\n */\r\n\r\n/**\r\n * Add values to a list hierarchically.\r\n *  @ For example:\r\n *    addToList([], 'a', 'b', 'c');\r\n *  will add the following hierarchy to the list:\r\n *    a > b > c\r\n *  resulting in the following array:\r\n *    [['a', [['b', ['c']]]]]\r\n * @param {Array} list The target list;\r\n * @param  {...string} values The values to be hierarchically added to the list;\r\n * @returns {Array} Returns the provided list possibly updated with the given\r\n *  values or null when a bad list (not an actual array) is provided\r\n */\r\nfunction addToList(list, ...values) {\r\n  if (Array.isArray(list)) {\r\n    if (values.length > 0) {\r\n      addValuesToList(list, values);\r\n    }\r\n    return list;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Iterates through the provided hierarchical list executing the callback\r\n * once for each leaf-node of the tree. The ancestors of the leaf-node being\r\n * visited are passed to the callback function along with the leaf-node in\r\n * the exact same order they appear on the tree (from root to leaf);\r\n *  @ For example, if the hierachy `a > b > c` appears on the tree (\"a\" being\r\n *    the root and \"c\" being the leaf) the callback function will be called as:\r\n *  callback('a', 'b', 'c');\r\n * @param {Array} list The hierarchical list to be iterated\r\n * @param {function} callback The callback which will be exected once for\r\n *  each leaf-node of the hierarchical list;\r\n * @returns {Array} Returns the provided list or null for bad arguments;\r\n */\r\nfunction forEach(list, callback) {\r\n  if (Array.isArray(list)) {\r\n    if (typeof callback === 'function') {\r\n      forEachValue(list, callback);\r\n    }\r\n    return list;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Retrieves an item from the given hierarchical list based on an index (number)\r\n * or a path (string).\r\n *  @ For example:\r\n *    getItem(list, '1/0/4')\r\n *  will retrieve the fourth grandchild, from the first child of the second\r\n *  element of the list;\r\n * @param {Array} list The source list;\r\n * @param {string|number} indexOrPath The index of the element inside list\r\n *  (number) or the path to reach the desired element (string). The slash \"/\"\r\n *  character is cosidered the path separator;\r\n */\r\nfunction getItem(list, indexOrPath) {\r\n  if (Array.isArray(list)) {\r\n    let subpath = null;\r\n    let index = typeof indexOrPath === 'number' ? indexOrPath : -1;\r\n    if (typeof indexOrPath === 'string') {\r\n      const separator = indexOrPath.indexOf(SEPARATOR);\r\n      if (separator > 0) {\r\n        index = parseInt(indexOrPath.slice(0, separator), 10);\r\n        if (separator + 1 < indexOrPath.length) {\r\n          subpath = indexOrPath.slice(separator + 1, indexOrPath.length);\r\n        }\r\n      } else {\r\n        index = parseInt(indexOrPath, 10);\r\n      }\r\n    }\r\n    if (index >= 0 && index < list.length) {\r\n      const item = list[index];\r\n      if (isSublist(item)) {\r\n        if (subpath !== null) {\r\n          return getItem(item[1], subpath);\r\n        }\r\n        return item[0];\r\n      }\r\n      return item;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Pretty-print the provided hierarchical list;\r\n * @param {Array} list The source list;\r\n * @returns {string} The textual representation of the hierarchical list;\r\n */\r\nfunction print(list) {\r\n  let text = '';\r\n  if (Array.isArray(list)) {\r\n    let prev = [];\r\n    forEachValue(list, function(...args) {\r\n      let prevLen = prev.length;\r\n      for (let i = 0, l = args.length; i < l; ++i) {\r\n        if (i < prevLen && args[i] === prev[i]) {\r\n          continue;\r\n        }\r\n        text += '  '.repeat(i) + args[i] + '\\n';\r\n      }\r\n      prev = args;\r\n    });\r\n  }\r\n  return text;\r\n}\r\n\r\n/**\r\n * Utils\r\n */\r\n\r\nfunction forEachValue(list, callback) {\r\n  for (let i = 0, l = list.length; i < l; ++i) {\r\n    let item = list[i];\r\n    if (isSublist(item)) {\r\n      if (item[1].length > 0) {\r\n        forEachValue(item[1], callback.bind(null, item[0]));\r\n        continue;\r\n      }\r\n      item = item[0];\r\n    }\r\n    callback(item);\r\n  }\r\n}\r\n\r\nfunction addValuesToList(list, values) {\r\n  let value = values.shift();\r\n  let index = add(list, value);\r\n  if (index >= 0) {\r\n    if (values.length > 0) {\r\n      let sublist = list[index];\r\n      if (!isSublist(sublist)) {\r\n        sublist = toSublist(value);\r\n        list[index] = sublist;\r\n      }\r\n      return addValuesToList(sublist[1], values);\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction add(list, value) {\r\n  let index = find(list, value);\r\n  if (index === -2) {\r\n    index = list.push(value) - 1;\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction find(list, value) {\r\n  if (typeof value === 'string') {\r\n    for (let i = 0, l = list.length; i < l; ++i) {\r\n      let item = list[i];\r\n      if (item === value || (isSublist(item) && item[0] === value)) {\r\n        return i;\r\n      }\r\n    }\r\n    return -2;\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction isSublist(subject) {\r\n  return (\r\n    Array.isArray(subject) &&\r\n    subject.length === 2 &&\r\n    typeof subject[0] === 'string' &&\r\n    Array.isArray(subject[1])\r\n  );\r\n}\r\n\r\nfunction toSublist(value) {\r\n  return [value + '', []];\r\n}\r\n\r\n/**\r\n * Exports\r\n */\r\n\r\nexport { addToList, getItem, forEach, print };\r\n","import makeDeferred from './makeDeferred';\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst TYPE = Symbol('Type');\r\nconst TASK = Symbol('Task');\r\nconst LIST = Symbol('List');\r\n\r\n/**\r\n * Public Methods\r\n */\r\n\r\n/**\r\n * Creates an instance of a task list\r\n * @returns {Object} A task list object\r\n */\r\nfunction createList() {\r\n  return objectWithType(LIST, {\r\n    head: null,\r\n    named: Object.create(null),\r\n    observers: [],\r\n  });\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a List instance\r\n * @param {any} subject The value to be tested\r\n * @returns {boolean} true if a valid List instance is given, false otherwise\r\n */\r\nfunction isList(subject) {\r\n  return isOfType(LIST, subject);\r\n}\r\n\r\n/**\r\n * Creates an instance of a task\r\n * @param {Object} list The List instance related to this task\r\n * @param {Object} next The next Task instance to link to\r\n * @returns {Object} A task object\r\n */\r\nfunction createTask(list, next) {\r\n  return objectWithType(TASK, {\r\n    list: isList(list) ? list : null,\r\n    next: isTask(next) ? next : null,\r\n    failed: false,\r\n    awaiting: null,\r\n    progress: 0.0,\r\n  });\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a Task instance\r\n * @param {any} subject The value to be tested\r\n * @returns {boolean} true if a valid Task instance is given, false otherwise\r\n */\r\nfunction isTask(subject) {\r\n  return isOfType(TASK, subject);\r\n}\r\n\r\n/**\r\n * Appends a new Task to the given List instance and notifies the list observers\r\n * @param {Object} list A List instance\r\n * @returns {Object} The new Task instance appended to the List or null if the\r\n *  given List instanc is not valid\r\n */\r\nfunction increaseList(list) {\r\n  if (isList(list)) {\r\n    const task = createTask(list, list.head);\r\n    list.head = task;\r\n    notify(list, getOverallProgress(list));\r\n    return task;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Updates the internal progress value of the given Task instance and notifies\r\n * the observers of the associated list.\r\n * @param {Object} task The Task instance to be updated\r\n * @param {number} value A number between 0 (inclusive) and 1 (exclusive)\r\n *  indicating the progress of the task;\r\n * @returns {void} Nothing is returned\r\n */\r\nfunction update(task, value) {\r\n  if (isTask(task) && isValidProgress(value) && value < 1.0) {\r\n    if (task.progress !== value) {\r\n      task.progress = value;\r\n      if (isList(task.list)) {\r\n        notify(task.list, getOverallProgress(task.list));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Sets a Task instance as finished (progress = 1.0), freezes it in order to\r\n * prevent further modifications and notifies the observers of the associated\r\n * list.\r\n * @param {Object} task The Task instance to be finalized\r\n * @returns {void} Nothing is returned\r\n */\r\nfunction finish(task) {\r\n  if (isTask(task)) {\r\n    task.progress = 1.0;\r\n    task.awaiting = null;\r\n    Object.freeze(task);\r\n    if (isList(task.list)) {\r\n      notify(task.list, getOverallProgress(task.list));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a summarized snapshot of the current status of the given task List\r\n * @param {Object} list The List instance to be scanned\r\n * @returns {Object} An obeject representing the summarized status of the list\r\n */\r\nfunction getOverallProgress(list) {\r\n  const status = createStatus();\r\n  if (isList(list)) {\r\n    let task = list.head;\r\n    while (isTask(task)) {\r\n      status.total++;\r\n      if (isValidProgress(task.progress)) {\r\n        status.partial += task.progress;\r\n        if (task.progress === 1.0 && task.failed) status.failures++;\r\n      }\r\n      task = task.next;\r\n    }\r\n  }\r\n  if (status.total > 0) {\r\n    status.progress = status.partial / status.total;\r\n  }\r\n  return Object.freeze(status);\r\n}\r\n\r\n/**\r\n * Adds a Task instance to the given list that waits on a given \"thenable\". When\r\n * the thenable resolves the \"finish\" method is called on the newly created\r\n * instance thus notifying the observers of the list.\r\n * @param {Object} list The List instance to which the new task will be added\r\n * @param {Object|Promise} thenable The thenable to be waited on\r\n * @returns {Object} A reference to the newly created Task;\r\n */\r\nfunction waitOn(list, thenable) {\r\n  const task = increaseList(list);\r\n  if (isTask(task)) {\r\n    task.awaiting = Promise.resolve(thenable).then(\r\n      function() {\r\n        finish(task);\r\n      },\r\n      function() {\r\n        task.failed = true;\r\n        finish(task);\r\n      }\r\n    );\r\n    return task;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Adds a Task instance to the given list using a deferred (a Promise that can\r\n * be externally resolved) notifying the observers of the list.\r\n * @param {Object} list The List instance to which the new task will be added\r\n * @returns {Object} An object with references to the created deferred and task\r\n */\r\nfunction addDeferred(list) {\r\n  const deferred = makeDeferred();\r\n  const task = waitOn(list, deferred.promise);\r\n  return Object.freeze({\r\n    deferred,\r\n    task,\r\n  });\r\n}\r\n\r\n/**\r\n * Assigns a name to a specific task of the list\r\n * @param {Object} list The List instance whose task will be named\r\n * @param {Object} task The specified Task instance\r\n * @param {string} name The name of the task\r\n * @returns {boolean} Returns true on success, false otherwise\r\n */\r\nfunction setTaskName(list, task, name) {\r\n  if (\r\n    contains(list, task) &&\r\n    list.named !== null &&\r\n    typeof list.named === 'object' &&\r\n    typeof name === 'string'\r\n  ) {\r\n    list.named[name] = task;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Retrieves a task by name\r\n * @param {Object} list The List instance whose task will be retrieved\r\n * @param {string} name The name of the task to be retrieved\r\n * @returns {Object} The Task instance or null if not found\r\n */\r\nfunction getTaskByName(list, name) {\r\n  if (\r\n    isList(list) &&\r\n    list.named !== null &&\r\n    typeof list.named === 'object' &&\r\n    typeof name === 'string'\r\n  ) {\r\n    const task = list.named[name];\r\n    if (isTask(task)) {\r\n      return task;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Adds an observer (callback function) to a given List instance\r\n * @param {Object} list The List instance to which the observer will be appended\r\n * @param {Function} observer The observer (function) that will be executed\r\n *  every time a change happens within the list\r\n * @returns {boolean} Returns true on success and false otherewise\r\n */\r\nfunction addObserver(list, observer) {\r\n  if (\r\n    isList(list) &&\r\n    Array.isArray(list.observers) &&\r\n    typeof observer === 'function'\r\n  ) {\r\n    list.observers.push(observer);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Removes an observer (callback function) from a given List instance\r\n * @param {Object} list The instance List from which the observer will removed\r\n * @param {Function} observer The observer function to be removed\r\n * @returns {boolean} Returns true on success and false otherewise\r\n */\r\nfunction removeObserver(list, observer) {\r\n  if (\r\n    isList(list) &&\r\n    Array.isArray(list.observers) &&\r\n    list.observers.length > 0\r\n  ) {\r\n    const index = list.observers.indexOf(observer);\r\n    if (index >= 0) {\r\n      list.observers.splice(index, 1);\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Utils\r\n */\r\n\r\nfunction createStatus() {\r\n  return Object.seal({\r\n    total: 0,\r\n    partial: 0.0,\r\n    progress: 0.0,\r\n    failures: 0,\r\n  });\r\n}\r\n\r\nfunction objectWithType(type, object) {\r\n  return Object.seal(Object.defineProperty(object, TYPE, { value: type }));\r\n}\r\n\r\nfunction isOfType(type, subject) {\r\n  return (\r\n    subject !== null && typeof subject === 'object' && subject[TYPE] === type\r\n  );\r\n}\r\n\r\nfunction isValidProgress(value) {\r\n  return typeof value === 'number' && value >= 0.0 && value <= 1.0;\r\n}\r\n\r\nfunction contains(list, task) {\r\n  if (isList(list) && isTask(task)) {\r\n    let item = list.head;\r\n    while (isTask(item)) {\r\n      if (item === task) {\r\n        return true;\r\n      }\r\n      item = item.next;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction notify(list, data) {\r\n  if (\r\n    isList(list) &&\r\n    Array.isArray(list.observers) &&\r\n    list.observers.length > 0\r\n  ) {\r\n    list.observers.slice().forEach(function(observer) {\r\n      if (typeof observer === 'function') {\r\n        try {\r\n          observer(data, list);\r\n        } catch (e) {\r\n          /* Oops! */\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Exports\r\n */\r\n\r\nexport {\r\n  createList,\r\n  isList,\r\n  createTask,\r\n  isTask,\r\n  increaseList,\r\n  update,\r\n  finish,\r\n  getOverallProgress,\r\n  waitOn,\r\n  addDeferred,\r\n  setTaskName,\r\n  getTaskByName,\r\n  addObserver,\r\n  removeObserver,\r\n};\r\n","import ObjectPath from './objectPath';\r\nimport StackManager from './StackManager.js';\r\nimport absoluteUrl from './absoluteUrl';\r\nimport addServers from './addServers';\r\nimport guid from './guid';\r\nimport sortBy from './sortBy.js';\r\nimport studyMetadataManager from './studyMetadataManager';\r\nimport writeScript from './writeScript.js';\r\nimport DicomLoaderService from './dicomLoaderService.js';\r\nimport b64toBlob from './b64toBlob.js';\r\nimport loadAndCacheDerivedDisplaySets from './loadAndCacheDerivedDisplaySets.js';\r\nimport * as urlUtil from './urlUtil';\r\nimport makeDeferred from './makeDeferred';\r\nimport makeCancelable from './makeCancelable';\r\nimport hotkeys from './hotkeys';\r\nimport Queue from './Queue';\r\nimport isDicomUid from './isDicomUid';\r\nimport resolveObjectPath from './resolveObjectPath';\r\nimport * as hierarchicalListUtils from './hierarchicalListUtils';\r\nimport * as progressTrackingUtils from './progressTrackingUtils';\r\nimport xhrRetryRequestHook from './xhrRetryRequestHook';\r\n\r\nconst utils = {\r\n  guid,\r\n  ObjectPath,\r\n  absoluteUrl,\r\n  addServers,\r\n  sortBy,\r\n  writeScript,\r\n  b64toBlob,\r\n  StackManager,\r\n  studyMetadataManager,\r\n  DicomLoaderService,\r\n  urlUtil,\r\n  loadAndCacheDerivedDisplaySets,\r\n  makeDeferred,\r\n  makeCancelable,\r\n  hotkeys,\r\n  Queue,\r\n  isDicomUid,\r\n  resolveObjectPath,\r\n  hierarchicalListUtils,\r\n  progressTrackingUtils,\r\n  xhrRetryRequestHook,\r\n};\r\n\r\nexport {\r\n  guid,\r\n  ObjectPath,\r\n  absoluteUrl,\r\n  addServers,\r\n  sortBy,\r\n  writeScript,\r\n  b64toBlob,\r\n  StackManager,\r\n  studyMetadataManager,\r\n  DicomLoaderService,\r\n  urlUtil,\r\n  loadAndCacheDerivedDisplaySets,\r\n  makeDeferred,\r\n  makeCancelable,\r\n  hotkeys,\r\n  Queue,\r\n  isDicomUid,\r\n  resolveObjectPath,\r\n  hierarchicalListUtils,\r\n  progressTrackingUtils,\r\n  xhrRetryRequestHook,\r\n};\r\n\r\nexport default utils;\r\n","/* jshint -W060 */\r\nimport absoluteUrl from './absoluteUrl';\r\n\r\nexport default function writeScript(fileName, callback) {\r\n  const script = document.createElement('script');\r\n  script.src = absoluteUrl(fileName);\r\n  script.onload = () => {\r\n    if (typeof callback === 'function') {\r\n      callback(script);\r\n    }\r\n  };\r\n\r\n  document.body.appendChild(script);\r\n}\r\n","export default function makeCancelable(thenable) {\r\n  let isCanceled = false;\r\n  const promise = Promise.resolve(thenable).then(\r\n    function(result) {\r\n      if (isCanceled) throw Object.freeze({ isCanceled });\r\n      return result;\r\n    },\r\n    function(error) {\r\n      if (isCanceled) throw Object.freeze({ isCanceled, error });\r\n      throw error;\r\n    }\r\n  );\r\n  return Object.assign(Object.create(promise), {\r\n    then: promise.then.bind(promise),\r\n    cancel() {\r\n      isCanceled = true;\r\n    },\r\n  });\r\n}\r\n","export default function isDicomUid(subject) {\r\n  const regex = /^\\d+(?:\\.\\d+)*$/;\r\n  return typeof subject === 'string' && regex.test(subject.trim());\r\n}\r\n","export default function resolveObjectPath(root, path, defaultValue) {\r\n  if (root !== null && typeof root === 'object' && typeof path === 'string') {\r\n    let value,\r\n      separator = path.indexOf('.');\r\n    if (separator >= 0) {\r\n      return resolveObjectPath(\r\n        root[path.slice(0, separator)],\r\n        path.slice(separator + 1, path.length),\r\n        defaultValue\r\n      );\r\n    }\r\n    value = root[path];\r\n    return value === undefined && defaultValue !== undefined\r\n      ? defaultValue\r\n      : value;\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport getImageId from '../utils/getImageId.js';\r\n\r\nconst noop = () => {};\r\n\r\nexport class StudyPrefetcher {\r\n  options = {\r\n    order: 'closest',\r\n    displaySetCount: 1,\r\n    onImageCached: noop,\r\n    requestType: 'prefetch',\r\n    preventCache: false,\r\n    prefetchDisplaySetsTimeout: 300,\r\n    maxNumPrefetchRequests: 100,\r\n    includeActiveDisplaySet: false,\r\n  };\r\n\r\n  constructor(studies, options) {\r\n    this.studies = studies || [];\r\n\r\n    if (options) {\r\n      this.options = { ...this.options, ...options };\r\n      this.options.requestType = 'prefetch';\r\n    }\r\n\r\n    cornerstone.events.addEventListener(\r\n      'cornerstoneimagecachefull.StudyPrefetcher',\r\n      this.cacheFullHandler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove previously set event listeners and stop prefetching.\r\n   */\r\n  destroy() {\r\n    this.stopPrefetching();\r\n    cornerstone.events.removeEventListener(\r\n      'cornerstoneimagecachefull.StudyPrefetcher',\r\n      this.cacheFullHandler\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get StudyPrefetcher singleton instance.\r\n   *\r\n   * @param {array} studies\r\n   * @param {object} options\r\n   * @returns\r\n   */\r\n  static getInstance(studies = [], options) {\r\n    if (!StudyPrefetcher.instance) {\r\n      StudyPrefetcher.instance = new StudyPrefetcher(studies, options);\r\n    }\r\n\r\n    if (options) {\r\n      this.options = { ...this.options, ...options };\r\n      this.options.requestType = 'prefetch';\r\n    }\r\n\r\n    return StudyPrefetcher.instance;\r\n  }\r\n\r\n  /**\r\n   * OHIF study metadata instances.\r\n   *\r\n   * @param {array} studies\r\n   */\r\n  setStudies(studies) {\r\n    this.stopPrefetching();\r\n    this.studies = studies;\r\n  }\r\n\r\n  /**\r\n   * Get previously prefetched element.\r\n   *\r\n   * @returns {HTMLElement} Previously prefetched element.\r\n   */\r\n  getElement() {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Prefetch related display sets based on cornerstone viewport element\r\n   * with previously set options.\r\n   *\r\n   * @param {*} element\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   * @returns\r\n   */\r\n  prefetch(element, displaySetInstanceUID) {\r\n    if (!this.studies || !this.studies.length) {\r\n      return;\r\n    }\r\n\r\n    this.element = element;\r\n    try {\r\n      this.enabledElement = cornerstone.getEnabledElement(element);\r\n    } catch {\r\n      throw new Error('Failed to find the enabled element');\r\n    }\r\n\r\n    this.stopPrefetching();\r\n    this.prefetchDisplaySets(displaySetInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Stop prefetching images.\r\n   */\r\n  stopPrefetching() {\r\n    cornerstone.imageLoadPoolManager.clearRequestStack('prefetch');\r\n  }\r\n\r\n  /**\r\n   * Prefetch display sets async.\r\n   *\r\n   * @param {HTMLElement} element cornerstone viewport element\r\n   * @param {number} timeout\r\n   */\r\n  prefetchDisplaySetsAsync(element, timeout) {\r\n    try {\r\n      this.enabledElement = cornerstone.getEnabledElement(element);\r\n    } catch {\r\n      throw new Error('Failed to find the enabled element');\r\n    }\r\n    timeout = timeout || this.options.prefetchDisplaySetsTimeout;\r\n    clearTimeout(this.prefetchDisplaySetsHandler);\r\n    this.prefetchDisplaySetsHandler = setTimeout(() => {\r\n      this.prefetchDisplaySets(element);\r\n    }, timeout);\r\n  }\r\n\r\n  /**\r\n   * Extract all image ids from all display sets to be fetched and\r\n   * call method to add images to request pool manager.\r\n   *\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   */\r\n  prefetchDisplaySets(displaySetInstanceUID) {\r\n    const displaySetsToPrefetch = this.getDisplaySetsToPrefetch(\r\n      displaySetInstanceUID\r\n    );\r\n    const imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);\r\n    this.prefetchImageIds(imageIds);\r\n  }\r\n\r\n  /**\r\n   * Add image ids to request pool manager.\r\n   *\r\n   * @param {array} imageIds\r\n   */\r\n  prefetchImageIds(imageIds) {\r\n    const nonCachedImageIds = this.filterCachedImageIds(imageIds);\r\n    const imageLoadPoolManager = cornerstone.imageLoadPoolManager;\r\n\r\n    imageLoadPoolManager.maxNumRequests = {\r\n      ...imageLoadPoolManager.maxNumRequests,\r\n      prefetch: this.options.maxNumPrefetchRequests,\r\n    };\r\n\r\n    let requestFn;\r\n    if (this.options.preventCache) {\r\n      requestFn = id => cornerstone.loadImage(id);\r\n    } else {\r\n      requestFn = id => cornerstone.loadAndCacheImage(id);\r\n    }\r\n\r\n    nonCachedImageIds.forEach(imageId => {\r\n      imageLoadPoolManager.addRequest(\r\n        requestFn.bind(this, imageId),\r\n        this.options.requestType,\r\n        {\r\n          imageId,\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get study by cornerstone image instance.\r\n   *\r\n   * @param {object} image\r\n   * @returns\r\n   */\r\n  getStudy(image) {\r\n    const StudyInstanceUID = cornerstone.metaData.get(\r\n      'StudyInstanceUID',\r\n      image.imageId\r\n    );\r\n    const studies = this.studies;\r\n    return studies.find(\r\n      study => study.getData().StudyInstanceUID === StudyInstanceUID\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get study series by cornerstone image instance.\r\n   *\r\n   * @param {object} study OHIF study instance\r\n   * @param {object} image cornerstone image instance object\r\n   * @returns\r\n   */\r\n  getSeries(study, image) {\r\n    const SeriesInstanceUID = cornerstone.metaData.get(\r\n      'SeriesInstanceUID',\r\n      image.imageId\r\n    );\r\n    return study.getSeriesByUID(SeriesInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Get sop instance by cornerstone image instance.\r\n   *\r\n   * @param {array} series\r\n   * @param {object} image\r\n   * @returns\r\n   */\r\n  getInstance(series, image) {\r\n    const instanceMetadata = cornerstone.metaData.get(\r\n      'instance',\r\n      image.imageId\r\n    );\r\n    return series.getInstanceByUID(instanceMetadata.SOPInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Returns the display set with given uid.\r\n   *\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   * @returns {object} displaySet\r\n   */\r\n  getDisplaySetByUID(displaySetInstanceUID) {\r\n    let displaySet;\r\n    this.studies.forEach(study => {\r\n      const ds = study.displaySets.find(\r\n        ds => ds.displaySetInstanceUID === displaySetInstanceUID\r\n      );\r\n      if (ds) {\r\n        displaySet = ds;\r\n      }\r\n    });\r\n    return displaySet;\r\n  }\r\n\r\n  /**\r\n   * Get display set by SOPInstanceUID.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} instance\r\n   * @returns\r\n   */\r\n  getDisplaySetBySOPInstanceUID(displaySets, instance) {\r\n    return displaySets.find(displaySet => {\r\n      return displaySet.images.some(displaySetImage => {\r\n        return displaySetImage.SOPInstanceUID === instance.SOPInstanceUID;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get active viewport image based on cornerstone viewport element.\r\n   * @returns\r\n   */\r\n  getActiveViewportImage() {\r\n    if (!this.enabledElement) {\r\n      return;\r\n    }\r\n\r\n    return this.enabledElement.image;\r\n  }\r\n\r\n  /**\r\n   * Prefetch display sets based on cornerstone viewport element image.\r\n   *\r\n   * @param {string} displaySetInstanceUID the display set instance uid\r\n   * @returns {array} displaySets\r\n   */\r\n  getDisplaySetsToPrefetch(displaySetInstanceUID) {\r\n    const image = this.getActiveViewportImage();\r\n\r\n    if (!image) {\r\n      return [];\r\n    }\r\n\r\n    const study = this.getStudy(image);\r\n    const series = this.getSeries(study, image);\r\n    const instance = this.getInstance(series, image);\r\n    const displaySets = study.displaySets;\r\n    const activeDisplaySet = displaySetInstanceUID\r\n      ? this.getDisplaySetByUID(displaySetInstanceUID)\r\n      : this.getDisplaySetBySOPInstanceUID(displaySets, instance);\r\n\r\n    const prefetchMethodMap = {\r\n      topdown: 'getFirstDisplaySets',\r\n      downward: 'getNextDisplaySets',\r\n      upward: 'getPreviousDisplaySets',\r\n      closest: 'getClosestDisplaySets',\r\n      all: 'getAllDisplaySets',\r\n    };\r\n\r\n    const prefetchOrder = this.options.order;\r\n    const methodName = prefetchMethodMap[prefetchOrder];\r\n    const getDisplaySets = this[methodName];\r\n\r\n    if (!getDisplaySets) {\r\n      if (prefetchOrder) {\r\n        log.warn(`Invalid prefetch order configuration (${prefetchOrder})`);\r\n      }\r\n\r\n      return [];\r\n    }\r\n\r\n    return getDisplaySets.call(\r\n      this,\r\n      displaySets,\r\n      activeDisplaySet,\r\n      this.options.displaySetCount,\r\n      this.options.includeActiveDisplaySet\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all display sets.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getAllDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const length = displaySets.length;\r\n    const selectedDisplaySets = [];\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const displaySet = displaySets[i];\r\n      selectedDisplaySets.push(displaySet);\r\n    }\r\n\r\n    return selectedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Get all display sets in order after the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getFirstDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const length = displaySets.length;\r\n    const selectedDisplaySets = [];\r\n\r\n    for (let i = 0; i < length && displaySetCount; i++) {\r\n      const displaySet = displaySets[i];\r\n\r\n      if (includeActiveDisplaySet || displaySet !== activeDisplaySet) {\r\n        selectedDisplaySets.push(displaySet);\r\n        displaySetCount--;\r\n      }\r\n    }\r\n\r\n    return selectedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Get all display sets before the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getPreviousDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\r\n    const end = includeActiveDisplaySet\r\n      ? activeDisplaySetIndex + 1\r\n      : activeDisplaySetIndex;\r\n    const previousDisplaySets = displaySets.slice(0, end);\r\n    return previousDisplaySets.reverse().slice(0, displaySetCount);\r\n  }\r\n\r\n  /**\r\n   * Get all display sets after the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getNextDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\r\n    const begin = includeActiveDisplaySet\r\n      ? activeDisplaySetIndex\r\n      : activeDisplaySetIndex + 1;\r\n    const end = Math.min(begin + displaySetCount, displaySets.length);\r\n    return displaySets.slice(begin, end);\r\n  }\r\n\r\n  /**\r\n   * Get all display set closest to the active display set.\r\n   *\r\n   * @param {array} displaySets\r\n   * @param {object} activeDisplaySet\r\n   * @param {number} displaySetCount\r\n   * @param {boolean} includeActiveDisplaySet\r\n   * @returns\r\n   */\r\n  getClosestDisplaySets(\r\n    displaySets,\r\n    activeDisplaySet,\r\n    displaySetCount,\r\n    includeActiveDisplaySet\r\n  ) {\r\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\r\n    const length = displaySets.length;\r\n    const selectedDisplaySets = [];\r\n    let left = activeDisplaySetIndex - 1;\r\n    let right = activeDisplaySetIndex + 1;\r\n\r\n    if (includeActiveDisplaySet) {\r\n      selectedDisplaySets.push(displaySets[activeDisplaySetIndex]);\r\n      displaySetCount--;\r\n    }\r\n\r\n    while ((left >= 0 || right < length) && displaySetCount) {\r\n      if (left >= 0) {\r\n        selectedDisplaySets.push(displaySets[left]);\r\n        displaySetCount--;\r\n        left--;\r\n      }\r\n\r\n      if (right < length && displaySetCount) {\r\n        selectedDisplaySets.push(displaySets[right]);\r\n        displaySetCount--;\r\n        right++;\r\n      }\r\n    }\r\n\r\n    return selectedDisplaySets;\r\n  }\r\n\r\n  /**\r\n   * Get all image ids from display sets.\r\n   *\r\n   * @param {array} displaySets\r\n   * @returns {array} image ids\r\n   */\r\n  getImageIdsFromDisplaySets(displaySets) {\r\n    let imageIds = [];\r\n\r\n    displaySets.forEach(displaySet => {\r\n      imageIds = imageIds.concat(this.getImageIdsFromDisplaySet(displaySet));\r\n    });\r\n\r\n    return imageIds;\r\n  }\r\n\r\n  /**\r\n   * Get all image ids from a given display set.\r\n   *\r\n   * @param {array} displaySet\r\n   * @returns\r\n   */\r\n  getImageIdsFromDisplaySet(displaySet) {\r\n    const imageIds = [];\r\n\r\n    if (!displaySet.images || displaySet.images.length < 1) {\r\n      return [];\r\n    }\r\n\r\n    // TODO: This duplicates work done by the stack manager\r\n    displaySet.images.forEach(image => {\r\n      const numFrames = image.numFrames;\r\n      if (numFrames > 1) {\r\n        for (let i = 0; i < numFrames; i++) {\r\n          let imageId = getImageId(image, i);\r\n          imageIds.push(imageId);\r\n        }\r\n      } else {\r\n        let imageId = getImageId(image);\r\n        imageIds.push(imageId);\r\n      }\r\n    });\r\n\r\n    return imageIds;\r\n  }\r\n\r\n  /**\r\n   * Filter cached image ids from a set of image ids.\r\n   *\r\n   * @param {array} imageIds\r\n   * @returns {array} images not cached\r\n   */\r\n  filterCachedImageIds(imageIds) {\r\n    return imageIds.filter(imageId => !this.isImageCached(imageId));\r\n  }\r\n\r\n  /**\r\n   * Check if image id is cached in cornerstone.\r\n   *\r\n   * @param {string} imageId\r\n   * @returns\r\n   */\r\n  isImageCached(imageId) {\r\n    const image = cornerstone.imageCache.imageCache[imageId];\r\n    return image && image.sizeInBytes;\r\n  }\r\n\r\n  /**\r\n   * Warns that cache is full and stops prefetching.\r\n   */\r\n  cacheFullHandler = () => {\r\n    log.warn('Cache full');\r\n    this.stopPrefetching();\r\n  };\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport StackManager from '../utils/StackManager';\r\nimport { StudyPrefetcher } from './StudyPrefetcher';\r\n\r\nclass BaseLoadingListener {\r\n  constructor(stack, options = {}) {\r\n    this.id = BaseLoadingListener.getNewId();\r\n    this.stack = stack;\r\n    this.statsItemsLimit = options.statsItemsLimit || 2;\r\n    this.stats = {\r\n      items: [],\r\n      total: 0,\r\n      elapsedTime: 0,\r\n      speed: 0,\r\n    };\r\n\r\n    this._setProgressData = options._setProgressData;\r\n    this._clearProgressById = options._clearProgressById;\r\n\r\n    // Register the start point to make it possible to calculate\r\n    // bytes/s or frames/s when the first byte or frame is received\r\n    this._addStatsData(0);\r\n\r\n    // Update the progress before starting the download\r\n    // to make it possible to update the UI\r\n    this._updateProgress();\r\n  }\r\n\r\n  _addStatsData(value) {\r\n    const date = new Date();\r\n    const stats = this.stats;\r\n    const items = stats.items;\r\n    const newItem = {\r\n      value,\r\n      date,\r\n    };\r\n\r\n    items.push(newItem);\r\n    stats.total += newItem.value;\r\n\r\n    // Remove items until it gets below the limit\r\n    while (items.length > this.statsItemsLimit) {\r\n      const item = items.shift();\r\n      stats.total -= item.value;\r\n    }\r\n\r\n    // Update the elapsedTime (seconds) based on first and last\r\n    // elements and recalculate the speed (bytes/s or frames/s)\r\n    if (items.length > 1) {\r\n      const oldestItem = items[0];\r\n      stats.elapsedTime =\r\n        (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;\r\n      stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;\r\n    }\r\n  }\r\n\r\n  _getProgressId() {\r\n    /**\r\n     * TODO: The id key should be configurable.\r\n     */\r\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\r\n    return 'StackProgress:' + displaySetInstanceUID;\r\n  }\r\n\r\n  _clearProgress() {\r\n    const progressId = this._getProgressId();\r\n    this._clearProgressById(progressId);\r\n  }\r\n\r\n  startListening() {\r\n    throw new Error('`startListening` must be implemented by child classes');\r\n  }\r\n\r\n  stopListening() {\r\n    throw new Error('`stopListening` must be implemented by child classes');\r\n  }\r\n\r\n  destroy() {\r\n    this.stopListening();\r\n    this._clearProgress();\r\n  }\r\n\r\n  static getNewId() {\r\n    const timeSlice = new Date()\r\n      .getTime()\r\n      .toString()\r\n      .slice(-8);\r\n    const randomNumber = parseInt(Math.random() * 1000000000);\r\n\r\n    return timeSlice.toString() + randomNumber.toString();\r\n  }\r\n}\r\n\r\nclass DICOMFileLoadingListener extends BaseLoadingListener {\r\n  constructor(stack, options) {\r\n    super(stack, options);\r\n\r\n    this.imageLoadProgressEventHandler = this._imageLoadProgressEventHandler.bind(\r\n      this\r\n    );\r\n\r\n    this._dataSetUrl = this._getDataSetUrl(stack);\r\n    this._lastLoaded = 0;\r\n\r\n    // Check how many instances has already been download (cached)\r\n    this._checkCachedData();\r\n\r\n    this.startListening();\r\n  }\r\n\r\n  _checkCachedData() {\r\n    const dataSet = cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.get(\r\n      this._dataSetUrl\r\n    );\r\n\r\n    if (dataSet) {\r\n      const dataSetLength = dataSet.byteArray.length;\r\n\r\n      this._updateProgress({\r\n        percentComplete: 100,\r\n        loaded: dataSetLength,\r\n        total: dataSetLength,\r\n      });\r\n    }\r\n  }\r\n\r\n  _getImageLoadProgressEventName() {\r\n    // TODO: Add this event as a constant in Cornerstone\r\n    return 'cornerstoneimageloadprogress.' + this.id;\r\n  }\r\n\r\n  startListening() {\r\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\r\n\r\n    this.stopListening();\r\n\r\n    cornerstone.events.addEventListener(\r\n      imageLoadProgressEventName,\r\n      this.imageLoadProgressEventHandle\r\n    );\r\n  }\r\n\r\n  stopListening() {\r\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\r\n    cornerstone.events.removeEventListener(\r\n      imageLoadProgressEventName,\r\n      this.imageLoadProgressEventHandle\r\n    );\r\n  }\r\n\r\n  _imageLoadProgressEventHandler = e => {\r\n    const eventData = e.detail;\r\n    const dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);\r\n    const bytesDiff = eventData.loaded - this._lastLoaded;\r\n\r\n    if (!this._dataSetUrl === dataSetUrl) {\r\n      return;\r\n    }\r\n\r\n    // Add the bytes downloaded to the stats\r\n    this._addStatsData(bytesDiff);\r\n\r\n    // Update the download progress\r\n    this._updateProgress(eventData);\r\n\r\n    // Cache the last eventData.loaded value\r\n    this._lastLoaded = eventData.loaded;\r\n  };\r\n\r\n  _updateProgress(eventData) {\r\n    const progressId = this._getProgressId();\r\n    eventData = eventData || {};\r\n\r\n    const progressData = {\r\n      multiFrame: false,\r\n      percentComplete: eventData.percentComplete,\r\n      bytesLoaded: eventData.loaded,\r\n      bytesTotal: eventData.total,\r\n      bytesPerSecond: this.stats.speed,\r\n    };\r\n\r\n    this._setProgressData(progressId, progressData);\r\n  }\r\n\r\n  _convertImageIdToDataSetUrl(imageId) {\r\n    // Remove the prefix (\"dicomweb:\" or \"wadouri:\"\")\r\n    imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, '');\r\n\r\n    // Remove \"frame=999&\" from the imageId\r\n    imageId = imageId.replace(/frame=\\d+&?/i, '');\r\n\r\n    // Remove the last \"&\" like in \"http://...?foo=1&bar=2&\"\r\n    imageId = imageId.replace(/&$/, '');\r\n\r\n    return imageId;\r\n  }\r\n\r\n  _getDataSetUrl(stack) {\r\n    const imageId = stack.imageIds[0];\r\n    return this._convertImageIdToDataSetUrl(imageId);\r\n  }\r\n}\r\n\r\nconst StudyLoadingListenerEvents = {\r\n  OnProgress: 'StudyLoadingListenerEvents.OnProgress',\r\n};\r\n\r\nfunction promiseState(promise, callback) {\r\n  // Symbols and RegExps are never content-equal\r\n  var uniqueValue = window['Symbol'] ? Symbol('unique') : /unique/;\r\n\r\n  function notifyPendingOrResolved(value) {\r\n    if (value === uniqueValue) {\r\n      return callback('pending');\r\n    } else {\r\n      return callback('fulfilled');\r\n    }\r\n  }\r\n\r\n  function notifyRejected(reason) {\r\n    return callback('rejected');\r\n  }\r\n\r\n  var race = [promise, Promise.resolve(uniqueValue)];\r\n  Promise.race(race).then(notifyPendingOrResolved, notifyRejected);\r\n}\r\n\r\nclass StackLoadingListener extends BaseLoadingListener {\r\n  constructor(stack, options = {}) {\r\n    options.statsItemsLimit = 20;\r\n\r\n    super(stack, options);\r\n\r\n    this.imageLoadedEventHandler = this._imageLoadedEventHandler.bind(this);\r\n    this.imageCachePromiseRemovedEventHandler = this._imageCachePromiseRemovedEventHandler.bind(\r\n      this\r\n    );\r\n\r\n    this.imageDataMap = this._convertImageIdsArrayToMap(stack.imageIds);\r\n    this.framesStatus = this._createArray(stack.imageIds.length, false);\r\n    this.loadedCount = 0;\r\n\r\n    // Check how many instances has already been download (cached)\r\n    this._debouncedSetProgressData = debounce((...args) => {\r\n      this._setProgressData(...args);\r\n\r\n      /** After checking cache, continue prefetch */\r\n      const studyPrefetcher = StudyPrefetcher.getInstance();\r\n      studyPrefetcher.prefetch(studyPrefetcher.getElement());\r\n    }, 300);\r\n    const debounced = true;\r\n    this._checkCachedData(debounced);\r\n\r\n    this.startListening();\r\n  }\r\n\r\n  _convertImageIdsArrayToMap(imageIds) {\r\n    const imageIdsMap = new Map();\r\n\r\n    for (let i = 0; i < imageIds.length; i++) {\r\n      imageIdsMap.set(imageIds[i], {\r\n        index: i,\r\n        loaded: false,\r\n      });\r\n    }\r\n\r\n    return imageIdsMap;\r\n  }\r\n\r\n  _createArray(length, defaultValue) {\r\n    // `new Array(length)` is an anti-pattern in javascript because its\r\n    // funny API. Otherwise I would go for `new Array(length).fill(false)`\r\n    const array = [];\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      array[i] = defaultValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Check if image id is cached in cornerstone.\r\n   *\r\n   * @param {string} imageId\r\n   * @returns\r\n   */\r\n  isImageCached(imageId) {\r\n    const image = cornerstone.imageCache.imageCache[imageId];\r\n    return image && image.sizeInBytes;\r\n  }\r\n\r\n  _checkCachedData(debounced = false) {\r\n    const imageIds = this.stack.imageIds;\r\n\r\n    for (let i = 0; i < imageIds.length; i++) {\r\n      const imageId = imageIds[i];\r\n\r\n      const imageObject = cornerstone.imageCache.getImageLoadObject(imageId);\r\n\r\n      if (this.isImageCached(imageId)) {\r\n        this._updateFrameStatus(imageId, true, debounced);\r\n      }\r\n\r\n      if (imageObject && imageObject.promise) {\r\n        promiseState(imageObject.promise, state => {\r\n          if (state === 'fulfilled') {\r\n            this._updateFrameStatus(imageId, true, debounced);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  _getImageLoadedEventName() {\r\n    return `${cornerstone.EVENTS.IMAGE_LOADED}.${this.id}`;\r\n  }\r\n\r\n  _getImageCachePromiseRemoveEventName() {\r\n    return `${cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED}.${this.id}`;\r\n  }\r\n\r\n  _imageLoadedEventHandler(e) {\r\n    this._updateFrameStatus(e.detail.image.imageId, true);\r\n  }\r\n\r\n  _imageCachePromiseRemovedEventHandler(e) {\r\n    this._updateFrameStatus(e.detail.imageId, false);\r\n  }\r\n\r\n  startListening() {\r\n    const imageLoadedEventName = this._getImageLoadedEventName();\r\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\r\n\r\n    this.stopListening();\r\n\r\n    cornerstone.events.addEventListener(\r\n      imageLoadedEventName,\r\n      this.imageLoadedEventHandler\r\n    );\r\n    cornerstone.events.addEventListener(\r\n      imageCachePromiseRemovedEventName,\r\n      this.imageCachePromiseRemovedEventHandler\r\n    );\r\n  }\r\n\r\n  stopListening() {\r\n    const imageLoadedEventName = this._getImageLoadedEventName();\r\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\r\n\r\n    cornerstone.events.removeEventListener(\r\n      imageLoadedEventName,\r\n      this.imageLoadedEventHandler\r\n    );\r\n    cornerstone.events.removeEventListener(\r\n      imageCachePromiseRemovedEventName,\r\n      this.imageCachePromiseRemovedEventHandler\r\n    );\r\n  }\r\n\r\n  _updateFrameStatus(imageId, loaded, debounced) {\r\n    const imageData = this.imageDataMap.get(imageId);\r\n\r\n    if (!imageData || imageData.loaded === loaded) {\r\n      return;\r\n    }\r\n\r\n    // Add one more frame to the stats\r\n    if (loaded) {\r\n      this._addStatsData(1);\r\n    }\r\n\r\n    imageData.loaded = loaded;\r\n    this.framesStatus[imageData.index] = loaded;\r\n    this.loadedCount += loaded ? 1 : -1;\r\n    this._updateProgress(debounced);\r\n  }\r\n\r\n  _setProgressData(progressId, progressData) {\r\n    // TODO: This method (and _clearProgressById) need to access\r\n    // the Redux store and should therefore be provided from the\r\n    // application. I've added a workaround to pass this in through\r\n    // the 'options' variable on instantiation, but this is really ugly.\r\n    // We could consider making the StudyLoadingListener a higher-order\r\n    // component which would set this stuff itself.\r\n    throw new Error(\r\n      \"The _setProgressData function must be provided in StudyLoadingListener's options\"\r\n    );\r\n  }\r\n\r\n  _clearProgressById(progressId) {\r\n    throw new Error(\r\n      \"The _clearProgressById function must be provided in StudyLoadingListener's options\"\r\n    );\r\n  }\r\n\r\n  _updateProgress(debounced) {\r\n    const totalFramesCount = this.stack.imageIds.length;\r\n    const loadedFramesCount = this.loadedCount;\r\n    const loadingFramesCount = totalFramesCount - loadedFramesCount;\r\n    const percentComplete = Math.ceil(\r\n      (loadedFramesCount / totalFramesCount) * 100\r\n    );\r\n    const progressId = this._getProgressId();\r\n    const progressData = {\r\n      multiFrame: true,\r\n      totalFramesCount,\r\n      loadedFramesCount,\r\n      loadingFramesCount,\r\n      percentComplete,\r\n      framesPerSecond: this.stats.speed,\r\n      framesStatus: this.framesStatus,\r\n    };\r\n\r\n    if (debounced) {\r\n      this._debouncedSetProgressData(progressId, progressData);\r\n      return;\r\n    }\r\n\r\n    this._setProgressData(progressId, progressData);\r\n  }\r\n\r\n  _logProgress() {\r\n    const totalFramesCount = this.stack.imageIds.length;\r\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\r\n    let progressBar = '[';\r\n\r\n    for (let i = 0; i < totalFramesCount; i++) {\r\n      const ch = this.framesStatus[i] ? '|' : '.';\r\n      progressBar += `${ch}`;\r\n    }\r\n\r\n    progressBar += ']';\r\n    console.info(`${displaySetInstanceUID}: ${progressBar}`);\r\n  }\r\n}\r\n\r\nclass StudyLoadingListener {\r\n  static events = StudyLoadingListenerEvents;\r\n\r\n  constructor(options) {\r\n    this.listeners = {};\r\n    this.options = options;\r\n  }\r\n\r\n  addStack(stack, stackMetaData) {\r\n    // TODO: Make this work for plugins\r\n    if (!stack) {\r\n      //console.log('Skipping adding stack to StudyLoadingListener');\r\n      return;\r\n    }\r\n\r\n    const displaySetInstanceUID = stack.displaySetInstanceUID;\r\n\r\n    if (!this.listeners[displaySetInstanceUID]) {\r\n      const listener = this._createListener(stack, stackMetaData);\r\n      if (listener) {\r\n        this.listeners[displaySetInstanceUID] = listener;\r\n      }\r\n    }\r\n  }\r\n\r\n  addStudy(study) {\r\n    study.displaySets.forEach(displaySet => {\r\n      const stack = StackManager.findOrCreateStack(study, displaySet);\r\n\r\n      // TODO: Make this work for plugins\r\n      if (!stack) {\r\n        //console.warn('Skipping adding displaySet to StudyLoadingListener');\r\n        //console.warn(displaySet);\r\n        return;\r\n      }\r\n\r\n      this.addStack(stack, {\r\n        isMultiFrame: displaySet.isMultiFrame,\r\n      });\r\n    });\r\n  }\r\n\r\n  addStudies(studies) {\r\n    if (!studies || !studies.length) {\r\n      return;\r\n    }\r\n\r\n    studies.forEach(study => this.addStudy(study));\r\n  }\r\n\r\n  clear() {\r\n    const displaySetInstanceUIDs = Object.keys(this.listeners);\r\n    const length = displaySetInstanceUIDs.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const displaySetInstanceUID = displaySetInstanceUIDs[i];\r\n      const displaySet = this.listeners[displaySetInstanceUID];\r\n\r\n      displaySet.destroy();\r\n    }\r\n\r\n    this.listeners = {};\r\n  }\r\n\r\n  _createListener(stack, stackMetaData) {\r\n    const schema = this._getSchema(stack);\r\n\r\n    // A StackLoadingListener can be created if it's wadors or not a multiframe\r\n    // wadouri instance (single file) that means \"N\" files will have to be\r\n    // downloaded where \"N\" is the number of frames. DICOMFileLoadingListener\r\n    // is created only if it's a single DICOM file and there's no way to know\r\n    // how many frames has already been loaded (bytes/s instead of frames/s).\r\n    if (schema === 'wadors' || !stackMetaData.isMultiFrame) {\r\n      return new StackLoadingListener(stack, this.options);\r\n    } else {\r\n      return new DICOMFileLoadingListener(stack, this.options);\r\n    }\r\n  }\r\n\r\n  _getSchema(stack) {\r\n    const imageId = stack.imageIds[0];\r\n    if (!imageId) {\r\n      return;\r\n    }\r\n    const colonIndex = imageId.indexOf(':');\r\n    return imageId.substring(0, colonIndex);\r\n  }\r\n\r\n  static getInstance(options) {\r\n    /**\r\n     * TODO: Use a different alternative without the use of events.\r\n     */\r\n    const DEFAULT_OPTIONS = {\r\n      _setProgressData: (progressId, progressData) => {\r\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\r\n          detail: { progressId, progressData },\r\n        });\r\n        document.dispatchEvent(event);\r\n      },\r\n      _clearProgressById: progressId => {\r\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\r\n          detail: { progressId, percentComplete: 0 },\r\n        });\r\n        document.dispatchEvent(event);\r\n      },\r\n    };\r\n\r\n    if (!StudyLoadingListener._instance) {\r\n      StudyLoadingListener._instance = new StudyLoadingListener(\r\n        options || DEFAULT_OPTIONS\r\n      );\r\n    }\r\n\r\n    return StudyLoadingListener._instance;\r\n  }\r\n}\r\n\r\nexport { StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener };\r\n","const _subscriptions = Symbol('subscriptions');\r\nconst _lastSubscriptionId = Symbol('lastSubscriptionId');\r\n\r\n/**\r\n * Class to implement publish/subscribe pattern\r\n *\r\n * @class\r\n * @classdesc Pub/sub mechanism\r\n */\r\nexport default class PubSub {\r\n  constructor() {\r\n    this[_subscriptions] = {};\r\n    this[_lastSubscriptionId] = 0;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to event\r\n   *\r\n   * @param {string} eventName Event name\r\n   * @param {Function} callback Callback function\r\n   * @returns {void}\r\n   */\r\n  subscribe(eventName, callback) {\r\n    if (eventName === undefined) {\r\n      throw new Error('Event name is required');\r\n    }\r\n\r\n    if (typeof callback !== 'function') {\r\n      throw new Error('Callback must be a function');\r\n    }\r\n\r\n    if (!this[_subscriptions].hasOwnProperty(eventName)) {\r\n      this[_subscriptions][eventName] = {};\r\n    }\r\n\r\n    const subscriptionId = `sub${this[_lastSubscriptionId]++}`;\r\n    this[_subscriptions][eventName][subscriptionId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Removes a subscription\r\n   *\r\n   * @param {string} eventName Event name\r\n   * @param {Function} [callback] Callback function\r\n   * @returns {void}\r\n   */\r\n  unsubscribe(eventName, callback) {\r\n    const callbacks = this[_subscriptions][eventName] || {};\r\n    for (let subscriptionId in callbacks) {\r\n      if (!callback) {\r\n        delete callbacks[subscriptionId];\r\n      } else if (callbacks[subscriptionId] === callback) {\r\n        delete callbacks[subscriptionId];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Publish event to all subscriptions\r\n   *\r\n   * @param {String} eventName Event name\r\n   * @param {any} [payload] Data that will be published\r\n   * @returns {void}\r\n   */\r\n  publish(eventName, ...payload) {\r\n    if (eventName === undefined) {\r\n      throw new Error('Event name is required');\r\n    }\r\n\r\n    const callbacks = this[_subscriptions][eventName] || {};\r\n    for (let subscriptionId in callbacks) {\r\n      callbacks[subscriptionId](...payload);\r\n    }\r\n  }\r\n}\r\n","import PubSub from './PubSub';\r\n\r\n/** Log Events */\r\nexport const LogEvents = Object.freeze({\r\n  OnLog: 'onLog',\r\n});\r\n\r\n/**\r\n * Log manager that implements pub/sub.\r\n * This manager can be used to send logs across different packages\r\n * using previously registered events.\r\n */\r\nclass LogManager extends PubSub {\r\n  EVENTS = LogEvents;\r\n}\r\n\r\n/** Singleton */\r\nexport default new LogManager();\r\n","import { studyMetadataManager } from '../utils';\r\n\r\nimport OHIFError from './OHIFError';\r\nimport { StudyMetadata } from './metadata/StudyMetadata';\r\nimport { StudyMetadataSource } from './StudyMetadataSource.js';\r\nimport { retrieveStudyMetadata } from '../studies/retrieveStudyMetadata.js';\r\n\r\nexport class OHIFStudyMetadataSource extends StudyMetadataSource {\r\n  /**\r\n   * Get study metadata for a study with given study InstanceUID\r\n   * @param server\r\n   * @param  {String} studyInstanceUID Study InstanceUID\r\n   * @return {Promise} A Promise object\r\n   */\r\n  getByInstanceUID(server, studyInstanceUID) {\r\n    return retrieveStudyMetadata(server, studyInstanceUID);\r\n  }\r\n\r\n  /**\r\n   * Load study info (OHIF.viewer.Studies) and study metadata (OHIF.viewer.StudyMetadataList) for a given study.\r\n   * @param {StudyMetadata} study StudyMetadata object.\r\n   */\r\n  loadStudy(study) {\r\n    if (!(study instanceof StudyMetadata)) {\r\n      throw new OHIFError(\r\n        'OHIFStudyMetadataSource::loadStudy study is not an instance of StudyMetadata'\r\n      );\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const studyInstanceUID = study.getStudyInstanceUID();\r\n\r\n      if (study instanceof StudyMetadata) {\r\n        const alreadyLoaded = OHIF.viewer.Studies.findBy({\r\n          StudyInstanceUID: studyInstanceUID,\r\n        });\r\n\r\n        if (!alreadyLoaded) {\r\n          OHIFStudyMetadataSource._updateStudyCollections(study);\r\n        }\r\n\r\n        resolve(study);\r\n        return;\r\n      }\r\n\r\n      this.getByInstanceUID(studyInstanceUID)\r\n        .then(studyInfo => {\r\n          // Create study metadata object\r\n          const studyMetadata = new StudyMetadata(\r\n            studyInfo,\r\n            studyInfo.StudyInstanceUID\r\n          );\r\n\r\n          // Get Study display sets\r\n          const displaySets = studyMetadata.createDisplaySets();\r\n\r\n          OHIFStudyMetadataSource._updateStudyCollections(studyMetadata);\r\n          resolve(studyMetadata);\r\n        })\r\n        .catch(reject);\r\n    });\r\n  }\r\n\r\n  // Static methods\r\n  static _updateStudyCollections(studyMetadata) {\r\n    const studyInfo = studyMetadata.getData();\r\n\r\n    // Set some studyInfo properties\r\n    studyInfo.selected = true;\r\n    studyInfo.displaySets = studyMetadata.getDisplaySets();\r\n    studyMetadataManager.add(studyMetadata);\r\n  }\r\n}\r\n","import { InstanceMetadata, SeriesMetadata, StudyMetadata } from './metadata';\r\n\r\nimport CommandsManager from './CommandsManager.js';\r\nimport { DICOMFileLoadingListener } from './StudyLoadingListener';\r\nimport HotkeysManager from './HotkeysManager.js';\r\nimport ImageSet from './ImageSet';\r\nimport LogManager from './LogManager';\r\nimport PubSub from './PubSub';\r\nimport MetadataProvider from './MetadataProvider';\r\nimport OHIFError from './OHIFError.js';\r\nimport { OHIFStudyMetadataSource } from './OHIFStudyMetadataSource';\r\nimport { StackLoadingListener } from './StudyLoadingListener';\r\nimport { StudyLoadingListener } from './StudyLoadingListener';\r\nimport { StudyMetadataSource } from './StudyMetadataSource';\r\nimport { StudyPrefetcher } from './StudyPrefetcher';\r\nimport { TypeSafeCollection } from './TypeSafeCollection';\r\n\r\nexport {\r\n  OHIFStudyMetadataSource,\r\n  MetadataProvider,\r\n  CommandsManager,\r\n  HotkeysManager,\r\n  ImageSet,\r\n  StudyPrefetcher,\r\n  StudyLoadingListener,\r\n  StackLoadingListener,\r\n  DICOMFileLoadingListener,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  TypeSafeCollection,\r\n  OHIFError,\r\n  StudyMetadataSource,\r\n};\r\n\r\nconst classes = {\r\n  OHIFStudyMetadataSource,\r\n  MetadataProvider,\r\n  CommandsManager,\r\n  HotkeysManager,\r\n  LogManager,\r\n  ImageSet,\r\n  PubSub,\r\n  StudyPrefetcher,\r\n  StudyLoadingListener,\r\n  StackLoadingListener,\r\n  DICOMFileLoadingListener,\r\n  StudyMetadata,\r\n  SeriesMetadata,\r\n  InstanceMetadata,\r\n  TypeSafeCollection,\r\n  OHIFError,\r\n  StudyMetadataSource,\r\n};\r\n\r\nexport default classes;\r\n","import { sopClassDictionary } from './sopClassDictionary';\r\n\r\nconst imagesTypes = [\r\n  sopClassDictionary.ComputedRadiographyImageStorage,\r\n  sopClassDictionary.DigitalXRayImageStorageForPresentation,\r\n  sopClassDictionary.DigitalXRayImageStorageForProcessing,\r\n  sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation,\r\n  sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing,\r\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation,\r\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing,\r\n  sopClassDictionary.CTImageStorage,\r\n  sopClassDictionary.EnhancedCTImageStorage,\r\n  sopClassDictionary.LegacyConvertedEnhancedCTImageStorage,\r\n  sopClassDictionary.UltrasoundMultiframeImageStorage,\r\n  sopClassDictionary.MRImageStorage,\r\n  sopClassDictionary.EnhancedMRImageStorage,\r\n  sopClassDictionary.EnhancedMRColorImageStorage,\r\n  sopClassDictionary.LegacyConvertedEnhancedMRImageStorage,\r\n  sopClassDictionary.UltrasoundImageStorage,\r\n  sopClassDictionary.SecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage,\r\n  sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage,\r\n  sopClassDictionary.XRayAngiographicImageStorage,\r\n  sopClassDictionary.EnhancedXAImageStorage,\r\n  sopClassDictionary.XRayRadiofluoroscopicImageStorage,\r\n  sopClassDictionary.EnhancedXRFImageStorage,\r\n  sopClassDictionary.XRay3DAngiographicImageStorage,\r\n  sopClassDictionary.XRay3DCraniofacialImageStorage,\r\n  sopClassDictionary.BreastTomosynthesisImageStorage,\r\n  sopClassDictionary.BreastProjectionXRayImageStorageForPresentation,\r\n  sopClassDictionary.BreastProjectionXRayImageStorageForProcessing,\r\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation,\r\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing,\r\n  sopClassDictionary.NuclearMedicineImageStorage,\r\n  sopClassDictionary.VLEndoscopicImageStorage,\r\n  sopClassDictionary.VideoEndoscopicImageStorage,\r\n  sopClassDictionary.VLMicroscopicImageStorage,\r\n  sopClassDictionary.VideoMicroscopicImageStorage,\r\n  sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage,\r\n  sopClassDictionary.VLPhotographicImageStorage,\r\n  sopClassDictionary.VideoPhotographicImageStorage,\r\n  sopClassDictionary.OphthalmicPhotography8BitImageStorage,\r\n  sopClassDictionary.OphthalmicPhotography16BitImageStorage,\r\n  sopClassDictionary.OphthalmicTomographyImageStorage,\r\n  sopClassDictionary.VLWholeSlideMicroscopyImageStorage,\r\n  sopClassDictionary.PositronEmissionTomographyImageStorage,\r\n  sopClassDictionary.EnhancedPETImageStorage,\r\n  sopClassDictionary.LegacyConvertedEnhancedPETImageStorage,\r\n  sopClassDictionary.RTImageStorage,\r\n];\r\n\r\n/**\r\n * Checks whether dicom files with specified SOP Class UID have image data\r\n * @param {string} SOPClassUID - SOP Class UID to be checked\r\n * @returns {boolean} - true if it has image data\r\n */\r\nexport const isImage = SOPClassUID => {\r\n  if (!SOPClassUID) return false;\r\n  return imagesTypes.indexOf(SOPClassUID) !== -1;\r\n};\r\n","const LOW_PRIORITY_MODALITIES = Object.freeze([\r\n  'SEG',\r\n  'DOC',\r\n  'RTSTRUCT',\r\n  'SR',\r\n  'KO',\r\n  'PR',\r\n]);\r\n\r\nexport default function isLowPriorityModality(Modality) {\r\n  return LOW_PRIORITY_MODALITIES.includes(Modality);\r\n}\r\n","// Return the array sorting function for its object's properties\r\nexport default function sortBy() {\r\n  var fields = [].slice.call(arguments),\r\n    n_fields = fields.length;\r\n\r\n  return function(A, B) {\r\n    var a, b, field, key, reverse, result, i;\r\n\r\n    for (i = 0; i < n_fields; i++) {\r\n      result = 0;\r\n      field = fields[i];\r\n\r\n      key = typeof field === 'string' ? field : field.name;\r\n\r\n      a = A[key];\r\n      b = B[key];\r\n\r\n      if (typeof field.primer !== 'undefined') {\r\n        a = field.primer(a);\r\n        b = field.primer(b);\r\n      }\r\n\r\n      reverse = field.reverse ? -1 : 1;\r\n\r\n      if (a < b) {\r\n        result = reverse * -1;\r\n      }\r\n\r\n      if (a > b) {\r\n        result = reverse * 1;\r\n      }\r\n\r\n      if (result !== 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n","import OHIFError from '../classes/OHIFError.js';\r\nimport getImageId from './getImageId';\r\nimport metadataProvider from '../classes/MetadataProvider.js';\r\n\r\nlet stackMap = {};\r\nlet configuration = {};\r\nconst stackUpdatedCallbacks = [];\r\n\r\n/**\r\n * Loop through the current series and add metadata to the\r\n * Cornerstone meta data provider. This will be used to fill information\r\n * into the viewport overlays, and to calculate reference lines and orientation markers\r\n * @param  {Object} stackMap              stackMap object\r\n * @param  {Object} study                 Study object\r\n * @param  {Object} displaySet            The set of images to make the stack from\r\n * @return {Array}                        Array with image IDs\r\n */\r\nfunction createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks) {\r\n  const images = displaySet.images;\r\n  if (!images) {\r\n    return;\r\n  }\r\n\r\n  const numImages = images.length;\r\n  const imageIds = [];\r\n  let imageId;\r\n\r\n  images.forEach((instance, imageIndex) => {\r\n    const image = instance.getData();\r\n    const metaData = {\r\n      instance: image, // in this context, instance will be the data of the InstanceMetadata object...\r\n      series: displaySet, // TODO: Check this\r\n      study,\r\n      numImages,\r\n      imageIndex: imageIndex + 1,\r\n    };\r\n\r\n    const naturalizedInstance = image.metadata;\r\n    const NumberOfFrames = naturalizedInstance.NumberOfFrames;\r\n\r\n    if (NumberOfFrames > 1) {\r\n      for (let i = 0; i < NumberOfFrames; i++) {\r\n        metaData.frameNumber = i;\r\n        imageId = getImageId(image, i);\r\n        imageIds.push(imageId);\r\n\r\n        const {\r\n          StudyInstanceUID,\r\n          SeriesInstanceUID,\r\n          SOPInstanceUID,\r\n        } = instance.getData().metadata;\r\n\r\n        metadataProvider.addImageIdToUIDs(imageId, {\r\n          StudyInstanceUID,\r\n          SeriesInstanceUID,\r\n          SOPInstanceUID,\r\n        });\r\n      }\r\n    } else {\r\n      metaData.frameNumber = 1;\r\n      imageId = getImageId(image);\r\n      imageIds.push(imageId);\r\n\r\n      const {\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        SOPInstanceUID,\r\n      } = naturalizedInstance;\r\n\r\n      metadataProvider.addImageIdToUIDs(imageId, {\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        SOPInstanceUID,\r\n      });\r\n    }\r\n  });\r\n\r\n  const stack = {\r\n    StudyInstanceUID: study.StudyInstanceUID,\r\n    displaySetInstanceUID: displaySet.displaySetInstanceUID,\r\n    imageIds,\r\n    frameRate: displaySet.frameRate,\r\n    isClip: displaySet.isClip,\r\n  };\r\n\r\n  stackMap[displaySet.displaySetInstanceUID] = stack;\r\n\r\n  return stack;\r\n}\r\n\r\nconfiguration = {\r\n  createAndAddStack,\r\n};\r\n\r\n/**\r\n * This object contains all the functions needed for interacting with the stack manager.\r\n * Generally, findStack is the only function used. If you want to know when new stacks\r\n * come in, you can register a callback with addStackUpdatedCallback.\r\n */\r\nconst StackManager = {\r\n  /**\r\n   * Removes all current stacks\r\n   */\r\n  clearStacks() {\r\n    stackMap = {};\r\n  },\r\n  /**\r\n   * Create a stack from an image set, as well as add in the metadata on a per image bases.\r\n   * @param study The study who's metadata will be added\r\n   * @param displaySet The set of images to make the stack from\r\n   * @return {Array} Array with image IDs\r\n   */\r\n  makeAndAddStack(study, displaySet) {\r\n    return configuration.createAndAddStack(\r\n      stackMap,\r\n      study,\r\n      displaySet,\r\n      stackUpdatedCallbacks\r\n    );\r\n  },\r\n  /**\r\n   * Find a stack from the currently created stacks.\r\n   * @param displaySetInstanceUID The UID of the stack to find.\r\n   * @returns {*} undefined if not found, otherwise the stack object is returned.\r\n   */\r\n  findStack(displaySetInstanceUID) {\r\n    return stackMap[displaySetInstanceUID];\r\n  },\r\n  /**\r\n   * Find a stack or reate one if it has not been created yet\r\n   * @param study The study who's metadata will be added\r\n   * @param displaySet The set of images to make the stack from\r\n   * @return {Array} Array with image IDs\r\n   */\r\n  findOrCreateStack(study, displaySet) {\r\n    let stack = this.findStack(displaySet.displaySetInstanceUID);\r\n\r\n    if (!stack || !stack.imageIds) {\r\n      stack = this.makeAndAddStack(study, displaySet);\r\n    }\r\n\r\n    return stack;\r\n  },\r\n  /**\r\n   * Gets the underlying map of displaySetInstanceUID to stack object.\r\n   * WARNING: Do not change this object. It directly affects the manager.\r\n   * @returns {{}} map of displaySetInstanceUID -> stack.\r\n   */\r\n  getAllStacks() {\r\n    return stackMap;\r\n  },\r\n  /**\r\n   * Adds in a callback to be called on a stack being added / updated.\r\n   * @param callback must accept at minimum one argument,\r\n   * which is the stack that was added / updated.\r\n   */\r\n  addStackUpdatedCallback(callback) {\r\n    if (typeof callback !== 'function') {\r\n      throw new OHIFError('callback must be provided as a function');\r\n    }\r\n    stackUpdatedCallbacks.push(callback);\r\n  },\r\n  /**\r\n   * Return configuration\r\n   */\r\n  getConfiguration() {\r\n    return configuration;\r\n  },\r\n  /**\r\n   * Set configuration, in order to provide compatibility\r\n   * with other systems by overriding this functions\r\n   * @param {Object} config object with functions to be overrided\r\n   *\r\n   * For now, only makeAndAddStack can be overrided\r\n   */\r\n  setConfiguration(config) {\r\n    configuration = config;\r\n  },\r\n};\r\n\r\nexport { StackManager };\r\nexport default StackManager;\r\n","import guid from '../utils/guid';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst PROPERTY_SEPARATOR = '.';\r\nconst ORDER_ASC = 'asc';\r\nconst ORDER_DESC = 'desc';\r\nconst MIN_COUNT = 0x00000000;\r\nconst MAX_COUNT = 0x7fffffff;\r\n\r\n/**\r\n * Class Definition\r\n */\r\nexport class TypeSafeCollection {\r\n  constructor() {\r\n    this._operationCount = MIN_COUNT;\r\n    this._elementList = [];\r\n    this._handlers = Object.create(null);\r\n  }\r\n\r\n  /**\r\n   * Private Methods\r\n   */\r\n\r\n  _invalidate() {\r\n    let count = this._operationCount;\r\n    this._operationCount = count < MAX_COUNT ? count + 1 : MIN_COUNT;\r\n  }\r\n\r\n  _elements(silent) {\r\n    silent === true || this._operationCount;\r\n    return this._elementList;\r\n  }\r\n\r\n  _elementWithPayload(payload, silent) {\r\n    return this._elements(silent).find(item => item.payload === payload);\r\n  }\r\n\r\n  _elementWithId(id, silent) {\r\n    return this._elements(silent).find(item => item.id === id);\r\n  }\r\n\r\n  _trigger(event, data) {\r\n    let handlers = this._handlers;\r\n    if (event in handlers) {\r\n      handlers = handlers[event];\r\n      if (!(handlers instanceof Array)) {\r\n        return;\r\n      }\r\n      for (let i = 0, limit = handlers.length; i < limit; ++i) {\r\n        let handler = handlers[i];\r\n        if (_isFunction(handler)) {\r\n          handler.call(null, data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Public Methods\r\n   */\r\n\r\n  onInsert(callback) {\r\n    if (_isFunction(callback)) {\r\n      let handlers = this._handlers.insert;\r\n      if (!(handlers instanceof Array)) {\r\n        handlers = [];\r\n        this._handlers.insert = handlers;\r\n      }\r\n      handlers.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the payload associated with the given ID to be the new supplied payload.\r\n   * @param {string} id The ID of the entry that will be updated.\r\n   * @param {any} payload The element that will replace the previous payload.\r\n   * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.\r\n   */\r\n  updateById(id, payload) {\r\n    let result = false,\r\n      found = this._elementWithPayload(payload, true);\r\n    if (found) {\r\n      // nothing to do since the element is already in the collection...\r\n      if (found.id === id) {\r\n        // set result to true since the ids match...\r\n        result = true;\r\n        this._invalidate();\r\n      }\r\n    } else {\r\n      found = this._elementWithId(id, true);\r\n      if (found) {\r\n        found.payload = payload;\r\n        result = true;\r\n        this._invalidate();\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Signal that the given element has been changed by notifying reactive data-source observers.\r\n   * This method is basically a means to invalidate the inernal reactive data-source.\r\n   * @param {any} payload The element that has been altered.\r\n   * @returns {boolean} Returns true if the element is present in the collection, false otherwise.\r\n   */\r\n  update(payload) {\r\n    let result = false,\r\n      found = this._elementWithPayload(payload, true);\r\n    if (found) {\r\n      // nothing to do since the element is already in the collection...\r\n      result = true;\r\n      this._invalidate();\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.\r\n   * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!\r\n   * @param {any} payload The element to be stored.\r\n   * @returns {string} The ID of the inserted element or null if the element already exists...\r\n   */\r\n  insert(payload) {\r\n    let id = null,\r\n      found = this._elementWithPayload(payload, true);\r\n    if (!found) {\r\n      id = guid();\r\n      this._elements(true).push({ id, payload });\r\n      this._invalidate();\r\n      this._trigger('insert', { id, data: payload });\r\n    }\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Remove all elements from the collection.\r\n   * @returns {void} No meaningful value is returned.\r\n   */\r\n  removeAll() {\r\n    let all = this._elements(true),\r\n      length = all.length;\r\n    for (let i = length - 1; i >= 0; i--) {\r\n      let item = all[i];\r\n      delete item.id;\r\n      delete item.payload;\r\n      all[i] = null;\r\n    }\r\n    all.splice(0, length);\r\n    this._invalidate();\r\n  }\r\n\r\n  /**\r\n   * Remove elements from the collection that match the criteria given in the property map.\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @returns {Array} A list with all removed elements.\r\n   */\r\n  remove(propertyMap) {\r\n    let found = this.findAllEntriesBy(propertyMap),\r\n      foundCount = found.length,\r\n      removed = [];\r\n    if (foundCount > 0) {\r\n      const all = this._elements(true);\r\n      for (let i = foundCount - 1; i >= 0; i--) {\r\n        let item = found[i];\r\n        all.splice(item[2], 1);\r\n        removed.push(item[0]);\r\n      }\r\n      this._invalidate();\r\n    }\r\n    return removed;\r\n  }\r\n\r\n  /**\r\n   * Provides the ID of the given element inside the collection.\r\n   * @param {any} payload The element being searched for.\r\n   * @returns {string} The ID of the given element or undefined if the element is not present.\r\n   */\r\n  getElementId(payload) {\r\n    let found = this._elementWithPayload(payload);\r\n    return found && found.id;\r\n  }\r\n\r\n  /**\r\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\r\n   * @param {any} payload The element being searched for.\r\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\r\n   */\r\n  findById(id) {\r\n    let found = this._elementWithId(id);\r\n    return found && found.payload;\r\n  }\r\n\r\n  /**\r\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\r\n   * @param {any} payload The element being searched for.\r\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\r\n   */\r\n  indexOfElement(payload) {\r\n    return this._elements().indexOf(this._elementWithPayload(payload, true));\r\n  }\r\n\r\n  /**\r\n   * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.\r\n   * @param {string} id The index of the element.\r\n   * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.\r\n   */\r\n  indexOfId(id) {\r\n    return this._elements().indexOf(this._elementWithId(id, true));\r\n  }\r\n\r\n  /**\r\n   * Provides a list-like approach to the collection returning an element by index.\r\n   * @param {number} index The index of the element.\r\n   * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.\r\n   */\r\n  getElementByIndex(index) {\r\n    let found = this._elements()[index >= 0 ? index : -1];\r\n    return found && found.payload;\r\n  }\r\n\r\n  /**\r\n   * Find an element by a criteria defined by the given callback function.\r\n   * Attention!!! The reactive source will not be notified if no valid callback is supplied...\r\n   * @param {function} callback A callback function which will define the search criteria. The callback\r\n   * function will be passed the collection element, its ID and its index in this very order. The callback\r\n   * shall return true when its criterea has been fulfilled.\r\n   * @returns {any} The matched element or undefined if not match was found.\r\n   */\r\n  find(callback) {\r\n    let found;\r\n    if (_isFunction(callback)) {\r\n      found = this._elements().find((item, index) => {\r\n        return callback.call(this, item.payload, item.id, index);\r\n      });\r\n    }\r\n    return found && found.payload;\r\n  }\r\n\r\n  /**\r\n   * Find the first element that strictly matches the specified property map.\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\r\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\r\n   * but is not valid, an exception will be thrown.\r\n   * @returns {Any} The matched element or undefined if not match was found.\r\n   */\r\n  findBy(propertyMap, options) {\r\n    let found;\r\n    if (_isObject(options)) {\r\n      // if the \"options\" argument is provided and is a valid object,\r\n      // it must be applied to the dataset before search...\r\n      const all = this.all(options);\r\n      if (all.length > 0) {\r\n        if (_isObject(propertyMap)) {\r\n          found = all.find(item =>\r\n            _compareToPropertyMapStrict(propertyMap, item)\r\n          );\r\n        } else {\r\n          found = all[0]; // simply extract the first element...\r\n        }\r\n      }\r\n    } else if (_isObject(propertyMap)) {\r\n      found = this._elements().find(item =>\r\n        _compareToPropertyMapStrict(propertyMap, item.payload)\r\n      );\r\n      if (found) {\r\n        found = found.payload;\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find all elements that strictly match the specified property map.\r\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @returns {Array} An array of entries of all elements that match the given criteria. Each set in\r\n   * in the array has the following format: [ elementData, elementId, elementIndex ].\r\n   */\r\n  findAllEntriesBy(propertyMap) {\r\n    const found = [];\r\n    if (_isObject(propertyMap)) {\r\n      this._elements().forEach((item, index) => {\r\n        if (_compareToPropertyMapStrict(propertyMap, item.payload)) {\r\n          // Match! Add it to the found list...\r\n          found.push([item.payload, item.id, index]);\r\n        }\r\n      });\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Find all elements that match a specified property map.\r\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\r\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\r\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\r\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\r\n   * but is not valid, an exception will be thrown.\r\n   * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.\r\n   */\r\n  findAllBy(propertyMap, options) {\r\n    const found = this.findAllEntriesBy(propertyMap).map(item => item[0]); // Only payload is relevant...\r\n    if (_isObject(options)) {\r\n      if ('sort' in options) {\r\n        _sortListBy(found, options.sort);\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Executes the supplied callback function for each element of the collection.\r\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\r\n   * @param {function} callback The callback function to be executed. The callback is passed the element,\r\n   * its ID and its index in this very order.\r\n   * @returns {void} Nothing is returned.\r\n   */\r\n  forEach(callback) {\r\n    if (_isFunction(callback)) {\r\n      this._elements().forEach((item, index) => {\r\n        callback.call(this, item.payload, item.id, index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Count the number of elements currently in the collection.\r\n   * @returns {number} The current number of elements in the collection.\r\n   */\r\n  count() {\r\n    return this._elements().length;\r\n  }\r\n\r\n  /**\r\n   * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.\r\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\r\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\r\n   * but is not valid, an exception will be thrown.\r\n   * @returns {Array} An array with all elements stored in the collection.\r\n   */\r\n  all(options) {\r\n    let list = this._elements().map(item => item.payload);\r\n    if (_isObject(options)) {\r\n      if ('sort' in options) {\r\n        _sortListBy(list, options.sort);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n}\r\n\r\n/**\r\n * Utility Functions\r\n */\r\n\r\n/**\r\n * Test if supplied argument is a valid object for current class purposes.\r\n * Atention! The underscore version of this function should not be used for performance reasons.\r\n */\r\nfunction _isObject(subject) {\r\n  return (\r\n    subject instanceof Object ||\r\n    (typeof subject === 'object' && subject !== null)\r\n  );\r\n}\r\n\r\n/**\r\n * Test if supplied argument is a valid string for current class purposes.\r\n * Atention! The underscore version of this function should not be used for performance reasons.\r\n */\r\nfunction _isString(subject) {\r\n  return typeof subject === 'string';\r\n}\r\n\r\n/**\r\n * Test if supplied argument is a valid function for current class purposes.\r\n * Atention! The underscore version of this function should not be used for performance reasons.\r\n */\r\nfunction _isFunction(subject) {\r\n  return typeof subject === 'function';\r\n}\r\n\r\n/**\r\n * Shortcut for Object's prototype \"hasOwnProperty\" method.\r\n */\r\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.\r\n * @param {Object} targetObject The object we want read the property from...\r\n * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'\r\n * to read object.address.street.name or object.address.street.number, respectively);\r\n * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.\r\n */\r\nfunction _getPropertyValue(targetObject, propertyName) {\r\n  let propertyValue; // undefined (the default return value)\r\n  if (_isObject(targetObject) && _isString(propertyName)) {\r\n    const fragments = propertyName.split(PROPERTY_SEPARATOR);\r\n    const fragmentCount = fragments.length;\r\n    if (fragmentCount > 0) {\r\n      const firstFragment = fragments[0];\r\n      const remainingFragments =\r\n        fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;\r\n      propertyValue = targetObject[firstFragment];\r\n      if (remainingFragments !== null) {\r\n        propertyValue = _getPropertyValue(propertyValue, remainingFragments);\r\n      }\r\n    }\r\n  }\r\n  return propertyValue;\r\n}\r\n\r\n/**\r\n * Compare a property map with a target object using strict comparison.\r\n * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite\r\n * property names (e.g., 'address.country.name') will be tested against the \"resolved\" properties from the target object.\r\n * @param {Object} targetObject The target object whose properties will be tested.\r\n * @returns {boolean} Returns true if the properties match, false otherwise.\r\n */\r\nfunction _compareToPropertyMapStrict(propertyMap, targetObject) {\r\n  let result = false;\r\n  // \"for in\" loops do not thown exceptions for invalid data types...\r\n  for (let propertyName in propertyMap) {\r\n    if (_hasOwnProperty.call(propertyMap, propertyName)) {\r\n      if (\r\n        propertyMap[propertyName] !==\r\n        _getPropertyValue(targetObject, propertyName)\r\n      ) {\r\n        result = false;\r\n        break;\r\n      } else if (result !== true) {\r\n        result = true;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Checks if a sorting specifier is valid.\r\n * A valid sorting specifier consists of an array of arrays being each subarray a pair\r\n * in the format [\"property name\", \"sorting order\"].\r\n * The following exemple can be used to sort studies by \"date\"\" and use \"time\" to break ties in descending order.\r\n * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]\r\n * @param {Array} specifiers The sorting specifier to be tested.\r\n * @returns {boolean} Returns true if the specifiers are valid, false otherwise.\r\n */\r\nfunction _isValidSortingSpecifier(specifiers) {\r\n  let result = true;\r\n  if (specifiers instanceof Array && specifiers.length > 0) {\r\n    for (let i = specifiers.length - 1; i >= 0; i--) {\r\n      const item = specifiers[i];\r\n      if (item instanceof Array) {\r\n        const property = item[0];\r\n        const order = item[1];\r\n        if (\r\n          _isString(property) &&\r\n          (order === ORDER_ASC || order === ORDER_DESC)\r\n        ) {\r\n          continue;\r\n        }\r\n      }\r\n      result = false;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Sorts an array based on sorting specifier options.\r\n * @param {Array} list The that needs to be sorted.\r\n * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.\r\n * @returns {void} No value is returned. The array is sorted in place.\r\n */\r\nfunction _sortListBy(list, specifiers) {\r\n  if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {\r\n    const specifierCount = specifiers.length;\r\n    list.sort(function _sortListByCallback(a, b) {\r\n      // callback name for stack traces...\r\n      let index = 0;\r\n      while (index < specifierCount) {\r\n        const specifier = specifiers[index];\r\n        const property = specifier[0];\r\n        const order = specifier[1] === ORDER_DESC ? -1 : 1;\r\n        const aValue = _getPropertyValue(a, property);\r\n        const bValue = _getPropertyValue(b, property);\r\n        // @TODO: should we check for the types being compared, like:\r\n        // ~~ if (typeof aValue !== typeof bValue) continue;\r\n        // Not sure because dates, for example, can be correctly compared to numbers...\r\n        if (aValue < bValue) {\r\n          return order * -1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return order * 1;\r\n        }\r\n        if (++index >= specifierCount) {\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error('Invalid Arguments');\r\n  }\r\n}\r\n","const displayFunction = data => {\r\n  return data.text || '';\r\n};\r\n\r\nexport const arrowAnnotate = {\r\n  id: 'ArrowAnnotate',\r\n  name: 'ArrowAnnotate',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'ArrowAnnotate',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  if (data.shortestDiameter) {\r\n    // TODO: Make this check criteria again to see if we should display shortest x longest\r\n    return data.longestDiameter + ' x ' + data.shortestDiameter;\r\n  }\r\n\r\n  return data.longestDiameter;\r\n};\r\n\r\nexport const bidirectional = {\r\n  id: 'Bidirectional',\r\n  name: 'Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'Bidirectional',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  const { cachedStats } = data;\r\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\r\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const ellipticalRoi = {\r\n  id: 'EllipticalRoi',\r\n  name: 'Ellipse',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'EllipticalRoi',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  const { cachedStats } = data;\r\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\r\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const circleRoi = {\r\n  id: 'CircleRoi',\r\n  name: 'Circle',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'CircleRoi',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  if (data.meanStdDev && data.meanStdDev.mean && !isNaN(data.meanStdDev.mean)) {\r\n    meanValue = data.meanStdDev.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const freehandMouse = {\r\n  id: 'FreehandMouse',\r\n  name: 'Freehand',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'FreehandMouse',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let lengthValue = '';\r\n  if (data.length && !isNaN(data.length)) {\r\n    lengthValue = data.length.toFixed(2) + ' mm';\r\n  }\r\n  return lengthValue;\r\n};\r\n\r\nexport const length = {\r\n  id: 'Length',\r\n  name: 'Length',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'Length',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const nonTarget = {\r\n  id: 'NonTarget',\r\n  name: 'Non-Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'NonTarget',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let meanValue = '';\r\n  const { cachedStats } = data;\r\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\r\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\r\n  }\r\n  return meanValue;\r\n};\r\n\r\nexport const rectangleRoi = {\r\n  id: 'RectangleRoi',\r\n  name: 'Rectangle',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'RectangleRoi',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","const displayFunction = data => {\r\n  let text = '';\r\n  if (data.rAngle && !isNaN(data.rAngle)) {\r\n    text = data.rAngle.toFixed(2) + String.fromCharCode(parseInt('00B0', 16));\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const angle = {\r\n  id: 'Angle',\r\n  name: 'Angle',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'Angle',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const targetCR = {\r\n  id: 'TargetCR',\r\n  name: 'CR Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'TargetCR',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const targetNE = {\r\n  id: 'TargetNE',\r\n  name: 'NE Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'TargetNE',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const targetUN = {\r\n  id: 'TargetUN',\r\n  name: 'UN Target',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'TargetUN',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => data.response,\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","export const dicomSRDisplayTool = {\r\n  id: 'DICOMSRDisplayTool',\r\n  name: 'DICOMSRDisplayTool',\r\n  toolGroup: 'allTools',\r\n  cornerstoneToolType: 'DICOMSRDisplayTool',\r\n  options: {\r\n    measurementTable: {\r\n      displayFunction: data => {\r\n        return `(SR) ${data.TrackingIdentifier ||\r\n          data.lesionNamingNumber ||\r\n          data.measurementNumber ||\r\n          data.text ||\r\n          ''}`;\r\n      },\r\n    },\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n\r\nexport default dicomSRDisplayTool;\r\n","import * as tools from '../tools';\r\n\r\nconst childTools = [];\r\nObject.keys(tools).forEach(key => childTools.push(tools[key]));\r\n\r\nexport const allTools = {\r\n  id: 'allTools',\r\n  name: 'Measurements',\r\n  childTools: childTools,\r\n  options: {\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","import { allTools } from './toolGroups/allTools';\r\nimport {\r\n  retrieveMeasurements,\r\n  storeMeasurements,\r\n  retrieveTimepoints,\r\n  storeTimepoints,\r\n  removeTimepoint,\r\n  updateTimepoint,\r\n  disassociateStudy,\r\n} from './dataExchange';\r\n\r\nconst measurementApiDefaultConfig = {\r\n  measurementTools: [allTools],\r\n  newLesions: [\r\n    {\r\n      id: 'newTargets',\r\n      name: 'New Targets',\r\n      toolGroupId: 'targets',\r\n    },\r\n    {\r\n      id: 'newNonTargets',\r\n      name: 'New Non-Targets',\r\n      toolGroupId: 'nonTargets',\r\n    },\r\n  ],\r\n  dataExchange: {\r\n    retrieve: retrieveMeasurements,\r\n    store: storeMeasurements,\r\n  },\r\n};\r\n\r\nconst timepointApiDefaultConfig = {\r\n  dataExchange: {\r\n    retrieve: retrieveTimepoints,\r\n    store: storeTimepoints,\r\n    remove: removeTimepoint,\r\n    update: updateTimepoint,\r\n    disassociate: disassociateStudy,\r\n  },\r\n};\r\n\r\nexport { measurementApiDefaultConfig, timepointApiDefaultConfig };\r\n","import log from '../log';\r\n\r\nexport const retrieveMeasurements = (PatientID, timepointIds) => {\r\n  log.error('retrieveMeasurements');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const storeMeasurements = (measurementData, timepointIds) => {\r\n  log.error('storeMeasurements');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const retrieveTimepoints = filter => {\r\n  log.error('retrieveTimepoints');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const storeTimepoints = timepointData => {\r\n  log.error('storeTimepoints');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const updateTimepoint = (timepointData, query) => {\r\n  log.error('updateTimepoint');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const removeTimepoint = timepointId => {\r\n  log.error('removeTimepoint');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const disassociateStudy = (timepointIds, StudyInstanceUID) => {\r\n  log.error('disassociateStudy');\r\n  return Promise.resolve();\r\n};\r\n","import log from '../../log';\r\nimport { timepointApiDefaultConfig } from './../configuration.js';\r\n\r\nconst configuration = {\r\n  ...timepointApiDefaultConfig,\r\n};\r\n\r\nconst TIMEPOINT_TYPE_NAMES = {\r\n  prebaseline: 'Pre-Baseline',\r\n  baseline: 'Baseline',\r\n  followup: 'Follow-up',\r\n};\r\n\r\nexport default class TimepointApi {\r\n  static Instance;\r\n\r\n  static setConfiguration(config) {\r\n    Object.assign(configuration, config);\r\n  }\r\n\r\n  static getConfiguration() {\r\n    return configuration;\r\n  }\r\n\r\n  constructor(currentTimepointId, options = {}) {\r\n    if (TimepointApi.Instance) {\r\n      TimepointApi.Instance.initialize(currentTimepointId, options);\r\n      return TimepointApi.Instance;\r\n    }\r\n\r\n    this.initialize(currentTimepointId, options);\r\n    TimepointApi.Instance = this;\r\n  }\r\n\r\n  initialize(currentTimepointId, options = {}) {\r\n    this.currentTimepointId = currentTimepointId;\r\n    this.comparisonTimepointKey = options.comparisonTimepointKey || 'baseline';\r\n    this.options = options;\r\n    this.timepoints = [];\r\n  }\r\n\r\n  onTimepointsUpdated() {\r\n    if (typeof this.options.onTimepointsUpdated !== 'function') {\r\n      log.warn('Timepoints update callback is not defined');\r\n      return;\r\n    }\r\n\r\n    this.options.onTimepointsUpdated(Object.assign([], this.timepoints));\r\n  }\r\n\r\n  calculateVisitNumber(timepoint) {\r\n    // Retrieve all of the relevant follow-up timepoints for this patient\r\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\r\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\r\n    });\r\n    const filteredTimepoints = sortedTimepoints.find(\r\n      tp =>\r\n        tp.PatientID === timepoint.PatientID &&\r\n        tp.timepointType === timepoint.timepointType\r\n    );\r\n\r\n    // Create an array of just timepointIds, so we can use indexOf\r\n    // on it to find the current timepoint's relative position\r\n    const timepointIds = filteredTimepoints.map(\r\n      timepoint => timepoint.timepointId\r\n    );\r\n\r\n    // Calculate the index of the current timepoint in the array of all\r\n    // relevant follow-up timepoints\r\n    const visitNumber = timepointIds.indexOf(timepoint.timepointId) + 1;\r\n\r\n    // If visitNumber is 0, it means that the current timepoint was not in the list\r\n    if (!visitNumber) {\r\n      throw new Error(\r\n        'Current timepoint was not in the list of relevant timepoints?'\r\n      );\r\n    }\r\n\r\n    return visitNumber;\r\n  }\r\n\r\n  retrieveTimepoints(filter) {\r\n    const retrievalFn = configuration.dataExchange.retrieve;\r\n    if (typeof retrievalFn !== 'function') {\r\n      log.error('Timepoint retrieval function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      retrievalFn(filter)\r\n        .then(timepointData => {\r\n          log.info('Timepoint data retrieval');\r\n\r\n          timepointData.forEach(timepoint => {\r\n            const timepointIndex = this.timepoints.findIndex(\r\n              tp => tp.timepointId === timepoint.timepointId\r\n            );\r\n            if (timepointIndex < 0) {\r\n              this.timepoints.push(timepoint);\r\n            } else {\r\n              this.timepoints[timepointIndex] = timepoint;\r\n            }\r\n          });\r\n\r\n          // Let others know that the timepoints are updated\r\n          this.onTimepointsUpdated();\r\n\r\n          resolve();\r\n        })\r\n        .catch(reason => {\r\n          log.error(`Timepoint retrieval function failed: ${reason}`);\r\n          reject(reason);\r\n        });\r\n    });\r\n  }\r\n\r\n  storeTimepoints() {\r\n    const storeFn = configuration.dataExchange.store;\r\n    if (typeof storeFn !== 'function') {\r\n      log.error('Timepoint store function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    log.info('Preparing to store timepoints');\r\n    log.info(JSON.stringify(this.timepoints, null, 2));\r\n\r\n    storeFn(this.timepoints).then(() =>\r\n      log.info('Timepoint storage completed')\r\n    );\r\n  }\r\n\r\n  disassociateStudy(timepointIds, StudyInstanceUID) {\r\n    const disassociateFn = configuration.dataExchange.disassociate;\r\n    if (typeof disassociateFn !== 'function') {\r\n      log.error('Study disassociate function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    disassociateFn(timepointIds, StudyInstanceUID).then(() => {\r\n      log.info('Disassociation completed');\r\n\r\n      this.timepoints = [];\r\n      this.retrieveTimepoints({});\r\n    });\r\n  }\r\n\r\n  removeTimepoint(timepointId) {\r\n    const removeFn = configuration.dataExchange.remove;\r\n    if (typeof removeFn !== 'function') {\r\n      log.error('Timepoint remove function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    const timepointData = {\r\n      timepointId,\r\n    };\r\n\r\n    log.info('Preparing to remove timepoint');\r\n    log.info(JSON.stringify(timepointData, null, 2));\r\n\r\n    removeFn(timepointData).then(() => {\r\n      log.info('Timepoint removal completed');\r\n\r\n      const tpIndex = this.timepoints.findIndex(\r\n        tp => tp.timepointId === timepointId\r\n      );\r\n      if (tpIndex > -1) {\r\n        this.timepoints.splice(tpIndex, 1);\r\n      }\r\n\r\n      // Let others know that the timepoints are updated\r\n      this.onTimepointsUpdated();\r\n    });\r\n  }\r\n\r\n  updateTimepoint(timepointId, query) {\r\n    const updateFn = configuration.dataExchange.update;\r\n    if (typeof updateFn !== 'function') {\r\n      log.error('Timepoint update function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    const timepointData = {\r\n      timepointId,\r\n    };\r\n\r\n    log.info('Preparing to update timepoint');\r\n    log.info(JSON.stringify(timepointData, null, 2));\r\n    log.info(JSON.stringify(query, null, 2));\r\n\r\n    updateFn(timepointData, query).then(() => {\r\n      log.info('Timepoint updated completed');\r\n\r\n      const tpIndex = this.timepoints.findIndex(\r\n        tp => tp.timepointId === timepointId\r\n      );\r\n      if (tpIndex > -1) {\r\n        this.timepoints[tpIndex] = Object.assign(\r\n          {},\r\n          this.timepoints[tpIndex],\r\n          query\r\n        );\r\n      }\r\n\r\n      // Let others know that the timepoints are updated\r\n      this.onTimepointsUpdated();\r\n    });\r\n  }\r\n\r\n  // Return all timepoints\r\n  all(filter) {\r\n    let timepointsToReturn;\r\n    if (filter) {\r\n      timepointsToReturn = this.timepoints.filter(filter);\r\n    } else {\r\n      timepointsToReturn = this.timepoints;\r\n    }\r\n\r\n    return timepointsToReturn.sort((tp1, tp2) => {\r\n      return tp1.visitDate < tp2.visitDate ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  // Return only the current timepoint\r\n  current() {\r\n    return this.timepoints.find(\r\n      tp => tp.timepointId === this.currentTimepointId\r\n    );\r\n  }\r\n\r\n  lock() {\r\n    const tpIndex = this.timepoints.findIndex(\r\n      tp => tp.timepointId === this.currentTimepointId\r\n    );\r\n    if (tpIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    this.timepoints[tpIndex] = Object.assign({}, this.timepoints[tpIndex], {\r\n      locked: true,\r\n    });\r\n  }\r\n\r\n  // Return the prior timepoint\r\n  prior() {\r\n    const current = this.current();\r\n    if (!current) {\r\n      return;\r\n    }\r\n\r\n    return this.all().find(tp => tp.visitDate < current.visitDate);\r\n  }\r\n\r\n  // Return only the current and prior timepoints\r\n  currentAndPrior() {\r\n    const timepoints = [];\r\n\r\n    const current = this.current();\r\n    if (current) {\r\n      timepoints.push(current);\r\n    }\r\n\r\n    const prior = this.prior();\r\n    if (current && prior && prior.timepointId !== current.timepointId) {\r\n      timepoints.push(prior);\r\n    }\r\n\r\n    return timepoints;\r\n  }\r\n\r\n  // Return the current and the comparison timepoints\r\n  currentAndComparison(comparisonTimepointKey = this.comparisonTimepointKey) {\r\n    const current = this.current();\r\n    const comparisonTimepoint = this.comparison(comparisonTimepointKey);\r\n    const timepoints = [current];\r\n\r\n    if (\r\n      comparisonTimepoint &&\r\n      !timepoints.find(tp => tp.timepointId === comparisonTimepoint.timepointId)\r\n    ) {\r\n      timepoints.push(comparisonTimepoint);\r\n    }\r\n\r\n    return timepoints;\r\n  }\r\n\r\n  /**\r\n   * Return true if there are 2 or more baseline timepoints before and at the current timepoint, otherwise false\r\n   * @returns {boolean}\r\n   */\r\n  isRebaseline(timepointId) {\r\n    const current = timepointId\r\n      ? this.timepoints.find(tp => tp.timepointId === timepointId)\r\n      : this.current();\r\n    if (!current) {\r\n      return false;\r\n    }\r\n\r\n    const baselines = this.timepoints.filter(\r\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= current.visitDate\r\n    );\r\n    return baselines.length > 1;\r\n  }\r\n\r\n  /**\r\n   * Return the next (closest future) baseline after current timepoint\r\n   * @returns {*}\r\n   */\r\n  nextBaselineAfterCurrent() {\r\n    let current = this.current();\r\n\r\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\r\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\r\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\r\n    });\r\n    return sortedTimepoints.find(\r\n      tp => tp.visitDate > current.visitDate && tp.timepointType === 'baseline'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the current timepoint id\r\n   * @param timepointId\r\n   */\r\n  setCurrentTimepointId(timepointId) {\r\n    this.currentTimepointId = timepointId;\r\n  }\r\n\r\n  /**\r\n   * Set the comparison timepoint that overrides the default comparison timepoint (called based on user selection in a viewport)\r\n   * @param timepoint\r\n   */\r\n  setUserComparison(timepoint) {\r\n    this.userComparison = timepoint;\r\n  }\r\n\r\n  /**\r\n   * Return only the comparison timepoint\r\n   * @param {String} [comparisonTimepointKey]\r\n   * @return {*}\r\n   */\r\n  comparison(comparisonTimepointKey = this.comparisonTimepointKey) {\r\n    // Return the comparison timepoint set by user if exists\r\n    if (this.userComparison) {\r\n      return this.userComparison;\r\n    }\r\n\r\n    const current = this.current();\r\n    if (!current) {\r\n      return;\r\n    }\r\n\r\n    // If current timepoint is prebaseline, the first (closest future) BL after current is comparison regardless of default comparison timepoint\r\n    if (current.timepointType === 'prebaseline') {\r\n      const nextBaselineAfterCurrent = this.nextBaselineAfterCurrent();\r\n      // If there is a next baseline, make it comparison, otherwise comparison is done by default comparison timepoint\r\n      if (nextBaselineAfterCurrent) {\r\n        return nextBaselineAfterCurrent;\r\n      }\r\n    }\r\n\r\n    // If current timepoint is baseline, the prior is comparison if exists regardless of default comparison timepoint\r\n    if (current.timepointType === 'baseline') {\r\n      const prior = this.prior();\r\n      if (prior) {\r\n        return prior;\r\n      }\r\n    }\r\n\r\n    const comparison = this[comparisonTimepointKey]();\r\n\r\n    // Do not return a comparison if it would be identical to\r\n    // the current.\r\n    if (comparison && comparison.timepointId === current.timepointId) {\r\n      return;\r\n    }\r\n\r\n    return comparison;\r\n  }\r\n\r\n  /**\r\n   * Return the latest initial (prebaseline or baseline) timepoint after current and before the next followup timepoint\r\n   * @returns {*}\r\n   */\r\n  latestInitialTimepointAfterCurrent() {\r\n    let currentTimepoint = this.current();\r\n\r\n    //  Skip if the current timepoint is FU since there is no initial timepoint after follow-up\r\n    if (currentTimepoint.timepointType === 'followup') {\r\n      return;\r\n    }\r\n\r\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\r\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\r\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\r\n    });\r\n    const allNextTimepoints = sortedTimepoints.filter(\r\n      tp => tp.visitDate > currentTimepoint.visitDate\r\n    );\r\n\r\n    const nextFollowupIndex = allNextTimepoints.findIndex(\r\n      tp => tp.timepointType === 'followup'\r\n    );\r\n    const latestInitialBeforeNextFUIndex = nextFollowupIndex - 1;\r\n\r\n    if (latestInitialBeforeNextFUIndex < 0) {\r\n      //  There is no FU and all next timepoints are initial, so return the last one\r\n      return allNextTimepoints[allNextTimepoints.length - 1];\r\n    }\r\n\r\n    //  Return the latest initial timepoint before the next FU\r\n    return allNextTimepoints[latestInitialBeforeNextFUIndex];\r\n  }\r\n\r\n  /**\r\n   * Return timepoint ids of initial timepoints which are prebaseline and baseline\r\n   * @returns {*}\r\n   */\r\n  initialTimepointIds() {\r\n    let timepointToCheck = this.current();\r\n\r\n    //  If the current timepoint is PBL or BL, then get the recent PBL/BL of the current timepoint by its first FU\r\n    //      If it does not exist, then there is no newer initial timepoint, so the current timepoint is used to determine initial timepoint ids\r\n    if (\r\n      timepointToCheck.timepointType === 'prebaseline' ||\r\n      timepointToCheck.timepointType === 'baseline'\r\n    ) {\r\n      timepointToCheck =\r\n        this.latestInitialTimepointAfterCurrent() || timepointToCheck;\r\n    }\r\n\r\n    const visitDateToCheck = timepointToCheck.visitDate;\r\n\r\n    const preBaselineTimepoints =\r\n      this.timepoints.filter(\r\n        tp =>\r\n          tp.timepointType === 'prebaseline' && tp.visitDate <= visitDateToCheck\r\n      ) || [];\r\n    const preBaselineTimepointIds = preBaselineTimepoints.map(\r\n      timepoint => timepoint.timepointId\r\n    );\r\n\r\n    const baselineTimepoints =\r\n      this.timepoints.filter(\r\n        tp =>\r\n          tp.timepointType === 'baseline' && tp.visitDate <= visitDateToCheck\r\n      ) || [];\r\n    const baselineTimepointIds = baselineTimepoints.map(\r\n      timepoint => timepoint.timepointId\r\n    );\r\n\r\n    return preBaselineTimepointIds.concat(baselineTimepointIds);\r\n  }\r\n\r\n  // Return only the baseline timepoint\r\n  baseline() {\r\n    const currentVisitDate = this.current().visitDate;\r\n    return this.all().find(\r\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= currentVisitDate\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return only the nadir timepoint. Must be prior to the current timepoint\r\n   * @return {any}\r\n   */\r\n  nadir() {\r\n    const current = this.current();\r\n    const nadir = this.all().find(\r\n      tp =>\r\n        tp.timepointId !== current.timepointId &&\r\n        tp.timepointKey === 'nadir' &&\r\n        tp.visitDate <= current.visitDate\r\n    );\r\n\r\n    // If we have found a nadir, return that\r\n    if (nadir) {\r\n      return nadir;\r\n    }\r\n\r\n    // Otherwise, return the most recent baseline\r\n    // This should only happen if we are only at FU1,\r\n    // so the baseline is the nadir.\r\n    return this.baseline();\r\n  }\r\n\r\n  // Return only the key timepoints (current, prior, nadir and baseline)\r\n  key() {\r\n    const result = [this.current()];\r\n    const prior = this.prior();\r\n    const nadir = this.nadir();\r\n    const baseline = this.baseline();\r\n\r\n    const resultIncludes = timepoint =>\r\n      !!result.find(x => x.timepointId === timepoint.timepointId);\r\n\r\n    if (prior && resultIncludes(prior) === false) {\r\n      result.push(prior);\r\n    }\r\n\r\n    if (nadir && resultIncludes(nadir) === false) {\r\n      result.push(nadir);\r\n    }\r\n\r\n    if (baseline && resultIncludes(baseline) === false) {\r\n      result.push(baseline);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // Return only the timepoints for the given study\r\n  study(StudyInstanceUID) {\r\n    return this.all().filter(timepoint =>\r\n      timepoint.studyInstanceUIDs.includes(StudyInstanceUID)\r\n    );\r\n  }\r\n\r\n  // Return the timepoint's name\r\n  name(timepoint) {\r\n    const timepointTypeName = TIMEPOINT_TYPE_NAMES[timepoint.timepointType];\r\n\r\n    // Check if this is a Baseline timepoint, if it is, return 'Baseline'\r\n    if (timepoint.timepointType === 'baseline') {\r\n      return 'Baseline';\r\n    } else if (timepoint.visitNumber) {\r\n      return `${timepointTypeName} ${timepoint.visitNumber}`;\r\n    }\r\n\r\n    const visitNumber = this.calculateVisitNumber(timepoint);\r\n\r\n    // Return the timepoint name as 'Follow-up N'\r\n    return `${timepointTypeName} ${visitNumber}`;\r\n  }\r\n\r\n  // Build the timepoint title based on its date\r\n  title(timepoint) {\r\n    const timepointName = this.name(timepoint);\r\n\r\n    const all = this.all();\r\n    let index = -1;\r\n    let currentIndex = null;\r\n    for (let i = 0; i < all.length; i++) {\r\n      const currentTimepoint = all[i];\r\n\r\n      // Skip the iterations until we can't find the selected timepoint on study list\r\n      if (this.currentTimepointId === currentTimepoint.timepointId) {\r\n        currentIndex = 0;\r\n      }\r\n\r\n      if (currentIndex !== null) {\r\n        index = currentIndex++;\r\n      }\r\n\r\n      // Break the loop if reached the timepoint to get the title\r\n      if (currentTimepoint.timepointId === timepoint.timepointId) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    const states = {\r\n      0: ['Current'],\r\n      1: ['Prior'],\r\n    };\r\n    const parenthesis = states[index] || [];\r\n    const nadir = this.nadir();\r\n\r\n    if (nadir && nadir.timepointId === timepoint.timepointId) {\r\n      parenthesis.push('Nadir');\r\n    }\r\n\r\n    let parenthesisText = '';\r\n    if (parenthesis.length) {\r\n      parenthesisText = `(${parenthesis.join(', ')})`;\r\n    }\r\n\r\n    return `${timepointName} ${parenthesisText}`;\r\n  }\r\n}\r\n","export default function(measurement) {\r\n  if (!measurement) {\r\n    return;\r\n  }\r\n\r\n  switch (measurement.toolType) {\r\n    case 'Bidirectional':\r\n    case 'TargetCR':\r\n    case 'TargetNE':\r\n    case 'TargetUN':\r\n      return `Target ${measurement.lesionNamingNumber}`;\r\n    case 'NonTarget':\r\n      return `Non-Target ${measurement.lesionNamingNumber}`;\r\n  }\r\n}\r\n","export default function(measurement) {\r\n  return measurement.description;\r\n}\r\n","import studyMetadataManager from '../../utils/studyMetadataManager';\r\n\r\nexport default function(imagePath, thumbnail = false) {\r\n  const [\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex,\r\n  ] = imagePath.split('_');\r\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n  const series = studyMetadata.getSeriesByUID(SeriesInstanceUID);\r\n  const instance = series.getInstanceByUID(SOPInstanceUID);\r\n  return instance.getImageId(frameIndex, thumbnail);\r\n}\r\n","import cornerstoneTools from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\nimport log from '../../log';\r\nimport getLabel from '../lib/getLabel';\r\nimport getDescription from '../lib/getDescription';\r\nimport getImageIdForImagePath from '../lib/getImageIdForImagePath';\r\nimport guid from '../../utils/guid';\r\nimport studyMetadataManager from '../../utils/studyMetadataManager';\r\nimport { measurementApiDefaultConfig } from './../configuration.js';\r\n\r\nconst configuration = {\r\n  ...measurementApiDefaultConfig,\r\n};\r\n\r\nexport default class MeasurementApi {\r\n  static Instance;\r\n\r\n  /**\r\n   * Set configuration: It should merge default configuration with any new one\r\n   *\r\n   * @static\r\n   * @param {Object} config\r\n   * @param {Object} config.server\r\n   * @param {string} config.server.type - The server type\r\n   * @param {string} config.server.wadoRoot - The server wado URL root\r\n   * @param {Array} config.measurementTools\r\n   * @param {string} config.measurementTools[].id - The tool group id\r\n   * @param {string} config.measurementTools[].name - The tool group name\r\n   * @param {Array} config.measurementTools[].childTools - The child tool's configuration\r\n   * @param {Object} config.dataExchange\r\n   * @param {Function} config.dataExchange.store - Function that store measurement data\r\n   * @param {Function} config.dataExchange.retrieve - Function that retrieves measurement data\r\n   *\r\n   * @memberof MeasurementApi\r\n   */\r\n  static setConfiguration(config) {\r\n    Object.assign(configuration, config);\r\n  }\r\n\r\n  static getConfiguration() {\r\n    return configuration;\r\n  }\r\n\r\n  static getToolsGroupsMap() {\r\n    const toolsGroupsMap = {};\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      toolGroup.childTools.forEach(\r\n        tool => (toolsGroupsMap[tool.id] = toolGroup.id)\r\n      );\r\n    });\r\n\r\n    return toolsGroupsMap;\r\n  }\r\n\r\n  static getToolGroupTools(toolsGroupsMap) {\r\n    const result = {};\r\n    Object.keys(toolsGroupsMap).forEach(toolType => {\r\n      const toolGroupId = toolsGroupsMap[toolType];\r\n      if (!result[toolGroupId]) {\r\n        result[toolGroupId] = [];\r\n      }\r\n\r\n      result[toolGroupId].push(toolType);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  static getToolConfiguration(toolType) {\r\n    const configuration = MeasurementApi.getConfiguration();\r\n    const toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\r\n\r\n    const toolGroupId = toolsGroupsMap[toolType];\r\n    const toolGroup = configuration.measurementTools.find(\r\n      toolGroup => toolGroup.id === toolGroupId\r\n    );\r\n\r\n    let tool;\r\n    if (toolGroup) {\r\n      tool = toolGroup.childTools.find(tool => tool.id === toolType);\r\n    }\r\n\r\n    return {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    };\r\n  }\r\n\r\n  static syncMeasurementAndToolData(measurement) {\r\n    log.info('syncMeasurementAndToolData');\r\n\r\n    const measurementLabel = getLabel(measurement);\r\n    if (measurementLabel) {\r\n      measurement.labels = [measurementLabel];\r\n    }\r\n\r\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n    // Stop here if the metadata for the measurement's study is not loaded yet\r\n    const { StudyInstanceUID } = measurement;\r\n    const metadata = studyMetadataManager.get(StudyInstanceUID);\r\n    if (!metadata) return;\r\n\r\n    // Iterate each child tool if the current tool has children\r\n    const toolType = measurement.toolType;\r\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\r\n    if (Array.isArray(tool.childTools)) {\r\n      tool.childTools.forEach(childToolKey => {\r\n        const childMeasurement = measurement[childToolKey];\r\n        if (!childMeasurement) return;\r\n        childMeasurement._id = measurement._id;\r\n        childMeasurement.measurementNumber = measurement.measurementNumber;\r\n        childMeasurement.lesionNamingNumber = measurement.lesionNamingNumber;\r\n\r\n        MeasurementApi.syncMeasurementAndToolData(childMeasurement);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const imageId = getImageIdForImagePath(measurement.imagePath);\r\n\r\n    // If no tool state exists for this imageId, create an empty object to store it\r\n    if (!toolState[imageId]) {\r\n      toolState[imageId] = {};\r\n    }\r\n\r\n    const currentToolState = toolState[imageId][toolType];\r\n    const toolData = currentToolState && currentToolState.data;\r\n\r\n    // Check if we already have toolData for this imageId and toolType\r\n    if (toolData && toolData.length) {\r\n      // If we have toolData, we should search it for any data related to the current Measurement\r\n      const toolData = toolState[imageId][toolType].data;\r\n\r\n      // Create a flag so we know if we've successfully updated the Measurement in the toolData\r\n      let alreadyExists = false;\r\n\r\n      // Loop through the toolData to search for this Measurement\r\n      toolData.forEach(tool => {\r\n        // Break the loop if this isn't the Measurement we are looking for\r\n        if (tool._id !== measurement._id) {\r\n          return;\r\n        }\r\n\r\n        // If we have found the Measurement, set the flag to True\r\n        alreadyExists = true;\r\n\r\n        // Update the toolData from the Measurement data\r\n        Object.assign(tool, measurement);\r\n        return false;\r\n      });\r\n\r\n      // If we have found the Measurement we intended to update, we can stop this function here\r\n      if (alreadyExists === true) {\r\n        return;\r\n      }\r\n    } else {\r\n      // If no toolData exists for this toolType, create an empty array to hold some\r\n      toolState[imageId][toolType] = {\r\n        data: [],\r\n      };\r\n    }\r\n\r\n    // If we have reached this point, it means we haven't found the Measurement we are looking for\r\n    // in the current toolData. This means we need to add it.\r\n\r\n    // Add the MeasurementData into the toolData for this imageId\r\n    toolState[imageId][toolType].data.push(measurement);\r\n\r\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\r\n      toolState\r\n    );\r\n  }\r\n\r\n  static isToolIncluded(tool) {\r\n    return (\r\n      tool.options &&\r\n      tool.options.caseProgress &&\r\n      tool.options.caseProgress.include\r\n    );\r\n  }\r\n\r\n  constructor(timepointApi, options = {}) {\r\n    if (MeasurementApi.Instance) {\r\n      MeasurementApi.Instance.initialize(timepointApi, options);\r\n      return MeasurementApi.Instance;\r\n    }\r\n\r\n    this.initialize(timepointApi, options);\r\n    MeasurementApi.Instance = this;\r\n  }\r\n\r\n  initialize(timepointApi, options = {}) {\r\n    this.timepointApi = timepointApi;\r\n    this.options = options;\r\n    this.toolGroups = {};\r\n    this.tools = {};\r\n    this.toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\r\n    this.toolGroupTools = MeasurementApi.getToolGroupTools(this.toolsGroupsMap);\r\n\r\n    // Iterate over each tool group and create collection\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      this.toolGroups[toolGroup.id] = [];\r\n\r\n      // Iterate over each tool group child tools (e.g. bidirectional, targetCR, etc.) and create collection\r\n      toolGroup.childTools.forEach(tool => {\r\n        this.tools[tool.id] = [];\r\n      });\r\n    });\r\n  }\r\n\r\n  onMeasurementsUpdated() {\r\n    if (typeof this.options.onMeasurementsUpdated !== 'function') {\r\n      log.warn('Measurements update callback is not defined');\r\n      return;\r\n    }\r\n\r\n    this.options.onMeasurementsUpdated(Object.assign({}, this.tools));\r\n  }\r\n\r\n  retrieveMeasurements(PatientID, timepointIds) {\r\n    const retrievalFn = configuration.dataExchange.retrieve;\r\n    const { server } = configuration;\r\n    if (typeof retrievalFn !== 'function') {\r\n      log.error('Measurement retrieval function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      retrievalFn(server).then(measurementData => {\r\n        if (measurementData) {\r\n          log.info('Measurement data retrieval');\r\n          log.info(measurementData);\r\n\r\n          Object.keys(measurementData).forEach(measurementTypeId => {\r\n            const measurements = measurementData[measurementTypeId];\r\n\r\n            measurements.forEach(measurement => {\r\n              const { toolType } = measurement;\r\n\r\n              this.addMeasurement(toolType, measurement);\r\n            });\r\n          });\r\n        }\r\n\r\n        resolve();\r\n\r\n        // Synchronize the new tool data\r\n        this.syncMeasurementsAndToolData();\r\n\r\n        cornerstone.getEnabledElements().forEach(enabledElement => {\r\n          if (enabledElement.image) {\r\n            cornerstone.updateImage(enabledElement.element);\r\n          }\r\n        });\r\n\r\n        // Let others know that the measurements are updated\r\n        this.onMeasurementsUpdated();\r\n      }, reject);\r\n    });\r\n  }\r\n\r\n  storeMeasurements(timepointId) {\r\n    const { server } = configuration;\r\n    const storeFn = configuration.dataExchange.store;\r\n    if (typeof storeFn !== 'function') {\r\n      log.error('Measurement store function has not been configured.');\r\n      return;\r\n    }\r\n\r\n    let measurementData = {};\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      // Skip the tool groups excluded from case progress\r\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\r\n        return;\r\n      }\r\n\r\n      toolGroup.childTools.forEach(tool => {\r\n        // Skip the tools excluded from case progress\r\n        if (!MeasurementApi.isToolIncluded(tool)) {\r\n          return;\r\n        }\r\n\r\n        if (!measurementData[toolGroup.id]) {\r\n          measurementData[toolGroup.id] = [];\r\n        }\r\n\r\n        measurementData[toolGroup.id] = measurementData[toolGroup.id].concat(\r\n          this.tools[tool.id]\r\n        );\r\n      });\r\n    });\r\n\r\n    const timepointFilter = timepointId\r\n      ? tp => tp.timepointId === timepointId\r\n      : null;\r\n    const timepoints = this.timepointApi.all(timepointFilter);\r\n    const timepointIds = timepoints.map(t => t.timepointId);\r\n    const PatientID = timepoints[0].PatientID;\r\n    const filter = {\r\n      PatientID,\r\n      timepointIds,\r\n    };\r\n\r\n    log.info('Saving Measurements for timepoints:', timepoints);\r\n    return storeFn(measurementData, filter, server).then(result => {\r\n      log.info('Measurement storage completed');\r\n      return result;\r\n    });\r\n  }\r\n\r\n  calculateLesionNamingNumber(measurements) {\r\n    const sortedMeasurements = measurements.sort((a, b) => {\r\n      if (a.lesionNamingNumber > b.lesionNamingNumber) {\r\n        return 1;\r\n      } else if (a.lesionNamingNumber < b.lesionNamingNumber) {\r\n        return -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    //  Calculate lesion naming number starting from 1 not to miss any measurement (as seen in MM)\r\n    //      A measurement from beginning of the list might be deleted, so a new measurement should replace that\r\n    let i;\r\n    for (i = 1; i < sortedMeasurements.length + 1; i++) {\r\n      if (i < sortedMeasurements[i - 1].lesionNamingNumber) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  }\r\n\r\n  fetch(toolGroupId, filter) {\r\n    if (!this.toolGroups[toolGroupId]) {\r\n      throw new Error(\r\n        `MeasurementApi: No Collection with the id: ${toolGroupId}`\r\n      );\r\n    }\r\n\r\n    let items;\r\n    if (filter) {\r\n      items = this.toolGroups[toolGroupId].filter(filter);\r\n    } else {\r\n      items = this.toolGroups[toolGroupId];\r\n    }\r\n\r\n    return items.map(item => {\r\n      if (item.toolId) {\r\n        return this.tools[item.toolId].find(\r\n          tool => tool._id === item.toolItemId\r\n        );\r\n      }\r\n\r\n      return { lesionNamingNumber: item.lesionNamingNumber };\r\n    });\r\n  }\r\n\r\n  getFirstMeasurement(timepointId) {\r\n    // Get child tools from all included tool groups\r\n    let childTools = [];\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      // Skip the tool groups excluded from case progress\r\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\r\n        return false;\r\n      }\r\n\r\n      childTools = childTools.concat(toolGroup.childTools);\r\n    });\r\n\r\n    // Get all included child tools\r\n    const includedChildTools = childTools.filter(tool =>\r\n      MeasurementApi.isToolIncluded(tool)\r\n    );\r\n\r\n    // Get the first measurement for the given timepoint\r\n    let measurement = undefined;\r\n    includedChildTools.every(tool => {\r\n      measurement = this.tools[tool.id].find(\r\n        t => t.timepointId === timepointId && t.measurementNumber === 1\r\n      );\r\n\r\n      return !measurement;\r\n    });\r\n\r\n    // Return the found measurement object or undefined if not found\r\n    return measurement;\r\n  }\r\n\r\n  lesionExistsAtTimepoints(lesionNamingNumber, toolGroupId, timepointIds) {\r\n    // Retrieve all the data for the given tool group (e.g. 'targets')\r\n    const measurementsAtTimepoint = this.fetch(toolGroupId, tool =>\r\n      timepointIds.includes(tool.timepointId)\r\n    );\r\n\r\n    // Return whether or not any lesion at this timepoint has the same lesionNamingNumber\r\n    return !!measurementsAtTimepoint.find(\r\n      m => m.lesionNamingNumber === lesionNamingNumber\r\n    );\r\n  }\r\n\r\n  isNewLesionsMeasurement(measurementData) {\r\n    if (!measurementData) {\r\n      return;\r\n    }\r\n\r\n    const toolConfig = MeasurementApi.getToolConfiguration(\r\n      measurementData.toolType\r\n    );\r\n    const toolType = toolConfig.tool.parentTool || measurementData.toolType;\r\n    const { timepointApi } = this;\r\n    const currentMeasurement =\r\n      this.tools[toolType].find(tool => tool._id === measurementData._id) || {};\r\n    const timepointId =\r\n      currentMeasurement.timepointId || measurementData.timepointId;\r\n    const lesionNamingNumber =\r\n      currentMeasurement.lesionNamingNumber ||\r\n      measurementData.lesionNamingNumber;\r\n\r\n    // Stop here if the needed information is not set\r\n    if (!timepointApi || !timepointId || !toolConfig) {\r\n      return;\r\n    }\r\n\r\n    const { toolGroupId } = toolConfig;\r\n    const current = timepointApi.timepoints.find(\r\n      tp => tp.timepointId === timepointId\r\n    );\r\n    const initialTimepointIds = timepointApi.initialTimepointIds();\r\n\r\n    // Stop here if there's no initial timepoint, or if the current is any initial\r\n    if (\r\n      !initialTimepointIds ||\r\n      initialTimepointIds.length < 1 ||\r\n      initialTimepointIds.some(\r\n        initialtpid => initialtpid === current.timepointId\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      this.lesionExistsAtTimepoints(\r\n        lesionNamingNumber,\r\n        toolGroupId,\r\n        initialTimepointIds\r\n      ) === false\r\n    );\r\n  }\r\n\r\n  calculateLesionMaxMeasurementNumber(groupId, filter) {\r\n    let measurements = [];\r\n    if (groupId) {\r\n      // Get the measurements of the group\r\n      measurements = this.toolGroups[groupId] || [];\r\n    } else {\r\n      // Get all measurements of all groups\r\n      measurements = Object.keys(this.toolGroups).reduce((acc, val) => {\r\n        acc.push(...this.toolGroups[val]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n\r\n    const sortedMeasurements = measurements.filter(filter).sort((tp1, tp2) => {\r\n      return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\r\n    });\r\n\r\n    for (let i = 0; i < sortedMeasurements.length; i++) {\r\n      const toolGroupMeasurement = sortedMeasurements[i];\r\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\r\n        tool => tool._id === toolGroupMeasurement.toolItemId\r\n      );\r\n      const isNew = this.isNewLesionsMeasurement(measurement);\r\n      if (!isNew) {\r\n        return measurement.measurementNumber;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  calculateNewLesionMaxMeasurementNumber(groupId, filter) {\r\n    const sortedMeasurements = this.toolGroups[groupId]\r\n      .filter(filter)\r\n      .sort((tp1, tp2) => {\r\n        return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\r\n      });\r\n\r\n    for (let i = 0; i < sortedMeasurements.length; i++) {\r\n      const toolGroupMeasurement = sortedMeasurements[i];\r\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\r\n        tool => tool._id === toolGroupMeasurement.toolItemId\r\n      );\r\n      const isNew = this.isNewLesionsMeasurement(measurement);\r\n      if (isNew) {\r\n        return measurement.measurementNumber;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  calculateMeasurementNumber(measurement) {\r\n    const toolGroupId = this.toolsGroupsMap[measurement.toolType];\r\n\r\n    const filter = tool => tool._id !== measurement._id;\r\n\r\n    const isNew = this.isNewLesionsMeasurement(measurement);\r\n\r\n    if (isNew) {\r\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n        'targets',\r\n        filter\r\n      );\r\n      const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n        'nonTargets',\r\n        filter\r\n      );\r\n      const maxNewTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\r\n        'targets',\r\n        filter\r\n      );\r\n      if (toolGroupId === 'targets') {\r\n        return Math.max(\r\n          maxTargetMeasurementNumber,\r\n          maxNonTargetMeasurementNumber,\r\n          maxNewTargetMeasurementNumber\r\n        );\r\n      } else if (toolGroupId === 'nonTargets') {\r\n        const maxNewNonTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\r\n          'nonTargets',\r\n          filter\r\n        );\r\n        return Math.max(\r\n          maxTargetMeasurementNumber,\r\n          maxNonTargetMeasurementNumber,\r\n          maxNewTargetMeasurementNumber,\r\n          maxNewNonTargetMeasurementNumber\r\n        );\r\n      }\r\n    } else {\r\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n        'targets',\r\n        filter\r\n      );\r\n      if (toolGroupId === 'targets') {\r\n        return maxTargetMeasurementNumber;\r\n      } else if (toolGroupId === 'nonTargets') {\r\n        const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\r\n          'nonTargets',\r\n          filter\r\n        );\r\n        return Math.max(\r\n          maxTargetMeasurementNumber,\r\n          maxNonTargetMeasurementNumber\r\n        );\r\n      } else {\r\n        return this.calculateLesionMaxMeasurementNumber(null, filter);\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getPreviousMeasurement(measurementData) {\r\n    if (!measurementData) {\r\n      return;\r\n    }\r\n\r\n    const { timepointId, toolType, lesionNamingNumber } = measurementData;\r\n    if (!timepointId || !toolType || !lesionNamingNumber) {\r\n      return;\r\n    }\r\n\r\n    const toolGroupId = this.toolsGroupsMap[measurementData.toolType];\r\n\r\n    // TODO: Remove TrialPatientLocationUID from here and override it somehow\r\n    // by dependant applications. Here we should use the location attribute instead of the uid\r\n    let filter;\r\n    const uid =\r\n      measurementData.additionalData &&\r\n      measurementData.additionalData.TrialPatientLocationUID;\r\n    if (uid) {\r\n      filter = tool =>\r\n        tool._id !== measurementData._id &&\r\n        tool.additionalData &&\r\n        tool.additionalData.TrialPatientLocationUID === uid;\r\n    } else {\r\n      filter = tool =>\r\n        tool._id !== measurementData._id &&\r\n        tool.lesionNamingNumber === lesionNamingNumber;\r\n    }\r\n\r\n    const childToolTypes = this.toolGroupTools[toolGroupId];\r\n    for (let i = 0; i < childToolTypes.length; i++) {\r\n      const childToolType = childToolTypes[i];\r\n      const toolCollection = this.tools[childToolType];\r\n      const item = toolCollection.find(filter);\r\n\r\n      if (item) {\r\n        return item;\r\n      }\r\n    }\r\n  }\r\n\r\n  hasDuplicateMeasurementNumber(measurementData) {\r\n    if (!measurementData) {\r\n      return;\r\n    }\r\n\r\n    const { toolType, measurementNumber } = measurementData;\r\n    if (!toolType || !measurementNumber) {\r\n      return;\r\n    }\r\n\r\n    const filter = tool =>\r\n      tool._id !== measurementData._id &&\r\n      tool.measurementNumber === measurementData.measurementNumber;\r\n\r\n    return configuration.measurementTools\r\n      .filter(toolGroup => toolGroup.id !== 'temp')\r\n      .some(toolGroup => {\r\n        if (this.toolGroups[toolGroup.id].find(filter)) {\r\n          return true;\r\n        }\r\n        return toolGroup.childTools.some(tool => {\r\n          if (this.tools[tool.id].find(filter)) {\r\n            return true;\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  updateNumbering(collectionToUpdate, propertyFilter, propertyName, increment) {\r\n    collectionToUpdate.filter(propertyFilter).forEach(item => {\r\n      item[propertyName] += increment;\r\n    });\r\n  }\r\n\r\n  updateMeasurementNumberForAllMeasurements(measurement, increment) {\r\n    const filter = tool =>\r\n      tool._id !== measurement._id &&\r\n      tool.measurementNumber >= measurement.measurementNumber;\r\n\r\n    configuration.measurementTools\r\n      .filter(toolGroup => toolGroup.id !== 'temp')\r\n      .forEach(toolGroup => {\r\n        this.updateNumbering(\r\n          this.toolGroups[toolGroup.id],\r\n          filter,\r\n          'measurementNumber',\r\n          increment\r\n        );\r\n\r\n        toolGroup.childTools.forEach(tool => {\r\n          this.updateNumbering(\r\n            this.tools[tool.id],\r\n            filter,\r\n            'measurementNumber',\r\n            increment\r\n          );\r\n        });\r\n      });\r\n  }\r\n\r\n  addMeasurement(toolType, measurement) {\r\n    const toolGroup = this.toolsGroupsMap[toolType];\r\n    const groupCollection = this.toolGroups[toolGroup];\r\n    const collection = this.tools[toolType];\r\n\r\n    // Get the related measurement by the measurement number and use its location if defined\r\n    const relatedMeasurement = collection.find(\r\n      t =>\r\n        t.lesionNamingNumber === measurement.lesionNamingNumber &&\r\n        t.toolType === measurement.toolType\r\n    );\r\n\r\n    // Use the related measurement location if found and defined\r\n    if (relatedMeasurement && relatedMeasurement.location) {\r\n      measurement.location = relatedMeasurement.location;\r\n    }\r\n\r\n    // Use the related measurement description if found and defined\r\n    if (relatedMeasurement && relatedMeasurement.description) {\r\n      measurement.description = relatedMeasurement.description;\r\n    }\r\n\r\n    measurement._id = guid();\r\n\r\n    // Get the timepoint\r\n    let timepoint;\r\n    if (measurement.StudyInstanceUID) {\r\n      timepoint = this.timepointApi.study(measurement.StudyInstanceUID)[0];\r\n    } else {\r\n      const { timepointId } = measurement;\r\n      timepoint = this.timepointApi.timepoints.find(\r\n        t => t.timepointId === timepointId\r\n      );\r\n    }\r\n\r\n    // Preventing errors thrown when non-associated (standalone) study is opened...\r\n    // @TODO: Make sure this logic is correct.\r\n    if (!timepoint) return;\r\n\r\n    // Empty Item is the lesion just added in cornerstoneTools, but does not have measurement data yet\r\n    const emptyItem = groupCollection.find(\r\n      groupTool =>\r\n        !groupTool.toolId && groupTool.timepointId === timepoint.timepointId\r\n    );\r\n\r\n    // Set the timepointId attribute to measurement to make it easier to filter measurements by timepoint\r\n    measurement.timepointId = timepoint.timepointId;\r\n\r\n    // Check if the measurement data is just added by a cornerstone tool and is still empty\r\n    if (emptyItem) {\r\n      // Set relevant initial data and measurement number to the measurement\r\n      measurement.lesionNamingNumber = emptyItem.lesionNamingNumber;\r\n      measurement.measurementNumber = emptyItem.measurementNumber;\r\n\r\n      groupCollection\r\n        .filter(\r\n          groupTool =>\r\n            groupTool.timepointId === timepoint.timepointId &&\r\n            groupTool.lesionNamingNumber === measurement.lesionNamingNumber\r\n        )\r\n        .forEach(groupTool => {\r\n          groupTool.toolId = tool.id;\r\n          groupTool.toolItemId = measurement._id;\r\n          groupTool.createdAt = measurement.createdAt;\r\n          groupTool.measurementNumber = measurement.measurementNumber;\r\n        });\r\n    } else {\r\n      // Handle measurements not added by cornerstone tools and update its number\r\n      const measurementsInTimepoint = groupCollection.filter(\r\n        groupTool => groupTool.timepointId === timepoint.timepointId\r\n      );\r\n      measurement.lesionNamingNumber = this.calculateLesionNamingNumber(\r\n        measurementsInTimepoint\r\n      );\r\n      measurement.measurementNumber =\r\n        measurement.measurementNumber ||\r\n        this.calculateMeasurementNumber(measurement) + 1;\r\n    }\r\n\r\n    // Define an update object to reflect the changes in the collection\r\n    const updateObject = {\r\n      timepointId: timepoint.timepointId,\r\n      lesionNamingNumber: measurement.lesionNamingNumber,\r\n      measurementNumber: measurement.measurementNumber,\r\n    };\r\n\r\n    // Find the matched measurement from other timepoints\r\n    const found = this.getPreviousMeasurement(measurement);\r\n\r\n    // Check if a previous related meausurement was found on other timepoints\r\n    if (found) {\r\n      // Use the same number as the previous measurement\r\n      measurement.lesionNamingNumber = found.lesionNamingNumber;\r\n      measurement.measurementNumber = found.measurementNumber;\r\n\r\n      // TODO: Remove TrialPatientLocationUID from here and override it somehow\r\n      // by dependant applications\r\n\r\n      // Change the update object to set the same number, additionalData,\r\n      // location, label and description to the current measurement\r\n      updateObject.lesionNamingNumber = found.lesionNamingNumber;\r\n      updateObject.measurementNumber = found.measurementNumber;\r\n      updateObject.additionalData = measurement.additionalData || {};\r\n      updateObject.additionalData.TrialPatientLocationUID =\r\n        found.additionalData && found.additionalData.TrialPatientLocationUID;\r\n      updateObject.location = found.location;\r\n      updateObject.label = found.label;\r\n      updateObject.description = found.description;\r\n      updateObject.isSplitLesion = found.isSplitLesion;\r\n      updateObject.isNodal = found.isNodal;\r\n\r\n      const description = getDescription(found, measurement);\r\n      if (description) {\r\n        updateObject.description = description;\r\n      }\r\n    } else if (this.hasDuplicateMeasurementNumber(measurement)) {\r\n      // Update measurementNumber for the measurements with masurementNumber greater or equal than\r\n      //  measurementNumber of the added measurement (except the added one)\r\n      //   only if there is another measurement with the same measurementNumber\r\n      this.updateMeasurementNumberForAllMeasurements(measurement, 1);\r\n    }\r\n\r\n    let addedMeasurement;\r\n\r\n    // Upsert the measurement in collection\r\n    const toolIndex = collection.findIndex(\r\n      tool => tool._id === measurement._id\r\n    );\r\n    if (toolIndex > -1) {\r\n      addedMeasurement = Object.assign({}, collection[toolIndex], updateObject);\r\n      collection[toolIndex] = addedMeasurement;\r\n    } else {\r\n      addedMeasurement = Object.assign({}, measurement, updateObject);\r\n      collection.push(addedMeasurement);\r\n    }\r\n\r\n    if (measurement.isReadOnly) {\r\n      addedMeasurement.isReadOnly = measurement.isReadOnly;\r\n    }\r\n\r\n    if (!emptyItem) {\r\n      // Reflect the entry in the tool group collection\r\n      groupCollection.push({\r\n        toolId: toolType,\r\n        toolItemId: addedMeasurement._id,\r\n        timepointId: timepoint.timepointId,\r\n        StudyInstanceUID: addedMeasurement.StudyInstanceUID,\r\n        createdAt: addedMeasurement.createdAt,\r\n        lesionNamingNumber: addedMeasurement.lesionNamingNumber,\r\n        measurementNumber: addedMeasurement.measurementNumber,\r\n      });\r\n    }\r\n\r\n    // Let others know that the measurements are updated\r\n    this.onMeasurementsUpdated();\r\n\r\n    // TODO: Enable reactivity\r\n    // this.timepointChanged.set(timepoint.timepointId);\r\n\r\n    return addedMeasurement;\r\n  }\r\n\r\n  updateMeasurement(toolType, measurement) {\r\n    const collection = this.tools[toolType];\r\n\r\n    const toolIndex = collection.findIndex(\r\n      tool => tool._id === measurement._id\r\n    );\r\n    if (toolIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    collection[toolIndex] = Object.assign({}, measurement);\r\n\r\n    // Let others know that the measurements are updated\r\n    this.onMeasurementsUpdated();\r\n\r\n    // TODO: Enable reactivity\r\n    // this.timepointChanged.set(timepoint.timepointId);\r\n  }\r\n\r\n  onMeasurementRemoved(toolType, measurement) {\r\n    const { lesionNamingNumber, measurementNumber } = measurement;\r\n\r\n    const toolGroupId = this.toolsGroupsMap[toolType];\r\n    const groupCollection = this.toolGroups[toolGroupId];\r\n\r\n    const groupIndex = groupCollection.findIndex(\r\n      group => group.toolItemId === measurement._id\r\n    );\r\n    if (groupIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    //  Remove the deleted measurement only in its timepoint from the collection\r\n    groupCollection.splice(groupIndex, 1);\r\n\r\n    //  Check which timepoints have the deleted measurement\r\n    const timepointsWithDeletedMeasurement = groupCollection\r\n      .filter(tool => tool.measurementNumber === measurementNumber)\r\n      .map(tool => tool.timepointId);\r\n\r\n    //  Update lesionNamingNumber and measurementNumber only if there is no timepoint with that measurement\r\n    if (timepointsWithDeletedMeasurement.length < 1) {\r\n      //  Decrease lesionNamingNumber of all measurements with lesionNamingNumber greater than lesionNamingNumber of the deleted measurement by 1\r\n      const lesionNamingNumberFilter = tool =>\r\n        tool.lesionNamingNumber >= lesionNamingNumber;\r\n      this.updateNumbering(\r\n        groupCollection,\r\n        lesionNamingNumberFilter,\r\n        'lesionNamingNumber',\r\n        -1\r\n      );\r\n\r\n      const toolGroup = configuration.measurementTools.find(\r\n        tGroup => tGroup.id === toolGroupId\r\n      );\r\n      if (toolGroup && toolGroup.childTools) {\r\n        toolGroup.childTools.forEach(childTool => {\r\n          const collection = this.tools[childTool.id];\r\n          this.updateNumbering(\r\n            collection,\r\n            lesionNamingNumberFilter,\r\n            'lesionNamingNumber',\r\n            -1\r\n          );\r\n        });\r\n      }\r\n\r\n      //  Decrease measurementNumber of all measurements with measurementNumber greater than measurementNumber of the deleted measurement by 1\r\n      this.updateMeasurementNumberForAllMeasurements(measurement, -1);\r\n    }\r\n\r\n    // Synchronize the new tool data\r\n    this.syncMeasurementsAndToolData();\r\n\r\n    // Let others know that the measurements are updated\r\n    this.onMeasurementsUpdated();\r\n\r\n    // TODO: Enable reactivity\r\n    // this.timepointChanged.set(timepoint.timepointId);\r\n  }\r\n\r\n  syncMeasurementsAndToolData() {\r\n    configuration.measurementTools.forEach(toolGroup => {\r\n      // Skip the tool groups excluded from case progress\r\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\r\n        return;\r\n      }\r\n      toolGroup.childTools.forEach(tool => {\r\n        // Skip the tools excluded from case progress\r\n        if (!MeasurementApi.isToolIncluded(tool)) {\r\n          return;\r\n        }\r\n        const measurements = this.tools[tool.id];\r\n        measurements.forEach(measurement => {\r\n          MeasurementApi.syncMeasurementAndToolData(measurement);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteMeasurements(toolType, measurementTypeId, filter) {\r\n    const filterKeys = Object.keys(filter);\r\n    const groupCollection = this.toolGroups[measurementTypeId];\r\n\r\n    // Stop here if it is a temporary toolGroups\r\n    if (!groupCollection) return;\r\n\r\n    // Get the entries information before removing them\r\n    const groupItems = groupCollection.filter(toolGroup => {\r\n      return filterKeys.every(\r\n        filterKey => toolGroup[filterKey] === filter[filterKey]\r\n      );\r\n    });\r\n    const entries = [];\r\n    groupItems.forEach(groupItem => {\r\n      if (!groupItem.toolId) {\r\n        return;\r\n      }\r\n\r\n      const collection = this.tools[groupItem.toolId];\r\n      const toolIndex = collection.findIndex(\r\n        tool => tool._id === groupItem.toolItemId\r\n      );\r\n      if (toolIndex > -1) {\r\n        entries.push(collection[toolIndex]);\r\n        collection.splice(toolIndex, 1);\r\n      }\r\n    });\r\n\r\n    // Stop here if no entries were found\r\n    if (!entries.length) {\r\n      return;\r\n    }\r\n\r\n    // If the filter doesn't have the measurement number, get it from the first entry\r\n    const lesionNamingNumber =\r\n      filter.lesionNamingNumber || entries[0].lesionNamingNumber;\r\n\r\n    // Synchronize the new data with cornerstone tools\r\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n    entries.forEach(entry => {\r\n      const measurementsData = [];\r\n      const { tool } = MeasurementApi.getToolConfiguration(entry.toolType);\r\n      if (Array.isArray(tool.childTools)) {\r\n        tool.childTools.forEach(key => {\r\n          const childMeasurement = entry[key];\r\n          if (!childMeasurement) return;\r\n          measurementsData.push(childMeasurement);\r\n        });\r\n      } else {\r\n        measurementsData.push(entry);\r\n      }\r\n\r\n      measurementsData.forEach(measurementData => {\r\n        const { imagePath, toolType } = measurementData;\r\n        const imageId = getImageIdForImagePath(imagePath);\r\n        if (imageId && toolState[imageId]) {\r\n          const toolData = toolState[imageId][toolType];\r\n          const measurementEntries = toolData && toolData.data;\r\n          const measurementEntry = measurementEntries.find(\r\n            mEntry => mEntry._id === entry._id\r\n          );\r\n          if (measurementEntry) {\r\n            const index = measurementEntries.indexOf(measurementEntry);\r\n            measurementEntries.splice(index, 1);\r\n          }\r\n        }\r\n      });\r\n\r\n      this.onMeasurementRemoved(toolType, entry);\r\n    });\r\n\r\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\r\n      toolState\r\n    );\r\n\r\n    // Synchronize the updated measurements with Cornerstone Tools\r\n    // toolData to make sure the displayed measurements show 'Target X' correctly\r\n    const syncFilter = Object.assign({}, filter);\r\n    delete syncFilter.timepointId;\r\n    delete syncFilter.lesionNamingNumber;\r\n\r\n    const syncFilterKeys = Object.keys(syncFilter);\r\n\r\n    const toolTypes = [...new Set(entries.map(entry => entry.toolType))];\r\n    toolTypes.forEach(toolType => {\r\n      const collection = this.tools[toolType];\r\n      collection\r\n        .filter(tool => {\r\n          return (\r\n            tool.lesionNamingNumber > lesionNamingNumber - 1 &&\r\n            syncFilterKeys.every(\r\n              syncFilterKey => tool[syncFilterKey] === filter[syncFilterKey]\r\n            )\r\n          );\r\n        })\r\n        .forEach(measurement => {\r\n          MeasurementApi.syncMeasurementAndToolData(measurement);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export class BaseCriterion {\r\n  constructor(options, criterionName) {\r\n    this.options = options;\r\n    this.criterionName = criterionName;\r\n  }\r\n\r\n  generateResponse(message, measurements) {\r\n    const passed = !message;\r\n    const isGlobal = !measurements || !measurements.length;\r\n\r\n    return {\r\n      passed,\r\n      isGlobal,\r\n      message,\r\n      measurements,\r\n      criterionName: this.criterionName,\r\n    };\r\n  }\r\n\r\n  getNewTargetNumbers(data) {\r\n    const { options } = this;\r\n    const baselineMeasurementNumbers = [];\r\n    const newTargetNumbers = new Set();\r\n\r\n    if (options.newTarget) {\r\n      data.targets.forEach(target => {\r\n        const { measurementNumber } = target.measurement;\r\n        if (target.timepoint.timepointType === 'baseline') {\r\n          baselineMeasurementNumbers.push(measurementNumber);\r\n        }\r\n      });\r\n      data.targets.forEach(target => {\r\n        const { measurementNumber } = target.measurement;\r\n        if (target.timepoint.timepointType === 'followup') {\r\n          if (!baselineMeasurementNumbers.includes(measurementNumber)) {\r\n            newTargetNumbers.add(measurementNumber);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return newTargetNumbers;\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const LocationSchema = {\r\n  type: 'object',\r\n};\r\n\r\n/* LocationCriterion\r\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\r\n */\r\nexport class LocationCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const items = data.targets.concat(data.nonTargets);\r\n    const measurements = [];\r\n    let message;\r\n\r\n    items.forEach(item => {\r\n      const measurement = item.measurement;\r\n\r\n      if (!measurement.location) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    if (measurements.length) {\r\n      message = 'All measurements should have a location';\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const MaxTargetsPerOrganSchema = {\r\n  type: 'object',\r\n  properties: {\r\n    limit: {\r\n      label: 'Max targets allowed per organ',\r\n      type: 'integer',\r\n      minimum: 1,\r\n    },\r\n    newTarget: {\r\n      label: 'Flag to evaluate only new targets',\r\n      type: 'boolean',\r\n    },\r\n    isNodal: {\r\n      label: 'Filter to evaluate only nodal or extranodal measurements',\r\n      type: 'boolean'\r\n    },\r\n    message: {\r\n      label: 'Message to be displayed in case of nonconformity',\r\n      type: 'string',\r\n    }\r\n  },\r\n  required: ['limit'],\r\n};\r\n\r\n/*\r\n * MaxTargetsPerOrganCriterion\r\n *   Check if the number of target measurements per organ exceeded the limit allowed\r\n * Options:\r\n *   limit: Max targets allowed in study\r\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\r\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\r\n *   message: Message to be displayed in case of nonconformity\r\n */\r\nexport class MaxTargetsPerOrganCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const { options } = this;\r\n    const targetsPerOrgan = {};\r\n    let measurements = [];\r\n\r\n    const newTargetNumbers = this.getNewTargetNumbers(data);\r\n    data.targets.forEach(target => {\r\n      const { measurement } = target;\r\n      const { location, measurementNumber, isSplitLesion, isNodal } = measurement;\r\n\r\n      if (isSplitLesion)\r\n        return;\r\n\r\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\r\n        return;\r\n\r\n      if (!targetsPerOrgan[location]) {\r\n        targetsPerOrgan[location] = new Set();\r\n      }\r\n\r\n      if (!options.newTarget || newTargetNumbers.has(measurementNumber)) {\r\n        targetsPerOrgan[location].add(measurementNumber);\r\n      }\r\n\r\n      if (targetsPerOrgan[location].size > options.limit) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    let message;\r\n    if (measurements.length) {\r\n      const increment = options.newTarget ? 'new ' : '';\r\n      message =\r\n        options.message ||\r\n        `Each organ should not have more than ${\r\n        options.limit\r\n        } ${increment}targets.`;\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const MaxTargetsSchema = {\r\n  type: 'object',\r\n  properties: {\r\n    limit: {\r\n      label: 'Max targets allowed in study',\r\n      type: 'integer',\r\n      minimum: 0,\r\n    },\r\n    newTarget: {\r\n      label: 'Flag to evaluate only new targets',\r\n      type: 'boolean',\r\n    },\r\n    locationIn: {\r\n      label:\r\n        'Filter to evaluate only measurements with the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    locationNotIn: {\r\n      label:\r\n        'Filter to evaluate only measurements without the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    isNodal: {\r\n      label: 'Filter to evaluate only nodal or extranodal measurements',\r\n      type: 'boolean'\r\n    },\r\n    message: {\r\n      label: 'Message to be displayed in case of nonconformity',\r\n      type: 'string',\r\n    }\r\n  },\r\n  required: ['limit'],\r\n};\r\n\r\n/* MaxTargetsCriterion\r\n *   Check if the number of target measurements exceeded the limit allowed\r\n * Options:\r\n *   limit: Max targets allowed in study\r\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\r\n *   locationIn: Filter to evaluate only measurements with the specified locations\r\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\r\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\r\n *   message: Message to be displayed in case of nonconformity\r\n */\r\nexport class MaxTargetsCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const { options } = this;\r\n\r\n    const newTargetNumbers = this.getNewTargetNumbers(data);\r\n    const measurementNumbers = [];\r\n    data.targets.forEach(target => {\r\n      const { location, measurementNumber, isSplitLesion, isNodal } = target.measurement;\r\n\r\n      if (isSplitLesion)\r\n        return;\r\n\r\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\r\n        return;\r\n\r\n      if (options.newTarget && !newTargetNumbers.has(measurementNumber))\r\n        return;\r\n\r\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\r\n        return;\r\n\r\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\r\n        return;\r\n\r\n      measurementNumbers.push(measurementNumber);\r\n    });\r\n\r\n    let lesionType = '';\r\n    if (typeof options.isNodal === 'boolean') {\r\n      lesionType = options.isNodal ? 'nodal ' : 'extranodal ';\r\n    }\r\n\r\n    let message;\r\n    if (measurementNumbers.length > options.limit) {\r\n      const increment = options.newTarget ? 'new ' : '';\r\n      const plural = options.limit === 1 ? '' : 's';\r\n      const amount = options.limit === 0 ? '' : `more than ${options.limit}`;\r\n      message =\r\n        options.message ||\r\n        `The study should not have ${amount} ${increment}${lesionType}target${plural}.`;\r\n    }\r\n\r\n    return this.generateResponse(message);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const MeasurementsLengthSchema = {\r\n  type: 'object',\r\n  properties: {\r\n    longAxis: {\r\n      label: 'Minimum length of long axis',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    shortAxis: {\r\n      label: 'Minimum length of short axis',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    longAxisSliceThicknessMultiplier: {\r\n      label: 'Length of long axis multiplier',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    shortAxisSliceThicknessMultiplier: {\r\n      label: 'Length of short axis multiplier',\r\n      type: 'number',\r\n      minimum: 0,\r\n    },\r\n    modalityIn: {\r\n      label:\r\n        'Filter to evaluate only measurements with the specified modalities',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    modalityNotIn: {\r\n      label:\r\n        'Filter to evaluate only measurements without the specified modalities',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    locationIn: {\r\n      label:\r\n        'Filter to evaluate only measurements with the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    locationNotIn: {\r\n      label:\r\n        'Filter to evaluate only measurements without the specified locations',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    isNodal: {\r\n      label: 'Filter to evaluate only nodal or extranodal measurements',\r\n      type: 'boolean',\r\n    },\r\n    message: {\r\n      label: 'Message to be displayed in case of nonconformity',\r\n      type: 'string',\r\n    },\r\n  },\r\n  anyOf: [\r\n    { required: ['message', 'longAxis'] },\r\n    { required: ['message', 'shortAxis'] },\r\n    { required: ['message', 'longAxisSliceThicknessMultiplier'] },\r\n    { required: ['message', 'shortAxisSliceThicknessMultiplier'] },\r\n  ],\r\n};\r\n\r\n/*\r\n * MeasurementsLengthCriterion\r\n *   Check the measurements of all bidirectional tools based on\r\n *   short axis, long axis, modalities, location and slice thickness\r\n * Options:\r\n *   longAxis: Minimum length of long axis\r\n *   shortAxis: Minimum length of short axis\r\n *   longAxisSliceThicknessMultiplier: Length of long axis multiplier\r\n *   shortAxisSliceThicknessMultiplier: Length of short axis multiplier\r\n *   modalityIn: Filter to evaluate only measurements with the specified modalities\r\n *   modalityNotIn: Filter to evaluate only measurements without the specified modalities\r\n *   locationIn: Filter to evaluate only measurements with the specified locations\r\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\r\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\r\n *   message: Message to be displayed in case of nonconformity\r\n */\r\nexport class MeasurementsLengthCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    let message;\r\n    let measurements = [];\r\n    const { options } = this;\r\n    const longMultiplier = options.longAxisSliceThicknessMultiplier;\r\n    const shortMultiplier = options.shortAxisSliceThicknessMultiplier;\r\n\r\n    data.targets.forEach(item => {\r\n      const { metadata, measurement } = item;\r\n      const { location } = measurement;\r\n\r\n      let { longestDiameter, shortestDiameter, isNodal } = measurement;\r\n      if (measurement.childToolsCount) {\r\n        const child = measurement.bidirectional;\r\n        longestDiameter = (child && child.longestDiameter) || 0;\r\n        shortestDiameter = (child && child.shortestDiameter) || 0;\r\n      }\r\n\r\n      const { SliceThickness } = metadata;\r\n\r\n      const Modality = metadata.getTagValue('Modality') || '';\r\n\r\n      // Stop here if the measurement does not match the Modality and location filters\r\n      if (\r\n        typeof isNodal === 'boolean' &&\r\n        typeof options.isNodal === 'boolean' &&\r\n        options.isNodal !== isNodal\r\n      )\r\n        return;\r\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\r\n        return;\r\n      if (options.modalityIn && options.modalityIn.indexOf(Modality) === -1)\r\n        return;\r\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\r\n        return;\r\n      if (options.modalityNotIn && options.modalityNotIn.indexOf(Modality) > -1)\r\n        return;\r\n\r\n      // Check the measurement length\r\n      const failed =\r\n        (options.longAxis && longestDiameter < options.longAxis) ||\r\n        (options.shortAxis && shortestDiameter < options.shortAxis) ||\r\n        (longMultiplier &&\r\n          !isNaN(SliceThickness) &&\r\n          longestDiameter < longMultiplier * SliceThickness) ||\r\n        (shortMultiplier &&\r\n          !isNaN(SliceThickness) &&\r\n          shortestDiameter < shortMultiplier * SliceThickness);\r\n\r\n      // Mark this measurement as invalid if some of the checks have failed\r\n      if (failed) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    // Use the options' message if some measurement is invalid\r\n    if (measurements.length) {\r\n      message = options.message;\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const ModalitySchema = {\r\n  type: 'object',\r\n  properties: {\r\n    method: {\r\n      label: 'Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities',\r\n      type: 'string',\r\n      enum: ['allow', 'deny'],\r\n    },\r\n    measurementTypes: {\r\n      label: 'List of measurement types that will be evaluated',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n    modalities: {\r\n      label: 'List of allowed/denied modalities',\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n  },\r\n  required: ['method', 'modalities'],\r\n};\r\n\r\n/*\r\n * ModalityCriteria\r\n *   Check if a Modality is allowed or denied\r\n * Options:\r\n *   method (string): Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities\r\n *   measurementTypes (string[]): List of measurement types that will be evaluated\r\n *   modalities (string[]): List of allowed/denied modalities\r\n */\r\nexport class ModalityCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const measurementTypes = this.options.measurementTypes || ['targets'];\r\n    const modalitiesSet = new Set(this.options.modalities);\r\n    const validationMethod = this.options.method;\r\n    const measurements = [];\r\n    const invalidModalities = new Set();\r\n    let message;\r\n\r\n    measurementTypes.forEach(measurementType => {\r\n      const items = data[measurementType];\r\n\r\n      items.forEach(item => {\r\n        const { measurement, metadata } = item;\r\n        const Modality = metadata.getTagValue('Modality') || '';\r\n\r\n        if (\r\n          (validationMethod === 'allow' && !modalitiesSet.has(Modality)) ||\r\n          (validationMethod === 'deny' && modalitiesSet.has(Modality))\r\n        ) {\r\n          measurements.push(measurement);\r\n          invalidModalities.add(Modality);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (measurements.length) {\r\n      const uniqueModalities = Array.from(invalidModalities);\r\n      const uniqueModalitiesText = uniqueModalities.join(', ');\r\n      const modalityText =\r\n        uniqueModalities.length > 1 ? 'modalities' : 'Modality';\r\n\r\n      message = `The ${modalityText} ${uniqueModalitiesText} should not be used as a method of measurement`;\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const NonTargetResponseSchema = {\r\n  type: 'object',\r\n};\r\n\r\n/* NonTargetResponseCriterion\r\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\r\n */\r\nexport class NonTargetResponseCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const items = data.nonTargets;\r\n    const measurements = [];\r\n    let message;\r\n\r\n    items.forEach(item => {\r\n      const measurement = item.measurement;\r\n      const response = (measurement.response || '').toLowerCase();\r\n\r\n      if (response !== 'present') {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    if (measurements.length) {\r\n      message = 'Non-targets can only be assessed as \"present\"';\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './BaseCriterion';\r\n\r\nexport const TargetTypeSchema = {\r\n  type: 'object',\r\n};\r\n\r\n/* TargetTypeCriterion\r\n *   Check if the there are non-bidirectional target measurements on baseline\r\n */\r\nexport class TargetTypeCriterion extends BaseCriterion {\r\n  constructor(...props) {\r\n    super(...props);\r\n  }\r\n\r\n  evaluate(data) {\r\n    const items = data.targets;\r\n    const measurements = [];\r\n    let message;\r\n\r\n    items.forEach(item => {\r\n      const measurement = item.measurement;\r\n\r\n      if (\r\n        measurement.toolType !== 'Bidirectional' &&\r\n        !measurement.bidirectional\r\n      ) {\r\n        measurements.push(measurement);\r\n      }\r\n    });\r\n\r\n    if (measurements.length) {\r\n      message =\r\n        'Target lesions must have measurements (cannot be assessed as CR, UN/NE, EX)';\r\n    }\r\n\r\n    return this.generateResponse(message, measurements);\r\n  }\r\n}\r\n","import { BaseCriterion } from './criteria/BaseCriterion';\r\nimport * as initialCriteria from './criteria';\r\nimport Ajv from 'ajv';\r\n\r\nconst Criteria = Object.assign({}, initialCriteria);\r\n\r\nexport class CriteriaEvaluator {\r\n  constructor(criteriaObject) {\r\n    const criteriaValidator = this.getCriteriaValidator();\r\n    this.criteria = [];\r\n\r\n    if (!criteriaValidator(criteriaObject)) {\r\n      let message = '';\r\n      criteriaValidator.errors.forEach(error => {\r\n        message += `\\noptions${error.dataPath} ${error.message}`;\r\n      });\r\n      throw new Error(message);\r\n    }\r\n\r\n    Object.keys(criteriaObject).forEach(criterionkey => {\r\n      const optionsObject = criteriaObject[criterionkey];\r\n      const Criterion = Criteria[`${criterionkey}Criterion`];\r\n      const optionsArray =\r\n        optionsObject instanceof Array ? optionsObject : [optionsObject];\r\n      optionsArray.forEach(options =>\r\n        this.criteria.push(new Criterion(options, criterionkey))\r\n      );\r\n    });\r\n  }\r\n\r\n  getMaxTargets(newTarget = false) {\r\n    let result = 0;\r\n    this.criteria.forEach(criterion => {\r\n      const newTargetMatch = newTarget === !!criterion.options.newTarget;\r\n      if (criterion instanceof Criteria.MaxTargetsCriterion && newTargetMatch) {\r\n        const { limit } = criterion.options;\r\n        if (limit > result) {\r\n          result = limit;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getCriteriaValidator() {\r\n    if (CriteriaEvaluator.criteriaValidator) {\r\n      return CriteriaEvaluator.criteriaValidator;\r\n    }\r\n\r\n    const schema = {\r\n      properties: {},\r\n      definitions: {},\r\n    };\r\n\r\n    Object.keys(Criteria).forEach(key => {\r\n      const Criterion = Criteria[key];\r\n      if (Criterion.prototype instanceof BaseCriterion) {\r\n        const criterionkey = key.replace(/Criterion$/, '');\r\n        const criterionDefinition = `#/definitions/${criterionkey}`;\r\n\r\n        schema.definitions[criterionkey] = Criteria[`${criterionkey}Schema`];\r\n        schema.properties[criterionkey] = {\r\n          oneOf: [\r\n            { $ref: criterionDefinition },\r\n            {\r\n              type: 'array',\r\n              items: {\r\n                $ref: criterionDefinition,\r\n              },\r\n            },\r\n          ],\r\n        };\r\n      }\r\n    });\r\n\r\n    CriteriaEvaluator.criteriaValidator = new Ajv().compile(schema);\r\n    return CriteriaEvaluator.criteriaValidator;\r\n  }\r\n\r\n  evaluate(data) {\r\n    const nonconformities = [];\r\n    this.criteria.forEach(criterion => {\r\n      const criterionResult = criterion.evaluate(data);\r\n      if (!criterionResult.passed) {\r\n        nonconformities.push(criterionResult);\r\n      }\r\n    });\r\n    return nonconformities;\r\n  }\r\n\r\n  static setCriterion(criterionKey, criterionDefinitions) {\r\n    Criteria[criterionKey] = criterionDefinitions;\r\n  }\r\n}\r\n","import * as recistEvaluation from './recist.json';\r\n\r\nexport const recist11 = recistEvaluation;\r\n","import { CriteriaEvaluator } from './CriteriaEvaluator';\r\nimport * as initialEvaluations from './evaluations';\r\nimport log from '../../log';\r\n\r\nconst evaluations = Object.assign({}, initialEvaluations);\r\n\r\nconst BASELINE = 'baseline';\r\nconst FOLLOWUP = 'followup';\r\nconst BOTH = 'both';\r\nconst TARGETS = 'targets';\r\nconst NONTARGETS = 'nonTargets';\r\n\r\nclass ConformanceCriteria {\r\n  constructor(measurementApi, timepointApi, options = {}) {\r\n    this.measurementApi = measurementApi;\r\n    this.timepointApi = timepointApi;\r\n    this.nonconformities = [];\r\n    this.groupedNonConformities = [];\r\n    this.maxTargets = null;\r\n    this.maxNewTargets = null;\r\n    this.options = options;\r\n  }\r\n\r\n  loadStudy(StudyInstanceUID) {\r\n    if (typeof this.options.loadStudy !== 'function') {\r\n      throw new Error('loadStudy callback is not defined');\r\n    }\r\n\r\n    return this.options.loadStudy(null, StudyInstanceUID);\r\n  }\r\n\r\n  async validate(trialCriteriaType) {\r\n    const baselinePromise = this.getData(BASELINE);\r\n    const followupPromise = this.getData(FOLLOWUP);\r\n    const [baselineData, followupData] = await Promise.all([\r\n      baselinePromise,\r\n      followupPromise,\r\n    ]);\r\n    const mergedData = {\r\n      targets: [],\r\n      nonTargets: [],\r\n    };\r\n\r\n    mergedData.targets = mergedData.targets.concat(baselineData.targets);\r\n    mergedData.targets = mergedData.targets.concat(followupData.targets);\r\n    mergedData.nonTargets = mergedData.nonTargets.concat(\r\n      baselineData.nonTargets\r\n    );\r\n    mergedData.nonTargets = mergedData.nonTargets.concat(\r\n      followupData.nonTargets\r\n    );\r\n\r\n    this.maxTargets = null;\r\n    this.maxNewTargets = null;\r\n    const resultBoth = this.validateTimepoint(\r\n      BOTH,\r\n      trialCriteriaType,\r\n      mergedData\r\n    );\r\n    const resultBaseline = this.validateTimepoint(\r\n      BASELINE,\r\n      trialCriteriaType,\r\n      baselineData\r\n    );\r\n    const resultFollowup = this.validateTimepoint(\r\n      FOLLOWUP,\r\n      trialCriteriaType,\r\n      followupData\r\n    );\r\n    const nonconformities = resultBaseline\r\n      .concat(resultFollowup)\r\n      .concat(resultBoth);\r\n    const groupedNonConformities = this.groupNonConformities(nonconformities);\r\n\r\n    // Keep both? Group the data only on viewer/measurementTable views?\r\n    // Work with not grouped data (worse lookup performance on measurementTableRow)?\r\n    this.nonconformities = nonconformities;\r\n    this.groupedNonConformities = groupedNonConformities;\r\n\r\n    console.warn('nonconformities');\r\n    console.warn(nonconformities);\r\n    console.warn('groupedNonConformities');\r\n    console.warn(groupedNonConformities);\r\n\r\n    return nonconformities;\r\n  }\r\n\r\n  groupNonConformities(nonconformities) {\r\n    const groups = {};\r\n    const toolsGroupsMap = this.measurementApi.toolsGroupsMap;\r\n\r\n    nonconformities.forEach(nonConformity => {\r\n      if (nonConformity.isGlobal) {\r\n        groups.globals = groups.globals || { messages: [] };\r\n        groups.globals.messages.push(nonConformity.message);\r\n\r\n        return;\r\n      }\r\n\r\n      nonConformity.measurements.forEach(measurement => {\r\n        const groupName = toolsGroupsMap[measurement.toolType];\r\n        groups[groupName] = groups[groupName] || { measurementNumbers: {} };\r\n\r\n        const group = groups[groupName];\r\n        const measureNumber = measurement.measurementNumber;\r\n        let measurementNumbers = group.measurementNumbers[measureNumber];\r\n\r\n        if (!measurementNumbers) {\r\n          measurementNumbers = group.measurementNumbers[measureNumber] = {\r\n            messages: [],\r\n            measurements: [],\r\n          };\r\n        }\r\n\r\n        measurementNumbers.messages.push(nonConformity.message);\r\n        measurementNumbers.measurements.push(measurement);\r\n      });\r\n    });\r\n\r\n    return groups;\r\n  }\r\n\r\n  validateTimepoint(timepointType, trialCriteriaType, data) {\r\n    const evaluators = this.getEvaluators(timepointType, trialCriteriaType);\r\n    let nonconformities = [];\r\n\r\n    evaluators.forEach(evaluator => {\r\n      const maxTargets = evaluator.getMaxTargets(false);\r\n      const maxNewTargets = evaluator.getMaxTargets(true);\r\n      if (maxTargets) {\r\n        this.maxTargets = maxTargets;\r\n      }\r\n\r\n      if (maxNewTargets) {\r\n        this.maxNewTargets = maxNewTargets;\r\n      }\r\n\r\n      const result = evaluator.evaluate(data);\r\n\r\n      if (result.length > 0) {\r\n        result.forEach(resultItem => {\r\n          resultItem.timepointType = timepointType;\r\n        });\r\n      }\r\n\r\n      nonconformities = nonconformities.concat(result);\r\n    });\r\n\r\n    return nonconformities;\r\n  }\r\n\r\n  getEvaluators(timepointType, trialCriteriaType) {\r\n    const evaluators = [];\r\n    console.warn(evaluations);\r\n    const trialCriteriaTypeId = trialCriteriaType.id.toLowerCase();\r\n    const evaluation = evaluations[trialCriteriaTypeId];\r\n\r\n    if (evaluation) {\r\n      const evaluationTimepoint = evaluation[timepointType];\r\n\r\n      if (evaluationTimepoint) {\r\n        evaluators.push(new CriteriaEvaluator(evaluationTimepoint));\r\n      }\r\n    }\r\n\r\n    return evaluators;\r\n  }\r\n\r\n  /*\r\n   * Build the data that will be used to do the conformance criteria checks\r\n   */\r\n  async getData(timepointType) {\r\n    const data = {\r\n      targets: [],\r\n      nonTargets: [],\r\n    };\r\n\r\n    const studyPromises = [];\r\n\r\n    const fillData = measurementType => {\r\n      const measurements = this.measurementApi.fetch(measurementType);\r\n\r\n      measurements.forEach(measurement => {\r\n        const { StudyInstanceUID } = measurement;\r\n\r\n        const timepointId = measurement.timepointId;\r\n        const timepoint =\r\n          timepointId &&\r\n          this.timepointApi.timepoints.find(a => a.timepointId === timepointId);\r\n\r\n        if (\r\n          !timepoint ||\r\n          (timepointType !== BOTH && timepoint.timepointType !== timepointType)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        const promise = this.loadStudy(StudyInstanceUID);\r\n        promise.then(\r\n          studyMetadata => {\r\n            data[measurementType].push({\r\n              measurement,\r\n              metadata: studyMetadata.getFirstInstance(),\r\n              timepoint,\r\n            });\r\n          },\r\n          error => {\r\n            throw new Error(error);\r\n          }\r\n        );\r\n        studyPromises.push(promise);\r\n      });\r\n    };\r\n\r\n    fillData(TARGETS);\r\n    fillData(NONTARGETS);\r\n\r\n    await Promise.all(studyPromises);\r\n\r\n    return data;\r\n  }\r\n\r\n  static setEvaluationDefinitions(evaluationKey, evaluationDefinitions) {\r\n    evaluations[evaluationKey] = evaluationDefinitions;\r\n  }\r\n}\r\n\r\nexport default ConformanceCriteria;\r\n//OHIF.measurements.ConformanceCriteria = ConformanceCriteria;\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nexport default function(element, imageId) {\r\n  if (!imageId) {\r\n    // Get the Cornerstone imageId\r\n    const enabledElement = cornerstone.getEnabledElement(element);\r\n    imageId = enabledElement.image.imageId;\r\n  }\r\n\r\n  // Get StudyInstanceUID & PatientID\r\n  const {\r\n    StudyInstanceUID,\r\n    PatientID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n  } = cornerstone.metaData.get('instance', imageId);\r\n\r\n  const splitImageId = imageId.split('&frame');\r\n  const frameIndex =\r\n    splitImageId[1] !== undefined ? Number(splitImageId[1]) : 0;\r\n\r\n  const imagePath = [\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex,\r\n  ].join('_');\r\n\r\n  return {\r\n    PatientID,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex,\r\n    imagePath,\r\n  };\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nexport default function refreshCornerstoneViewports() {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport user from '../../user';\r\nimport getImageAttributes from '../lib/getImageAttributes';\r\nimport getLabel from '../lib/getLabel';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function handleSingleMeasurementAdded({ eventData, tool }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData, toolType } = eventData;\r\n\r\n  const collection = measurementApi.tools[toolType];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  // Stop here if there's no measurement data or if it was cancelled\r\n  if (!measurementData || measurementData.cancelled) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementAdded');\r\n\r\n  const imageAttributes = getImageAttributes(eventData.element);\r\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\r\n    lesionNamingNumber: measurementData.lesionNamingNumber,\r\n    userId: user.getUserId(),\r\n    toolType,\r\n  });\r\n\r\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\r\n  Object.assign(measurementData, addedMeasurement);\r\n\r\n  const measurementLabel = getLabel(measurementData);\r\n  if (measurementLabel) {\r\n    measurementData.labels = [measurementLabel];\r\n  }\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport user from '../../user';\r\nimport getImageAttributes from '../lib/getImageAttributes';\r\nimport getLabel from '../lib/getLabel';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData } = eventData;\r\n\r\n  const collection = measurementApi.tools[tool.parentTool];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  // Stop here if there's no measurement data or if it was cancelled\r\n  if (!measurementData || measurementData.cancelled) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementAdded');\r\n\r\n  const imageAttributes = getImageAttributes(eventData.element);\r\n\r\n  const additionalProperties = Object.assign(imageAttributes, {\r\n    userId: user.getUserId(),\r\n  });\r\n\r\n  const childMeasurement = Object.assign(\r\n    {},\r\n    measurementData,\r\n    additionalProperties\r\n  );\r\n\r\n  const parentMeasurement = collection.find(\r\n    t =>\r\n      t.toolType === tool.parentTool &&\r\n      t.PatientID === imageAttributes.PatientID &&\r\n      t[tool.attribute] === null\r\n  );\r\n\r\n  // Check if a measurement to fit this child tool already exists\r\n  if (parentMeasurement) {\r\n    const key = tool.attribute;\r\n\r\n    // Add the createdAt attribute\r\n    childMeasurement.createdAt = new Date();\r\n\r\n    // Update the parent measurement\r\n    parentMeasurement[key] = childMeasurement;\r\n    parentMeasurement.childToolsCount =\r\n      (parentMeasurement.childToolsCount || 0) + 1;\r\n    measurementApi.updateMeasurement(tool.parentTool, parentMeasurement);\r\n\r\n    // Update the measurementData ID and lesionNamingNumber\r\n    measurementData._id = parentMeasurement._id;\r\n    measurementData.lesionNamingNumber = parentMeasurement.lesionNamingNumber;\r\n  } else {\r\n    const measurement = {\r\n      toolType: tool.parentTool,\r\n      lesionNamingNumber: measurementData.lesionNamingNumber,\r\n      userId: user.getUserId(),\r\n      PatientID: imageAttributes.PatientID,\r\n      StudyInstanceUID: imageAttributes.StudyInstanceUID,\r\n    };\r\n\r\n    measurement[tool.attribute] = Object.assign(\r\n      {},\r\n      measurementData,\r\n      additionalProperties\r\n    );\r\n\r\n    const addedMeasurement = measurementApi.addMeasurement(\r\n      tool.parentTool,\r\n      measurement\r\n    );\r\n    Object.assign(measurementData, addedMeasurement);\r\n  }\r\n\r\n  const measurementLabel = getLabel(measurementData);\r\n  if (measurementLabel) {\r\n    measurementData.labels = [measurementLabel];\r\n  }\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData, toolType } = eventData;\r\n\r\n  const collection = measurementApi.tools[toolType];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementModified');\r\n  let measurement = collection.find(t => t._id === measurementData._id);\r\n\r\n  // Stop here if the measurement is already deleted\r\n  if (!measurement) return;\r\n\r\n  measurement = Object.assign(measurement, measurementData);\r\n  measurement.viewport = cornerstone.getViewport(eventData.element);\r\n\r\n  measurementApi.updateMeasurement(toolType, measurement);\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const { measurementData } = eventData;\r\n\r\n  const collection = measurementApi.tools[tool.parentTool];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  log.info('CornerstoneToolsMeasurementModified');\r\n\r\n  const measurement = collection.find(t => t._id === measurementData._id);\r\n  let childMeasurement = measurement && measurement[tool.attribute];\r\n\r\n  // Stop here if the measurement is already deleted\r\n  if (!childMeasurement) return;\r\n\r\n  childMeasurement = Object.assign(childMeasurement, measurementData);\r\n  childMeasurement.viewport = cornerstone.getViewport(eventData.element);\r\n\r\n  // Update the parent measurement\r\n  measurement[tool.attribute] = childMeasurement;\r\n  measurementApi.updateMeasurement(tool.parentTool, measurement);\r\n\r\n  // TODO: Notify about the last activated measurement\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function handleSingleMeasurementRemoved({\r\n  eventData,\r\n  tool,\r\n  toolGroupId,\r\n  toolGroup,\r\n}) {\r\n  log.info('CornerstoneToolsMeasurementRemoved');\r\n  const { measurementData, toolType } = eventData;\r\n\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const collection = measurementApi.tools[toolType];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  const measurementTypeId = measurementApi.toolsGroupsMap[toolType];\r\n  const measurement = collection.find(t => t._id === measurementData._id);\r\n\r\n  // Stop here if the measurement is already gone or never existed\r\n  if (!measurement) return;\r\n\r\n  // Remove all the measurements with the given type and number\r\n  const { lesionNamingNumber, timepointId } = measurement;\r\n  measurementApi.deleteMeasurements(toolType, measurementTypeId, {\r\n    lesionNamingNumber,\r\n    timepointId,\r\n  });\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport { MeasurementApi } from '../classes';\r\nimport log from '../../log';\r\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\r\n\r\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\r\n  log.info('CornerstoneToolsMeasurementRemoved');\r\n  const { measurementData } = eventData;\r\n\r\n  const measurementApi = MeasurementApi.Instance;\r\n  if (!measurementApi) {\r\n    log.warn('Measurement API is not initialized');\r\n  }\r\n\r\n  const collection = measurementApi.tools[tool.parentTool];\r\n\r\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\r\n  if (!collection) return;\r\n\r\n  const measurementIndex = collection.findIndex(\r\n    t => t._id === measurementData._id\r\n  );\r\n  const measurement =\r\n    measurementIndex > -1 ? collection[measurementIndex] : null;\r\n\r\n  // Stop here if the measurement is already gone or never existed\r\n  if (!measurement) return;\r\n\r\n  if (measurement.childToolsCount === 1) {\r\n    // Remove the measurement\r\n    collection.splice(measurementIndex, 1);\r\n    measurementApi.onMeasurementRemoved(tool.parentTool, measurement);\r\n  } else {\r\n    // Update the measurement\r\n    measurement[tool.attribute] = null;\r\n    measurement.childToolsCount = (measurement.childToolsCount || 0) - 1;\r\n    measurementApi.updateMeasurement(tool.parentTool, measurement);\r\n  }\r\n\r\n  // TODO: This is very hacky, but will work for now\r\n  refreshCornerstoneViewports();\r\n\r\n  if (MeasurementApi.isToolIncluded(tool)) {\r\n    // TODO: Notify that viewer suffered changes\r\n  }\r\n}\r\n","import { MeasurementApi } from '../classes';\r\nimport handleSingleMeasurementAdded from './handleSingleMeasurementAdded';\r\nimport handleChildMeasurementAdded from './handleChildMeasurementAdded';\r\nimport handleSingleMeasurementModified from './handleSingleMeasurementModified';\r\nimport handleChildMeasurementModified from './handleChildMeasurementModified';\r\nimport handleSingleMeasurementRemoved from './handleSingleMeasurementRemoved';\r\nimport handleChildMeasurementRemoved from './handleChildMeasurementRemoved';\r\n\r\nconst getEventData = event => {\r\n  const eventData = event.detail;\r\n  if (eventData.toolName) {\r\n    eventData.toolType = eventData.toolName;\r\n  }\r\n\r\n  return eventData;\r\n};\r\n\r\nconst MeasurementHandlers = {\r\n  handleSingleMeasurementAdded,\r\n  handleChildMeasurementAdded,\r\n  handleSingleMeasurementModified,\r\n  handleChildMeasurementModified,\r\n  handleSingleMeasurementRemoved,\r\n  handleChildMeasurementRemoved,\r\n\r\n  onAdded(event) {\r\n    const eventData = getEventData(event);\r\n    const { toolType } = eventData;\r\n    const {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    } = MeasurementApi.getToolConfiguration(toolType);\r\n    const params = {\r\n      eventData,\r\n      tool,\r\n      toolGroupId,\r\n      toolGroup,\r\n    };\r\n\r\n    if (!tool) return;\r\n\r\n    if (tool.parentTool) {\r\n      handleChildMeasurementAdded(params);\r\n    } else {\r\n      handleSingleMeasurementAdded(params);\r\n    }\r\n  },\r\n\r\n  onModified(event) {\r\n    const eventData = getEventData(event);\r\n    const { toolType } = eventData;\r\n    const {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    } = MeasurementApi.getToolConfiguration(toolType);\r\n    const params = {\r\n      eventData,\r\n      tool,\r\n      toolGroupId,\r\n      toolGroup,\r\n    };\r\n\r\n    if (!tool) return;\r\n\r\n    if (tool.parentTool) {\r\n      handleChildMeasurementModified(params);\r\n    } else {\r\n      handleSingleMeasurementModified(params);\r\n    }\r\n  },\r\n\r\n  onRemoved(event) {\r\n    const eventData = getEventData(event);\r\n    const { toolType } = eventData;\r\n    const {\r\n      toolGroupId,\r\n      toolGroup,\r\n      tool,\r\n    } = MeasurementApi.getToolConfiguration(toolType);\r\n    const params = {\r\n      eventData,\r\n      tool,\r\n      toolGroupId,\r\n      toolGroup,\r\n    };\r\n\r\n    if (!tool) return;\r\n\r\n    if (tool.parentTool) {\r\n      handleChildMeasurementRemoved(params);\r\n    } else {\r\n      handleSingleMeasurementRemoved(params);\r\n    }\r\n  },\r\n};\r\n\r\nexport default MeasurementHandlers;\r\n","import { bidirectional, targetCR, targetUN, targetNE } from '../tools';\r\n\r\nexport const targets = {\r\n  id: 'targets',\r\n  name: 'Targets',\r\n  childTools: [bidirectional, targetCR, targetUN, targetNE],\r\n  options: {\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","import { nonTarget } from '../tools';\r\n\r\nexport const nonTargets = {\r\n  id: 'nonTargets',\r\n  name: 'Non-Targets',\r\n  childTools: [nonTarget],\r\n  options: {\r\n    caseProgress: {\r\n      include: true,\r\n      evaluate: true,\r\n    },\r\n  },\r\n};\r\n","import { length, ellipticalRoi } from '../tools';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst childTools = cloneDeep([length, ellipticalRoi]);\r\n\r\n// Exclude temp tools from case progress\r\nchildTools.forEach(childTool => {\r\n  childTool.options = Object.assign({}, childTool.options, {\r\n    caseProgress: {\r\n      include: false,\r\n      evaluate: false,\r\n    },\r\n  });\r\n});\r\n\r\nexport const temp = {\r\n  id: 'temp',\r\n  name: 'Temporary',\r\n  childTools,\r\n  options: {\r\n    caseProgress: {\r\n      include: false,\r\n      evaluate: false,\r\n    },\r\n  },\r\n};\r\n","import { targets } from './toolGroups/targets';\r\nimport { nonTargets } from './toolGroups/nonTargets';\r\nimport { temp } from './toolGroups/temp';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst ltTools = cloneDeep([targets, nonTargets, temp]);\r\n\r\nltTools.forEach(toolGroup => {\r\n  toolGroup.childTools.forEach(tool => {\r\n    tool.toolGroup = toolGroup.id;\r\n  });\r\n});\r\n\r\nexport default ltTools;\r\n","import * as tools from './tools';\r\n\r\nimport { MeasurementApi, TimepointApi } from './classes';\r\nimport { ConformanceCriteria } from './conformance';\r\nimport MeasurementHandlers from './measurementHandlers';\r\nimport getDescription from './lib/getDescription';\r\nimport getImageAttributes from './lib/getImageAttributes';\r\nimport getImageIdForImagePath from './lib/getImageIdForImagePath';\r\nimport getLabel from './lib/getLabel';\r\nimport ltTools from './ltTools';\r\n\r\nconst measurements = {\r\n  TimepointApi,\r\n  MeasurementApi,\r\n  ConformanceCriteria,\r\n  MeasurementHandlers,\r\n  ltTools,\r\n  tools,\r\n  getLabel,\r\n  getDescription,\r\n  getImageAttributes,\r\n  getImageIdForImagePath,\r\n};\r\n\r\nexport default measurements;\r\n","import DICOMWeb from '../../../DICOMWeb/';\r\nimport { api } from 'dicomweb-client';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\n\r\n/**\r\n * Parses data returned from a QIDO search and transforms it into\r\n * an array of series that are present in the study\r\n *\r\n * @param server The DICOM server\r\n * @param StudyInstanceUID\r\n * @param resultData\r\n * @returns {Array} Series List\r\n */\r\nfunction resultDataToStudyMetadata(server, StudyInstanceUID, resultData) {\r\n  const seriesMap = {};\r\n  const series = [];\r\n\r\n  resultData.forEach(function(instance) {\r\n    // Use seriesMap to cache series data\r\n    // If the series instance UID has already been used to\r\n    // process series data, continue using that series\r\n    var SeriesInstanceUID = DICOMWeb.getString(instance['0020000E']);\r\n    var series = seriesMap[SeriesInstanceUID];\r\n\r\n    // If no series data exists in the seriesMap cache variable,\r\n    // process any available series data\r\n    if (!series) {\r\n      series = {\r\n        SeriesInstanceUID: SeriesInstanceUID,\r\n        SeriesNumber: DICOMWeb.getString(instance['00200011']),\r\n        instances: [],\r\n      };\r\n\r\n      // Save this data in the seriesMap cache variable\r\n      seriesMap[SeriesInstanceUID] = series;\r\n      series.push(series);\r\n    }\r\n\r\n    // The uri for the dicomweb\r\n    // NOTE: DCM4CHEE seems to return the data zipped\r\n    // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't\r\n    //       know how to parse yet\r\n    //var uri = DICOMWeb.getString(instance['00081190']);\r\n    //uri = uri.replace('wado-rs', 'dicom-web');\r\n\r\n    // manually create a WADO-URI from the UIDs\r\n    // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?\r\n    var SOPInstanceUID = DICOMWeb.getString(instance['00080018']);\r\n    var uri =\r\n      server.wadoUriRoot +\r\n      '?requestType=WADO&studyUID=' +\r\n      StudyInstanceUID +\r\n      '&seriesUID=' +\r\n      SeriesInstanceUID +\r\n      '&objectUID=' +\r\n      SOPInstanceUID +\r\n      '&contentType=application%2Fdicom';\r\n\r\n    // Add this instance to the current series\r\n    series.instances.push({\r\n      SOPClassUID: DICOMWeb.getString(instance['00080016']),\r\n      SOPInstanceUID: SOPInstanceUID,\r\n      uri: uri,\r\n      InstanceNumber: DICOMWeb.getString(instance['00200013']),\r\n    });\r\n  });\r\n  return series;\r\n}\r\n\r\n/**\r\n * Retrieve a set of instances using a QIDO call\r\n * @param server\r\n * @param StudyInstanceUID\r\n * @throws ECONNREFUSED\r\n * @returns {{wadoUriRoot: String, StudyInstanceUID: String, series: Array}}\r\n */\r\nexport default function Instances(server, StudyInstanceUID) {\r\n  // TODO: Are we using this function anywhere?? Can we remove it?\r\n\r\n  const config = {\r\n    url: server.qidoRoot,\r\n    headers: DICOMWeb.getAuthorizationHeader(server),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n  };\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n  const queryParams = getQIDOQueryParams(\r\n    filter,\r\n    server.qidoSupportsIncludeField\r\n  );\r\n  const options = {\r\n    studyInstanceUID: StudyInstanceUID,\r\n  };\r\n\r\n  return dicomWeb.searchForInstances(options).then(result => {\r\n    return {\r\n      wadoUriRoot: server.wadoUriRoot,\r\n      StudyInstanceUID: StudyInstanceUID,\r\n      series: resultDataToStudyMetadata(server, StudyInstanceUID, result.data),\r\n    };\r\n  });\r\n}\r\n","import { api } from 'dicomweb-client';\r\nimport StaticWadoClient from './StaticWadoClient';\r\nimport DICOMWeb from '../../../DICOMWeb/';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\r\n\r\n/**\r\n * Creates a QIDO date string for a date range query\r\n * Assumes the year is positive, at most 4 digits long.\r\n *\r\n * @param date The Date object to be formatted\r\n * @returns {string} The formatted date string\r\n */\r\nfunction dateToString(date) {\r\n  if (!date) return '';\r\n  let year = date.getFullYear().toString();\r\n  let month = (date.getMonth() + 1).toString();\r\n  let day = date.getDate().toString();\r\n  year = '0'.repeat(4 - year.length).concat(year);\r\n  month = '0'.repeat(2 - month.length).concat(month);\r\n  day = '0'.repeat(2 - day.length).concat(day);\r\n  return ''.concat(year, month, day);\r\n}\r\n\r\n/**\r\n * Produces a QIDO URL given server details and a set of specified search filter\r\n * items\r\n *\r\n * @param filter\r\n * @param serverSupportsQIDOIncludeField\r\n * @returns {string} The URL with encoded filter query data\r\n */\r\nfunction getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {\r\n  const commaSeparatedFields = [\r\n    '00081030', // Study Description\r\n    '00080060', // Modality\r\n    // Add more fields here if you want them in the result\r\n  ].join(',');\r\n\r\n  const parameters = {\r\n    PatientName: filter.PatientName,\r\n    PatientID: filter.PatientID,\r\n    AccessionNumber: filter.AccessionNumber,\r\n    StudyDescription: filter.StudyDescription,\r\n    ModalitiesInStudy: filter.ModalitiesInStudy,\r\n    limit: filter.limit,\r\n    offset: filter.offset,\r\n    fuzzymatching: filter.fuzzymatching,\r\n    includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all',\r\n  };\r\n\r\n  // build the StudyDate range parameter\r\n  if (filter.studyDateFrom || filter.studyDateTo) {\r\n    const dateFrom = dateToString(new Date(filter.studyDateFrom));\r\n    const dateTo = dateToString(new Date(filter.studyDateTo));\r\n    parameters.StudyDate = `${dateFrom}-${dateTo}`;\r\n  }\r\n\r\n  // Build the StudyInstanceUID parameter\r\n  if (filter.StudyInstanceUID) {\r\n    let studyUIDs = filter.StudyInstanceUID;\r\n    studyUIDs = Array.isArray(studyUIDs) ? studyUIDs.join() : studyUIDs;\r\n    studyUIDs = studyUIDs.replace(/[^0-9.]+/g, '\\\\');\r\n    parameters.StudyInstanceUID = studyUIDs;\r\n  }\r\n\r\n  // Clean query params of undefined values.\r\n  const params = {};\r\n  Object.keys(parameters).forEach(key => {\r\n    if (parameters[key] !== undefined && parameters[key] !== '') {\r\n      params[key] = parameters[key];\r\n    }\r\n  });\r\n\r\n  return params;\r\n}\r\n\r\n/**\r\n * Parses resulting data from a QIDO call into a set of Study MetaData\r\n *\r\n * @param resultData\r\n * @returns {Array} An array of Study MetaData objects\r\n */\r\nfunction resultDataToStudies(resultData) {\r\n  const studies = [];\r\n\r\n  if (!resultData || !resultData.length) return;\r\n\r\n  resultData.forEach(study =>\r\n    studies.push({\r\n      StudyInstanceUID: DICOMWeb.getString(study['0020000D']),\r\n      // 00080005 = SpecificCharacterSet\r\n      StudyDate: DICOMWeb.getString(study['00080020']),\r\n      StudyTime: DICOMWeb.getString(study['00080030']),\r\n      AccessionNumber: DICOMWeb.getString(study['00080050']),\r\n      referringPhysicianName: DICOMWeb.getString(study['00080090']),\r\n      // 00081190 = URL\r\n      PatientName: DICOMWeb.getName(study['00100010']),\r\n      PatientID: DICOMWeb.getString(study['00100020']),\r\n      PatientBirthdate: DICOMWeb.getString(study['00100030']),\r\n      patientSex: DICOMWeb.getString(study['00100040']),\r\n      studyId: DICOMWeb.getString(study['00200010']),\r\n      numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\r\n      numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\r\n      StudyDescription: DICOMWeb.getString(study['00081030']),\r\n      // Modality: DICOMWeb.getString(study['00080060']),\r\n      // ModalitiesInStudy: DICOMWeb.getString(study['00080061']),\r\n      modalities: DICOMWeb.getString(\r\n        DICOMWeb.getModalities(study['00080060'], study['00080061'])\r\n      ),\r\n    })\r\n  );\r\n\r\n  return studies;\r\n}\r\n\r\nexport default function Studies(server, filter) {\r\n  const { staticWado } = server;\r\n  const config = {\r\n    ...server,\r\n    url: server.qidoRoot,\r\n    headers: DICOMWeb.getAuthorizationHeader(server),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n\r\n  const dicomWeb = staticWado\r\n    ? new StaticWadoClient(config)\r\n    : new api.DICOMwebClient(config);\r\n  server.qidoSupportsIncludeField =\r\n    server.qidoSupportsIncludeField === undefined\r\n      ? true\r\n      : server.qidoSupportsIncludeField;\r\n  const queryParams = getQIDOQueryParams(\r\n    filter,\r\n    server.qidoSupportsIncludeField\r\n  );\r\n  const options = {\r\n    queryParams,\r\n  };\r\n\r\n  return dicomWeb.searchForStudies(options).then(resultDataToStudies);\r\n}\r\n","// DICOMWeb instance, study, and metadata retrieval\r\nimport Instances from './qido/instances.js';\r\nimport Studies from './qido/studies.js';\r\nimport RetrieveMetadata from './wado/retrieveMetadata.js';\r\n\r\nconst WADO = {\r\n  RetrieveMetadata,\r\n};\r\n\r\nconst QIDO = {\r\n  Studies,\r\n  Instances,\r\n};\r\n\r\nexport { QIDO, WADO };\r\n","import Studies from './services/qido/studies';\r\n\r\nconst studySearchPromises = new Map();\r\n\r\n/**\r\n * Search for studies information by the given filter\r\n *\r\n * @param {Object} filter Filter that will be used on search\r\n * @returns {Promise} resolved with an array of studies information or rejected with an error\r\n */\r\nexport default function searchStudies(server, filter) {\r\n  const promiseKeyObj = {\r\n    qidoRoot: server.qidoRoot,\r\n    filter,\r\n  };\r\n  const promiseKey = JSON.stringify(promiseKeyObj);\r\n  if (studySearchPromises.has(promiseKey)) {\r\n    return studySearchPromises.get(promiseKey);\r\n  } else {\r\n    const promise = Studies(server, filter);\r\n\r\n    studySearchPromises.set(promiseKey, promise);\r\n\r\n    return promise;\r\n  }\r\n}\r\n","import { QIDO, WADO } from './services/';\r\nimport {\r\n  deleteStudyMetadataPromise,\r\n  retrieveStudyMetadata,\r\n} from './retrieveStudyMetadata.js';\r\n\r\nimport getStudyBoxData from './getStudyBoxData';\r\nimport retrieveStudiesMetadata from './retrieveStudiesMetadata.js';\r\nimport searchStudies from './searchStudies';\r\nimport sortStudy from './sortStudy';\r\n\r\nconst studies = {\r\n  services: {\r\n    QIDO,\r\n    WADO,\r\n  },\r\n  loadingDict: {},\r\n  retrieveStudyMetadata,\r\n  deleteStudyMetadataPromise,\r\n  retrieveStudiesMetadata,\r\n  getStudyBoxData,\r\n  searchStudies,\r\n  sortStudy,\r\n};\r\n\r\nexport default studies;\r\n","import log from '../log.js';\r\nimport { retrieveStudyMetadata } from './retrieveStudyMetadata';\r\n\r\n/**\r\n * Retrieves metaData for multiple studies at once.\r\n *\r\n * This function calls retrieveStudyMetadata several times, asynchronously,\r\n * and waits for all of the results to be returned.\r\n *\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {Array} studyInstanceUIDs The UIDs of the Studies to be retrieved\r\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\r\n * as some DICOMWeb implementations only support single filters.\r\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\r\n */\r\nexport default function retrieveStudiesMetadata(\r\n  server,\r\n  studyInstanceUIDs,\r\n  filters,\r\n  separateSeriesInstanceUIDFilters = false\r\n) {\r\n  // Create an empty array to store the Promises for each metaData retrieval call\r\n  const promises = [];\r\n\r\n  // Loop through the array of studyInstanceUIDs\r\n  studyInstanceUIDs.forEach(function(StudyInstanceUID) {\r\n    // Send the call and resolve or reject the related promise based on its outcome\r\n    const promise = retrieveStudyMetadata(\r\n      server,\r\n      StudyInstanceUID,\r\n      filters,\r\n      separateSeriesInstanceUIDFilters\r\n    );\r\n\r\n    // Add the current promise to the array of promises\r\n    promises.push(promise);\r\n  });\r\n\r\n  // When all of the promises are complete, this callback runs\r\n  const promise = Promise.all(promises);\r\n\r\n  // Warn the error on console if some retrieval failed\r\n  promise.catch(error => log.warn(error));\r\n\r\n  return promise;\r\n}\r\n","/**\r\n * Overridable namespace to allow getting study boxes data externally.\r\n *\r\n * The function must handle the first parameter as a studyInformation object containing at least the\r\n * StudyInstanceUID attribute.\r\n *\r\n * Shall return a promise that will be resolved with an object containing those attributes:\r\n * - StudyInstanceUID {String}: copy of studyInformation.StudyInstanceUID\r\n * - modalities {String}: 2 uppercase letters for each Modality split by any non-alphabetical char(s)\r\n * - StudyDate {String}: date formatted as YYYYMMDD\r\n * - StudyDescription {String}: study description string\r\n */\r\n// TODO: What is this for?\r\nconst getStudyBoxData = false;\r\n\r\nexport default getStudyBoxData;\r\n","function getWADORSImageUrl(instance, frame) {\r\n  let wadorsuri = instance.wadorsuri;\r\n\r\n  if (!wadorsuri) {\r\n    return;\r\n  }\r\n\r\n  // Use null to obtain an imageId which represents the instance\r\n  if (frame === null) {\r\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, '');\r\n  } else {\r\n    // We need to sum 1 because WADO-RS frame number is 1-based\r\n    frame = frame ? parseInt(frame) + 1 : 1;\r\n\r\n    // Replaces /frame/1 by /frame/{frame}\r\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, `frames/${frame}`);\r\n  }\r\n\r\n  return wadorsuri;\r\n}\r\n\r\n/**\r\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\r\n *\r\n * @param {object} instanceMetada metadata object (InstanceMetadata)\r\n * @param {(string\\|number)} [frame] the frame number\r\n * @returns {string} The imageId to be used by Cornerstone\r\n */\r\nexport default function getWADORSImageId(instance, frame) {\r\n  const uri = getWADORSImageUrl(instance, frame);\r\n\r\n  if (!uri) {\r\n    return;\r\n  }\r\n\r\n  return `wadors:${uri}`;\r\n}\r\n","import DICOMWeb from '../DICOMWeb/';\r\nimport isLowPriorityModality from '../utils/isLowPriorityModality';\r\n\r\nconst INFO = Symbol('INFO');\r\n\r\n/**\r\n * Creates an object with processed series information and saves its reference\r\n * inside the series object itself.\r\n * @param {Object} series The raw series object\r\n * @returns {Object} object containing some useful info from given series\r\n */\r\nexport default function getSeriesInfo(series) {\r\n  let info = series[INFO];\r\n  if (!info) {\r\n    const Modality = DICOMWeb.getString(series['00080060'], '').toUpperCase();\r\n    info = Object.freeze({\r\n      Modality,\r\n      isLowPriority: isLowPriorityModality(Modality),\r\n      SeriesInstanceUID: DICOMWeb.getString(series['0020000E']),\r\n      SeriesNumber: DICOMWeb.getNumber(series['00200011'], 0) || 0,\r\n    });\r\n    series[INFO] = info;\r\n  }\r\n  return info;\r\n}\r\n","import getSeriesInfo from './getSeriesInfo';\r\n\r\n/**\r\n * Series sorting criteria: series considered low priority are moved to the end\r\n * of the list and series number is used to break ties\r\n * @param {Object} firstSeries\r\n * @param {Object} secondSeries\r\n */\r\nfunction seriesInfoSortingCriteria(firstSeries, secondSeries) {\r\n  const a = getSeriesInfo(firstSeries);\r\n  const b = getSeriesInfo(secondSeries);\r\n  if (!a.isLowPriority && b.isLowPriority) {\r\n    return -1;\r\n  }\r\n  if (a.isLowPriority && !b.isLowPriority) {\r\n    return 1;\r\n  }\r\n  return a.SeriesNumber - b.SeriesNumber;\r\n}\r\n\r\nconst seriesSortCriteria = {\r\n  default: (a, b) => a.SeriesNumber - b.SeriesNumber,\r\n  seriesInfoSortingCriteria,\r\n};\r\n\r\nconst instancesSortCriteria = {\r\n  default: (a, b) => a.InstanceNumber - b.InstanceNumber,\r\n};\r\n\r\nconst sortingCriteria = {\r\n  seriesSortCriteria,\r\n  instancesSortCriteria,\r\n};\r\n\r\n/**\r\n * Sorts given series (given param is modified)\r\n * The default criteria is based on series number in ascending order.\r\n *\r\n * @param {Array} series List of series\r\n * @param {function} seriesSortingCriteria method for sorting\r\n * @returns {Array} sorted series object\r\n */\r\nconst sortStudySeries = (\r\n  series,\r\n  seriesSortingCriteria = seriesSortCriteria.default\r\n) => {\r\n  return series.sort(seriesSortingCriteria);\r\n};\r\n\r\n/**\r\n * Sorts given instancesList (given param is modified)\r\n * The default criteria is based on instance number in ascending order.\r\n *\r\n * @param {Array} instancesList List of series\r\n * @param {function} instancesSortingCriteria method for sorting\r\n * @returns {Array} sorted instancesList object\r\n */\r\nconst sortStudyInstances = (\r\n  instancesList,\r\n  instancesSortingCriteria = instancesSortCriteria.default\r\n) => {\r\n  return instancesList.sort(instancesSortingCriteria);\r\n};\r\n\r\n/**\r\n * Sorts the series and instances (by default) inside a study instance based on sortingCriteria (given param is modified)\r\n * The default criteria is based on series and instance numbers in ascending order.\r\n *\r\n * @param {Object} study The study instance\r\n * @param {boolean} [deepSort = true] to sort instance also\r\n * @param {function} [seriesSortingCriteria = seriesSortCriteria.default] method for sorting series\r\n * @param {function} [instancesSortingCriteria = instancesSortCriteria.default] method for sorting instances\r\n * @returns {Object} sorted study object\r\n */\r\nexport default function sortStudy(\r\n  study,\r\n  deepSort = true,\r\n  seriesSortingCriteria = seriesSortCriteria.default,\r\n  instancesSortingCriteria = instancesSortCriteria.default\r\n) {\r\n  if (!study || !study.series) {\r\n    throw new Error('Insufficient study data was provided to sortStudy');\r\n  }\r\n\r\n  sortStudySeries(study.series, seriesSortingCriteria);\r\n\r\n  if (deepSort) {\r\n    study.series.forEach(series => {\r\n      sortStudyInstances(series.instances, instancesSortingCriteria);\r\n    });\r\n  }\r\n\r\n  return study;\r\n}\r\n\r\nexport { sortStudySeries, sortStudyInstances, sortingCriteria };\r\n","import { asyncComponent, retryImport } from '@ohif/ui';\r\nimport OHIF from '@ohif/core';\r\n\r\nconst { urlUtil: UrlUtil } = OHIF.utils;\r\n\r\n// Dynamic Import Routes (CodeSplitting)\r\nconst IHEInvokeImageDisplay = asyncComponent(() =>\r\n  retryImport(() =>\r\n    import(/* webpackChunkName: \"IHEInvokeImageDisplay\" */ './IHEInvokeImageDisplay.js')\r\n  )\r\n);\r\nconst ViewerRouting = asyncComponent(() =>\r\n  retryImport(() => import(/* webpackChunkName: \"ViewerRouting\" */ './ViewerRouting.js'))\r\n);\r\n\r\nconst StudyListRouting = asyncComponent(() =>\r\n  retryImport(() => import(\r\n    /* webpackChunkName: \"StudyListRouting\" */ '../studylist/StudyListRouting.js'\r\n  ))\r\n);\r\nconst StandaloneRouting = asyncComponent(() =>\r\n  retryImport(() => import(\r\n    /* webpackChunkName: \"ConnectedStandaloneRouting\" */ '../connectedComponents/ConnectedStandaloneRouting.js'\r\n  ))\r\n);\r\nconst ViewerLocalFileData = asyncComponent(() =>\r\n  retryImport(() => import(\r\n    /* webpackChunkName: \"ViewerLocalFileData\" */ '../connectedComponents/ViewerLocalFileData.js'\r\n  ))\r\n);\r\n\r\nconst reload = () => window.location.reload();\r\n\r\nconst ROUTES_DEF = {\r\n  default: {\r\n    viewer: {\r\n      path: '/viewer/:studyInstanceUIDs',\r\n      component: ViewerRouting,\r\n    },\r\n    standaloneViewer: {\r\n      path: '/viewer',\r\n      component: StandaloneRouting,\r\n    },\r\n    list: {\r\n      path: ['/studylist', '/'],\r\n      component: StudyListRouting,\r\n      condition: appConfig => {\r\n        return appConfig.showStudyList;\r\n      },\r\n    },\r\n    local: {\r\n      path: '/local',\r\n      component: ViewerLocalFileData,\r\n    },\r\n    IHEInvokeImageDisplay: {\r\n      path: '/IHEInvokeImageDisplay',\r\n      component: IHEInvokeImageDisplay\r\n    },\r\n  },\r\n  gcloud: {\r\n    viewer: {\r\n      path:\r\n        '/projects/:project/locations/:location/datasets/:dataset/dicomStores/:dicomStore/study/:studyInstanceUIDs',\r\n      component: ViewerRouting,\r\n      condition: appConfig => {\r\n        return !!appConfig.enableGoogleCloudAdapter;\r\n      },\r\n    },\r\n    list: {\r\n      path:\r\n        '/projects/:project/locations/:location/datasets/:dataset/dicomStores/:dicomStore',\r\n      component: StudyListRouting,\r\n      condition: appConfig => {\r\n        const showList = appConfig.showStudyList;\r\n\r\n        return showList && !!appConfig.enableGoogleCloudAdapter;\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst getRoutes = appConfig => {\r\n  const routes = [];\r\n  for (let keyConfig in ROUTES_DEF) {\r\n    const routesConfig = ROUTES_DEF[keyConfig];\r\n\r\n    for (let routeKey in routesConfig) {\r\n      const route = routesConfig[routeKey];\r\n      const validRoute =\r\n        typeof route.condition === 'function'\r\n          ? route.condition(appConfig)\r\n          : true;\r\n\r\n      if (validRoute) {\r\n        routes.push({\r\n          path: route.path,\r\n          Component: route.component,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return routes;\r\n};\r\n\r\nconst parsePath = (path, server, params) => {\r\n  let _path = path;\r\n  const _paramsCopy = Object.assign({}, server, params);\r\n\r\n  for (let key in _paramsCopy) {\r\n    _path = UrlUtil.paramString.replaceParam(_path, key, _paramsCopy[key]);\r\n  }\r\n\r\n  return _path;\r\n};\r\n\r\nconst parseViewerPath = (appConfig = {}, server = {}, params) => {\r\n  let viewerPath = ROUTES_DEF.default.viewer.path;\r\n  if (appConfig.enableGoogleCloudAdapter) {\r\n    viewerPath = ROUTES_DEF.gcloud.viewer.path;\r\n  }\r\n\r\n  return parsePath(viewerPath, server, params);\r\n};\r\n\r\nconst parseStudyListPath = (appConfig = {}, server = {}, params) => {\r\n  let studyListPath = ROUTES_DEF.default.list.path;\r\n  if (appConfig.enableGoogleCloudAdapter) {\r\n    studyListPath = ROUTES_DEF.gcloud.list.path || studyListPath;\r\n  }\r\n\r\n  return parsePath(studyListPath, server, params);\r\n};\r\n\r\nexport { getRoutes, parseViewerPath, parseStudyListPath, reload };\r\n","import DICOMWeb from '../../../DICOMWeb';\r\n\r\n/**\r\n * Function to get series sequence (sequence of pepeating items where each\r\n * item includes the attributes of one or more series) based on a given sopInstance.\r\n *\r\n * @param {Object} instance The sop instance\r\n * @returns {Promise} Referenced series sequence\r\n */\r\nconst getReferencedSeriesSequence = instance => {\r\n  const referencedSeriesSequenceRaw = instance['00081115'];\r\n\r\n  const referencedSeriesSequence = [];\r\n\r\n  if (referencedSeriesSequenceRaw && referencedSeriesSequenceRaw.Value) {\r\n    referencedSeriesSequenceRaw.Value.forEach(referencedSeries => {\r\n      const referencedSeriesInstanceUID = DICOMWeb.getString(\r\n        referencedSeries['0020000E']\r\n      );\r\n\r\n      const referencedInstanceSequenceRaw = referencedSeries['0008114A'];\r\n      const referencedInstanceSequence = [];\r\n\r\n      if (referencedInstanceSequenceRaw) {\r\n        referencedInstanceSequenceRaw.Value.forEach(referencedInstance => {\r\n          referencedInstanceSequence.push({\r\n            referencedSOPClassUID: DICOMWeb.getString(\r\n              referencedInstance['00081150']\r\n            ),\r\n            referencedSOPInstanceUID: DICOMWeb.getString(\r\n              referencedInstance['00081155']\r\n            ),\r\n          });\r\n        });\r\n      }\r\n\r\n      referencedSeriesSequence.push({\r\n        referencedSeriesInstanceUID,\r\n        referencedInstanceSequence,\r\n      });\r\n    });\r\n  }\r\n\r\n  return referencedSeriesSequence;\r\n};\r\n\r\nexport default getReferencedSeriesSequence;\r\n","import DICOMWeb from '../../../DICOMWeb';\r\nimport metadataProvider from '../../../classes/MetadataProvider';\r\nimport getWADORSImageId from '../../../utils/getWADORSImageId';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport getReferencedSeriesSequence from './getReferencedSeriesSequence';\r\n\r\n/**\r\n * Create a plain JS object that describes a study (a study descriptor object)\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {Object} aSopInstance a SOP Instance from which study information will be added\r\n */\r\nfunction createStudy(server, aSopInstance) {\r\n  // TODO: Pass a reference ID to the server instead of including the URLs here\r\n  return {\r\n    series: [],\r\n    seriesMap: Object.create(null),\r\n    seriesLoader: null,\r\n    wadoUriRoot: server.wadoUriRoot,\r\n    wadoRoot: server.wadoRoot,\r\n    qidoRoot: server.qidoRoot,\r\n    PatientName: DICOMWeb.getName(aSopInstance['00100010']),\r\n    PatientID: DICOMWeb.getString(aSopInstance['00100020']),\r\n    PatientAge: DICOMWeb.getNumber(aSopInstance['00101010']),\r\n    PatientSize: DICOMWeb.getNumber(aSopInstance['00101020']),\r\n    PatientWeight: DICOMWeb.getNumber(aSopInstance['00101030']),\r\n    AccessionNumber: DICOMWeb.getString(aSopInstance['00080050']),\r\n    StudyTime: DICOMWeb.getString(aSopInstance['00080030']),\r\n    StudyDate: DICOMWeb.getString(aSopInstance['00080020']),\r\n    FrameOfReferenceUID: DICOMWeb.getString(aSopInstance['00200052']),\r\n    ReferencedSeriesSequence: getReferencedSeriesSequence(aSopInstance),\r\n    modalities: DICOMWeb.getString(aSopInstance['00080061']), // TODO -> Rename this.. it'll take a while to not mess this one up.\r\n    StudyDescription: DICOMWeb.getString(aSopInstance['00081030']),\r\n    NumberOfStudyRelatedInstances: DICOMWeb.getString(aSopInstance['00201208']),\r\n    StudyInstanceUID: DICOMWeb.getString(aSopInstance['0020000D']),\r\n    InstitutionName: DICOMWeb.getString(aSopInstance['00080080']),\r\n  };\r\n}\r\n\r\n/** Returns a WADO url for an instance\r\n *\r\n * @param StudyInstanceUID\r\n * @param SeriesInstanceUID\r\n * @param SOPInstanceUID\r\n * @returns  {string}\r\n */\r\nfunction buildInstanceWadoUrl(\r\n  server,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID\r\n) {\r\n  // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though\r\n  const params = [];\r\n\r\n  params.push('requestType=WADO');\r\n  params.push(`studyUID=${StudyInstanceUID}`);\r\n  params.push(`seriesUID=${SeriesInstanceUID}`);\r\n  params.push(`objectUID=${SOPInstanceUID}`);\r\n  params.push('contentType=application/dicom');\r\n  params.push('transferSyntax=*');\r\n\r\n  const paramString = params.join('&');\r\n\r\n  return `${server.wadoUriRoot}?${paramString}`;\r\n}\r\n\r\nfunction buildInstanceWadoRsUri(\r\n  server,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID\r\n) {\r\n  return `${server.wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}`;\r\n}\r\n\r\nfunction buildInstanceFrameWadoRsUri(\r\n  server,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID,\r\n  frame\r\n) {\r\n  const baseWadoRsUri = buildInstanceWadoRsUri(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n  frame = frame != null || 1;\r\n\r\n  return `${baseWadoRsUri}/frames/${frame}`;\r\n}\r\n\r\nasync function makeSOPInstance(server, study, instance) {\r\n  const naturalizedInstance = await metadataProvider.addInstance(instance, {\r\n    server,\r\n  });\r\n\r\n  const {\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID,\r\n  } = naturalizedInstance;\r\n\r\n  const validate = string => {\r\n    let rgx = /[^.0-9]+/g;\r\n    return string.match(rgx);\r\n  };\r\n\r\n  if (StudyInstanceUID === undefined || validate(StudyInstanceUID)) {\r\n    const error =\r\n      'makeSOPInstance: StudyInstanceUID is not conforming with the UID (DICOM UI VR) character repertoire, skipping SOPInstance.';\r\n    console.error(error);\r\n\r\n    return;\r\n  }\r\n\r\n  if (SeriesInstanceUID === undefined || validate(SeriesInstanceUID)) {\r\n    const error =\r\n      'makeSOPInstance: SeriesInstanceUID is not conforming with the UID (DICOM UI VR) character repertoire, skipping SOPInstance.';\r\n    console.error(error);\r\n\r\n    return;\r\n  }\r\n\r\n  if (SOPInstanceUID === undefined || validate(SOPInstanceUID)) {\r\n    const error =\r\n      'makeSOPInstance: SOPInstanceUID is not conforming with the UID (DICOM UI VR) character repertoire, skipping SOPInstance.';\r\n    console.error(error);\r\n\r\n    return;\r\n  }\r\n\r\n  let series = study.seriesMap[SeriesInstanceUID];\r\n\r\n  if (!series) {\r\n    series = {\r\n      SeriesInstanceUID,\r\n      SeriesDescription: naturalizedInstance.SeriesDescription,\r\n      Modality: naturalizedInstance.Modality,\r\n      SeriesNumber: naturalizedInstance.SeriesNumber,\r\n      SeriesDate: naturalizedInstance.SeriesDate,\r\n      SeriesTime: naturalizedInstance.SeriesTime,\r\n      instances: [],\r\n    };\r\n    study.seriesMap[SeriesInstanceUID] = series;\r\n    study.series.push(series);\r\n  } else {\r\n    if (series.SeriesDate === undefined)\r\n      series.SeriesDate = naturalizedInstance.SeriesDate;\r\n    if (series.SeriesTime === undefined)\r\n      series.SeriesTime = naturalizedInstance.SeriesTime;\r\n  }\r\n\r\n  const wadouri = buildInstanceWadoUrl(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n  const baseWadoRsUri = buildInstanceWadoRsUri(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n  const wadorsuri = buildInstanceFrameWadoRsUri(\r\n    server,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID,\r\n    SOPInstanceUID\r\n  );\r\n\r\n  const sopInstance = {\r\n    metadata: naturalizedInstance,\r\n    baseWadoRsUri,\r\n    wadouri,\r\n    wadorsuri,\r\n    wadoRoot: server.wadoRoot,\r\n    imageRendering: server.imageRendering,\r\n    thumbnailRendering: server.thumbnailRendering,\r\n  };\r\n\r\n  series.instances.push(sopInstance);\r\n\r\n  if (\r\n    sopInstance.thumbnailRendering === 'wadors' ||\r\n    sopInstance.imageRendering === 'wadors'\r\n  ) {\r\n    // If using WADO-RS for either images or thumbnails,\r\n    // Need to add this to cornerstoneWADOImageLoader's provider\r\n    // (it won't be hit on cornerstone.metaData.get, but cornerstoneWADOImageLoader\r\n    // will cry if you don't add data to cornerstoneWADOImageLoader.wadors.metaDataManager).\r\n\r\n    const wadoRSMetadata = Object.assign(instance);\r\n\r\n    const { NumberOfFrames } = sopInstance.metadata;\r\n\r\n    if (NumberOfFrames) {\r\n      for (let i = 0; i < NumberOfFrames; i++) {\r\n        const wadorsImageId = getWADORSImageId(sopInstance, i);\r\n\r\n        cornerstoneWADOImageLoader.wadors.metaDataManager.add(\r\n          wadorsImageId,\r\n          wadoRSMetadata\r\n        );\r\n      }\r\n    } else {\r\n      const wadorsImageId = getWADORSImageId(sopInstance);\r\n\r\n      cornerstoneWADOImageLoader.wadors.metaDataManager.add(\r\n        wadorsImageId,\r\n        wadoRSMetadata\r\n      );\r\n    }\r\n  }\r\n\r\n  return sopInstance;\r\n}\r\n\r\n/**\r\n * Add a list of SOP Instances to a given study object descriptor\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {Object} study The study descriptor to which the given SOP instances will be added\r\n * @param {Array} sopInstanceList A list of SOP instance objects\r\n */\r\nasync function addInstancesToStudy(server, study, sopInstanceList) {\r\n  return Promise.all(\r\n    sopInstanceList.map(function(sopInstance) {\r\n      return makeSOPInstance(server, study, sopInstance);\r\n    })\r\n  );\r\n}\r\n\r\nconst createStudyFromSOPInstanceList = async (server, sopInstanceList) => {\r\n  if (Array.isArray(sopInstanceList) && sopInstanceList.length > 0) {\r\n    const firstSopInstance = sopInstanceList[0];\r\n    const study = createStudy(server, firstSopInstance);\r\n    await addInstancesToStudy(server, study, sopInstanceList);\r\n    return study;\r\n  }\r\n  throw new Error('Failed to create study out of provided SOP instance list');\r\n};\r\n\r\nexport { createStudyFromSOPInstanceList, addInstancesToStudy };\r\n","/**\r\n * Class to define inheritance of load retrieve strategy.\r\n * The process can be async load (lazy) or sync load\r\n *\r\n * There are methods that must be implemented at consumer level\r\n * To retrieve study call execLoad\r\n */\r\nexport default class RetrieveMetadataLoader {\r\n  /**\r\n   * @constructor\r\n   * @param {Object} server Object with server configuration parameters\r\n   * @param {Array} studyInstanceUID Study instance ui to be retrieved\r\n   * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n   * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n   */\r\n  constructor(server, studyInstanceUID, filters = {}) {\r\n    this.server = server;\r\n    this.studyInstanceUID = studyInstanceUID;\r\n    this.filters = filters;\r\n  }\r\n\r\n  async execLoad() {\r\n    await this.configLoad();\r\n    const preLoadData = await this.preLoad();\r\n    const loadData = await this.load(preLoadData);\r\n    const postLoadData = await this.posLoad(loadData);\r\n\r\n    return postLoadData;\r\n  }\r\n\r\n  /**\r\n   * It iterates over given loaders running each one. Loaders parameters must be bind when getting it.\r\n   * @param {Array} loaders - array of loader to retrieve data.\r\n   */\r\n  async runLoaders(loaders) {\r\n    let result;\r\n    for (const loader of loaders) {\r\n      try {\r\n        result = await loader();\r\n        if (result && result.length) {\r\n          break; // closes iterator in case data is retrieved successfully\r\n        }\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    if (loaders.next().done && !result) {\r\n      throw new Error('RetrieveMetadataLoader failed');\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // Methods to be overwrite\r\n  async configLoad() {}\r\n  async preLoad() {}\r\n  async load(preLoadData) {}\r\n  async posLoad(loadData) {}\r\n}\r\n","import { api } from 'dicomweb-client';\r\nimport DICOMWeb from '../../../DICOMWeb/';\r\nimport { createStudyFromSOPInstanceList } from './studyInstanceHelpers';\r\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\r\n\r\n/**\r\n * Class for sync load of study metadata.\r\n * It inherits from RetrieveMetadataLoader\r\n *\r\n * A list of loaders (getLoaders) can be created so, it will be applied a fallback load strategy.\r\n * I.e Retrieve metadata using all loaders possibilities.\r\n */\r\nexport default class RetrieveMetadataLoaderSync extends RetrieveMetadataLoader {\r\n  getOptions() {\r\n    const { studyInstanceUID, filters } = this;\r\n\r\n    const options = {\r\n      studyInstanceUID,\r\n    };\r\n\r\n    const { seriesInstanceUID } = filters;\r\n    if (seriesInstanceUID) {\r\n      options['seriesInstanceUID'] = seriesInstanceUID;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} Array of loaders. To be consumed as queue\r\n   */\r\n  *getLoaders() {\r\n    const loaders = [];\r\n    const {\r\n      studyInstanceUID,\r\n      filters: { seriesInstanceUID } = {},\r\n      client,\r\n    } = this;\r\n\r\n    if (seriesInstanceUID) {\r\n      loaders.push(\r\n        client.retrieveSeriesMetadata.bind(client, {\r\n          studyInstanceUID,\r\n          seriesInstanceUID,\r\n        })\r\n      );\r\n    }\r\n\r\n    loaders.push(\r\n      client.retrieveStudyMetadata.bind(client, { studyInstanceUID })\r\n    );\r\n\r\n    yield* loaders;\r\n  }\r\n\r\n  configLoad() {\r\n    const { server } = this;\r\n    const client = new api.DICOMwebClient({\r\n      url: server.wadoRoot,\r\n      headers: DICOMWeb.getAuthorizationHeader(server),\r\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n      requestHooks: [getXHRRetryRequestHook()],\r\n    });\r\n\r\n    this.client = client;\r\n  }\r\n\r\n  async load(preLoadData) {\r\n    const loaders = this.getLoaders();\r\n    const result = this.runLoaders(loaders);\r\n    return result;\r\n  }\r\n\r\n  async posLoad(loadData) {\r\n    const { server } = this;\r\n    return createStudyFromSOPInstanceList(server, loadData);\r\n  }\r\n}\r\n","import StaticWadoClient from '../qido/StaticWadoClient';\r\nimport dcmjs from 'dcmjs';\r\nimport DICOMWeb from '../../../DICOMWeb/';\r\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\r\nimport { sortStudySeries, sortingCriteria } from '../../sortStudy';\r\nimport getSeriesInfo from '../../getSeriesInfo';\r\nimport {\r\n  createStudyFromSOPInstanceList,\r\n  addInstancesToStudy,\r\n} from './studyInstanceHelpers';\r\n\r\nimport errorHandler from '../../../errorHandler';\r\nimport { getXHRRetryRequestHook } from '../../../utils/xhrRetryRequestHook';\r\n\r\nconst { naturalizeDataset } = dcmjs.data.DicomMetaDictionary;\r\n\r\n/**\r\n * Map series to an array of SeriesInstanceUID\r\n * @param {Arrays} series list of Series Instance UIDs\r\n * @returns {Arrays} A list of Series Instance UIDs\r\n */\r\nfunction mapStudySeries(series) {\r\n  return series.map(series => getSeriesInfo(series).SeriesInstanceUID);\r\n}\r\n\r\nfunction attachSeriesLoader(server, study, seriesLoader) {\r\n  study.seriesLoader = Object.freeze({\r\n    hasNext() {\r\n      return seriesLoader.hasNext();\r\n    },\r\n    async next() {\r\n      const series = await seriesLoader.next();\r\n      await addInstancesToStudy(server, study, series.sopInstances);\r\n      return study.seriesMap[series.seriesInstanceUID];\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Creates an immutable series loader object which loads each series sequentially using the iterator interface\r\n * @param {DICOMWebClient} dicomWebClient The DICOMWebClient instance to be used for series load\r\n * @param {string} studyInstanceUID The Study Instance UID from which series will be loaded\r\n * @param {Array} seriesInstanceUIDList A list of Series Instance UIDs\r\n * @returns {Object} Returns an object which supports loading of instances from each of given Series Instance UID\r\n */\r\nfunction makeSeriesAsyncLoader(\r\n  dicomWebClient,\r\n  studyInstanceUID,\r\n  seriesInstanceUIDList\r\n) {\r\n  return Object.freeze({\r\n    hasNext() {\r\n      return seriesInstanceUIDList.length > 0;\r\n    },\r\n    async next() {\r\n      const seriesInstanceUID = seriesInstanceUIDList.shift();\r\n      const sopInstances = await dicomWebClient.retrieveSeriesMetadata({\r\n        studyInstanceUID,\r\n        seriesInstanceUID,\r\n      });\r\n      return { studyInstanceUID, seriesInstanceUID, sopInstances };\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Class for async load of study metadata.\r\n * It inherits from RetrieveMetadataLoader\r\n *\r\n * It loads the one series and then append to seriesLoader the others to be consumed/loaded\r\n */\r\nexport default class RetrieveMetadataLoaderAsync extends RetrieveMetadataLoader {\r\n  configLoad() {\r\n    const { server } = this;\r\n\r\n    const client = new StaticWadoClient({\r\n      ...server,\r\n      url: server.qidoRoot,\r\n      headers: DICOMWeb.getAuthorizationHeader(server),\r\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n      requestHooks: [getXHRRetryRequestHook()],\r\n    });\r\n\r\n    this.client = client;\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} Array of preLoaders. To be consumed as queue\r\n   */\r\n  *getPreLoaders() {\r\n    const preLoaders = [];\r\n    const {\r\n      studyInstanceUID,\r\n      filters: { seriesInstanceUID } = {},\r\n      client,\r\n    } = this;\r\n\r\n    if (seriesInstanceUID) {\r\n      const options = {\r\n        studyInstanceUID,\r\n        queryParams: { SeriesInstanceUID: seriesInstanceUID },\r\n      };\r\n      preLoaders.push(client.searchForSeries.bind(client, options));\r\n    }\r\n    // Fallback preloader\r\n    preLoaders.push(client.searchForSeries.bind(client, { studyInstanceUID }));\r\n\r\n    yield* preLoaders;\r\n  }\r\n\r\n  async preLoad() {\r\n    const preLoaders = this.getPreLoaders();\r\n\r\n    // seriesData is the result of the QIDO-RS Search For Series request\r\n    // It's an array of Objects containing DICOM Tag values at the Series level\r\n    const seriesData = await this.runLoaders(preLoaders);\r\n\r\n    const seriesSorted = sortStudySeries(\r\n      seriesData,\r\n      sortingCriteria.seriesSortCriteria.seriesInfoSortingCriteria\r\n    );\r\n    const seriesInstanceUIDsMap = mapStudySeries(seriesSorted);\r\n\r\n    return {\r\n      seriesInstanceUIDsMap,\r\n      seriesData,\r\n    };\r\n  }\r\n\r\n  async load(preLoadData) {\r\n    const { client, studyInstanceUID } = this;\r\n\r\n    const seriesAsyncLoader = makeSeriesAsyncLoader(\r\n      client,\r\n      studyInstanceUID,\r\n      preLoadData.seriesInstanceUIDsMap\r\n    );\r\n\r\n    const firstSeries = await seriesAsyncLoader.next();\r\n\r\n    return {\r\n      sopInstances: firstSeries.sopInstances,\r\n      asyncLoader: seriesAsyncLoader,\r\n      seriesData: preLoadData.seriesData,\r\n    };\r\n  }\r\n\r\n  async posLoad(loadData) {\r\n    const { server } = this;\r\n\r\n    const { sopInstances, asyncLoader, seriesData } = loadData;\r\n\r\n    const study = await createStudyFromSOPInstanceList(server, sopInstances);\r\n\r\n    // TODO: Should this be in a helper\r\n    const seriesDataNaturalized = seriesData.map(naturalizeDataset);\r\n\r\n    seriesDataNaturalized.forEach((series, idx) => {\r\n      const seriesDataFromQIDO = {\r\n        SeriesInstanceUID: series.SeriesInstanceUID,\r\n        SeriesDescription: series.SeriesDescription,\r\n        SeriesNumber: series.SeriesNumber,\r\n        Modality: series.Modality,\r\n        instances: [],\r\n      };\r\n\r\n      if (study.series[idx]) {\r\n        study.series[idx] = Object.assign(\r\n          seriesDataFromQIDO,\r\n          study.series[idx]\r\n        );\r\n      } else {\r\n        study.series[idx] = seriesDataFromQIDO;\r\n      }\r\n\r\n      study.seriesMap[series.SeriesInstanceUID] = study.series[idx];\r\n    });\r\n\r\n    if (asyncLoader.hasNext()) {\r\n      attachSeriesLoader(server, study, asyncLoader);\r\n    }\r\n\r\n    return study;\r\n  }\r\n}\r\n","import RetrieveMetadataLoaderSync from './retrieveMetadataLoaderSync';\r\nimport RetrieveMetadataLoaderAsync from './retrieveMetadataLoaderAsync';\r\n\r\n/**\r\n * Retrieve Study metadata from a DICOM server. If the server is configured to use lazy load, only the first series\r\n * will be loaded and the property \"studyLoader\" will be set to let consumer load remaining series as needed.\r\n *\r\n * @param {Object} server Object with server configuration parameters\r\n * @param {string} StudyInstanceUID The Study Instance UID of the study which needs to be loaded\r\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\r\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\r\n * @returns {Object} A study descriptor object\r\n */\r\nasync function RetrieveMetadata(server, StudyInstanceUID, filters = {}) {\r\n  const RetrieveMetadataLoader =\r\n    server.enableStudyLazyLoad != false\r\n      ? RetrieveMetadataLoaderAsync\r\n      : RetrieveMetadataLoaderSync;\r\n\r\n  const retrieveMetadataLoader = new RetrieveMetadataLoader(\r\n    server,\r\n    StudyInstanceUID,\r\n    filters\r\n  );\r\n  const studyMetadata = retrieveMetadataLoader.execLoad();\r\n\r\n  return studyMetadata;\r\n}\r\n\r\nexport default RetrieveMetadata;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function ViewportErrorIndicator(props) {\r\n  return (\r\n    <div\r\n      className=\"loadingIndicator\"\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        pointerEvents: 'none',\r\n      }}\r\n    >\r\n      <p>Error</p>\r\n      <p className=\"description\">An error has occurred.</p>\r\n      <p className=\"details\">{props.details}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewportErrorIndicator.propTypes = {\r\n  details: PropTypes.string,\r\n};\r\n\r\nexport default ViewportErrorIndicator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function ViewportLoadingIndicator(props) {\r\n  return (\r\n    <div\r\n      className=\"loading-indicator\"\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        pointerEvents: 'none',\r\n      }}\r\n    >\r\n      Loading {props.percentComplete}\r\n    </div>\r\n  );\r\n}\r\n\r\nViewportLoadingIndicator.propTypes = {\r\n  percentComplete: PropTypes.number,\r\n};\r\n\r\nexport default ViewportLoadingIndicator;\r\n","/* global cornerstone */\r\nimport './ImageThumbnail.styl';\r\n\r\nimport { utils } from '@ohif/core';\r\nimport React, { useState, useEffect, createRef, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ViewportErrorIndicator from '../../viewer/ViewportErrorIndicator';\r\nimport ViewportLoadingIndicator from '../../viewer/ViewportLoadingIndicator';\r\n\r\n// TODO: How should we have this component depend on Cornerstone?\r\n// - Passed in as a prop?\r\n// - Set as external dependency?\r\n// - Pass in the entire load and render function as a prop?\r\n//import cornerstone from 'cornerstone-core';\r\nfunction ImageThumbnail(props) {\r\n  const {\r\n    active,\r\n    width,\r\n    height,\r\n    imageSrc,\r\n    imageId,\r\n    stackPercentComplete,\r\n    error: propsError,\r\n    showProgressBar,\r\n  } = props;\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [image, setImage] = useState({});\r\n  const canvasRef = createRef();\r\n\r\n  let loadingOrError;\r\n  let cancelablePromise;\r\n\r\n  if (propsError || error) {\r\n    loadingOrError = <ViewportErrorIndicator />;\r\n  } else if (isLoading) {\r\n    loadingOrError = <ViewportLoadingIndicator />;\r\n  }\r\n\r\n  const showStackLoadingProgressBar =\r\n    showProgressBar && stackPercentComplete !== undefined;\r\n\r\n  const shouldRenderToCanvas = () => {\r\n    return imageId && !imageSrc;\r\n  };\r\n\r\n  const fetchImagePromise = () => {\r\n    if (!cancelablePromise) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    cancelablePromise\r\n      .then(response => {\r\n        setImage(response);\r\n      })\r\n      .catch(error => {\r\n        if (error.isCanceled) return;\r\n        // setLoading(false);\r\n        // setError(true);\r\n        // throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const setImagePromise = () => {\r\n    if (shouldRenderToCanvas()) {\r\n      cancelablePromise = utils.makeCancelable(\r\n        cornerstone.loadAndCacheImage(imageId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const purgeCancelablePromise = useCallback(() => {\r\n    if (cancelablePromise) {\r\n      cancelablePromise.cancel();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      purgeCancelablePromise();\r\n    };\r\n  }, [purgeCancelablePromise]);\r\n\r\n  useEffect(() => {\r\n    if (image.imageId) {\r\n      cornerstone.renderToCanvas(canvasRef.current, image);\r\n      setLoading(false);\r\n    }\r\n  }, [canvasRef, image, image.imageId]);\r\n\r\n  useEffect(() => {\r\n    if (!image.imageId || image.imageId !== imageId) {\r\n      purgeCancelablePromise();\r\n      setImagePromise();\r\n      fetchImagePromise();\r\n    }\r\n  }, [\r\n    fetchImagePromise,\r\n    image.imageId,\r\n    imageId,\r\n    purgeCancelablePromise,\r\n    setImagePromise,\r\n  ]);\r\n\r\n  return (\r\n    <div className={classNames('ImageThumbnail', { active: active })}>\r\n      <div className=\"image-thumbnail-canvas\">\r\n        {shouldRenderToCanvas() ? (\r\n          <canvas ref={canvasRef} width={width} height={height} />\r\n        ) : (\r\n          <img\r\n            className=\"static-image\"\r\n            src={imageSrc}\r\n            //width={this.props.width}\r\n            height={height}\r\n            alt={''}\r\n          />\r\n        )}\r\n      </div>\r\n      {loadingOrError}\r\n      {showStackLoadingProgressBar && (\r\n        <div className=\"image-thumbnail-progress-bar\">\r\n          <div\r\n            className=\"image-thumbnail-progress-bar-inner\"\r\n            style={{ width: `${stackPercentComplete}%` }}\r\n          />\r\n        </div>\r\n      )}\r\n      {isLoading && <div className=\"image-thumbnail-loading-indicator\"></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nImageThumbnail.propTypes = {\r\n  active: PropTypes.bool,\r\n  imageSrc: PropTypes.string,\r\n  imageId: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  stackPercentComplete: PropTypes.number.isRequired,\r\n  showProgressBar: PropTypes.bool,\r\n};\r\n\r\nImageThumbnail.defaultProps = {\r\n  active: false,\r\n  error: false,\r\n  stackPercentComplete: 0,\r\n  width: 217,\r\n  height: 123,\r\n  showProgressBar: true,\r\n};\r\n\r\nexport default ImageThumbnail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport throttle from 'lodash.throttle';\r\nimport { useDrag } from 'react-dnd';\r\nimport { classes } from '@ohif/core';\r\nimport ImageThumbnail from './ImageThumbnail';\r\nimport classNames from 'classnames';\r\nimport { Icon } from './../../elements/Icon';\r\nimport { Tooltip } from './../tooltip';\r\nimport { OverlayTrigger } from './../overlayTrigger';\r\nimport './Thumbnail.styl';\r\n\r\nconst StudyLoadingListener = classes.StudyLoadingListener;\r\n\r\nfunction ThumbnailFooter({\r\n  SeriesDescription,\r\n  SeriesNumber,\r\n  numImageFrames,\r\n  hasWarnings,\r\n  hasDerivedDisplaySets,\r\n}) {\r\n  const [inconsistencyWarnings, inconsistencyWarningsSet] = useState([]);\r\n  const [derivedDisplaySetsActive, derivedDisplaySetsActiveSet] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    hasWarnings.then(response => {\r\n      if (!unmounted) {\r\n        inconsistencyWarningsSet(response);\r\n      }\r\n    });\r\n    hasDerivedDisplaySets.then(response => {\r\n      if (!unmounted) {\r\n        derivedDisplaySetsActiveSet(response);\r\n      }\r\n    });\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [hasWarnings, hasDerivedDisplaySets]);\r\n\r\n  const infoOnly = !SeriesDescription;\r\n\r\n  const getInfo = (value, icon, className = '') => {\r\n    return (\r\n      <div className={classNames('item item-series', className)}>\r\n        <div className=\"icon\">{icon}</div>\r\n        <div className=\"value\">{value}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getWarningContent = inconsistencyWarnings => {\r\n    if (Array.isArray(inconsistencyWarnings)) {\r\n      const listedWarnings = inconsistencyWarnings.map((warn, index) => {\r\n        return <li key={index}>{warn}</li>;\r\n      });\r\n\r\n      return <ol>{listedWarnings}</ol>;\r\n    } else {\r\n      return <React.Fragment>{inconsistencyWarnings}</React.Fragment>;\r\n    }\r\n  };\r\n\r\n  const getWarningInfo = (SeriesNumber, inconsistencyWarnings) => {\r\n    return (\r\n      <React.Fragment>\r\n        {inconsistencyWarnings && inconsistencyWarnings.length != 0 ? (\r\n          <OverlayTrigger\r\n            key={SeriesNumber}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">Series Inconsistencies</div>\r\n                <div className=\"warningContent\">\r\n                  {getWarningContent(inconsistencyWarnings)}\r\n                </div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div className={classNames('warning')}>\r\n              <span className=\"warning-icon\">\r\n                <Icon name=\"exclamation-triangle\" />\r\n              </span>\r\n            </div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getDerivedInfo = derivedDisplaySetsActive => {\r\n    return (\r\n      <React.Fragment>\r\n        {derivedDisplaySetsActive ? (\r\n          <div className=\"derived\">\r\n            <Icon name=\"link\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getSeriesInformation = (\r\n    SeriesNumber,\r\n    numImageFrames,\r\n    inconsistencyWarnings,\r\n    derivedDisplaySetsActive\r\n  ) => {\r\n    if (!SeriesNumber && !numImageFrames) {\r\n      return;\r\n    }\r\n    const seriesInformation = (\r\n      <div className=\"series-information\">\r\n        <React.Fragment>\r\n          {SeriesNumber !== undefined ? (\r\n            getInfo(SeriesNumber, 'S:')\r\n          ) : (\r\n            <React.Fragment></React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n        <React.Fragment>\r\n          {numImageFrames !== undefined ? (\r\n            getInfo(numImageFrames, '', 'image-frames')\r\n          ) : (\r\n            <React.Fragment></React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n        {getDerivedInfo(derivedDisplaySetsActive)}\r\n        {getWarningInfo(SeriesNumber, inconsistencyWarnings)}\r\n      </div>\r\n    );\r\n\r\n    return seriesInformation;\r\n  };\r\n\r\n  return (\r\n    <div className={classNames('series-details', { 'info-only': infoOnly })}>\r\n      <div className=\"series-description\">{SeriesDescription}</div>\r\n      {getSeriesInformation(\r\n        SeriesNumber,\r\n        numImageFrames,\r\n        inconsistencyWarnings,\r\n        derivedDisplaySetsActive\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Thumbnail(props) {\r\n  const {\r\n    active,\r\n    altImageText,\r\n    error,\r\n    displaySetInstanceUID,\r\n    imageId,\r\n    imageSrc,\r\n    StudyInstanceUID,\r\n    onClick,\r\n    onDoubleClick,\r\n    onMouseDown,\r\n    supportsDrag,\r\n    showProgressBar,\r\n  } = props;\r\n\r\n  const [stackPercentComplete, setStackPercentComplete] = useState(0);\r\n  useEffect(() => {\r\n    const onProgressChange = throttle(({ detail }) => {\r\n      const { progressId, progressData } = detail;\r\n      if (`StackProgress:${displaySetInstanceUID}` === progressId) {\r\n        const percent = progressData ? progressData.percentComplete : 0;\r\n        if (percent > stackPercentComplete) {\r\n          setStackPercentComplete(percent);\r\n        }\r\n      }\r\n    }, 100);\r\n\r\n    document.addEventListener(\r\n      StudyLoadingListener.events.OnProgress,\r\n      onProgressChange\r\n    );\r\n\r\n    return () => {\r\n      document.removeEventListener(\r\n        StudyLoadingListener.events.OnProgress,\r\n        onProgressChange\r\n      );\r\n    };\r\n  }, [displaySetInstanceUID]);\r\n\r\n  const [collectedProps, drag, dragPreview] = useDrag({\r\n    // `droppedItem` in `dropTarget`\r\n    // The only data it will have access to\r\n    item: {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      type: 'thumbnail', // Has to match `dropTarget`'s type\r\n    },\r\n    canDrag: function(monitor) {\r\n      return supportsDrag;\r\n    },\r\n  });\r\n\r\n  const hasImage = imageSrc || imageId;\r\n  const hasAltText = altImageText !== undefined;\r\n\r\n  return (\r\n    <div\r\n      ref={drag}\r\n      className={classNames('thumbnail', { active: active })}\r\n      onClick={onClick}\r\n      onDoubleClick={onDoubleClick}\r\n      onMouseDown={onMouseDown}\r\n    >\r\n      {/* SHOW IMAGE */}\r\n      {hasImage && (\r\n        <ImageThumbnail\r\n          active={active}\r\n          imageSrc={imageSrc}\r\n          imageId={imageId}\r\n          error={error}\r\n          stackPercentComplete={stackPercentComplete}\r\n          showProgressBar={showProgressBar}\r\n        />\r\n      )}\r\n      {/* SHOW TEXT ALTERNATIVE */}\r\n      {!hasImage && hasAltText && (\r\n        <div className={'alt-image-text p-x-1'}>\r\n          <h1>{altImageText}</h1>\r\n        </div>\r\n      )}\r\n      {ThumbnailFooter(props)}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst noop = () => {};\r\n\r\nThumbnail.propTypes = {\r\n  supportsDrag: PropTypes.bool,\r\n  id: PropTypes.string.isRequired,\r\n  displaySetInstanceUID: PropTypes.string.isRequired,\r\n  StudyInstanceUID: PropTypes.string.isRequired,\r\n  imageSrc: PropTypes.string,\r\n  imageId: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  active: PropTypes.bool,\r\n  stackPercentComplete: PropTypes.number,\r\n  /**\r\n  altImageText will be used when no imageId or imageSrc is provided.\r\n  It will be displayed inside the <div>. This is useful when it is difficult\r\n  to make a preview for a type of DICOM series (e.g. DICOM-SR)\r\n  */\r\n  altImageText: PropTypes.string,\r\n  SeriesDescription: PropTypes.string,\r\n  SeriesNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  hasWarnings: PropTypes.instanceOf(Promise),\r\n  hasDerivedDisplaySets: PropTypes.instanceOf(Promise),\r\n  numImageFrames: PropTypes.number,\r\n  onDoubleClick: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onMouseDown: PropTypes.func,\r\n  showProgressBar: PropTypes.bool,\r\n};\r\n\r\nThumbnail.defaultProps = {\r\n  supportsDrag: false,\r\n  active: false,\r\n  error: false,\r\n  stackPercentComplete: 0,\r\n  onDoubleClick: noop,\r\n  onClick: noop,\r\n  onMouseDown: noop,\r\n};\r\n\r\nexport { Thumbnail };\r\n","import { api } from 'dicomweb-client';\r\n\r\n/**\r\n * An implementation of the static wado client, that fetches data from\r\n * a static response rather than actually doing real queries.  This allows\r\n * fast encoding of test data, but because it is static, anything actually\r\n * performing searches doesn't work.  This version fixes the query issue\r\n * by manually implementing a query option.\r\n */\r\nexport default class StaticWadoClient extends api.DICOMwebClient {\r\n  static filterKeys = {\r\n    \"StudyInstanceUID\": \"0020000D\",\r\n    \"PatientName\": \"00100010\",\r\n    \"00100020\": \"mrn\",\r\n    \"PatientID\": \"00100020\",\r\n    \"StudyDescription\": \"00081030\",\r\n    \"StudyDate\": \"00080020\",\r\n    \"ModalitiesInStudy\": \"00080061\",\r\n    AccessionNumber: \"00080050\",\r\n  };\r\n\r\n  constructor(qidoConfig) {\r\n    super(qidoConfig);\r\n    this.staticWado = qidoConfig.staticWado;\r\n  }\r\n\r\n  /**\r\n   * Replace the search for studies remote query with a local version which\r\n   * retrieves a complete query list and then sub-selects from it locally.\r\n   * @param {*} options\r\n   * @returns\r\n   */\r\n  async searchForStudies(options) {\r\n    if (!this.staticWado) return super.searchForStudies(options);\r\n\r\n    let searchResult = await super.searchForStudies(options);\r\n    const { queryParams } = options;\r\n    if (!queryParams) return searchResult;\r\n    const filtered = searchResult.filter(study => {\r\n      for (const key of Object.keys(StaticWadoClient.filterKeys)) {\r\n        if (!this.filterItem(key, queryParams, study)) return false;\r\n      }\r\n      return true;\r\n    });\r\n    return filtered;\r\n  }\r\n\r\n  /**\r\n   * Compares values, matching any instance of desired to any instance of\r\n   * actual by recursively go through the paired set of values.  That is,\r\n   * this is O(m*n) where m is how many items in desired and n is the length of actual\r\n   * Then, at the individual item node, compares the Alphabetic name if present,\r\n   * and does a sub-string matching on string values, and otherwise does an\r\n   * exact match comparison.\r\n   *\r\n   * @param {*} desired\r\n   * @param {*} actual\r\n   * @returns true if the values match\r\n   */\r\n  compareValues(desired, actual) {\r\n    if (Array.isArray(desired)) {\r\n      return desired.find(item => this.compareValues(item, actual));\r\n    }\r\n    if (Array.isArray(actual)) {\r\n      return actual.find(actualItem => this.compareValues(desired, actualItem));\r\n    }\r\n    if (actual && actual.Alphabetic) {\r\n      actual = actual.Alphabetic;\r\n    }\r\n    if (typeof (actual) == 'string') {\r\n      if (actual.length === 0) return true;\r\n      if (desired.length === 0 || desired === '*') return true;\r\n      if (desired[0] === '*' && desired[desired.length - 1] === '*') {\r\n        console.log(`Comparing ${actual} to ${desired.substring(1, desired.length - 1)}`)\r\n        return actual.indexOf(desired.substring(1, desired.length - 1)) != -1;\r\n      } else if (desired[desired.length - 1] === '*') {\r\n        return actual.indexOf(desired.substring(0, desired.length - 1)) != -1;\r\n      } else if (desired[0] === '*') {\r\n        return actual.indexOf(desired.substring(1)) === actual.length - desired.length + 1;\r\n      }\r\n    }\r\n    return desired === actual;\r\n  }\r\n\r\n  /** Compares a pair of dates to see if the value is within the range */\r\n  compareDateRange(range, value) {\r\n    if (!value) return true;\r\n    const dash = range.indexOf('-');\r\n    if (dash === -1) return this.compareValues(range, value);\r\n    const start = range.substring(0, dash);\r\n    const end = range.substring(dash + 1);\r\n    return (!start || value >= start) &&\r\n      (!end || value <= end);\r\n  }\r\n\r\n  /**\r\n   * Filters the return list by the query parameters.\r\n   *\r\n   * @param {*} key\r\n   * @param {*} queryParams\r\n   * @param {*} study\r\n   * @returns\r\n   */\r\n  filterItem(key, queryParams, study) {\r\n    const altKey = StaticWadoClient.filterKeys[key] || key;\r\n    if (!queryParams) return true;\r\n    const testValue = queryParams[key] || queryParams[altKey];\r\n    if (!testValue) return true;\r\n    const valueElem = study[key] || study[altKey];\r\n    if (!valueElem) return false;\r\n    if (valueElem.vr == 'DA') return this.compareDateRange(testValue, valueElem.Value[0]);\r\n    const value = valueElem.Value;\r\n    return this.compareValues(testValue, value) && true;\r\n  }\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\r\nconst getLayoutViewports = state => state.viewports.layout.viewports;\r\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\r\n\r\n/**\r\n * Think of this as a computed getter for our store. It lets us watch parts of\r\n * our redux state, and only update/recalculate when those values change.\r\n */\r\nexport const getActiveContexts = createSelector(\r\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\r\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\r\n    const activeContexts = ['VIEWER'];\r\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\r\n    const activeViewportSpecificData =\r\n      viewportSpecificData[activeViewportIndex] || {};\r\n    const activeViewportPluginName =\r\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\r\n\r\n    if (activeViewportPluginName) {\r\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\r\n      activeContexts.push(activeViewportExtension);\r\n    }\r\n\r\n    return activeContexts;\r\n  }\r\n);\r\n","import OHIFLogo from '../components/OHIFLogo/OHIFLogo.js';\r\nimport React from 'react';\r\n\r\nconst defaultContextValues = {\r\n  createLogoComponentFn: React => OHIFLogo(),\r\n};\r\n\r\nconst WhiteLabelingContext = React.createContext(defaultContextValues);\r\n\r\nexport default WhiteLabelingContext;\r\n","import log from '../log.js';\r\n\r\n/**\r\n * The definition of a command\r\n *\r\n * @typedef {Object} CommandDefinition\r\n * @property {Function} commandFn - Command to call\r\n * @property {Array} storeContexts - Array of string of modules required from store\r\n * @property {Object} options - Object of params to pass action\r\n */\r\n\r\n/**\r\n * The Commands Manager tracks named commands (or functions) that are scoped to\r\n * a context. When we attempt to run a command with a given name, we look for it\r\n * in our active contexts. If found, we run the command, passing in any application\r\n * or call specific data specified in the command's definition.\r\n *\r\n * NOTE: A more robust version of the CommandsManager lives in v1. If you're looking\r\n * to extend this class, please check it's source before adding new methods.\r\n */\r\nexport class CommandsManager {\r\n  constructor({ getAppState, getActiveContexts } = {}) {\r\n    this.contexts = {};\r\n\r\n    if (!getAppState || !getActiveContexts) {\r\n      log.warn(\r\n        'CommandsManager was instantiated without getAppState() or getActiveContexts()'\r\n      );\r\n    }\r\n\r\n    this._getAppState = getAppState;\r\n    this._getActiveContexts = getActiveContexts;\r\n  }\r\n\r\n  /**\r\n   * Allows us to create commands \"per context\". An example would be the \"Cornerstone\"\r\n   * context having a `SaveImage` command, and the \"VTK\" context having a `SaveImage`\r\n   * command. The distinction of a context allows us to call the command in either\r\n   * context, and have faith that the correct command will be run.\r\n   *\r\n   * @method\r\n   * @param {string} contextName - Namespace for commands\r\n   * @returns {undefined}\r\n   */\r\n  createContext(contextName) {\r\n    if (!contextName) {\r\n      return;\r\n    }\r\n\r\n    if (this.contexts[contextName]) {\r\n      return this.clearContext(contextName);\r\n    }\r\n\r\n    this.contexts[contextName] = {};\r\n  }\r\n\r\n  /**\r\n   * Returns all command definitions for a given context\r\n   *\r\n   * @method\r\n   * @param {string} contextName - Namespace for commands\r\n   * @returns {Object} - the matched context\r\n   */\r\n  getContext(contextName) {\r\n    const context = this.contexts[contextName];\r\n\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * Clears all registered commands for a given context.\r\n   *\r\n   * @param {string} contextName - Namespace for commands\r\n   * @returns {undefined}\r\n   */\r\n  clearContext(contextName) {\r\n    if (!contextName) {\r\n      return;\r\n    }\r\n\r\n    this.contexts[contextName] = {};\r\n  }\r\n\r\n  /**\r\n   * Register a new command with the command manager. Scoped to a context, and\r\n   * with a definition to assist command callers w/ providing the necessary params\r\n   *\r\n   * @method\r\n   * @param {string} contextName - Namespace for command; often scoped to the extension that added it\r\n   * @param {string} commandName - Unique name identifying the command\r\n   * @param {CommandDefinition} definition - {@link CommandDefinition}\r\n   */\r\n  registerCommand(contextName, commandName, definition) {\r\n    if (typeof definition !== 'object') {\r\n      return;\r\n    }\r\n\r\n    const context = this.getContext(contextName);\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    context[commandName] = definition;\r\n  }\r\n\r\n  /**\r\n   * Finds a command with the provided name if it exists in the specified context,\r\n   * or a currently active context.\r\n   *\r\n   * @method\r\n   * @param {String} commandName - Command to find\r\n   * @param {String} [contextName] - Specific command to look in. Defaults to current activeContexts\r\n   */\r\n  getCommand(commandName, contextName) {\r\n    let contexts = [];\r\n\r\n    if (contextName) {\r\n      const context = this.getContext(contextName);\r\n      if (context) {\r\n        contexts.push(context);\r\n      }\r\n    } else {\r\n      const activeContexts = this._getActiveContexts();\r\n      activeContexts.forEach(activeContext => {\r\n        const context = this.getContext(activeContext);\r\n        if (context) {\r\n          contexts.push(context);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (contexts.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let foundCommand;\r\n    contexts.forEach(context => {\r\n      if (context[commandName]) {\r\n        foundCommand = context[commandName];\r\n      }\r\n    });\r\n\r\n    return foundCommand;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @method\r\n   * @param {String} commandName\r\n   * @param {Object} [options={}] - Extra options to pass the command. Like a mousedown event\r\n   * @param {String} [contextName]\r\n   */\r\n  runCommand(commandName, options = {}, contextName) {\r\n    const definition = this.getCommand(commandName, contextName);\r\n    if (!definition) {\r\n      log.warn(`Command \"${commandName}\" not found in current context`);\r\n      return;\r\n    }\r\n\r\n    const { commandFn, storeContexts = [] } = definition;\r\n    const definitionOptions = definition.options;\r\n\r\n    let commandParams = {};\r\n    const appState = this._getAppState();\r\n    storeContexts.forEach(context => {\r\n      commandParams[context] = appState[context];\r\n    });\r\n\r\n    commandParams = Object.assign(\r\n      {},\r\n      commandParams, // Required store contexts\r\n      definitionOptions, // \"Command configuration\"\r\n      options // \"Time of call\" info\r\n    );\r\n\r\n    if (typeof commandFn !== 'function') {\r\n      log.warn(`No commandFn was defined for command \"${commandName}\"`);\r\n      return;\r\n    } else {\r\n      return commandFn(commandParams);\r\n    }\r\n  }\r\n}\r\n\r\nexport default CommandsManager;\r\n","import hotkeys from './../utils/hotkeys';\r\nimport log from './../log.js';\r\n\r\n/**\r\n *\r\n *\r\n * @typedef {Object} HotkeyDefinition\r\n * @property {String} commandName - Command to call\r\n * @property {String} label - Display name for hotkey\r\n * @property {String[]} keys - Keys to bind; Follows Mousetrap.js binding syntax\r\n */\r\n\r\nexport class HotkeysManager {\r\n  constructor(commandsManager, servicesManager) {\r\n    this.hotkeyDefinitions = {};\r\n    this.hotkeyDefaults = [];\r\n    this.isEnabled = true;\r\n\r\n    if (!commandsManager) {\r\n      log.warn(\r\n        'HotkeysManager instantiated without a commandsManager. Hotkeys will be unable to find and run commands.'\r\n      );\r\n    }\r\n\r\n    this._servicesManager = servicesManager;\r\n    this._commandsManager = commandsManager;\r\n  }\r\n\r\n  /**\r\n   * Exposes Mousetrap.js's `.record` method, added by the record plugin.\r\n   *\r\n   * @param {*} event\r\n   */\r\n  record(event) {\r\n    return hotkeys.record(event);\r\n  }\r\n\r\n  /**\r\n   * Disables all hotkeys. Hotkeys added while disabled will not listen for\r\n   * input.\r\n   */\r\n  disable() {\r\n    this.isEnabled = false;\r\n    hotkeys.pause();\r\n  }\r\n\r\n  /**\r\n   * Enables all hotkeys.\r\n   */\r\n  enable() {\r\n    this.isEnabled = true;\r\n    hotkeys.unpause();\r\n  }\r\n\r\n  /**\r\n   * Registers a list of hotkeydefinitions.\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\r\n   */\r\n  setHotkeys(hotkeyDefinitions = []) {\r\n    try {\r\n      const definitions = this._getValidDefinitions(hotkeyDefinitions);\r\n\r\n      definitions.forEach(definition => this.registerHotkeys(definition));\r\n    } catch (error) {\r\n      const {\r\n        UINotificationService,\r\n        LoggerService,\r\n      } = this._servicesManager.services;\r\n      const message = 'Error while setting hotkeys';\r\n      LoggerService.error({ error, message });\r\n      UINotificationService.show({\r\n        title: 'Hotkeys Manager',\r\n        message,\r\n        type: 'error',\r\n        autoClose: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set default hotkey bindings. These\r\n   * values are used in `this.restoreDefaultBindings`.\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\r\n   */\r\n  setDefaultHotKeys(hotkeyDefinitions = []) {\r\n    const definitions = this._getValidDefinitions(hotkeyDefinitions);\r\n\r\n    this.hotkeyDefaults = definitions;\r\n  }\r\n\r\n  /**\r\n   * Take hotkey definitions that can be an array or object and make sure that it\r\n   * returns an array of hotkeys\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\r\n   */\r\n  _getValidDefinitions(hotkeyDefinitions) {\r\n    const definitions = Array.isArray(hotkeyDefinitions)\r\n      ? [...hotkeyDefinitions]\r\n      : this._parseToArrayLike(hotkeyDefinitions);\r\n\r\n    return definitions;\r\n  }\r\n\r\n  /**\r\n   * It parses given object containing hotkeyDefinition to array like.\r\n   * Each property of given object will be mapped to an object of an array. And its property name will be the value of a property named as commandName\r\n   *\r\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions={}] Contains hotkeys definitions\r\n   * @returns {HotkeyDefinition[]}\r\n   */\r\n  _parseToArrayLike(hotkeyDefinitionsObj = {}) {\r\n    const copy = { ...hotkeyDefinitionsObj };\r\n    return Object.entries(copy).map(entryValue =>\r\n      this._parseToHotKeyObj(entryValue[0], entryValue[1])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return HotkeyDefinition object like based on given property name and property value\r\n   * @param {string} propertyName property name of hotkey definition object\r\n   * @param {object} propertyValue property value of hotkey definition object\r\n   *\r\n   * @example\r\n   *\r\n   * const hotKeyObj = {hotKeyDefA: {keys:[],....}}\r\n   *\r\n   * const parsed = _parseToHotKeyObj(Object.keys(hotKeyDefA)[0], hotKeyObj[hotKeyDefA]);\r\n   *  {\r\n   *   commandName: hotKeyDefA,\r\n   *   keys: [],\r\n   *   ....\r\n   *  }\r\n   *\r\n   */\r\n  _parseToHotKeyObj(propertyName, propertyValue) {\r\n    return {\r\n      commandName: propertyName,\r\n      ...propertyValue,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * (unbinds and) binds the specified command to one or more key combinations.\r\n   * When a hotkey combination is triggered, the command name and active contexts\r\n   * are used to locate the correct command to call.\r\n   *\r\n   * @param {HotkeyDefinition} commandName\r\n   * @param {String} extension\r\n   * @returns {undefined}\r\n   */\r\n  registerHotkeys({ commandName, keys, label } = {}, extension) {\r\n    if (!commandName) {\r\n      log.warn(`No command was defined for hotkey \"${keys}\"`);\r\n      return;\r\n    }\r\n\r\n    const previouslyRegisteredDefinition = this.hotkeyDefinitions[commandName];\r\n\r\n    if (previouslyRegisteredDefinition) {\r\n      const previouslyRegisteredKeys = previouslyRegisteredDefinition.keys;\r\n      this._unbindHotkeys(commandName, previouslyRegisteredKeys);\r\n      log.info(`Unbinding ${commandName} from ${previouslyRegisteredKeys}`);\r\n    }\r\n\r\n    // Set definition & bind\r\n    this.hotkeyDefinitions[commandName] = { keys, label };\r\n    this._bindHotkeys(commandName, keys);\r\n    log.info(`Binding ${commandName} to ${keys}`);\r\n  }\r\n\r\n  /**\r\n   * Uses most recent\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  restoreDefaultBindings() {\r\n    this.setHotkeys(this.hotkeyDefaults);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  destroy() {\r\n    this.hotkeyDefaults = [];\r\n    this.hotkeyDefinitions = {};\r\n    hotkeys.reset();\r\n  }\r\n\r\n  /**\r\n   * Binds one or more set of hotkey combinations for a given command\r\n   *\r\n   * @private\r\n   * @param {string} commandName - The name of the command to trigger when hotkeys are used\r\n   * @param {string[]} keys - One or more key combinations that should trigger command\r\n   * @returns {undefined}\r\n   */\r\n  _bindHotkeys(commandName, keys) {\r\n    const isKeyDefined = keys === '' || keys === undefined;\r\n    if (isKeyDefined) {\r\n      return;\r\n    }\r\n\r\n    const isKeyArray = keys instanceof Array;\r\n    const combinedKeys = isKeyArray ? keys.join('+') : keys;\r\n\r\n    hotkeys.bind(combinedKeys, evt => {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      this._commandsManager.runCommand(commandName, { evt });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * unbinds one or more set of hotkey combinations for a given command\r\n   *\r\n   * @private\r\n   * @param {string} commandName - The name of the previously bound command\r\n   * @param {string[]} keys - One or more sets of previously bound keys\r\n   * @returns {undefined}\r\n   */\r\n  _unbindHotkeys(commandName, keys) {\r\n    const isKeyDefined = keys !== '' && keys !== undefined;\r\n    if (!isKeyDefined) {\r\n      return;\r\n    }\r\n\r\n    const isKeyArray = keys instanceof Array;\r\n    if (isKeyArray) {\r\n      const combinedKeys = keys.join('+');\r\n      this._unbindHotkeys(commandName, combinedKeys);\r\n      return;\r\n    }\r\n\r\n    hotkeys.unbind(keys);\r\n  }\r\n}\r\n\r\nexport default HotkeysManager;\r\n\r\n// Commands Contexts:\r\n\r\n// --> Name and Priority\r\n// GLOBAL: 0\r\n// VIEWER::CORNERSTONE: 1\r\n// VIEWER::VTK: 1\r\n","export const CodeNameCodeSequenceValues = {\r\n  ImagingMeasurementReport: '126000',\r\n  ImageLibrary: '111028',\r\n  ImagingMeasurements: '126010',\r\n  MeasurementGroup: '125007',\r\n  ImageLibraryGroup: '126200',\r\n  TrackingUniqueIdentifier: '112040',\r\n  TrackingIdentifier: '112039',\r\n  Finding: '121071',\r\n  FindingSite: 'G-C0E3', // SRT\r\n  CornerstoneFreeText: 'CORNERSTONEFREETEXT', // CST4\r\n  Score: '246262008',\r\n};\r\n\r\nexport const RELATIONSHIP_TYPE = {\r\n  INFERRED_FROM: 'INFERRED FROM',\r\n  SELECTED_FROM: 'SELECTED FROM',\r\n};\r\n\r\nexport const CodingSchemeDesignators = {\r\n  SRT: 'SRT',\r\n  cornerstoneTools4: 'CST4',\r\n};\r\n\r\nexport default {\r\n  CodeNameCodeSequenceValues,\r\n  RELATIONSHIP_TYPE,\r\n  CodingSchemeDesignators,\r\n};\r\n","const getSequenceAsArray = sequence =>\r\n  Array.isArray(sequence) ? sequence : [sequence];\r\n\r\nexport default getSequenceAsArray;\r\n","const getLabelFromMeasuredValueSequence = (\r\n  ConceptNameCodeSequence,\r\n  MeasuredValueSequence\r\n) => {\r\n  const { CodeMeaning } = ConceptNameCodeSequence;\r\n  const { NumericValue, MeasurementUnitsCodeSequence } = MeasuredValueSequence;\r\n  const { CodeValue } = MeasurementUnitsCodeSequence;\r\n\r\n  const formatedNumericValue = NumericValue\r\n    ? Number(NumericValue).toFixed(1)\r\n    : '';\r\n\r\n  return {\r\n    label: CodeMeaning,\r\n    value: `${formatedNumericValue} ${CodeValue}`,\r\n  }; // E.g. Long Axis: 31.0 mm\r\n};\r\n\r\nexport default getLabelFromMeasuredValueSequence;\r\n","const getCoordsFromSCOORDOrSCOORD3D = graphicItem => {\r\n  const { ValueType, GraphicType, GraphicData } = graphicItem;\r\n  const coords = { ValueType, GraphicType, GraphicData };\r\n\r\n  if (ValueType === 'SCOORD') {\r\n    const { ReferencedSOPSequence } = graphicItem.ContentSequence;\r\n    coords.ReferencedSOPSequence = ReferencedSOPSequence;\r\n  } else if (ValueType === 'SCOORD3D') {\r\n    if (graphicItem.ReferencedFrameOfReferenceUID) {\r\n      coords.ReferencedFrameOfReferenceSequence =\r\n        graphicItem.ReferencedFrameOfReferenceUID;\r\n    } else if (graphicItem.ContentSequence) {\r\n      const {\r\n        ReferencedFrameOfReferenceSequence,\r\n      } = graphicItem.ContentSequence;\r\n      coords.ReferencedFrameOfReferenceSequence = ReferencedFrameOfReferenceSequence;\r\n    }\r\n  }\r\n\r\n  return coords;\r\n};\r\n\r\nexport default getCoordsFromSCOORDOrSCOORD3D;\r\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\r\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\r\nimport { RELATIONSHIP_TYPE, CodeNameCodeSequenceValues } from '../enums';\r\n\r\n/**\r\n * TID 1410 Planar ROI Measurements and Qualitative Evaluations.\r\n *\r\n * @param {*} contentSequence\r\n * @returns\r\n */\r\nconst processTID1410Measurement = contentSequence => {\r\n  // Need to deal with TID 1410 style measurements, which will have a SCOORD or SCOORD3D at the top level,\r\n  // And non-geometric representations where each NUM has \"INFERRED FROM\" SCOORD/SCOORD3D\r\n\r\n  const graphicItem = contentSequence.find(\r\n    group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\r\n  );\r\n\r\n  if (!graphicItem) {\r\n    console.warn(\r\n      `graphic ValueType ${graphicItem.ValueType} not currently supported, skipping annotation.`\r\n    );\r\n    return;\r\n  }\r\n\r\n  const UIDREFContentItem = contentSequence.find(\r\n    group => group.ValueType === 'UIDREF'\r\n  );\r\n\r\n  const TrackingIdentifierContentItem = contentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.TrackingIdentifier\r\n  );\r\n\r\n  const NUMContentItems = contentSequence.filter(\r\n    group => group.ValueType === 'NUM'\r\n  );\r\n\r\n  const measurement = {\r\n    loaded: false,\r\n    labels: [],\r\n    coords: [getCoordsFromSCOORDOrSCOORD3D(graphicItem)],\r\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\r\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\r\n  };\r\n\r\n  NUMContentItems.forEach(item => {\r\n    const {\r\n      ConceptNameCodeSequence,\r\n      ContentSequence,\r\n      MeasuredValueSequence,\r\n    } = item;\r\n\r\n    if (\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.Score\r\n    ) {\r\n      ContentSequence.forEach(item => {\r\n        if (\r\n          [\r\n            RELATIONSHIP_TYPE.SELECTED_FROM,\r\n            RELATIONSHIP_TYPE.INFERRED_FROM,\r\n          ].includes(item.RelationshipType)\r\n        ) {\r\n          if (item.ReferencedSOPSequence) {\r\n            measurement.coords.forEach(coord => {\r\n              coord.ReferencedSOPSequence = item.ReferencedSOPSequence;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (MeasuredValueSequence) {\r\n      measurement.labels.push(\r\n        getLabelFromMeasuredValueSequence(\r\n          ConceptNameCodeSequence,\r\n          MeasuredValueSequence\r\n        )\r\n      );\r\n    }\r\n  });\r\n\r\n  return measurement;\r\n};\r\n\r\nexport default processTID1410Measurement;\r\n","export default {\r\n  TEXT: 'TEXT',\r\n  POINT: 'POINT',\r\n  MULTIPOINT: 'MULTIPOINT',\r\n  POLYLINE: 'POLYLINE',\r\n  CIRCLE: 'CIRCLE',\r\n  ELLIPSE: 'ELLIPSE',\r\n  POLYGON: 'POLYGON',\r\n};\r\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\r\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\r\nimport { CodeNameCodeSequenceValues, CodingSchemeDesignators } from '../enums';\r\nimport SCOORD_TYPES from '../constants/scoordTypes';\r\n\r\nconst CORNERSTONE_FREETEXT_CODE_VALUE = 'CORNERSTONEFREETEXT';\r\n\r\nconst processNonGeometricallyDefinedMeasurement = contentSequence => {\r\n  const NUMContentItems = contentSequence.filter(\r\n    group => group.ValueType === 'NUM'\r\n  );\r\n\r\n  const CODEContentItems = contentSequence.filter(\r\n    group => group.ValueType === 'CODE'\r\n  );\r\n\r\n  const UIDREFContentItem = contentSequence.find(\r\n    group => group.ValueType === 'UIDREF'\r\n  );\r\n\r\n  const IMAGEContentItem = contentSequence.find(\r\n    group => group.ValueType === 'IMAGE'\r\n  );\r\n\r\n  const TrackingIdentifierContentItem = contentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.TrackingIdentifier\r\n  );\r\n\r\n  const Finding = contentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.Finding\r\n  );\r\n\r\n  const FindingSites = contentSequence.filter(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodingSchemeDesignator ===\r\n        CodingSchemeDesignators.SRT &&\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n        CodeNameCodeSequenceValues.FindingSite\r\n  );\r\n\r\n  const measurement = {\r\n    loaded: false,\r\n    labels: [],\r\n    coords: [],\r\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\r\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\r\n  };\r\n\r\n  if (\r\n    Finding &&\r\n    Finding.ConceptCodeSequence.CodingSchemeDesignator ===\r\n      CodingSchemeDesignators.cornerstoneTools4 &&\r\n    Finding.ConceptCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.CornerstoneFreeText\r\n  ) {\r\n    measurement.labels.push({\r\n      label: CORNERSTONE_FREETEXT_CODE_VALUE,\r\n      value: Finding.ConceptCodeSequence.CodeMeaning,\r\n    });\r\n  }\r\n\r\n  // TODO -> Eventually hopefully support SNOMED or some proper code library, just free text for now.\r\n  if (FindingSites.length) {\r\n    const cornerstoneFreeTextFindingSite = FindingSites.find(\r\n      FindingSite =>\r\n        FindingSite.ConceptCodeSequence.CodingSchemeDesignator ===\r\n          CodingSchemeDesignators.cornerstoneTools4 &&\r\n        FindingSite.ConceptCodeSequence.CodeValue ===\r\n          CodeNameCodeSequenceValues.CornerstoneFreeText\r\n    );\r\n\r\n    if (cornerstoneFreeTextFindingSite) {\r\n      measurement.labels.push({\r\n        label: CORNERSTONE_FREETEXT_CODE_VALUE,\r\n        value: cornerstoneFreeTextFindingSite.ConceptCodeSequence.CodeMeaning,\r\n      });\r\n    }\r\n  }\r\n\r\n  NUMContentItems.forEach(item => {\r\n    const {\r\n      ConceptNameCodeSequence,\r\n      ContentSequence,\r\n      MeasuredValueSequence,\r\n    } = item;\r\n\r\n    if (!ContentSequence) {\r\n      console.warn(`Graphic ${ContentSequence} missing, skipping annotation.`);\r\n\r\n      return;\r\n    }\r\n\r\n    const { ValueType } = ContentSequence;\r\n\r\n    if (!ValueType === 'SCOORD' && !ValueType === 'SCOORD3D') {\r\n      console.warn(\r\n        `Graphic ${ValueType} not currently supported, skipping annotation.`\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    const coords = getCoordsFromSCOORDOrSCOORD3D(ContentSequence);\r\n\r\n    if (coords) {\r\n      measurement.coords.push(coords);\r\n    }\r\n\r\n    if (MeasuredValueSequence) {\r\n      measurement.labels.push(\r\n        getLabelFromMeasuredValueSequence(\r\n          ConceptNameCodeSequence,\r\n          MeasuredValueSequence\r\n        )\r\n      );\r\n    }\r\n  });\r\n\r\n  if (NUMContentItems.length === 0 && IMAGEContentItem) {\r\n    CODEContentItems.forEach(item => {\r\n      const { ConceptCodeSequence, ConceptNameCodeSequence } = item;\r\n\r\n      if (!ConceptCodeSequence || !ConceptNameCodeSequence) {\r\n        console.warn(`Graphic missing, skipping annotation.`);\r\n\r\n        return;\r\n      }\r\n\r\n      const GraphicData = [0, 0];\r\n      const GraphicType = SCOORD_TYPES.TEXT;\r\n      const { ValueType } = item;\r\n      const ReferencedSOPSequence = IMAGEContentItem.ReferencedSOPSequence;\r\n      const coord = {\r\n        ValueType,\r\n        GraphicType,\r\n        GraphicData,\r\n        ReferencedSOPSequence,\r\n      };\r\n      measurement.coords.push(coord);\r\n      measurement.labels.push({\r\n        label: ConceptNameCodeSequence.CodeMeaning,\r\n        labelCodingSchemeDesignator:\r\n          ConceptNameCodeSequence.CodingSchemeDesignator,\r\n        value: ConceptCodeSequence.CodeMeaning,\r\n        valueCodingSchemeDesignator: ConceptCodeSequence.CodingSchemeDesignator,\r\n      });\r\n    });\r\n  }\r\n\r\n  return measurement;\r\n};\r\n\r\nexport default processNonGeometricallyDefinedMeasurement;\r\n","import processTID1410Measurement from './processTID1410Measurement';\r\nimport processNonGeometricallyDefinedMeasurement from './processNonGeometricallyDefinedMeasurement';\r\n\r\nconst processMeasurement = contentSequence => {\r\n  if (\r\n    contentSequence.some(\r\n      group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\r\n    )\r\n  ) {\r\n    return processTID1410Measurement(contentSequence);\r\n  }\r\n\r\n  return processNonGeometricallyDefinedMeasurement(contentSequence);\r\n};\r\n\r\nexport default processMeasurement;\r\n","import { CodeNameCodeSequenceValues } from '../enums';\r\nimport getSequenceAsArray from './getSequenceAsArray';\r\nimport getMergedContentSequencesByTrackingUniqueIdentifiers from './getMergedContentSequencesByTrackingUniqueIdentifiers';\r\nimport processMeasurement from './processMeasurement';\r\n\r\nconst getMeasurements = ImagingMeasurementReportContentSequence => {\r\n  const ImagingMeasurements = ImagingMeasurementReportContentSequence.find(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.ImagingMeasurements\r\n  );\r\n\r\n  const MeasurementGroups = getSequenceAsArray(\r\n    ImagingMeasurements.ContentSequence\r\n  ).filter(\r\n    item =>\r\n      item.ConceptNameCodeSequence.CodeValue ===\r\n      CodeNameCodeSequenceValues.MeasurementGroup\r\n  );\r\n\r\n  /* const mergedContentSequencesByTrackingUniqueIdentifiers = getMergedContentSequencesByTrackingUniqueIdentifiers(\r\n    MeasurementGroups\r\n  );*/\r\n\r\n  let measurements = [];\r\n\r\n  MeasurementGroups.forEach(MeasurementGroup => {\r\n    const contentSequence = MeasurementGroup.ContentSequence;\r\n    const measurement = processMeasurement(contentSequence);\r\n    if (measurement) {\r\n      measurements.push(measurement);\r\n    }\r\n  });\r\n\r\n  return measurements;\r\n};\r\n\r\nexport default getMeasurements;\r\n","import { adapters } from 'dcmjs';\r\n\r\nconst cornerstoneAdapters = adapters.Cornerstone;\r\n\r\n/**\r\n * Checks if the given `displaySet`can be rehydrated into the `MeasurementService`.\r\n *\r\n * @param {object} displaySet The SR `displaySet` to check.\r\n * @param {object[]} mappings The CornerstoneTools 4 mappings to the `MeasurementService`.\r\n * @returns {boolean} True if the SR can be rehydrated into the `MeasurementService`.\r\n */\r\nexport default function isRehydratable(displaySet, mappings) {\r\n  if (!mappings || !mappings.length) {\r\n    return false;\r\n  }\r\n\r\n  const mappingDefinitions = mappings.map(m => m.definition);\r\n  const { measurements } = displaySet;\r\n\r\n  const adapterKeys = Object.keys(cornerstoneAdapters).filter(\r\n    adapterKey =>\r\n      typeof cornerstoneAdapters[adapterKey]\r\n        .isValidCornerstoneTrackingIdentifier === 'function'\r\n  );\r\n\r\n  const adapters = [];\r\n\r\n  adapterKeys.forEach(key => {\r\n    if (mappingDefinitions.includes(key)) {\r\n      // Must have both a dcmjs adapter and a MeasurementService\r\n      // Definition in order to be a candidate for import.\r\n      adapters.push(cornerstoneAdapters[key]);\r\n    }\r\n  });\r\n\r\n  for (let i = 0; i < measurements.length; i++) {\r\n    const TrackingIdentifier = measurements[i].TrackingIdentifier;\r\n    const hydratable = adapters.some(adapter =>\r\n      adapter.isValidCornerstoneTrackingIdentifier(TrackingIdentifier)\r\n    );\r\n\r\n    if (hydratable) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","const TOOL_NAMES = {\r\n  DICOM_SR_DISPLAY_TOOL: 'DICOMSRDisplayTool',\r\n};\r\n\r\nexport default TOOL_NAMES;\r\n","import csMath from 'cornerstone-math';\r\nimport SCOORD_TYPES from '../constants/scoordTypes';\r\nimport { inv } from 'mathjs';\r\n\r\nconst getRenderableData = (\r\n  GraphicType,\r\n  GraphicData,\r\n  ValueType,\r\n  imageMetadata\r\n) => {\r\n  let renderableData;\r\n\r\n  const orientation = imageMetadata.ImageOrientationPatient;\r\n  const position = imageMetadata.ImagePositionPatient;\r\n  const pixelSpacing = imageMetadata.PixelSpacing;\r\n  const sliceSpacing = imageMetadata.SliceThickness\r\n    ? imageMetadata.SliceThickness\r\n    : 1;\r\n  //  https://nipy.org/nibabel/dicom/dicom_orientation.html\r\n  const M = [\r\n    [\r\n      orientation[0] * pixelSpacing[0],\r\n      orientation[3] * pixelSpacing[1],\r\n      sliceSpacing,\r\n      position[0],\r\n    ],\r\n    [\r\n      orientation[1] * pixelSpacing[0],\r\n      orientation[4] * pixelSpacing[1],\r\n      sliceSpacing,\r\n      position[1],\r\n    ],\r\n    [\r\n      orientation[2] * pixelSpacing[0],\r\n      orientation[5] * pixelSpacing[1],\r\n      sliceSpacing,\r\n      position[2],\r\n    ],\r\n    [0, 0, 0, 1],\r\n  ];\r\n\r\n  // we need to go from 3D to pixel (cornerstone2D works in pixel coordinates),\r\n  // we take the inverse.\r\n  const M1 = inv(M);\r\n\r\n  const worldToIJK = (point, M1) => {\r\n    const worldPoint = {\r\n      x:\r\n        M1[0][0] * point.x + M1[0][1] * point.y + M1[0][2] * point.z + M1[0][3],\r\n      y:\r\n        M1[1][0] * point.x + M1[1][1] * point.y + M1[1][2] * point.z + M1[1][3],\r\n      z:\r\n        M1[2][0] * point.x + M1[2][1] * point.y + M1[2][2] * point.z + M1[2][3],\r\n    };\r\n    return worldPoint;\r\n  };\r\n\r\n  // https://dicom.innolitics.com/ciods/procedure-log/sr-document-content/00700023\r\n  switch (GraphicType) {\r\n    case SCOORD_TYPES.TEXT:\r\n      renderableData = [{ x: GraphicData[0], y: GraphicData[1] }];\r\n\r\n      break;\r\n    case SCOORD_TYPES.POINT:\r\n      renderableData = [];\r\n\r\n      if (ValueType === 'SCOORD3D') {\r\n        for (let i = 0; i < GraphicData.length; i += 3) {\r\n          const point = {\r\n            x: GraphicData[i],\r\n            y: GraphicData[i + 1],\r\n            z: GraphicData[i + 2],\r\n          };\r\n\r\n          renderableData.push(worldToIJK(point, M1));\r\n        }\r\n      } else {\r\n        for (let i = 0; i < GraphicData.length; i += 2) {\r\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\r\n        }\r\n      }\r\n\r\n      break;\r\n    case SCOORD_TYPES.MULTIPOINT:\r\n      renderableData = [];\r\n\r\n      if (ValueType === 'SCOORD3D') {\r\n        for (let i = 0; i < GraphicData.length; i += 3) {\r\n          const point = {\r\n            x: GraphicData[i],\r\n            y: GraphicData[i + 1],\r\n            z: GraphicData[i + 2],\r\n          };\r\n\r\n          renderableData.push(worldToIJK(point, M1));\r\n        }\r\n      } else {\r\n        for (let i = 0; i < GraphicData.length; i += 2) {\r\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\r\n        }\r\n      }\r\n\r\n      break;\r\n    case SCOORD_TYPES.POLYLINE:\r\n      renderableData = [];\r\n\r\n      if (ValueType === 'SCOORD3D') {\r\n        for (let i = 0; i < GraphicData.length; i += 3) {\r\n          const point = {\r\n            x: GraphicData[i],\r\n            y: GraphicData[i + 1],\r\n            z: GraphicData[i + 2],\r\n          };\r\n\r\n          renderableData.push(worldToIJK(point, M1));\r\n        }\r\n      } else {\r\n        for (let i = 0; i < GraphicData.length; i += 2) {\r\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\r\n        }\r\n      }\r\n\r\n      break;\r\n    case SCOORD_TYPES.POLYGON:\r\n      // this is only scoord3d\r\n      renderableData = [];\r\n      for (let i = 0; i < GraphicData.length; i += 3) {\r\n        const point = {\r\n          x: GraphicData[i],\r\n          y: GraphicData[i + 1],\r\n          z: GraphicData[i + 2],\r\n        };\r\n\r\n        renderableData.push(worldToIJK(point, M1));\r\n      }\r\n      break;\r\n    case SCOORD_TYPES.CIRCLE: {\r\n      // this is only scoord\r\n      const center = { x: GraphicData[0], y: GraphicData[1] };\r\n      const onPerimeter = { x: GraphicData[2], y: GraphicData[3] };\r\n\r\n      const radius = csMath.point.distance(center, onPerimeter);\r\n\r\n      renderableData = {\r\n        center,\r\n        radius,\r\n      };\r\n      break;\r\n    }\r\n    case SCOORD_TYPES.ELLIPSE: {\r\n      console.warn('ROTATED ELLIPSE NOT YET SUPPORTED!');\r\n      // To Do: scoord3d ellips, need data for testing\r\n      const majorAxis = [\r\n        { x: GraphicData[0], y: GraphicData[1] },\r\n        { x: GraphicData[2], y: GraphicData[3] },\r\n      ];\r\n      const minorAxis = [\r\n        { x: GraphicData[4], y: GraphicData[5] },\r\n        { x: GraphicData[6], y: GraphicData[7] },\r\n      ];\r\n\r\n      // Calculate two opposite corners of box defined by two axes.\r\n\r\n      const minorAxisLength = csMath.point.distance(minorAxis[0], minorAxis[1]);\r\n\r\n      const minorAxisDirection = {\r\n        x: (minorAxis[1].x - minorAxis[0].x) / minorAxisLength,\r\n        y: (minorAxis[1].y - minorAxis[0].y) / minorAxisLength,\r\n      };\r\n\r\n      const halfMinorAxisLength = minorAxisLength / 2;\r\n\r\n      // First end point of major axis + half minor axis vector\r\n      const corner1 = {\r\n        x: majorAxis[0].x + minorAxisDirection.x * halfMinorAxisLength,\r\n        y: majorAxis[0].y + minorAxisDirection.y * halfMinorAxisLength,\r\n      };\r\n\r\n      // Second end point of major axis - half of minor axis vector\r\n      const corner2 = {\r\n        x: majorAxis[1].x - minorAxisDirection.x * halfMinorAxisLength,\r\n        y: majorAxis[1].y - minorAxisDirection.y * halfMinorAxisLength,\r\n      };\r\n\r\n      renderableData = {\r\n        corner1,\r\n        corner2,\r\n      };\r\n      break;\r\n    }\r\n  }\r\n\r\n  return renderableData;\r\n};\r\n\r\nexport default getRenderableData;\r\n","import csTools from 'cornerstone-tools';\r\nimport OHIF from '../../../';\r\n\r\n/** Internal imports */\r\nimport TOOL_NAMES from '../constants/toolNames';\r\nimport getRenderableData from './getRenderableData';\r\n\r\nconst globalImageIdSpecificToolStateManager =\r\n  csTools.globalImageIdSpecificToolStateManager;\r\n\r\n/**\r\n * Add a measurement to a display set.\r\n *\r\n * @param {*} measurement\r\n * @param {*} imageId\r\n * @param {*} displaySetInstanceUID\r\n */\r\nexport default function addMeasurement(\r\n  measurement,\r\n  imageId,\r\n  imageMetadata,\r\n  displaySetInstanceUID\r\n) {\r\n  // TODO -> Render rotated ellipse .\r\n  const toolName = TOOL_NAMES.DICOM_SR_DISPLAY_TOOL;\r\n\r\n  const measurementData = {\r\n    TrackingUniqueIdentifier: measurement.TrackingUniqueIdentifier,\r\n    TrackingIdentifier: measurement.TrackingIdentifier,\r\n    renderableData: {},\r\n    labels: measurement.labels,\r\n    isSRText: measurement.isSRText,\r\n  };\r\n\r\n  measurement.coords.forEach(coord => {\r\n    const { GraphicType, GraphicData, ValueType } = coord;\r\n\r\n    if (measurementData.renderableData[GraphicType] === undefined) {\r\n      measurementData.renderableData[GraphicType] = [];\r\n    }\r\n    measurementData.renderableData[GraphicType].push(\r\n      getRenderableData(GraphicType, GraphicData, ValueType, imageMetadata)\r\n    );\r\n  });\r\n\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  if (toolState[imageId] === undefined) {\r\n    toolState[imageId] = {};\r\n  }\r\n\r\n  const imageIdToolState = toolState[imageId];\r\n\r\n  // If we don't have tool state for this type of tool, add an empty object\r\n  if (imageIdToolState[toolName] === undefined) {\r\n    imageIdToolState[toolName] = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  const toolData = imageIdToolState[toolName];\r\n\r\n  measurementData.description = `Read-only annotation`;\r\n  measurementData.isReadOnly = true;\r\n  toolData.data.push(measurementData);\r\n\r\n  addToMeasurementApi({ measurementData, toolName, imageId });\r\n\r\n  measurement.loaded = true;\r\n  measurement.imageId = imageId;\r\n  measurement.displaySetInstanceUID = displaySetInstanceUID;\r\n\r\n  // Remove the unneeded coord now its processed, but keep the SOPInstanceUID.\r\n  // NOTE: We assume that each SCOORD in the MeasurementGroup maps onto one frame,\r\n  // It'd be super werid if it didn't anyway as a SCOORD.\r\n  measurement.ReferencedSOPInstanceUID =\r\n    measurement.coords[0].ReferencedSOPSequence.ReferencedSOPInstanceUID;\r\n\r\n  return measurement;\r\n}\r\n\r\nconst addToMeasurementApi = ({ measurementData, toolName, imageId }) => {\r\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\r\n\r\n  const toolType = toolName;\r\n  const collection = measurementApi.tools[toolType];\r\n  if (!collection) return;\r\n  if (!measurementData || measurementData.cancelled) return;\r\n\r\n  const imageAttributes = OHIF.measurements.getImageAttributes(null, imageId);\r\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\r\n    lesionNamingNumber: measurementData.lesionNamingNumber,\r\n    userId: OHIF.user.getUserId(),\r\n    toolType,\r\n  });\r\n\r\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\r\n  Object.assign(measurementData, addedMeasurement);\r\n\r\n  const measurementLabel = OHIF.measurements.getLabel(measurementData);\r\n  if (measurementLabel) {\r\n    measurementData.labels = [measurementLabel];\r\n  }\r\n};\r\n","import { ImageSet } from '../../classes';\r\nimport getMeasurements from './utils/getMeasurements';\r\nimport isRehydratable from './utils/isRehydratable';\r\nimport addMeasurement from './utils/addMeasurement';\r\n\r\nconst parseSCOORD3D = ({ servicesManager, displaySets }) => {\r\n  const { MeasurementService } = servicesManager.services;\r\n\r\n  const srDisplaySets = displaySets.filter(ds => ds.Modality === 'SR');\r\n  const imageDisplaySets = displaySets.filter(\r\n    ds =>\r\n      ds.Modality !== 'SR' &&\r\n      ds.Modality !== 'SEG' &&\r\n      ds.Modality !== 'RTSTRUCT'\r\n  );\r\n\r\n  imageDisplaySets.forEach(imageDisplaySet => {\r\n    imageDisplaySet.SRLabels = [];\r\n  });\r\n\r\n  srDisplaySets.forEach(srDisplaySet => {\r\n    const firstInstance = srDisplaySet.metadata;\r\n    if (!firstInstance) {\r\n      return;\r\n    }\r\n\r\n    const { ContentSequence } = firstInstance;\r\n\r\n    srDisplaySet.measurements = getMeasurements(ContentSequence);\r\n    const mappings = MeasurementService.getSourceMappings(\r\n      'CornerstoneTools',\r\n      '4'\r\n    );\r\n\r\n    srDisplaySet.isHydrated = false;\r\n    srDisplaySet.isRehydratable = isRehydratable(srDisplaySet, mappings);\r\n    srDisplaySet.isLoaded = true;\r\n\r\n    imageDisplaySets.forEach(imageDisplaySet => {\r\n      // Check currently added displaySets and add measurements if the sources exist.\r\n      checkIfCanAddMeasurementsToDisplaySet(srDisplaySet, imageDisplaySet);\r\n    });\r\n  });\r\n};\r\n\r\nconst checkIfCanAddMeasurementsToDisplaySet = (\r\n  srDisplaySet,\r\n  imageDisplaySet\r\n) => {\r\n  let measurements = srDisplaySet.measurements;\r\n\r\n  /**\r\n   * Look for image sets.\r\n   * This also filters out _this_ displaySet, as it is not an image set.\r\n   */\r\n  if (!(imageDisplaySet instanceof ImageSet)) {\r\n    return;\r\n  }\r\n\r\n  const { sopClassUIDs, images } = imageDisplaySet;\r\n\r\n  /**\r\n   * Filter measurements that references the correct sop class.\r\n   */\r\n  measurements = measurements.filter(measurement => {\r\n    return measurement.coords.some(coord => {\r\n      if (coord.ReferencedSOPSequence === undefined) {\r\n        /** we miss the referenced information. We can compare the annotation SCOORD3D coordinates with\r\n         * the ImagePatientPosition of the frames. However (WARNING!!!),\r\n         * if more than a source series is present, this logic can find the wrong frame\r\n         * (i.e. two source series, with the same frameOfReferenceUID,\r\n         * that have each a frame with the same ImagePositionPatient of the annotation 3D coordinates)\r\n         */\r\n        for (let i = 0; i < images.length; ++i) {\r\n          const imageMetadata = images[i].getData().metadata;\r\n          if (\r\n            imageMetadata.FrameOfReferenceUID !==\r\n            coord.ReferencedFrameOfReferenceSequence\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          let sliceNormal = [0, 0, 0];\r\n          const orientation = imageMetadata.ImageOrientationPatient;\r\n          sliceNormal[0] =\r\n            orientation[1] * orientation[5] - orientation[2] * orientation[4];\r\n          sliceNormal[1] =\r\n            orientation[2] * orientation[3] - orientation[0] * orientation[5];\r\n          sliceNormal[2] =\r\n            orientation[0] * orientation[4] - orientation[1] * orientation[3];\r\n\r\n          let distanceAlongNormal = 0;\r\n          for (let j = 0; j < 3; ++j) {\r\n            distanceAlongNormal +=\r\n              sliceNormal[j] * imageMetadata.ImagePositionPatient[j];\r\n          }\r\n\r\n          // assuming 1 mm tolerance\r\n          if (Math.abs(distanceAlongNormal - coord.GraphicData[2]) > 1) {\r\n            continue;\r\n          }\r\n\r\n          coord.ReferencedSOPSequence = {\r\n            ReferencedSOPClassUID: imageMetadata.SOPClassUID,\r\n            ReferencedSOPInstanceUID: imageMetadata.SOPInstanceUID,\r\n          };\r\n\r\n          break;\r\n        }\r\n\r\n        if (coord.ReferencedSOPSequence === undefined) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return sopClassUIDs.includes(\r\n        coord.ReferencedSOPSequence.ReferencedSOPClassUID\r\n      );\r\n    });\r\n  });\r\n\r\n  /**\r\n   * New display set doesn't have measurements that references the correct sop class.\r\n   */\r\n  if (measurements.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const imageIds = images.map(i => i.getImageId());\r\n  const SOPInstanceUIDs = images.map(i => i.SOPInstanceUID);\r\n  const colors = new Map();\r\n  measurements.forEach(measurement => {\r\n    const { coords } = measurement;\r\n    coords.forEach((coord, index) => {\r\n      if (coord.ReferencedSOPSequence !== undefined) {\r\n        const imageIndex = SOPInstanceUIDs.findIndex(\r\n          SOPInstanceUID =>\r\n            SOPInstanceUID ===\r\n            coord.ReferencedSOPSequence.ReferencedSOPInstanceUID\r\n        );\r\n        if (imageIndex > -1) {\r\n          if (!srDisplaySet.referencedDisplaySets.includes(imageDisplaySet)) {\r\n            srDisplaySet.referencedDisplaySets.push(imageDisplaySet);\r\n          }\r\n\r\n          const imageId = imageIds[imageIndex];\r\n          const imageMetadata = images[imageIndex].getData().metadata;\r\n\r\n          if (coord.GraphicType === 'TEXT') {\r\n            const key =\r\n              measurement.labels[index].label + measurement.labels[index].value;\r\n            let color = colors.get(key);\r\n            if (!color) {\r\n              // random dark color\r\n              color =\r\n                'hsla(' + Math.floor(Math.random() * 360) + ', 70%, 30%, 1)';\r\n              colors.set(key, color);\r\n            }\r\n\r\n            measurement.labels[index].color = color;\r\n            measurement.isSRText = true;\r\n            measurement.labels[index].visible = true;\r\n\r\n            imageDisplaySet.SRLabels.push({\r\n              ReferencedSOPInstanceUID:\r\n                coord.ReferencedSOPSequence.ReferencedSOPInstanceUID,\r\n              labels: measurement.labels[index],\r\n            });\r\n\r\n            if (index === 0) {\r\n              addMeasurement(\r\n                measurement,\r\n                imageId,\r\n                imageMetadata,\r\n                imageDisplaySet.displaySetInstanceUID\r\n              );\r\n            }\r\n          } else {\r\n            addMeasurement(\r\n              measurement,\r\n              imageId,\r\n              imageMetadata,\r\n              imageDisplaySet.displaySetInstanceUID\r\n            );\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport default parseSCOORD3D;\r\n","/**\r\n *  Should Find the requested instance metadata into the displaySets and return\r\n *\r\n * @param {Array} displaySets - List of displaySets\r\n * @param {string} SOPInstanceUID - sopInstanceUID to look for\r\n * @returns {Object} - instance metadata found\r\n */\r\nconst findInstanceMetadataBySopInstanceUID = (displaySets, SOPInstanceUID) => {\r\n  let instanceFound;\r\n\r\n  displaySets.find(displaySet => {\r\n    if (!displaySet.images) return false;\r\n\r\n    instanceFound = displaySet.images.find(\r\n      instanceMetadata =>\r\n        instanceMetadata.getSOPInstanceUID() === SOPInstanceUID\r\n    );\r\n\r\n    return !!instanceFound;\r\n  });\r\n\r\n  return instanceFound;\r\n};\r\n\r\nexport default findInstanceMetadataBySopInstanceUID;\r\n","import dcmjs from 'dcmjs';\r\nimport classes from '../classes';\r\nimport parseSCOORD3D from './SCOORD3D/parseSCOORD3D';\r\n\r\nimport findInstanceMetadataBySopInstanceUID from './utils/findInstanceMetadataBySopInstanceUid';\r\n\r\nconst { LogManager } = classes;\r\n\r\n/**\r\n * Function to parse the part10 array buffer that comes from a DICOM Structured report into measurementData\r\n * measurementData format is a viewer specific format to be stored into the redux and consumed by other components\r\n * (e.g. measurement table)\r\n *\r\n * @param {ArrayBuffer} part10SRArrayBuffer\r\n * @param {Array} displaySets\r\n * @param {object} external\r\n * @returns\r\n */\r\nconst parseDicomStructuredReport = (\r\n  part10SRArrayBuffer,\r\n  displaySets,\r\n  external\r\n) => {\r\n  // Get the dicom data as an Object\r\n  const dicomData = dcmjs.data.DicomMessage.readFile(part10SRArrayBuffer);\r\n  const dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\r\n    dicomData.dict\r\n  );\r\n\r\n  const {\r\n    LoggerService,\r\n    UINotificationService,\r\n  } = external.servicesManager.services;\r\n  if (external && external.servicesManager) {\r\n    try {\r\n      parseSCOORD3D({ servicesManager: external.servicesManager, displaySets });\r\n    } catch (error) {\r\n      const seriesDescription = dataset.SeriesDescription || '';\r\n      LoggerService.error({ error, message: error.message });\r\n      UINotificationService.show({\r\n        title: `Failed to parse ${seriesDescription} SR display set`,\r\n        message: error.message,\r\n        type: 'error',\r\n        autoClose: false,\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\r\n\r\n  let storedMeasurementByToolType;\r\n  try {\r\n    storedMeasurementByToolType = MeasurementReport.generateToolState(dataset);\r\n  } catch (error) {\r\n    const seriesDescription = dataset.SeriesDescription || '';\r\n    LoggerService.error({ error, message: error.message });\r\n    UINotificationService.show({\r\n      title: `Failed to parse ${seriesDescription} measurement report`,\r\n      message: error.message,\r\n      type: 'error',\r\n      autoClose: false,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const measurementData = {};\r\n  let measurementNumber = 0;\r\n\r\n  Object.keys(storedMeasurementByToolType).forEach(toolName => {\r\n    const measurements = storedMeasurementByToolType[toolName];\r\n    measurementData[toolName] = [];\r\n\r\n    measurements.forEach(measurement => {\r\n      const instanceMetadata = findInstanceMetadataBySopInstanceUID(\r\n        displaySets,\r\n        measurement.sopInstanceUid\r\n      );\r\n\r\n      const { _study: study, _series: series } = instanceMetadata;\r\n      const { StudyInstanceUID, PatientID } = study;\r\n      const { SeriesInstanceUID } = series;\r\n      const { sopInstanceUid, frameIndex } = measurement;\r\n      const imagePath = getImagePath(\r\n        StudyInstanceUID,\r\n        SeriesInstanceUID,\r\n        sopInstanceUid,\r\n        frameIndex\r\n      );\r\n\r\n      const imageId = instanceMetadata.getImageId();\r\n      if (!imageId) {\r\n        return;\r\n      }\r\n\r\n      // TODO: We need the currentTimepointID set into the viewer\r\n      const currentTimepointId = 'TimepointId';\r\n\r\n      const toolData = Object.assign({}, measurement, {\r\n        imageId,\r\n        imagePath,\r\n        SOPInstanceUID: sopInstanceUid,\r\n        SeriesInstanceUID,\r\n        StudyInstanceUID,\r\n        PatientID,\r\n        measurementNumber: ++measurementNumber,\r\n        timepointId: currentTimepointId,\r\n        toolType: toolName,\r\n        _id: imageId + measurementNumber,\r\n      });\r\n\r\n      measurementData[toolName].push(toolData);\r\n    });\r\n  });\r\n\r\n  return measurementData;\r\n};\r\n\r\n/**\r\n * Function to create imagePath with all imageData related\r\n * @param {string} StudyInstanceUID\r\n * @param {string} SeriesInstanceUID\r\n * @param {string} SOPInstanceUID\r\n * @param {string} frameIndex\r\n * @returns\r\n */\r\nconst getImagePath = (\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID,\r\n  SOPInstanceUID,\r\n  frameIndex\r\n) => {\r\n  return [StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex].join(\r\n    '_'\r\n  );\r\n};\r\n\r\nexport default parseDicomStructuredReport;\r\n","import dcmjs from 'dcmjs';\r\n\r\n/**\r\n *  Checks if dcmjs has support to determined tool\r\n *\r\n * @param {string} toolName\r\n * @returns {boolean}\r\n */\r\nconst isToolSupported = toolName => {\r\n  const adapter = dcmjs.adapters.Cornerstone;\r\n  return !!adapter[toolName];\r\n};\r\n\r\nexport default isToolSupported;\r\n","import dcmjs from 'dcmjs';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nimport log from '../log';\r\nimport measurements from '../measurements';\r\nimport isToolSupported from './utils/isToolSupported';\r\n\r\n/**\r\n * Function to parse OHIF viewer measurementData into a dcmjs MeasurementReport\r\n *\r\n * @param {Object} measurementsData - OHIF measurementData object\r\n * @returns {Object} Dataset: measurement report from dcmjs\r\n */\r\nconst parseMeasurementsData = measurementsData => {\r\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\r\n  const { getImageIdForImagePath } = measurements;\r\n\r\n  const toolState = {};\r\n  const unsupportedTools = [];\r\n\r\n  Object.keys(measurementsData).forEach(measurementType => {\r\n    const annotations = measurementsData[measurementType];\r\n\r\n    annotations.forEach(annotation => {\r\n      const { toolType, imagePath } = annotation;\r\n\r\n      if (isToolSupported(toolType)) {\r\n        const imageId = getImageIdForImagePath(imagePath);\r\n        toolState[imageId] = toolState[imageId] || {};\r\n        toolState[imageId][toolType] = toolState[imageId][toolType] || {\r\n          data: [],\r\n        };\r\n\r\n        toolState[imageId][toolType].data.push(annotation);\r\n      } else {\r\n        unsupportedTools.push(toolType);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (unsupportedTools.length > 0) {\r\n    log.warn(\r\n      `[DICOMSR] Tooltypes not supported: ${unsupportedTools.join(', ')}`\r\n    );\r\n  }\r\n\r\n  const report = MeasurementReport.generateReport(\r\n    toolState,\r\n    cornerstone.metaData\r\n  );\r\n\r\n  return {\r\n    dataset: report.dataset,\r\n  };\r\n};\r\n\r\nexport default parseMeasurementsData;\r\n","/**\r\n * Retrieve a list of all displaySets of all studies\r\n *\r\n * @param {Object} studies - List of studies loaded into the viewer\r\n * @returns {Object} List of DisplaySets\r\n */\r\nconst getAllDisplaySets = studies => {\r\n  let allDisplaySets = [];\r\n\r\n  studies.forEach(study => {\r\n    if (study.getDisplaySets) {\r\n      allDisplaySets = allDisplaySets.concat(study.getDisplaySets());\r\n    }\r\n  });\r\n\r\n  return allDisplaySets;\r\n};\r\n\r\nexport default getAllDisplaySets;\r\n","import dcmjs from 'dcmjs';\r\nimport { api } from 'dicomweb-client';\r\n\r\nimport DICOMWeb from '../DICOMWeb';\r\nimport parseDicomStructuredReport from './parseDicomStructuredReport';\r\nimport parseMeasurementsData from './parseMeasurementsData';\r\nimport getAllDisplaySets from './utils/getAllDisplaySets';\r\nimport errorHandler from '../errorHandler';\r\nimport getXHRRetryRequestHook from '../utils/xhrRetryRequestHook';\r\n\r\nconst VERSION_NAME = 'dcmjs-0.0';\r\nconst TRANSFER_SYNTAX_UID = '1.2.840.10008.1.2.1';\r\n\r\n/**\r\n * Function to retrieve measurements from DICOM Structured Reports coming from determined server\r\n *\r\n * @param {Array} series - List of all series metaData loaded\r\n * @param {Array} studies - List of all studies metaData loaded\r\n * @param {string} serverUrl - Server URL to be used on request\r\n * @param {object} external\r\n * @returns {Object} MeasurementData\r\n */\r\nconst retrieveMeasurementFromSR = async (\r\n  series,\r\n  studies,\r\n  serverUrl,\r\n  external\r\n) => {\r\n  const config = {\r\n    url: serverUrl,\r\n    headers: DICOMWeb.getAuthorizationHeader(),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n\r\n  const instance = series.getFirstInstance();\r\n  const options = {\r\n    studyInstanceUID: instance.getStudyInstanceUID(),\r\n    seriesInstanceUID: instance.getSeriesInstanceUID(),\r\n    sopInstanceUID: instance.getSOPInstanceUID(),\r\n  };\r\n\r\n  const part10SRArrayBuffer = await dicomWeb.retrieveInstance(options);\r\n  const displaySets = getAllDisplaySets(studies);\r\n  const measurementsData = parseDicomStructuredReport(\r\n    part10SRArrayBuffer,\r\n    displaySets,\r\n    external\r\n  );\r\n\r\n  return measurementsData;\r\n};\r\n\r\n/**\r\n * Function to store measurements to DICOM Structured Reports in determined server\r\n *\r\n * @param {Object} measurements - OHIF measurementData object\r\n * @param {string} serverUrl - Server URL to be used on request\r\n * @returns {Promise}\r\n */\r\nconst stowSRFromMeasurements = async (measurements, serverUrl) => {\r\n  const { dataset } = parseMeasurementsData(measurements);\r\n  const { DicomMetaDictionary, DicomDict } = dcmjs.data;\r\n  const meta = {\r\n    FileMetaInformationVersion: dataset._meta.FileMetaInformationVersion.Value,\r\n    MediaStorageSOPClassUID: dataset.SOPClassUID,\r\n    MediaStorageSOPInstanceUID: dataset.SOPInstanceUID,\r\n    TransferSyntaxUID: TRANSFER_SYNTAX_UID,\r\n    ImplementationClassUID: DicomMetaDictionary.uid(),\r\n    ImplementationVersionName: VERSION_NAME,\r\n  };\r\n\r\n  const denaturalized = DicomMetaDictionary.denaturalizeDataset(meta);\r\n  const dicomDict = new DicomDict(denaturalized);\r\n\r\n  dicomDict.dict = DicomMetaDictionary.denaturalizeDataset(dataset);\r\n\r\n  const part10Buffer = dicomDict.write();\r\n\r\n  const config = {\r\n    url: serverUrl,\r\n    headers: DICOMWeb.getAuthorizationHeader(),\r\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\r\n    requestHooks: [getXHRRetryRequestHook()],\r\n  };\r\n\r\n  const dicomWeb = new api.DICOMwebClient(config);\r\n  const options = {\r\n    datasets: [part10Buffer],\r\n  };\r\n\r\n  await dicomWeb.storeInstances(options);\r\n};\r\n\r\nexport { retrieveMeasurementFromSR, stowSRFromMeasurements };\r\n","/**\r\n * Should find the most recent Structured Report metadata\r\n *\r\n * @param {Array} studies\r\n * @returns {Object} Series\r\n */\r\nconst findMostRecentStructuredReport = studies => {\r\n  let mostRecentStructuredReport;\r\n\r\n  studies.forEach(study => {\r\n    const allSeries = study.getSeries ? study.getSeries() : [];\r\n    allSeries.forEach(series => {\r\n      // Skip series that may not have instances yet\r\n      // This can happen if we have retrieved just the initial\r\n      // details about the series via QIDO-RS, but not the full metadata\r\n      if (!series || series.getInstanceCount() === 0) {\r\n        return;\r\n      }\r\n\r\n      if (isStructuredReportSeries(series)) {\r\n        if (\r\n          !mostRecentStructuredReport ||\r\n          compareSeriesDate(series, mostRecentStructuredReport)\r\n        ) {\r\n          mostRecentStructuredReport = series;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return mostRecentStructuredReport;\r\n};\r\n\r\n/**\r\n *  Checks if series sopClassUID matches with the supported Structured Reports sopClassUID\r\n *\r\n * @param {Object} series - Series metadata\r\n * @returns {boolean}\r\n */\r\nconst isStructuredReportSeries = series => {\r\n  const supportedSopClassUIDs = [\r\n    '1.2.840.10008.5.1.4.1.1.88.22',\r\n    '1.2.840.10008.5.1.4.1.1.11.1',\r\n    '1.2.840.10008.5.1.4.1.1.88.34', // COMPREHENSIVE_3D_SR\r\n  ];\r\n\r\n  const firstInstance = series.getFirstInstance();\r\n  const SOPClassUID = firstInstance.getData().metadata.SOPClassUID;\r\n\r\n  return supportedSopClassUIDs.includes(SOPClassUID);\r\n};\r\n\r\n/**\r\n *  Checkes if series1 is newer than series2\r\n *\r\n * @param {Object} series1 - Series Metadata 1\r\n * @param {Object} series2 - Series Metadata 2\r\n * @returns {boolean} true/false if series1 is newer than series2\r\n */\r\nconst compareSeriesDate = (series1, series2) => {\r\n  return (\r\n    series1._data.SeriesDate > series2._data.SeriesDate ||\r\n    (series1._data.SeriesDate === series2._data.SeriesDate &&\r\n      series1._data.SeriesTime > series2._data.SeriesTime)\r\n  );\r\n};\r\n\r\nexport default findMostRecentStructuredReport;\r\n","import log from '../log';\r\nimport studies from '../studies';\r\nimport utils from '../utils';\r\nimport {\r\n  retrieveMeasurementFromSR,\r\n  stowSRFromMeasurements,\r\n} from './handleStructuredReport';\r\nimport findMostRecentStructuredReport from './utils/findMostRecentStructuredReport';\r\n\r\n/**\r\n *\r\n * @typedef serverType\r\n * @property {string} type - type of the server\r\n * @property {string} wadoRoot - server wado root url\r\n *\r\n */\r\n\r\n/**\r\n * Function to be registered into MeasurementAPI to retrieve measurements from DICOM Structured Reports\r\n *\r\n * @param {serverType} server\r\n * @param {object} external\r\n * @returns {Promise} Should resolve with OHIF measurementData object\r\n */\r\nconst retrieveMeasurements = (server, external = {}) => {\r\n  log.info('[DICOMSR] retrieveMeasurements');\r\n\r\n  if (!server || server.type !== 'dicomWeb') {\r\n    log.error('[DICOMSR] DicomWeb server is required!');\r\n    return Promise.reject({});\r\n  }\r\n\r\n  const serverUrl = server.wadoRoot;\r\n  const studies = utils.studyMetadataManager.all();\r\n\r\n  const latestSeries = findMostRecentStructuredReport(studies);\r\n\r\n  if (!latestSeries) return Promise.resolve({});\r\n\r\n  return retrieveMeasurementFromSR(latestSeries, studies, serverUrl, external);\r\n};\r\n\r\n/**\r\n *  Function to be registered into MeasurementAPI to store measurements into DICOM Structured Reports\r\n *\r\n * @param {Object} measurementData - OHIF measurementData object\r\n * @param {Object} filter\r\n * @param {serverType} server\r\n * @returns {Object} With message to be displayed on success\r\n */\r\nconst storeMeasurements = async (measurementData, filter, server) => {\r\n  log.info('[DICOMSR] storeMeasurements');\r\n\r\n  if (!server || server.type !== 'dicomWeb') {\r\n    log.error('[DICOMSR] DicomWeb server is required!');\r\n    return Promise.reject({});\r\n  }\r\n\r\n  const serverUrl = server.wadoRoot;\r\n  const firstMeasurementKey = Object.keys(measurementData)[0];\r\n  const firstMeasurement = measurementData[firstMeasurementKey][0];\r\n  const StudyInstanceUID =\r\n    firstMeasurement && firstMeasurement.StudyInstanceUID;\r\n\r\n  try {\r\n    await stowSRFromMeasurements(measurementData, serverUrl);\r\n    if (StudyInstanceUID) {\r\n      studies.deleteStudyMetadataPromise(StudyInstanceUID);\r\n    }\r\n\r\n    return {\r\n      message: 'Measurements saved successfully',\r\n    };\r\n  } catch (error) {\r\n    log.error(\r\n      `[DICOMSR] Error while saving the measurements: ${error.message}`\r\n    );\r\n    throw new Error('Error while saving the measurements.');\r\n  }\r\n};\r\n\r\nexport { retrieveMeasurements, storeMeasurements };\r\n","import { retrieveMeasurements, storeMeasurements } from './dataExchange';\r\nimport isToolSupported from './utils/isToolSupported';\r\n\r\nconst DICOMSR = {\r\n  retrieveMeasurements,\r\n  storeMeasurements,\r\n  isToolSupported,\r\n};\r\n\r\nexport default DICOMSR;\r\n","/**\r\n * VIEWPORT\r\n */\r\nexport const SET_VIEWPORT = 'VIEWPORT::SET';\r\nexport const SET_VIEWPORT_ACTIVE = 'VIEWPORT::SET_ACTIVE';\r\nexport const SET_VIEWPORT_LAYOUT = 'VIEWPORT::SET_LAYOUT';\r\nexport const SET_VIEWPORT_LAYOUT_AND_DATA =\r\n  'VIEWPORT::SET_VIEWPORT_LAYOUT_AND_DATA';\r\nexport const CLEAR_VIEWPORT = 'VIEWPORT::CLEAR';\r\nexport const SET_SPECIFIC_DATA = 'VIEWPORT::SET_SPECIFIC_DATA';\r\nexport const SET_ACTIVE_SPECIFIC_DATA = 'VIEWPORT::SET_ACTIVE_SPECIFIC_DATA';\r\n\r\n/**\r\n * SERVERS\r\n */\r\nexport const ADD_SERVER = 'ADD_SERVER';\r\nexport const SET_SERVERS = 'SET_SERVERS';\r\n\r\n/**\r\n * EXTENSIONS\r\n */\r\nexport const SET_EXTENSION_DATA = 'SET_EXTENSION_DATA';\r\n\r\n/**\r\n * PREFERENCES\r\n * */\r\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\r\n","/** Action Creators:\r\n *  https://redux.js.org/basics/actions#action-creators\r\n */\r\n\r\nimport {\r\n  CLEAR_VIEWPORT,\r\n  SET_ACTIVE_SPECIFIC_DATA,\r\n  SET_SERVERS,\r\n  SET_VIEWPORT,\r\n  SET_VIEWPORT_ACTIVE,\r\n  SET_VIEWPORT_LAYOUT,\r\n  SET_VIEWPORT_LAYOUT_AND_DATA,\r\n  SET_USER_PREFERENCES,\r\n} from './constants/ActionTypes.js';\r\n\r\n/**\r\n * The definition of a viewport layout.\r\n *\r\n * @typedef {Object} ViewportLayout\r\n * @property {number} numRows -\r\n * @property {number} numColumns -\r\n * @property {array} viewports -\r\n */\r\n\r\n/**\r\n * VIEWPORT\r\n */\r\nexport const setViewportSpecificData = (\r\n  viewportIndex,\r\n  viewportSpecificData\r\n) => ({\r\n  type: SET_VIEWPORT,\r\n  viewportIndex,\r\n  viewportSpecificData,\r\n});\r\n\r\nexport const setViewportActive = viewportIndex => ({\r\n  type: SET_VIEWPORT_ACTIVE,\r\n  viewportIndex,\r\n});\r\n\r\n/**\r\n * @param {ViewportLayout} layout\r\n */\r\nexport const setLayout = ({ numRows, numColumns, viewports }) => ({\r\n  type: SET_VIEWPORT_LAYOUT,\r\n  numRows,\r\n  numColumns,\r\n  viewports,\r\n});\r\n\r\n/**\r\n * @param {number} layout.numRows\r\n * @param {number} layout.numColumns\r\n * @param {array} viewports\r\n */\r\nexport const setViewportLayoutAndData = (\r\n  { numRows, numColumns, viewports },\r\n  viewportSpecificData\r\n) => ({\r\n  type: SET_VIEWPORT_LAYOUT_AND_DATA,\r\n  numRows,\r\n  numColumns,\r\n  viewports,\r\n  viewportSpecificData,\r\n});\r\n\r\nexport const clearViewportSpecificData = viewportIndex => ({\r\n  type: CLEAR_VIEWPORT,\r\n  viewportIndex,\r\n});\r\n\r\nexport const setActiveViewportSpecificData = viewportSpecificData => ({\r\n  type: SET_ACTIVE_SPECIFIC_DATA,\r\n  viewportSpecificData,\r\n});\r\n\r\n/**\r\n * NOT-VIEWPORT\r\n */\r\nexport const setUserPreferences = state => ({\r\n  type: SET_USER_PREFERENCES,\r\n  state,\r\n});\r\n\r\nexport const setExtensionData = (extension, data) => ({\r\n  type: 'SET_EXTENSION_DATA',\r\n  extension,\r\n  data,\r\n});\r\n\r\nexport const setTimepoints = state => ({\r\n  type: 'SET_TIMEPOINTS',\r\n  state,\r\n});\r\n\r\nexport const setMeasurements = state => ({\r\n  type: 'SET_MEASUREMENTS',\r\n  state,\r\n});\r\n\r\nexport const setStudyData = (StudyInstanceUID, data) => ({\r\n  type: 'SET_STUDY_DATA',\r\n  StudyInstanceUID,\r\n  data,\r\n});\r\n\r\nexport const setServers = servers => ({\r\n  type: SET_SERVERS,\r\n  servers,\r\n});\r\n\r\nconst actions = {\r\n  /**\r\n   * VIEWPORT\r\n   */\r\n  setViewportActive,\r\n  setViewportSpecificData,\r\n  setViewportLayoutAndData,\r\n  setLayout,\r\n  clearViewportSpecificData,\r\n  setActiveViewportSpecificData,\r\n  /**\r\n   * NOT-VIEWPORT\r\n   */\r\n  setUserPreferences,\r\n  setExtensionData,\r\n  setTimepoints,\r\n  setMeasurements,\r\n  setStudyData,\r\n  setServers,\r\n};\r\n\r\nexport default actions;\r\n","export const defaultState = {};\r\n\r\nconst extensions = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EXTENSION_DATA':\r\n      const extensionName = action.extension;\r\n      const currentData = state[extensionName] || {};\r\n\r\n      const incomingData = action.data;\r\n\r\n      const extension = {\r\n        [extensionName]: {\r\n          ...currentData,\r\n          ...incomingData,\r\n        },\r\n      };\r\n\r\n      return { ...state, ...extension };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default extensions;\r\n","const defaultState = {\r\n  windowLevelData: {\r\n    1: { description: 'Soft tissue', window: '550', level: '40' },\r\n    2: { description: 'Lung', window: '150', level: '-600' },\r\n    3: { description: 'Liver', window: '150', level: '90' },\r\n    4: { description: 'Bone', window: '2500', level: '480' },\r\n    5: { description: 'Brain', window: '80', level: '40' },\r\n    6: { description: 'Trest', window: '1', level: '1' },\r\n    7: { description: '', window: '', level: '' },\r\n    8: { description: '', window: '', level: '' },\r\n    9: { description: '', window: '', level: '' },\r\n    10: { description: '', window: '', level: '' },\r\n  },\r\n  generalPreferences: {\r\n    // language: 'en-US'\r\n  },\r\n};\r\n\r\nconst preferences = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_PREFERENCES': {\r\n      return Object.assign({}, state, action.state);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { defaultState };\r\nexport default preferences;\r\n","import uniqBy from 'lodash/uniqBy';\r\n\r\nexport const defaultState = {\r\n  servers: [],\r\n};\r\n\r\nconst servers = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_SERVER':\r\n      let servers = uniqBy([...state.servers, action.server], 'id');\r\n      servers.forEach(s => (s.active = true));\r\n      return { ...state, servers };\r\n\r\n    case 'ACTIVATE_SERVER': {\r\n      const newServer = { ...action.server, active: true };\r\n      const newServers = state.servers;\r\n      newServers.forEach(s => (s.active = false));\r\n      return {\r\n        ...state,\r\n        servers: uniqBy([...newServers, newServer], 'wadoRoot'),\r\n      };\r\n    }\r\n\r\n    case 'SET_SERVERS':\r\n      return { ...state, servers: action.servers };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default servers;\r\n","import cloneDeep from 'lodash.clonedeep';\r\n\r\nconst defaultState = {\r\n  studyData: {},\r\n};\r\n\r\nconst servers = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_STUDY_DATA': {\r\n      const updatedStudyData = cloneDeep(state.studyData);\r\n      updatedStudyData[action.StudyInstanceUID] = cloneDeep(action.data);\r\n\r\n      return Object.assign({}, state, { studyData: updatedStudyData });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default servers;\r\n","const defaultState = {\r\n  timepoints: [],\r\n  measurements: [],\r\n};\r\n\r\nconst timepointManager = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TIMEPOINTS':\r\n      return Object.assign({}, state, { timepoints: action.state });\r\n    case 'SET_MEASUREMENTS':\r\n      return Object.assign({}, state, { measurements: action.state });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timepointManager;\r\n","import cloneDeep from 'lodash.clonedeep';\r\nimport produce, { setAutoFreeze } from 'immer';\r\n\r\nimport {\r\n  CLEAR_VIEWPORT,\r\n  SET_ACTIVE_SPECIFIC_DATA,\r\n  SET_SPECIFIC_DATA,\r\n  SET_VIEWPORT,\r\n  SET_VIEWPORT_ACTIVE,\r\n  SET_VIEWPORT_LAYOUT,\r\n  SET_VIEWPORT_LAYOUT_AND_DATA,\r\n} from './../constants/ActionTypes.js';\r\n\r\nsetAutoFreeze(false);\r\n\r\nexport const DEFAULT_STATE = {\r\n  numRows: 1,\r\n  numColumns: 1,\r\n  activeViewportIndex: 0,\r\n  layout: {\r\n    viewports: [{}],\r\n  },\r\n  viewportSpecificData: {},\r\n};\r\n\r\n/**\r\n *  Take the new number of Rows and Columns, delete all not used viewport data and also set\r\n *  active viewport as default in case current one is not available anymore.\r\n *\r\n * @param {Number} numRows\r\n * @param {Number} numColumns\r\n * @param {Object} currentViewportSpecificData\r\n * @returns\r\n */\r\nconst findActiveViewportSpecificData = (\r\n  numRows,\r\n  numColumns,\r\n  currentViewportSpecificData = {}\r\n) => {\r\n  const numberOfViewports = numRows * numColumns;\r\n  const viewportSpecificData = cloneDeep(currentViewportSpecificData);\r\n\r\n  if (numberOfViewports < Object.keys(viewportSpecificData).length) {\r\n    Object.keys(viewportSpecificData).forEach(key => {\r\n      if (key > numberOfViewports - 1) {\r\n        delete viewportSpecificData[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  return viewportSpecificData;\r\n};\r\n/**\r\n *  Take new number of Rows and Columns and make sure the current active viewport index is still available, if not, return the default\r\n *\r\n * @param {Number} numRows\r\n * @param {Number} numColumns\r\n * @param {Number} currentActiveViewportIndex\r\n * @returns\r\n */\r\nconst getActiveViewportIndex = (\r\n  numRows,\r\n  numColumns,\r\n  currentActiveViewportIndex\r\n) => {\r\n  const numberOfViewports = numRows * numColumns;\r\n\r\n  return currentActiveViewportIndex > numberOfViewports - 1\r\n    ? DEFAULT_STATE.activeViewportIndex\r\n    : currentActiveViewportIndex;\r\n};\r\n\r\n/**\r\n * The definition of a viewport action.\r\n *\r\n * @typedef {Object} ViewportAction\r\n * @property {string} type -\r\n * @property {Object} data -\r\n * @property {Object} layout -\r\n * @property {number} viewportIndex -\r\n * @property {Object} viewportSpecificData -\r\n */\r\n\r\n/**\r\n * @param {Object} [state=DEFAULT_STATE] The current viewport state.\r\n * @param {ViewportAction} action A viewport action.\r\n */\r\nconst viewports = (state = DEFAULT_STATE, action) => {\r\n  let useActiveViewport = false;\r\n\r\n  switch (action.type) {\r\n    /**\r\n     * Sets the active viewport index.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT_ACTIVE: {\r\n      return produce(state, draftState => {\r\n        draftState.activeViewportIndex = getActiveViewportIndex(\r\n          draftState.numRows,\r\n          draftState.numColumns,\r\n          action.viewportIndex\r\n        );\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Sets viewport layout.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT_LAYOUT: {\r\n      const { numRows, numColumns } = action;\r\n      const viewportSpecificData = findActiveViewportSpecificData(\r\n        numRows,\r\n        numColumns,\r\n        state.viewportSpecificData\r\n      );\r\n      const activeViewportIndex = getActiveViewportIndex(\r\n        numRows,\r\n        numColumns,\r\n        state.activeViewportIndex\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        numRows: action.numRows,\r\n        numColumns: action.numColumns,\r\n        layout: { viewports: [...action.viewports] },\r\n        viewportSpecificData,\r\n        activeViewportIndex,\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Sets viewport layout and data.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT_LAYOUT_AND_DATA: {\r\n      const { numRows, numColumns } = action;\r\n      const viewportSpecificData = findActiveViewportSpecificData(\r\n        numRows,\r\n        numColumns,\r\n        action.viewportSpecificData\r\n      );\r\n      const activeViewportIndex = getActiveViewportIndex(\r\n        numRows,\r\n        numColumns,\r\n        state.activeViewportIndex\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        numRows: action.numRows,\r\n        numColumns: action.numColumns,\r\n        layout: { viewports: [...action.viewports] },\r\n        viewportSpecificData,\r\n        activeViewportIndex,\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Sets viewport specific data of active viewport.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_VIEWPORT: {\r\n      return produce(state, draftState => {\r\n        draftState.viewportSpecificData[action.viewportIndex] =\r\n          draftState.viewportSpecificData[action.viewportIndex] || {};\r\n\r\n        Object.keys(action.viewportSpecificData).forEach(key => {\r\n          draftState.viewportSpecificData[action.viewportIndex][key] =\r\n            action.viewportSpecificData[key];\r\n        });\r\n\r\n        if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\r\n          draftState.layout.viewports[action.viewportIndex].plugin =\r\n            action.viewportSpecificData.plugin;\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Sets viewport specific data of active/any viewport.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case SET_ACTIVE_SPECIFIC_DATA:\r\n      useActiveViewport = true;\r\n    // Allow fall-through\r\n    // eslint-disable-next-line\r\n    case SET_SPECIFIC_DATA: {\r\n      const layout = cloneDeep(state.layout);\r\n      const viewportIndex = useActiveViewport\r\n        ? state.activeViewportIndex\r\n        : action.viewportIndex;\r\n\r\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\r\n      viewportSpecificData[viewportIndex] = {\r\n        ...action.viewportSpecificData,\r\n      };\r\n\r\n      if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\r\n        layout.viewports[viewportIndex].plugin =\r\n          action.viewportSpecificData.plugin;\r\n      }\r\n\r\n      return { ...state, layout, viewportSpecificData };\r\n    }\r\n\r\n    /**\r\n     * Clears viewport specific data of any viewport.\r\n     *\r\n     * @return {Object} New state.\r\n     */\r\n    case CLEAR_VIEWPORT: {\r\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\r\n\r\n      if (action.viewportIndex) {\r\n        viewportSpecificData[action.viewportIndex] = {};\r\n        return { ...state, viewportSpecificData };\r\n      } else {\r\n        return DEFAULT_STATE;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns the current application state.\r\n     *\r\n     * @return {Object} The current state.\r\n     */\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default viewports;\r\n","import extensions from './extensions';\r\nimport preferences from './preferences';\r\nimport servers from './servers';\r\nimport studies from './studies';\r\nimport timepointManager from './timepointManager';\r\nimport viewports from './viewports';\r\n\r\nconst reducers = {\r\n  extensions,\r\n  preferences,\r\n  servers,\r\n  studies,\r\n  timepointManager,\r\n  viewports,\r\n};\r\n\r\nexport default reducers;\r\n","const LocalStorageApi = window.localStorage;\r\nconst localStorageKey = 'state';\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = LocalStorageApi.getItem(localStorageKey);\r\n    if (!serializedState) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    LocalStorageApi.setItem(localStorageKey, serializedState);\r\n  } catch (e) {}\r\n};\r\n\r\nconst localStorage = {\r\n  saveState,\r\n  loadState,\r\n};\r\n\r\nexport default localStorage;\r\n","const SessionStorageApi = window.sessionStorage;\r\nconst sessionStorageKey = 'state';\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = SessionStorageApi.getItem(sessionStorageKey);\r\n    if (!serializedState) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    SessionStorageApi.setItem(sessionStorageKey, serializedState);\r\n  } catch (e) {}\r\n};\r\n\r\nconst sessionStorage = {\r\n  saveState,\r\n  loadState,\r\n};\r\n\r\nexport default sessionStorage;\r\n","import actions from './actions.js';\r\nimport reducers from './reducers';\r\nimport localStorage from './localStorage.js';\r\nimport sessionStorage from './sessionStorage.js';\r\n\r\nconst redux = {\r\n  reducers,\r\n  actions,\r\n  localStorage,\r\n  sessionStorage,\r\n};\r\n\r\nexport default redux;\r\n","import Hammer from 'hammerjs';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneMath from 'cornerstone-math';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport OHIF from '@ohif/core';\r\n\r\nconst { log } = OHIF;\r\n\r\nexport default function(configuration = {}) {\r\n  // For debugging\r\n  window.cornerstoneTools = cornerstoneTools;\r\n\r\n  cornerstoneTools.external.cornerstone = cornerstone;\r\n  cornerstoneTools.external.Hammer = Hammer;\r\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\r\n  cornerstoneTools.init(configuration);\r\n\r\n  cornerstoneTools.loadHandlerManager.setErrorLoadingHandler(\r\n    (element, imageId, error) => {\r\n      log.error(imageId);\r\n      throw error;\r\n    }\r\n  );\r\n\r\n  // Set the tool font and font size\r\n  // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\r\n  const fontFamily =\r\n    'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\r\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\r\n\r\n  // Tool styles/colors\r\n  cornerstoneTools.toolStyle.setToolWidth(2);\r\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\r\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\r\n\r\n  cornerstoneTools.store.state.touchProximity = 40;\r\n\r\n  // Configure stack prefetch\r\n  cornerstoneTools.stackPrefetch.setConfiguration({\r\n    maxImagesToPrefetch: configuration.maxImagesToPrefetch,\r\n    preserveExistingPool: configuration.preserveExistingPool,\r\n    maxSimultaneousRequests: configuration.maxSimultaneousRequests,\r\n  });\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nconst SUPPORTED_TOOLS = [\r\n  'Length',\r\n  'EllipticalRoi',\r\n  'RectangleRoi',\r\n  'ArrowAnnotate',\r\n];\r\n\r\nconst measurementServiceMappingsFactory = measurementService => {\r\n  /**\r\n   * Maps measurement service format object to cornerstone annotation object.\r\n   *\r\n   * @param {Measurement} measurement The measurement instance\r\n   * @param {string} definition The source definition\r\n   * @return {Object} Cornerstone annotation data\r\n   */\r\n  const toAnnotation = (measurement, definition) => {\r\n    const {\r\n      id,\r\n      label,\r\n      description,\r\n      points,\r\n      unit,\r\n      SOPInstanceUID,\r\n      FrameOfReferenceUID,\r\n      referenceSeriesUID,\r\n    } = measurement;\r\n\r\n    return {\r\n      toolName: definition,\r\n      measurementData: {\r\n        sopInstanceUid: SOPInstanceUID,\r\n        frameOfReferenceUID: FrameOfReferenceUID,\r\n        SeriesInstanceUID: referenceSeriesUID,\r\n        unit,\r\n        text: label,\r\n        description,\r\n        handles: _getHandlesFromPoints(points),\r\n        _measurementServiceId: id,\r\n      },\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Maps cornerstone annotation event data to measurement service format.\r\n   *\r\n   * @param {Object} cornerstone Cornerstone event data\r\n   * @return {Measurement} Measurement instance\r\n   */\r\n  const toMeasurement = csToolsAnnotation => {\r\n    const { element, measurementData } = csToolsAnnotation;\r\n    const tool =\r\n      csToolsAnnotation.toolType ||\r\n      csToolsAnnotation.toolName ||\r\n      measurementData.toolType;\r\n\r\n    const validToolType = toolName => SUPPORTED_TOOLS.includes(toolName);\r\n\r\n    if (!validToolType(tool)) {\r\n      throw new Error('Tool not supported');\r\n    }\r\n\r\n    const {\r\n      SOPInstanceUID,\r\n      FrameOfReferenceUID,\r\n      SeriesInstanceUID,\r\n    } = _getAttributes(element);\r\n\r\n    const points = [];\r\n    points.push(measurementData.handles);\r\n\r\n    return {\r\n      id: measurementData._measurementServiceId,\r\n      SOPInstanceUID: SOPInstanceUID,\r\n      FrameOfReferenceUID,\r\n      referenceSeriesUID: SeriesInstanceUID,\r\n      label: measurementData.text,\r\n      description: measurementData.description,\r\n      unit: measurementData.unit,\r\n      area:\r\n        measurementData.cachedStats &&\r\n        measurementData.cachedStats\r\n          .area /* TODO: Add concept names instead (descriptor) */,\r\n      type: _getValueTypeFromToolType(tool),\r\n      points: _getPointsFromHandles(measurementData.handles),\r\n    };\r\n  };\r\n\r\n  const _getAttributes = element => {\r\n    const enabledElement = cornerstone.getEnabledElement(element);\r\n    const imageId = enabledElement.image.imageId;\r\n    const instance = cornerstone.metaData.get('instance', imageId);\r\n\r\n    return {\r\n      SOPInstanceUID: instance.SOPInstanceUID,\r\n      FrameOfReferenceUID: instance.FrameOfReferenceUID,\r\n      SeriesInstanceUID: instance.SeriesInstanceUID,\r\n    };\r\n  };\r\n\r\n  const _getValueTypeFromToolType = toolType => {\r\n    const { POLYLINE, ELLIPSE, POINT } = measurementService.VALUE_TYPES;\r\n\r\n    /* TODO: Relocate static value types */\r\n    const TOOL_TYPE_TO_VALUE_TYPE = {\r\n      Length: POLYLINE,\r\n      EllipticalRoi: ELLIPSE,\r\n      RectangleRoi: POLYLINE,\r\n      ArrowAnnotate: POINT,\r\n    };\r\n\r\n    return TOOL_TYPE_TO_VALUE_TYPE[toolType];\r\n  };\r\n\r\n  const _getPointsFromHandles = handles => {\r\n    let points = [];\r\n    Object.keys(handles).map(handle => {\r\n      if (['start', 'end'].includes(handle)) {\r\n        let point = {};\r\n        if (handles[handle].x) point.x = handles[handle].x;\r\n        if (handles[handle].y) point.y = handles[handle].y;\r\n        points.push(point);\r\n      }\r\n    });\r\n    return points;\r\n  };\r\n\r\n  const _getHandlesFromPoints = points => {\r\n    return points\r\n      .map((p, i) => (i % 10 === 0 ? { start: p } : { end: p }))\r\n      .reduce((obj, item) => Object.assign(obj, { ...item }), {});\r\n  };\r\n\r\n  return {\r\n    toAnnotation,\r\n    toMeasurement,\r\n  };\r\n};\r\n\r\nexport default measurementServiceMappingsFactory;\r\n","import cornerstone from 'cornerstone-core';\r\n\r\nconst state = {\r\n  TrackingUniqueIdentifier: null,\r\n  trackingIdentifiersByEnabledElementUUID: {},\r\n};\r\n\r\nfunction setTrackingUniqueIdentifiersForElement(\r\n  element,\r\n  trackingUniqueIdentifiers,\r\n  activeIndex = 0\r\n) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const { uuid } = enabledElement;\r\n\r\n  state.trackingIdentifiersByEnabledElementUUID[uuid] = {\r\n    trackingUniqueIdentifiers,\r\n    activeIndex,\r\n  };\r\n}\r\n\r\nfunction setActiveTrackingUniqueIdentifierForElement(\r\n  element,\r\n  TrackingUniqueIdentifier\r\n) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const { uuid } = enabledElement;\r\n\r\n  const trackingIdentifiersForElement =\r\n    state.trackingIdentifiersByEnabledElementUUID[uuid];\r\n\r\n  if (trackingIdentifiersForElement) {\r\n    const activeIndex = trackingIdentifiersForElement.trackingUniqueIdentifiers.findIndex(\r\n      tuid => tuid === TrackingUniqueIdentifier\r\n    );\r\n\r\n    trackingIdentifiersForElement.activeIndex = activeIndex;\r\n  }\r\n}\r\n\r\nfunction getTrackingUniqueIdentifiersForElement(element) {\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n  const { uuid } = enabledElement;\r\n\r\n  if (state.trackingIdentifiersByEnabledElementUUID[uuid]) {\r\n    return state.trackingIdentifiersByEnabledElementUUID[uuid];\r\n  }\r\n\r\n  return { trackingUniqueIdentifiers: [] };\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters: {\r\n    trackingUniqueIdentifiersForElement: getTrackingUniqueIdentifiersForElement,\r\n  },\r\n  setters: {\r\n    trackingUniqueIdentifiersForElement: setTrackingUniqueIdentifiersForElement,\r\n    activeTrackingUniqueIdentifierForElement: setActiveTrackingUniqueIdentifierForElement,\r\n  },\r\n};\r\n","import OHIF from '@ohif/core';\r\nimport { SimpleDialog } from '@ohif/ui';\r\nimport cornerstone from 'cornerstone-core';\r\nimport csTools from 'cornerstone-tools';\r\nimport merge from 'lodash.merge';\r\nimport initCornerstoneTools from './initCornerstoneTools.js';\r\nimport measurementServiceMappingsFactory from './utils/measurementServiceMappings/measurementServiceMappingsFactory';\r\nimport dicomSRModule from './tools/modules/dicomSRModule';\r\nimport srModuleId from './tools/id';\r\n\r\n/**\r\n *\r\n * @param {Object} servicesManager\r\n * @param {Object} configuration\r\n * @param {Object|Array} configuration.csToolsConfig\r\n */\r\nexport default function init({ servicesManager, configuration }) {\r\n  const { UIDialogService, MeasurementService } = servicesManager.services;\r\n\r\n  csTools.register('module', srModuleId, dicomSRModule);\r\n\r\n  const callInputDialog = (data, event, callback) => {\r\n    if (UIDialogService) {\r\n      let dialogId = UIDialogService.create({\r\n        centralize: true,\r\n        isDraggable: false,\r\n        content: SimpleDialog.InputDialog,\r\n        useLastPosition: false,\r\n        showOverlay: true,\r\n        contentProps: {\r\n          title: 'Enter your annotation',\r\n          label: 'New label',\r\n          measurementData: data ? { description: data.text } : {},\r\n          onClose: () => UIDialogService.dismiss({ id: dialogId }),\r\n          onSubmit: value => {\r\n            callback(value);\r\n            UIDialogService.dismiss({ id: dialogId });\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const {\r\n    csToolsConfig,\r\n    stackPrefetch = {\r\n      maxImagesToPrefetch: Infinity,\r\n      preserveExistingPool: false,\r\n      maxSimultaneousRequests: 20,\r\n    },\r\n  } = configuration;\r\n  const metadataProvider = OHIF.cornerstone.metadataProvider;\r\n\r\n  cornerstone.metaData.addProvider(\r\n    metadataProvider.get.bind(metadataProvider),\r\n    9999\r\n  );\r\n\r\n  // ~~\r\n  const defaultCsToolsConfig = csToolsConfig || {\r\n    globalToolSyncEnabled: true,\r\n    showSVGCursors: true,\r\n    autoResizeViewports: false,\r\n  };\r\n\r\n  initCornerstoneTools({ ...defaultCsToolsConfig, ...stackPrefetch });\r\n\r\n  const toolsGroupedByType = {\r\n    touch: [csTools.PanMultiTouchTool, csTools.ZoomTouchPinchTool],\r\n    annotations: [\r\n      csTools.ArrowAnnotateTool,\r\n      csTools.BidirectionalTool,\r\n      csTools.LengthTool,\r\n      csTools.AngleTool,\r\n      csTools.FreehandRoiTool,\r\n      csTools.EllipticalRoiTool,\r\n      csTools.DragProbeTool,\r\n      csTools.RectangleRoiTool,\r\n    ],\r\n    other: [\r\n      csTools.PanTool,\r\n      csTools.ZoomTool,\r\n      csTools.WwwcTool,\r\n      csTools.WwwcRegionTool,\r\n      csTools.MagnifyTool,\r\n      csTools.StackScrollTool,\r\n      csTools.StackScrollMouseWheelTool,\r\n      csTools.OverlayTool,\r\n    ],\r\n  };\r\n\r\n  let tools = [];\r\n  Object.keys(toolsGroupedByType).forEach(toolsGroup =>\r\n    tools.push(...toolsGroupedByType[toolsGroup])\r\n  );\r\n\r\n  /* Measurement Service */\r\n  _connectToolsToMeasurementService(MeasurementService);\r\n\r\n  /* Add extension tools configuration here. */\r\n  const internalToolsConfig = {\r\n    ArrowAnnotate: {\r\n      configuration: {\r\n        getTextCallback: (callback, eventDetails) =>\r\n          callInputDialog(null, eventDetails, callback),\r\n        changeTextCallback: (data, eventDetails, callback) =>\r\n          callInputDialog(data, eventDetails, callback),\r\n      },\r\n    },\r\n  };\r\n\r\n  /* Abstract tools configuration using extension configuration. */\r\n  const parseToolProps = (props, tool) => {\r\n    const { annotations } = toolsGroupedByType;\r\n    // An alternative approach would be to remove the `drawHandlesOnHover` config\r\n    // from the supported configuration properties in `cornerstone-tools`\r\n    const toolsWithHideableHandles = annotations.filter(\r\n      tool => !['RectangleRoiTool', 'EllipticalRoiTool'].includes(tool.name)\r\n    );\r\n\r\n    let parsedProps = { ...props };\r\n\r\n    /**\r\n     * drawHandles - Never/Always show handles\r\n     * drawHandlesOnHover - Only show handles on handle hover (pointNearHandle)\r\n     *\r\n     * Does not apply to tools where handles aren't placed in predictable\r\n     * locations.\r\n     */\r\n    if (\r\n      configuration.hideHandles !== false &&\r\n      toolsWithHideableHandles.includes(tool)\r\n    ) {\r\n      if (props.configuration) {\r\n        parsedProps.configuration.drawHandlesOnHover = true;\r\n      } else {\r\n        parsedProps.configuration = { drawHandlesOnHover: true };\r\n      }\r\n    }\r\n\r\n    return parsedProps;\r\n  };\r\n\r\n  /* Add tools with its custom props through extension configuration. */\r\n  tools.forEach(tool => {\r\n    const toolName = tool.name.replace('Tool', '');\r\n    const externalToolsConfig = configuration.tools || {};\r\n    const externalToolProps = externalToolsConfig[toolName] || {};\r\n    const internalToolProps = internalToolsConfig[toolName] || {};\r\n    const props = merge(\r\n      internalToolProps,\r\n      parseToolProps(externalToolProps, tool)\r\n    );\r\n    csTools.addTool(tool, props);\r\n  });\r\n\r\n  // TODO -> We need a better way to do this with maybe global tool state setting all tools passive.\r\n  const BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool');\r\n  tools.forEach(tool => {\r\n    if (tool.prototype instanceof BaseAnnotationTool) {\r\n      // BaseAnnotationTool would likely come from csTools lib exports\r\n      const toolName = new tool().name;\r\n      csTools.setToolPassive(toolName); // there may be a better place to determine name; may not be on uninstantiated class\r\n    }\r\n  });\r\n\r\n  csTools.setToolActive('Pan', { mouseButtonMask: 4 });\r\n  csTools.setToolActive('Zoom', { mouseButtonMask: 2 });\r\n  csTools.setToolActive('Wwwc', { mouseButtonMask: 1 });\r\n  csTools.setToolActive('StackScrollMouseWheel', {}); // TODO: Empty options should not be required\r\n  csTools.setToolActive('PanMultiTouch', { pointers: 2 }); // TODO: Better error if no options\r\n  csTools.setToolActive('ZoomTouchPinch', {});\r\n  csTools.setToolEnabled('Overlay', {});\r\n}\r\n\r\nconst _initMeasurementService = measurementService => {\r\n  /* Initialization */\r\n  const { toAnnotation, toMeasurement } = measurementServiceMappingsFactory(\r\n    measurementService\r\n  );\r\n  const csToolsVer4MeasurementSource = measurementService.createSource(\r\n    'CornerstoneTools',\r\n    '4'\r\n  );\r\n\r\n  /* Matching Criterias */\r\n  const matchingCriteria = {\r\n    valueType: measurementService.VALUE_TYPES.POLYLINE,\r\n    points: 2,\r\n  };\r\n\r\n  /* Mappings */\r\n  measurementService.addMapping(\r\n    csToolsVer4MeasurementSource,\r\n    'Length',\r\n    matchingCriteria,\r\n    toAnnotation,\r\n    toMeasurement\r\n  );\r\n\r\n  return csToolsVer4MeasurementSource;\r\n};\r\n\r\nconst _connectToolsToMeasurementService = measurementService => {\r\n  const csToolsVer4MeasurementSource = _initMeasurementService(\r\n    measurementService\r\n  );\r\n  const {\r\n    id: sourceId,\r\n    addOrUpdate,\r\n    getAnnotation,\r\n  } = csToolsVer4MeasurementSource;\r\n\r\n  /* Measurement Service Events */\r\n  cornerstone.events.addEventListener(\r\n    cornerstone.EVENTS.ELEMENT_ENABLED,\r\n    event => {\r\n      const {\r\n        MEASUREMENT_ADDED,\r\n        MEASUREMENT_UPDATED,\r\n      } = measurementService.EVENTS;\r\n\r\n      measurementService.subscribe(\r\n        MEASUREMENT_ADDED,\r\n        ({ source, measurement }) => {\r\n          if (![sourceId].includes(source.id)) {\r\n            const annotation = getAnnotation('Length', measurement.id);\r\n\r\n            console.log(\r\n              'Measurement Service [Cornerstone]: Measurement added',\r\n              measurement\r\n            );\r\n            console.log('Mapped annotation:', annotation);\r\n          }\r\n        }\r\n      );\r\n\r\n      measurementService.subscribe(\r\n        MEASUREMENT_UPDATED,\r\n        ({ source, measurement }) => {\r\n          if (![sourceId].includes(source.id)) {\r\n            const annotation = getAnnotation('Length', measurement.id);\r\n\r\n            console.log(\r\n              'Measurement Service [Cornerstone]: Measurement updated',\r\n              measurement\r\n            );\r\n            console.log('Mapped annotation:', annotation);\r\n          }\r\n        }\r\n      );\r\n\r\n      const addOrUpdateMeasurement = csToolsAnnotation => {\r\n        try {\r\n          const { toolName, toolType, measurementData } = csToolsAnnotation;\r\n          const csTool = toolName || measurementData.toolType || toolType;\r\n          csToolsAnnotation.id = measurementData._measurementServiceId;\r\n          const measurementServiceId = addOrUpdate(csTool, csToolsAnnotation);\r\n\r\n          if (!measurementData._measurementServiceId) {\r\n            addMeasurementServiceId(measurementServiceId, csToolsAnnotation);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to add or update measurement:', error);\r\n        }\r\n      };\r\n\r\n      const addMeasurementServiceId = (id, csToolsAnnotation) => {\r\n        const { measurementData } = csToolsAnnotation;\r\n        Object.assign(measurementData, { _measurementServiceId: id });\r\n      };\r\n\r\n      [\r\n        csTools.EVENTS.MEASUREMENT_ADDED,\r\n        csTools.EVENTS.MEASUREMENT_MODIFIED,\r\n      ].forEach(csToolsEvtName => {\r\n        event.detail.element.addEventListener(\r\n          csToolsEvtName,\r\n          ({ detail: csToolsAnnotation }) => {\r\n            console.log(`Cornerstone Element Event: ${csToolsEvtName}`);\r\n            addOrUpdateMeasurement(csToolsAnnotation);\r\n          }\r\n        );\r\n      });\r\n    }\r\n  );\r\n};\r\n","import { redux } from '@ohif/core';\r\n\r\nconst { setLayout } = redux.actions;\r\n\r\n/**\r\n * Update the current layout with a simple Cornerstone one\r\n *\r\n * @return void\r\n */\r\nconst setCornerstoneLayout = () => {\r\n  const layout = {\r\n    numRows: 1,\r\n    numColumns: 1,\r\n    viewports: [{ plugin: 'cornerstone' }],\r\n  };\r\n\r\n  const action = setLayout(layout);\r\n\r\n  window.store.dispatch(action);\r\n}\r\n\r\nexport default setCornerstoneLayout;\r\n","import React from 'react';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ViewportDownloadForm } from '@ohif/ui';\r\nimport { utils } from '@ohif/core';\r\n\r\nimport { getEnabledElement } from './state';\r\n\r\nconst MINIMUM_SIZE = 100;\r\nconst DEFAULT_SIZE = 512;\r\nconst MAX_TEXTURE_SIZE = 10000;\r\n\r\nconst CornerstoneViewportDownloadForm = ({ onClose, activeViewportIndex }) => {\r\n  const activeEnabledElement = getEnabledElement(activeViewportIndex);\r\n\r\n  const enableViewport = viewportElement => {\r\n    if (viewportElement) {\r\n      cornerstone.enable(viewportElement);\r\n    }\r\n  };\r\n\r\n  const disableViewport = viewportElement => {\r\n    if (viewportElement) {\r\n      cornerstone.disable(viewportElement);\r\n    }\r\n  };\r\n\r\n  const updateViewportPreview = (viewportElement, downloadCanvas, fileType) =>\r\n    new Promise(resolve => {\r\n      cornerstone.fitToWindow(viewportElement);\r\n\r\n      viewportElement.addEventListener(\r\n        'cornerstoneimagerendered',\r\n        function updateViewport(event) {\r\n          const enabledElement = cornerstone.getEnabledElement(event.target)\r\n            .element;\r\n          const type = 'image/' + fileType;\r\n          const dataUrl = downloadCanvas.toDataURL(type, 1);\r\n\r\n          let newWidth = enabledElement.offsetHeight;\r\n          let newHeight = enabledElement.offsetWidth;\r\n\r\n          if (newWidth > DEFAULT_SIZE || newHeight > DEFAULT_SIZE) {\r\n            const multiplier = DEFAULT_SIZE / Math.max(newWidth, newHeight);\r\n            newHeight *= multiplier;\r\n            newWidth *= multiplier;\r\n          }\r\n\r\n          resolve({ dataUrl, width: newWidth, height: newHeight });\r\n\r\n          viewportElement.removeEventListener(\r\n            'cornerstoneimagerendered',\r\n            updateViewport\r\n          );\r\n        }\r\n      );\r\n    });\r\n\r\n  const loadImage = (activeViewport, viewportElement, width, height) =>\r\n    new Promise(resolve => {\r\n      if (activeViewport && viewportElement) {\r\n        const enabledElement = cornerstone.getEnabledElement(activeViewport);\r\n        const viewport = Object.assign({}, enabledElement.viewport);\r\n        delete viewport.scale;\r\n        viewport.translation = {\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n\r\n        cornerstone.loadImage(enabledElement.image.imageId).then(image => {\r\n          cornerstone.displayImage(viewportElement, image);\r\n          cornerstone.setViewport(viewportElement, viewport);\r\n          cornerstone.resize(viewportElement, true);\r\n\r\n          const newWidth = Math.min(width || image.width, MAX_TEXTURE_SIZE);\r\n          const newHeight = Math.min(height || image.height, MAX_TEXTURE_SIZE);\r\n\r\n          resolve({ image, width: newWidth, height: newHeight });\r\n        });\r\n      }\r\n    });\r\n\r\n  const toggleAnnotations = (toggle, viewportElement) => {\r\n    cornerstoneTools.store.state.tools.forEach(({ name }) => {\r\n      if (toggle) {\r\n        cornerstoneTools.setToolEnabledForElement(viewportElement, name);\r\n      } else {\r\n        cornerstoneTools.setToolDisabledForElement(viewportElement, name);\r\n      }\r\n    });\r\n  };\r\n\r\n  const downloadBlob = (\r\n    filename,\r\n    fileType,\r\n    viewportElement,\r\n    downloadCanvas\r\n  ) => {\r\n    const file = `${filename}.${fileType}`;\r\n    const mimetype = `image/${fileType}`;\r\n\r\n    /* Handles JPEG images for IE11 */\r\n    if (downloadCanvas.msToBlob && fileType === 'jpeg') {\r\n      const image = downloadCanvas.toDataURL(mimetype, 1);\r\n      const blob = utils.b64toBlob(\r\n        image.replace('data:image/jpeg;base64,', ''),\r\n        mimetype\r\n      );\r\n      return window.navigator.msSaveBlob(blob, file);\r\n    }\r\n\r\n    viewportElement.querySelector('canvas').toBlob(blob => {\r\n      const URLObj = window.URL || window.webkitURL;\r\n      const a = document.createElement('a');\r\n      a.href = URLObj.createObjectURL(blob);\r\n      a.download = file;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ViewportDownloadForm\r\n      onClose={onClose}\r\n      minimumSize={MINIMUM_SIZE}\r\n      maximumSize={MAX_TEXTURE_SIZE}\r\n      defaultSize={DEFAULT_SIZE}\r\n      canvasClass={'cornerstone-canvas'}\r\n      activeViewport={activeEnabledElement}\r\n      enableViewport={enableViewport}\r\n      disableViewport={disableViewport}\r\n      updateViewportPreview={updateViewportPreview}\r\n      loadImage={loadImage}\r\n      toggleAnnotations={toggleAnnotations}\r\n      downloadBlob={downloadBlob}\r\n    />\r\n  );\r\n};\r\n\r\nCornerstoneViewportDownloadForm.propTypes = {\r\n  onClose: PropTypes.func,\r\n  activeViewportIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CornerstoneViewportDownloadForm;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport OHIF from '@ohif/core';\r\n\r\nimport setCornerstoneLayout from './utils/setCornerstoneLayout.js';\r\nimport { getEnabledElement } from './state';\r\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\r\nconst scroll = cornerstoneTools.import('util/scroll');\r\n\r\nconst { studyMetadataManager } = OHIF.utils;\r\nconst { setViewportSpecificData } = OHIF.redux.actions;\r\n\r\nconst refreshCornerstoneViewports = () => {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n};\r\n\r\nconst commandsModule = ({ servicesManager }) => {\r\n  const actions = {\r\n    rotateViewport: ({ viewports, rotation }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.rotation += rotation;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    flipViewportHorizontal: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.hflip = !viewport.hflip;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    flipViewportVertical: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.vflip = !viewport.vflip;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    scaleViewport: ({ direction, viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      const step = direction * 0.15;\r\n\r\n      if (enabledElement) {\r\n        if (step) {\r\n          let viewport = cornerstone.getViewport(enabledElement);\r\n          viewport.scale += step;\r\n          cornerstone.setViewport(enabledElement, viewport);\r\n        } else {\r\n          cornerstone.fitToWindow(enabledElement);\r\n        }\r\n      }\r\n    },\r\n    resetViewport: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        cornerstone.reset(enabledElement);\r\n      }\r\n    },\r\n    invertViewport: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n        viewport.invert = !viewport.invert;\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    // TODO: this is receiving `evt` from `ToolbarRow`. We could use it to have\r\n    //       better mouseButtonMask sets.\r\n    setToolActive: ({ toolName }) => {\r\n      if (!toolName) {\r\n        console.warn('No toolname provided to setToolActive command');\r\n      }\r\n      cornerstoneTools.setToolActive(toolName, { mouseButtonMask: 1 });\r\n    },\r\n    clearAnnotations: ({ viewports }) => {\r\n      const element = getEnabledElement(viewports.activeViewportIndex);\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      const enabledElement = cornerstone.getEnabledElement(element);\r\n      if (!enabledElement || !enabledElement.image) {\r\n        return;\r\n      }\r\n\r\n      const {\r\n        toolState,\r\n      } = cornerstoneTools.globalImageIdSpecificToolStateManager;\r\n      if (\r\n        !toolState ||\r\n        toolState.hasOwnProperty(enabledElement.image.imageId) === false\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const imageIdToolState = toolState[enabledElement.image.imageId];\r\n\r\n      const measurementsToRemove = [];\r\n\r\n      Object.keys(imageIdToolState).forEach(toolType => {\r\n        const { data } = imageIdToolState[toolType];\r\n\r\n        data.forEach(measurementData => {\r\n          const {\r\n            _id,\r\n            lesionNamingNumber,\r\n            measurementNumber,\r\n          } = measurementData;\r\n          if (!_id) {\r\n            return;\r\n          }\r\n\r\n          measurementsToRemove.push({\r\n            toolType,\r\n            _id,\r\n            lesionNamingNumber,\r\n            measurementNumber,\r\n          });\r\n        });\r\n      });\r\n\r\n      measurementsToRemove.forEach(measurementData => {\r\n        OHIF.measurements.MeasurementHandlers.onRemoved({\r\n          detail: {\r\n            toolType: measurementData.toolType,\r\n            measurementData,\r\n          },\r\n        });\r\n      });\r\n    },\r\n    nextImage: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      scroll(enabledElement, 1);\r\n    },\r\n    previousImage: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      scroll(enabledElement, -1);\r\n    },\r\n    getActiveViewportEnabledElement: ({ viewports }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n      return enabledElement;\r\n    },\r\n    showDownloadViewportModal: ({ title, viewports }) => {\r\n      const activeViewportIndex = viewports.activeViewportIndex;\r\n      const { UIModalService } = servicesManager.services;\r\n      if (UIModalService) {\r\n        UIModalService.show({\r\n          content: CornerstoneViewportDownloadForm,\r\n          title,\r\n          contentProps: {\r\n            activeViewportIndex,\r\n            onClose: UIModalService.hide,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    updateTableWithNewMeasurementData({\r\n      toolType,\r\n      measurementNumber,\r\n      location,\r\n      description,\r\n    }) {\r\n      // Update all measurements by measurement number\r\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\r\n      const measurements = measurementApi.tools[toolType].filter(\r\n        m => m.measurementNumber === measurementNumber\r\n      );\r\n\r\n      measurements.forEach(measurement => {\r\n        measurement.location = location;\r\n        measurement.description = description;\r\n\r\n        measurementApi.updateMeasurement(measurement.toolType, measurement);\r\n      });\r\n\r\n      measurementApi.syncMeasurementsAndToolData();\r\n\r\n      refreshCornerstoneViewports();\r\n    },\r\n    getNearbyToolData({ element, canvasCoordinates, availableToolTypes }) {\r\n      const nearbyTool = {};\r\n      let pointNearTool = false;\r\n\r\n      availableToolTypes.forEach(toolType => {\r\n        const elementToolData = cornerstoneTools.getToolState(\r\n          element,\r\n          toolType\r\n        );\r\n\r\n        if (!elementToolData) {\r\n          return;\r\n        }\r\n\r\n        elementToolData.data.forEach((toolData, index) => {\r\n          let elementToolInstance = cornerstoneTools.getToolForElement(\r\n            element,\r\n            toolType\r\n          );\r\n\r\n          if (!elementToolInstance) {\r\n            elementToolInstance = cornerstoneTools.getToolForElement(\r\n              element,\r\n              `${toolType}Tool`\r\n            );\r\n          }\r\n\r\n          if (!elementToolInstance) {\r\n            console.warn('Tool not found.');\r\n            return undefined;\r\n          }\r\n\r\n          if (\r\n            elementToolInstance.pointNearTool(\r\n              element,\r\n              toolData,\r\n              canvasCoordinates\r\n            )\r\n          ) {\r\n            pointNearTool = true;\r\n            nearbyTool.tool = toolData;\r\n            nearbyTool.index = index;\r\n            nearbyTool.toolType = toolType;\r\n          }\r\n        });\r\n\r\n        if (pointNearTool) {\r\n          return false;\r\n        }\r\n      });\r\n\r\n      return pointNearTool ? nearbyTool : undefined;\r\n    },\r\n    removeToolState: ({ element, toolType, tool }) => {\r\n      cornerstoneTools.removeToolState(element, toolType, tool);\r\n      cornerstone.updateImage(element);\r\n    },\r\n    setCornerstoneLayout: () => {\r\n      setCornerstoneLayout();\r\n    },\r\n    setWindowLevel: ({ viewports, window, level }) => {\r\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\r\n\r\n      if (enabledElement) {\r\n        let viewport = cornerstone.getViewport(enabledElement);\r\n\r\n        viewport.voi = {\r\n          windowWidth: Number(window),\r\n          windowCenter: Number(level),\r\n        };\r\n        cornerstone.setViewport(enabledElement, viewport);\r\n      }\r\n    },\r\n    jumpToImage: ({\r\n      StudyInstanceUID,\r\n      SOPInstanceUID,\r\n      frameIndex,\r\n      activeViewportIndex,\r\n      refreshViewports = true,\r\n    }) => {\r\n      const study = studyMetadataManager.get(StudyInstanceUID);\r\n\r\n      const displaySet = study.findDisplaySet(ds => {\r\n        return (\r\n          ds.images &&\r\n          ds.images.find(i => i.getSOPInstanceUID() === SOPInstanceUID)\r\n        );\r\n      });\r\n\r\n      if (!displaySet) {\r\n        return;\r\n      }\r\n\r\n      displaySet.SOPInstanceUID = SOPInstanceUID;\r\n      displaySet.frameIndex = frameIndex;\r\n\r\n      window.store.dispatch(\r\n        setViewportSpecificData(activeViewportIndex, displaySet)\r\n      );\r\n\r\n      if (refreshViewports) {\r\n        refreshCornerstoneViewports();\r\n      }\r\n    },\r\n  };\r\n\r\n  const definitions = {\r\n    jumpToImage: {\r\n      commandFn: actions.jumpToImage,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    getNearbyToolData: {\r\n      commandFn: actions.getNearbyToolData,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    removeToolState: {\r\n      commandFn: actions.removeToolState,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    updateTableWithNewMeasurementData: {\r\n      commandFn: actions.updateTableWithNewMeasurementData,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    showDownloadViewportModal: {\r\n      commandFn: actions.showDownloadViewportModal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    getActiveViewportEnabledElement: {\r\n      commandFn: actions.getActiveViewportEnabledElement,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    rotateViewportCW: {\r\n      commandFn: actions.rotateViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { rotation: 90 },\r\n    },\r\n    rotateViewportCCW: {\r\n      commandFn: actions.rotateViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { rotation: -90 },\r\n    },\r\n    invertViewport: {\r\n      commandFn: actions.invertViewport,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    flipViewportVertical: {\r\n      commandFn: actions.flipViewportVertical,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    flipViewportHorizontal: {\r\n      commandFn: actions.flipViewportHorizontal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    scaleUpViewport: {\r\n      commandFn: actions.scaleViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 1 },\r\n    },\r\n    scaleDownViewport: {\r\n      commandFn: actions.scaleViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: -1 },\r\n    },\r\n    fitViewportToWindow: {\r\n      commandFn: actions.scaleViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 0 },\r\n    },\r\n    resetViewport: {\r\n      commandFn: actions.resetViewport,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    clearAnnotations: {\r\n      commandFn: actions.clearAnnotations,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    nextImage: {\r\n      commandFn: actions.nextImage,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    previousImage: {\r\n      commandFn: actions.previousImage,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    // TOOLS\r\n    setToolActive: {\r\n      commandFn: actions.setToolActive,\r\n      storeContexts: [],\r\n      options: {},\r\n    },\r\n    setZoomTool: {\r\n      commandFn: actions.setToolActive,\r\n      storeContexts: [],\r\n      options: { toolName: 'Zoom' },\r\n    },\r\n    setCornerstoneLayout: {\r\n      commandFn: actions.setCornerstoneLayout,\r\n      storeContexts: [],\r\n      options: {},\r\n      context: 'VIEWER',\r\n    },\r\n    setWindowLevel: {\r\n      commandFn: actions.setWindowLevel,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n  };\r\n\r\n  return {\r\n    actions,\r\n    definitions,\r\n    defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","// TODO: A way to add Icons that don't already exist?\r\n// - Register them and add\r\n// - Include SVG Source/Inline?\r\n// - By URL, or own component?\r\n\r\n// What KINDS of toolbar buttons do we have...\r\n// - One's that dispatch commands\r\n// - One's that set tool's active\r\n// - More custom, like CINE\r\n//    - Built in for one's like this, or custom components?\r\n\r\n// Visible?\r\n// Disabled?\r\n// Based on contexts or misc. criteria?\r\n//  -- ACTIVE_ROUTE::VIEWER\r\n//  -- ACTIVE_VIEWPORT::CORNERSTONE\r\n// setToolActive commands should receive the button event that triggered\r\n// so we can do the \"bind to this button\" magic\r\n\r\nconst TOOLBAR_BUTTON_TYPES = {\r\n  COMMAND: 'command',\r\n  SET_TOOL_ACTIVE: 'setToolActive',\r\n  BUILT_IN: 'builtIn',\r\n};\r\n\r\nconst TOOLBAR_BUTTON_BEHAVIORS = {\r\n  CINE: 'CINE',\r\n  DOWNLOAD_SCREEN_SHOT: 'DOWNLOAD_SCREEN_SHOT',\r\n};\r\n\r\n/* TODO: Export enums through a extension manager. */\r\nconst enums = {\r\n  TOOLBAR_BUTTON_TYPES,\r\n  TOOLBAR_BUTTON_BEHAVIORS,\r\n};\r\n\r\nconst definitions = [\r\n  {\r\n    id: 'StackScroll',\r\n    label: 'Stack Scroll',\r\n    icon: 'bars',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'StackScroll' },\r\n  },\r\n  {\r\n    id: 'Zoom',\r\n    label: 'Zoom',\r\n    icon: 'search-plus',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Zoom' },\r\n  },\r\n  {\r\n    id: 'Wwwc',\r\n    label: 'Levels',\r\n    icon: 'level',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Wwwc' },\r\n  },\r\n  {\r\n    id: 'Pan',\r\n    label: 'Pan',\r\n    icon: 'arrows',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Pan' },\r\n  },\r\n  {\r\n    id: 'Length',\r\n    label: 'Length',\r\n    icon: 'measure-temp',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Length' },\r\n  },\r\n  {\r\n    id: 'ArrowAnnotate',\r\n    label: 'Annotate',\r\n    icon: 'measure-non-target',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'ArrowAnnotate' },\r\n  },\r\n  {\r\n    id: 'Angle',\r\n    label: 'Angle',\r\n    icon: 'angle-left',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'setToolActive',\r\n    commandOptions: { toolName: 'Angle' },\r\n  },\r\n  {\r\n    id: 'Reset',\r\n    label: 'Reset',\r\n    icon: 'reset',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'resetViewport',\r\n  },\r\n  {\r\n    id: 'Cine',\r\n    label: 'CINE',\r\n    icon: 'youtube',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\r\n    options: {\r\n      behavior: TOOLBAR_BUTTON_BEHAVIORS.CINE,\r\n    },\r\n  },\r\n  {\r\n    id: 'More',\r\n    label: 'More',\r\n    icon: 'ellipse-circle',\r\n    buttons: [\r\n      {\r\n        id: 'Magnify',\r\n        label: 'Magnify',\r\n        icon: 'circle',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'Magnify' },\r\n      },\r\n      {\r\n        id: 'WwwcRegion',\r\n        label: 'ROI Window',\r\n        icon: 'stop',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'WwwcRegion' },\r\n      },\r\n      {\r\n        id: 'DragProbe',\r\n        label: 'Probe',\r\n        icon: 'dot-circle',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'DragProbe' },\r\n      },\r\n      {\r\n        id: 'EllipticalRoi',\r\n        label: 'Ellipse',\r\n        icon: 'circle-o',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'EllipticalRoi' },\r\n      },\r\n      {\r\n        id: 'RectangleRoi',\r\n        label: 'Rectangle',\r\n        icon: 'square-o',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'RectangleRoi' },\r\n      },\r\n      {\r\n        id: 'Invert',\r\n        label: 'Invert',\r\n        icon: 'adjust',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'invertViewport',\r\n      },\r\n      {\r\n        id: 'RotateRight',\r\n        label: 'Rotate Right',\r\n        icon: 'rotate-right',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'rotateViewportCW',\r\n      },\r\n      {\r\n        id: 'FlipH',\r\n        label: 'Flip H',\r\n        icon: 'ellipse-h',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'flipViewportHorizontal',\r\n      },\r\n      {\r\n        id: 'FlipV',\r\n        label: 'Flip V',\r\n        icon: 'ellipse-v',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'flipViewportVertical',\r\n      },\r\n      {\r\n        id: 'Clear',\r\n        label: 'Clear',\r\n        icon: 'trash',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n        commandName: 'clearAnnotations',\r\n      },\r\n      {\r\n        id: 'Bidirectional',\r\n        label: 'Bidirectional',\r\n        icon: 'measure-target',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'Bidirectional' },\r\n      },\r\n      {\r\n        id: 'Download',\r\n        label: 'Download',\r\n        icon: 'create-screen-capture',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\r\n        options: {\r\n          behavior: TOOLBAR_BUTTON_BEHAVIORS.DOWNLOAD_SCREEN_SHOT,\r\n          togglable: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'Exit2DMPR',\r\n    label: 'Exit 2D MPR',\r\n    icon: 'times',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'setCornerstoneLayout',\r\n    context: 'ACTIVE_VIEWPORT::VTK',\r\n  },\r\n];\r\n\r\nexport default {\r\n  definitions,\r\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n};\r\n","import React from 'react';\r\nimport init from './init.js';\r\nimport commandsModule from './commandsModule.js';\r\nimport toolbarModule from './toolbarModule.js';\r\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./OHIFCornerstoneViewport');\r\n});\r\n\r\nconst OHIFCornerstoneViewport = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'cornerstone',\r\n  version,\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  preRegistration({ servicesManager, configuration = {} }) {\r\n    init({ servicesManager, configuration });\r\n  },\r\n  getViewportModule({ commandsManager, appConfig }) {\r\n    const ExtendedOHIFCornerstoneViewport = props => {\r\n      /**\r\n       * TODO: This appears to be used to set the redux parameters for\r\n       * the viewport when new images are loaded. It's very ugly\r\n       * and we should remove it.\r\n       */\r\n      const onNewImageHandler = jumpData => {\r\n        /** Do not trigger all viewports to render unnecessarily */\r\n        jumpData.refreshViewports = false;\r\n        commandsManager.runCommand('jumpToImage', jumpData);\r\n      };\r\n\r\n      const { studyPrefetcher } = appConfig;\r\n      const isStackPrefetchEnabled =\r\n        studyPrefetcher && !studyPrefetcher.enabled;\r\n\r\n      return (\r\n        <OHIFCornerstoneViewport\r\n          {...props}\r\n          onNewImage={onNewImageHandler}\r\n          isStackPrefetchEnabled={isStackPrefetchEnabled}\r\n        />\r\n      );\r\n    };\r\n\r\n    return ExtendedOHIFCornerstoneViewport;\r\n  },\r\n  getToolbarModule() {\r\n    return toolbarModule;\r\n  },\r\n  getCommandsModule({ servicesManager }) {\r\n    return commandsModule({ servicesManager });\r\n  },\r\n};\r\n\r\nexport { CornerstoneViewportDownloadForm };\r\n","export default '0.0.50';\r\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\r\nimport { loadUser, createUserManager } from 'redux-oidc';\r\n\r\n/**\r\n * Creates a userManager from oidcSettings;\r\n * loads the user into the provided redux store\r\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\r\n *\r\n * @param {*} store\r\n * @param {Object} oidcSettings\r\n * @param {string} oidcSettings.authServerUrl,\r\n * @param {string} oidcSettings.clientId,\r\n * @param {string} oidcSettings.authRedirectUri,\r\n * @param {string} oidcSettings.postLogoutRedirectUri,\r\n * @param {string} oidcSettings.responseType,\r\n * @param {string} oidcSettings.extraQueryParams,\r\n */\r\nexport default function(store, oidcSettings) {\r\n  if (!store || !oidcSettings) {\r\n    return;\r\n  }\r\n\r\n  const settings = {\r\n    ...oidcSettings,\r\n    automaticSilentRenew: true,\r\n    revokeAccessTokenOnSignout: true,\r\n    filterProtocolClaims: true,\r\n  };\r\n\r\n  const userManager = createUserManager(settings);\r\n\r\n  loadUser(store, userManager);\r\n\r\n  return userManager;\r\n}\r\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\n\r\nlet initialized = false;\r\n\r\nconst MAX_CONCURRENCY = 6;\r\n\r\nexport default function initWebWorkers() {\r\n  const config = {\r\n    maxWebWorkers: Math.max(Math.min(navigator.hardwareConcurrency - 1, MAX_CONCURRENCY), 1),\r\n    startWebWorkersOnDemand: true,\r\n    taskConfiguration: {\r\n      decodeTask: {\r\n        initializeCodecsOnStartup: false,\r\n        usePDFJS: false,\r\n        strict: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (!initialized) {\r\n    cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\r\n    initialized = true;\r\n  }\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore,\r\n  compose,\r\n} from 'redux/es/redux.js';\r\n\r\n// import { createLogger } from 'redux-logger';\r\nimport { reducer as oidcReducer } from 'redux-oidc';\r\nimport { redux } from '@ohif/core';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// Combine our @ohif/core and oidc reducers\r\n// Set init data, using values found in localStorage\r\nconst { reducers, localStorage, sessionStorage } = redux;\r\nconst middleware = [thunkMiddleware];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nreducers.oidc = oidcReducer;\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst preloadedState = {\r\n  ...localStorage.loadState(),\r\n  ...sessionStorage.loadState(),\r\n};\r\n\r\nif (window.config && window.config.disableServersCache === true) {\r\n  delete preloadedState.servers;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  preloadedState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// When the store's preferences change,\r\n// Update our cached preferences in localStorage\r\nstore.subscribe(() => {\r\n  localStorage.saveState({\r\n    preferences: store.getState().preferences,\r\n  });\r\n  sessionStorage.saveState({\r\n    servers: store.getState().servers,\r\n  });\r\n});\r\n\r\nexport default store;\r\n","import { redux, utils } from '@ohif/core';\r\nimport store from './../../store';\r\n\r\nconst commandsModule = ({ commandsManager }) => {\r\n  const { setViewportActive, setActiveViewportSpecificData } = redux.actions;\r\n\r\n  const actions = {\r\n    updateActiveViewport: ({ viewports, direction }) => {\r\n      const { viewportSpecificData, activeViewportIndex } = viewports;\r\n      const maxIndex = Object.keys(viewportSpecificData).length - 1;\r\n\r\n      let newIndex = activeViewportIndex + direction;\r\n      newIndex = newIndex > maxIndex ? 0 : newIndex;\r\n      newIndex = newIndex < 0 ? maxIndex : newIndex;\r\n\r\n      store.dispatch(setViewportActive(newIndex));\r\n    },\r\n    setWindowLevelPreset: ({ viewports, preset }) => {\r\n      const state = store.getState();\r\n      const { preferences = {} } = state;\r\n      const { window, level } =\r\n        preferences.windowLevelData && preferences.windowLevelData[preset];\r\n\r\n      if (window && level) {\r\n        commandsManager.runCommand('setWindowLevel', {\r\n          viewports,\r\n          window,\r\n          level,\r\n        });\r\n      }\r\n    },\r\n    updateViewportDisplaySet: ({ viewports, direction }) => {\r\n      const viewportSpecificData = { ...viewports.viewportSpecificData };\r\n      const activeViewport =\r\n        viewportSpecificData[viewports.activeViewportIndex];\r\n      const studyMetadata = utils.studyMetadataManager.get(\r\n        activeViewport.StudyInstanceUID\r\n      );\r\n\r\n      if (!studyMetadata) {\r\n        return;\r\n      }\r\n\r\n      const allDisplaySets = studyMetadata.getDisplaySets();\r\n      const currentDisplaySetIndex = allDisplaySets.findIndex(\r\n        displaySet =>\r\n          displaySet.displaySetInstanceUID ===\r\n          activeViewport.displaySetInstanceUID\r\n      );\r\n      if (currentDisplaySetIndex < 0) {\r\n        return;\r\n      }\r\n\r\n      const newDisplaySetIndex = currentDisplaySetIndex + direction;\r\n      const newDisplaySetData = allDisplaySets[newDisplaySetIndex];\r\n      if (!newDisplaySetData) {\r\n        return;\r\n      }\r\n\r\n      store.dispatch(setActiveViewportSpecificData(newDisplaySetData));\r\n    },\r\n  };\r\n\r\n  const definitions = {\r\n    // Next/Previous active viewport\r\n    incrementActiveViewport: {\r\n      commandFn: actions.updateActiveViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 1 },\r\n    },\r\n    decrementActiveViewport: {\r\n      commandFn: actions.updateActiveViewport,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: -1 },\r\n    },\r\n    // Window level Presets\r\n    windowLevelPreset1: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 1 },\r\n    },\r\n    windowLevelPreset2: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 2 },\r\n    },\r\n    windowLevelPreset3: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 3 },\r\n    },\r\n    windowLevelPreset4: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 4 },\r\n    },\r\n    windowLevelPreset5: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 5 },\r\n    },\r\n    windowLevelPreset6: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 6 },\r\n    },\r\n    windowLevelPreset7: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 7 },\r\n    },\r\n    windowLevelPreset8: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 8 },\r\n    },\r\n    windowLevelPreset9: {\r\n      commandFn: actions.setWindowLevelPreset,\r\n      storeContexts: ['viewports'],\r\n      options: { preset: 9 },\r\n    },\r\n    nextViewportDisplaySet: {\r\n      commandFn: actions.updateViewportDisplaySet,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: 1 },\r\n    },\r\n    previousViewportDisplaySet: {\r\n      commandFn: actions.updateViewportDisplaySet,\r\n      storeContexts: ['viewports'],\r\n      options: { direction: -1 },\r\n    },\r\n  };\r\n\r\n  return {\r\n    definitions,\r\n    defaultContext: 'VIEWER',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","import commandsModule from './commandsModule.js';\r\n\r\nexport default {\r\n  id: 'generic-viewer-commands',\r\n  get version() {\r\n    return window.version;\r\n  },\r\n  getCommandsModule({ commandsManager }) {\r\n    return commandsModule({ commandsManager });\r\n  },\r\n};\r\n","import { measurements, utils } from '@ohif/core';\r\nimport { servicesManager } from './../../App.js';\r\nconst { MeasurementApi } = measurements;\r\nconst { studyMetadataManager } = utils;\r\n\r\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\r\n\r\n/**\r\n * Activates a set of measurements\r\n *\r\n * @param measurementData\r\n * @param viewportsState\r\n * @param timepointManagerState\r\n * @param options\r\n */\r\nexport default function jumpToRowItem(\r\n  measurementData,\r\n  viewportsState,\r\n  timepointManagerState,\r\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\r\n) {\r\n  const viewports = viewportsState.layout.viewports;\r\n  const activeViewportIndex = viewportsState.activeViewportIndex;\r\n  const activeViewport = viewports[activeViewportIndex];\r\n  if (activeViewport.vtk) {\r\n    const error = new Error('Measurements are not supported by the MPR mode.');\r\n    const { UINotificationService, LoggerService } = servicesManager.services;\r\n    LoggerService.error({ error, message: error.message });\r\n    UINotificationService.show({\r\n      title: 'Measurements panel',\r\n      message: error.message,\r\n      type: 'warning',\r\n      autoClose: true,\r\n    });\r\n    return {\r\n      viewportSpecificData: [],\r\n      layout: [], // TODO: if we need to change layout, we should return this here\r\n    };\r\n  }\r\n\r\n  const numViewports = viewportsState.layout.viewports.length;\r\n  const numTimepoints = timepointManagerState.timepoints.length;\r\n  const { measurements, timepoints } = timepointManagerState;\r\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\r\n  const { toolType, measurementNumber } = measurementData;\r\n\r\n  if (options.invertViewportTimepointsOrder) {\r\n    timepoints.reverse();\r\n  }\r\n\r\n  const measurementsForToolGroup = measurements[toolType];\r\n\r\n  // Retrieve the measurements data\r\n  const measurementsToJumpTo = [];\r\n  for (let i = 0; i < numViewportsToUpdate; i++) {\r\n    const { timepointId } = timepoints[i];\r\n\r\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\r\n      return (\r\n        entry.timepointId === timepointId &&\r\n        entry.measurementNumber === measurementNumber\r\n      );\r\n    });\r\n\r\n    if (!dataAtThisTimepoint) {\r\n      measurementsToJumpTo.push(null);\r\n      continue;\r\n    }\r\n\r\n    let measurement = dataAtThisTimepoint;\r\n\r\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\r\n    if (options.childToolKey) {\r\n      measurement = dataAtThisTimepoint[options.childToolKey];\r\n    } else if (Array.isArray(tool.childTools)) {\r\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\r\n      measurement = dataAtThisTimepoint[key];\r\n    }\r\n\r\n    measurementsToJumpTo.push(measurement);\r\n  }\r\n\r\n  // TODO: Add a single viewports state action which allows\r\n  // - viewportData to be set\r\n  // - layout to be set\r\n  // - activeViewport to be set\r\n\r\n  // Needs to update viewports.viewportData state to set image set data\r\n\r\n  const displaySetContainsSopInstance = (displaySet, SOPInstanceUID) => {\r\n    if (!displaySet.images || !displaySet.images.length) {\r\n      return;\r\n    }\r\n\r\n    return displaySet.images.find(\r\n      image => image.getSOPInstanceUID() === SOPInstanceUID\r\n    );\r\n  };\r\n\r\n  const viewportSpecificData = [];\r\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\r\n    // Skip if there is no measurement to jump\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    const study = studyMetadataManager.get(data.StudyInstanceUID);\r\n    if (!study) {\r\n      throw new Error('Study not found.');\r\n    }\r\n\r\n    const displaySet = study.findDisplaySet(displaySet => {\r\n      return displaySetContainsSopInstance(displaySet, data.SOPInstanceUID);\r\n    });\r\n\r\n    if (!displaySet) {\r\n      throw new Error('Display set not found.');\r\n    }\r\n\r\n    displaySet.SOPInstanceUID = data.SOPInstanceUID;\r\n    if (data.frameIndex) {\r\n      displaySet.frameIndex = data.frameIndex;\r\n    }\r\n\r\n    viewportIndex =\r\n      (viewportIndex + viewportsState.activeViewportIndex) % numViewports;\r\n    viewportSpecificData.push({\r\n      viewportIndex,\r\n      displaySet,\r\n    });\r\n  });\r\n\r\n  return {\r\n    viewportSpecificData,\r\n    layout: [], // TODO: if we need to change layout, we should return this here\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { MeasurementTable } from '@ohif/ui';\r\nimport OHIF, { DICOMSR } from '@ohif/core';\r\nimport moment from 'moment';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nimport jumpToRowItem from './jumpToRowItem.js';\r\n\r\nconst { setViewportSpecificData } = OHIF.redux.actions;\r\nconst { MeasurementApi } = OHIF.measurements;\r\n\r\n/**\r\n * Takes a list of objects and a property and return the list grouped by the property\r\n *\r\n * @param {Array} list - The objects to be grouped by\r\n * @param {string} props - The property to group the objects\r\n * @returns {Object}\r\n */\r\nfunction groupBy(list, props) {\r\n  return list.reduce((a, b) => {\r\n    (a[b[props]] = a[b[props]] || []).push(b);\r\n    return a;\r\n  }, {});\r\n}\r\n\r\n/**\r\n *  Takes a list of tools grouped and return all tools separately\r\n *\r\n * @param {Array} [toolGroups=[]] - The grouped tools\r\n * @returns {Array} - The list of all tools on all groups\r\n */\r\nfunction getAllTools(toolGroups = []) {\r\n  let tools = [];\r\n  toolGroups.forEach(toolGroup => (tools = tools.concat(toolGroup.childTools)));\r\n\r\n  return tools;\r\n}\r\n\r\n/**\r\n * Takes measurementData and build the measurement text to be used into the table\r\n *\r\n * @param {Object} [measurementData={}]\r\n * @param {string} measurementData.location - The measurement location\r\n * @param {string} measurementData.description - The measurement description\r\n * @returns {string}\r\n */\r\nfunction getMeasurementText(measurementData = {}) {\r\n  const defaultText = '...';\r\n  const { location = '', description = '' } = measurementData;\r\n  const result = location + (description ? ` (${description})` : '');\r\n\r\n  return result || defaultText;\r\n}\r\n\r\n/**\r\n * Takes a list of measurements grouped by measurement numbers and return each measurement data by available timepoint\r\n *\r\n * @param {Array} measurementNumberList - The list of measurements\r\n * @param {Array} timepoints - The list of available timepoints\r\n * @param {Function} displayFunction - The function that builds the display text by each tool\r\n * @returns\r\n */\r\nfunction getDataForEachMeasurementNumber(\r\n  measurementNumberList,\r\n  timepoints,\r\n  displayFunction\r\n) {\r\n  const data = [];\r\n  // on each measurement number we should get each measurement data by available timepoint\r\n  measurementNumberList.forEach(measurement => {\r\n    timepoints.forEach(timepoint => {\r\n      const eachData = {\r\n        displayText: '...',\r\n      };\r\n      if (measurement.timepointId === timepoint.timepointId) {\r\n        eachData.displayText = displayFunction(measurement);\r\n      }\r\n      data.push(eachData);\r\n    });\r\n  });\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Take a measurement toolName and return if any warnings\r\n *\r\n * @param {string} toolName - The tool name\r\n * @returns {string}\r\n */\r\nfunction getWarningsForMeasurement(toolName) {\r\n  const isToolSupported = DICOMSR.isToolSupported(toolName);\r\n\r\n  return {\r\n    hasWarnings: !isToolSupported,\r\n    warningTitle: isToolSupported ? '' : 'Unsupported Tool',\r\n    warningList: isToolSupported\r\n      ? []\r\n      : [`${toolName} cannot be persisted at this time`],\r\n  };\r\n}\r\n\r\n/**\r\n * Take measurements from MeasurementAPI structure and convert into a measurementTable structure\r\n *\r\n * @param {Object} toolCollections - The list of all measurement grouped by groupTool and toolName\r\n * @param {Array} timepoints - The list of available timepoints\r\n * @returns\r\n */\r\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\r\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\r\n  const toolGroups = config.measurementTools;\r\n  const tools = getAllTools(toolGroups);\r\n\r\n  const tableMeasurements = toolGroups.map(toolGroup => {\r\n    return {\r\n      groupName: toolGroup.name,\r\n      groupId: toolGroup.id,\r\n      measurements: [],\r\n    };\r\n  });\r\n\r\n  Object.keys(toolCollections).forEach(toolId => {\r\n    const toolMeasurements = toolCollections[toolId];\r\n\r\n    const tool = tools.find(tool => tool.id === toolId);\r\n    const { displayFunction } = tool.options.measurementTable;\r\n\r\n    // Group by measurementNumber so we can display then all in the same line\r\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\r\n\r\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\r\n      const measurementNumberList =\r\n        groupedMeasurements[groupedMeasurementsIndex];\r\n\r\n      const measurementData = measurementNumberList[0];\r\n      const {\r\n        measurementNumber,\r\n        lesionNamingNumber,\r\n        toolType,\r\n        isReadOnly,\r\n      } = measurementData;\r\n      const measurementId = measurementData._id;\r\n\r\n      const {\r\n        hasWarnings,\r\n        warningTitle,\r\n        warningList,\r\n      } = getWarningsForMeasurement(toolType);\r\n\r\n      //check if all measurements with same measurementNumber will have same LABEL\r\n      const tableMeasurement = {\r\n        itemNumber: lesionNamingNumber,\r\n        label: getMeasurementText(measurementData),\r\n        labels: measurementData.labels,\r\n        isSRText: measurementData.isSRText,\r\n        measurementId,\r\n        measurementNumber,\r\n        lesionNamingNumber,\r\n        toolType,\r\n        hasWarnings,\r\n        isReadOnly,\r\n        warningTitle,\r\n        warningList,\r\n        isSplitLesion: false, //TODO\r\n        data: getDataForEachMeasurementNumber(\r\n          measurementNumberList,\r\n          timepoints,\r\n          displayFunction\r\n        ),\r\n      };\r\n\r\n      // find the group object for the tool\r\n      const toolGroupMeasurements = tableMeasurements.find(group => {\r\n        return group.groupId === tool.toolGroup;\r\n      });\r\n      // inject the new measurement for this measurementNumer\r\n      toolGroupMeasurements.measurements.push(tableMeasurement);\r\n    });\r\n  });\r\n\r\n  // Sort measurements by lesion naming number\r\n  tableMeasurements.forEach(tm => {\r\n    tm.measurements.sort((m1, m2) =>\r\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\r\n    );\r\n  });\r\n\r\n  return tableMeasurements;\r\n}\r\n\r\n/**\r\n * Take a list of available timepoints and return a list header information for each timepoint\r\n *\r\n * @param {Array} timepoints - The list of available timepoints\r\n * @param {string} timepoints[].latestDate - The date of the last study taken on the timepoint\r\n * @returns {{label: string, key: string, date: string}[]}\r\n */\r\nfunction convertTimepointsToTableData(timepoints) {\r\n  if (!timepoints || !timepoints.length) {\r\n    return [];\r\n  }\r\n\r\n  return [\r\n    {\r\n      label: 'Study date:',\r\n      key: 'StudyDate',\r\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\r\n    },\r\n  ];\r\n}\r\n\r\n/**\r\n *  Takes server type and return a function or undefined\r\n *\r\n * @param {string} serverType - The server type\r\n * @returns {undefined|Function}\r\n */\r\nfunction getSaveFunction(serverType) {\r\n  if (serverType === 'dicomWeb') {\r\n    return () => {\r\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\r\n      const promise = measurementApi.storeMeasurements();\r\n      return promise;\r\n    };\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { timepointManager, servers } = state;\r\n  const { timepoints, measurements } = timepointManager;\r\n  const activeServer = servers.servers.find(a => a.active === true);\r\n  const saveFunction = getSaveFunction(activeServer.type);\r\n\r\n  return {\r\n    timepoints: convertTimepointsToTableData(timepoints),\r\n    measurementCollection: convertMeasurementsToTableData(\r\n      measurements,\r\n      timepoints\r\n    ),\r\n    timepointManager: state.timepointManager,\r\n    viewports: state.viewports,\r\n    saveFunction,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    dispatchRelabel: (event, measurementData, viewportsState) => {\r\n      event.persist();\r\n\r\n      const activeViewportIndex =\r\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\r\n\r\n      const enabledElements = cornerstone.getEnabledElements();\r\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\r\n        OHIF.log.error('Failed to find the enabled element');\r\n        return;\r\n      }\r\n\r\n      const { toolType, measurementId } = measurementData;\r\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\r\n        return measurement._id === measurementId;\r\n      });\r\n\r\n      // Clone the tool not to set empty location initially\r\n      const toolForLocation = Object.assign({}, tool, { location: null });\r\n\r\n      if (ownProps.onRelabel) {\r\n        ownProps.onRelabel(toolForLocation);\r\n      }\r\n    },\r\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\r\n      event.persist();\r\n\r\n      const activeViewportIndex =\r\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\r\n\r\n      const enabledElements = cornerstone.getEnabledElements();\r\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\r\n        OHIF.log.error('Failed to find the enabled element');\r\n        return;\r\n      }\r\n\r\n      const { toolType, measurementId } = measurementData;\r\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\r\n        return measurement._id === measurementId;\r\n      });\r\n\r\n      if (ownProps.onEditDescription) {\r\n        ownProps.onEditDescription(tool);\r\n      }\r\n    },\r\n    dispatchJumpToRowItem: (\r\n      measurementData,\r\n      viewportsState,\r\n      timepointManagerState,\r\n      options\r\n    ) => {\r\n      const actionData = jumpToRowItem(\r\n        measurementData,\r\n        viewportsState,\r\n        timepointManagerState,\r\n        dispatch,\r\n        options\r\n      );\r\n\r\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\r\n        const { viewportIndex, displaySet } = viewportSpecificData;\r\n\r\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\r\n      });\r\n\r\n      const { toolType, measurementNumber } = measurementData;\r\n      const measurementApi = MeasurementApi.Instance;\r\n\r\n      Object.keys(measurementApi.tools).forEach(toolType => {\r\n        const measurements = measurementApi.tools[toolType];\r\n\r\n        measurements.forEach(measurement => {\r\n          measurement.active = false;\r\n        });\r\n      });\r\n\r\n      const measurementsToActive = measurementApi.tools[toolType].filter(\r\n        measurement => {\r\n          return measurement.measurementNumber === measurementNumber;\r\n        }\r\n      );\r\n\r\n      measurementsToActive.forEach(measurementToActive => {\r\n        measurementToActive.active = true;\r\n      });\r\n\r\n      measurementApi.syncMeasurementsAndToolData();\r\n\r\n      cornerstone.getEnabledElements().forEach(enabledElement => {\r\n        if (enabledElement.image) {\r\n          cornerstone.updateImage(enabledElement.element);\r\n        }\r\n      });\r\n\r\n      // Needs to update viewports.layout state to set layout\r\n      //const layout = actionData.layout;\r\n      //dispatch(setLayout(layout))\r\n\r\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\r\n      //const viewportIndex = actionData.viewportIndex;\r\n      //dispatch(setViewportActive(viewportIndex));\r\n\r\n      // Needs to update timepointsManager.measurements state to set active measurementId\r\n      // TODO: Not yet implemented\r\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\r\n\r\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\r\n    },\r\n  };\r\n};\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\r\n  const { timepoints, saveFunction, measurementCollection } = propsFromState;\r\n  const { onSaveComplete, selectedMeasurementNumber } = ownProps;\r\n\r\n  return {\r\n    timepoints,\r\n    saveFunction,\r\n    measurementCollection,\r\n    onSaveComplete,\r\n    selectedMeasurementNumber,\r\n    ...propsFromDispatch,\r\n    onItemClick: (event, measurementData) => {\r\n      // TODO: Add timepointId to .data for measurementData?\r\n      // TODO: Tooltype should be on the level below? This should\r\n      // provide the entire row item?\r\n\r\n      const viewportsState = propsFromState.viewports;\r\n      const timepointManagerState = propsFromState.timepointManager;\r\n\r\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\r\n      // TODO: childToolKey should come from the measurement table when it supports child tools\r\n      const options = {\r\n        invertViewportTimepointsOrder: false,\r\n        childToolKey: null,\r\n      };\r\n\r\n      propsFromDispatch.dispatchJumpToRowItem(\r\n        measurementData,\r\n        viewportsState,\r\n        timepointManagerState,\r\n        options\r\n      );\r\n    },\r\n    onRelabelClick: (event, measurementData) => {\r\n      const viewportsState = propsFromState.viewports;\r\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\r\n    },\r\n    onEditDescriptionClick: (event, measurementData) => {\r\n      const viewportsState = propsFromState.viewports;\r\n      propsFromDispatch.dispatchEditDescription(\r\n        event,\r\n        measurementData,\r\n        viewportsState\r\n      );\r\n    },\r\n    onDeleteClick: (event, measurementData) => {\r\n      const { MeasurementHandlers } = OHIF.measurements;\r\n\r\n      MeasurementHandlers.onRemoved({\r\n        detail: {\r\n          toolType: measurementData.toolType,\r\n          measurementData: {\r\n            _id: measurementData.measurementId,\r\n            lesionNamingNumber: measurementData.lesionNamingNumber,\r\n            measurementNumber: measurementData.measurementNumber,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nconst ConnectedMeasurementTable = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps\r\n)(MeasurementTable);\r\n\r\nexport default ConnectedMeasurementTable;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './LabellingTransition.css';\r\n\r\n// If these variables changes, CSS must be updated\r\nconst transitionDuration = 500;\r\nconst transitionClassName = 'labelling';\r\nconst transitionOnAppear = true;\r\n\r\nexport default class LabellingTransition extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    displayComponent: PropTypes.bool.isRequired,\r\n    onTransitionExit: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    return (\r\n      <CSSTransition\r\n        in={this.props.displayComponent}\r\n        appear={transitionOnAppear}\r\n        timeout={transitionDuration}\r\n        classNames={transitionClassName}\r\n        onExited={this.props.onTransitionExit}\r\n      >\r\n        {this.props.children}\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n","const items = [\r\n  'Abdomen/Chest Wall',\r\n  'Adrenal',\r\n  'Bladder',\r\n  'Bone',\r\n  'Brain',\r\n  'Breast',\r\n  'Colon',\r\n  'Esophagus',\r\n  'Extremities',\r\n  'Gallbladder',\r\n  'Kidney',\r\n  'Liver',\r\n  'Lung',\r\n  'Lymph Node',\r\n  'Mediastinum/Hilum',\r\n  'Muscle',\r\n  'Neck',\r\n  'Other Soft Tissue',\r\n  'Ovary',\r\n  'Pancreas',\r\n  'Pelvis',\r\n  'Peritoneum/Omentum',\r\n  'Prostate',\r\n  'Retroperitoneum',\r\n  'Small Bowel',\r\n  'Spleen',\r\n  'Stomach',\r\n  'Subcutaneous',\r\n];\r\n\r\nconst OHIFLabellingData = items.map(item => {\r\n  return {\r\n    label: item,\r\n    value: item,\r\n  };\r\n});\r\n\r\nexport default OHIFLabellingData;\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SimpleDialog.css';\r\n\r\nclass SimpleDialog extends Component {\r\n  static defaultProps = {\r\n    componentStyle: {},\r\n    rootClass: '',\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`simpleDialog ${this.props.rootClass}`}\r\n        ref={this.props.componentRef}\r\n        style={this.props.componentStyle}\r\n      >\r\n        <form onSubmit={this.props.onConfirm}>\r\n          <div className=\"header\">\r\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\r\n              <span className=\"closeIcon\">x</span>\r\n            </span>\r\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\r\n          </div>\r\n          <div className=\"content\">{this.props.children}</div>\r\n          <div className=\"footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-cancel\"\r\n              onClick={this.props.onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-confirm\"\r\n              onClick={this.props.onConfirm}\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  headerTitle: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\r\nimport './EditDescriptionDialog.css';\r\n\r\nexport default class EditDescriptionDialog extends Component {\r\n  static propTypes = {\r\n    description: PropTypes.string,\r\n    measurementData: PropTypes.object.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      description: props.measurementData.description || '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.description !== prevProps.description) {\r\n      this.setState({\r\n        description: this.props.description,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SimpleDialog\r\n        headerTitle=\"Edit Description\"\r\n        onClose={this.onClose}\r\n        onConfirm={this.onConfirm}\r\n        rootClass=\"editDescriptionDialog\"\r\n      >\r\n        <input\r\n          value={this.state.description}\r\n          className=\"simpleDialogInput\"\r\n          id=\"description\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          onChange={this.handleChange}\r\n        />\r\n      </SimpleDialog>\r\n    );\r\n  }\r\n\r\n  onClose = () => {\r\n    this.props.onCancel();\r\n  };\r\n\r\n  onConfirm = e => {\r\n    e.preventDefault();\r\n    this.props.onUpdate(this.state.description);\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ description: event.target.value });\r\n  };\r\n}\r\n","import { Icon, SelectTree } from '@ohif/ui';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nimport LabellingTransition from './LabellingTransition.js';\r\nimport OHIFLabellingData from './OHIFLabellingData.js';\r\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\r\nimport './LabellingFlow.css';\r\n\r\nconst LabellingFlow = ({\r\n  measurementData,\r\n  editLocation,\r\n  editDescription,\r\n  skipAddLabelButton,\r\n  updateLabelling,\r\n  labellingDoneCallback,\r\n  editDescriptionOnDialog,\r\n}) => {\r\n  const [fadeOutTimer, setFadeOutTimer] = useState();\r\n  const [showComponent, setShowComponent] = useState(true);\r\n  const descriptionInput = useRef();\r\n  const [state, setState] = useState({\r\n    measurementData,\r\n    editLocation,\r\n    editDescription,\r\n    skipAddLabelButton,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newMeasurementData = cloneDeep(measurementData);\r\n\r\n    if (editDescription) {\r\n      newMeasurementData.description = undefined;\r\n    }\r\n\r\n    if (editLocation) {\r\n      newMeasurementData.location = undefined;\r\n    }\r\n\r\n    let newEditLocation = editLocation;\r\n    if (!editDescription && !editLocation) {\r\n      newEditLocation = true;\r\n    }\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      editLocation: newEditLocation,\r\n      measurementData: newMeasurementData,\r\n    }));\r\n  }, [editDescription, editLocation, measurementData]);\r\n\r\n  useEffect(() => {\r\n    if (descriptionInput.current) {\r\n      descriptionInput.current.focus();\r\n    }\r\n  }, [state]);\r\n\r\n  const relabel = event =>\r\n    setState(state => ({ ...state, editLocation: true }));\r\n\r\n  const setDescriptionUpdateMode = () => {\r\n    descriptionInput.current.focus();\r\n    setState(state => ({ ...state, editDescription: true }));\r\n  };\r\n\r\n  const descriptionCancel = () => {\r\n    const { description = '' } = cloneDeep(state);\r\n    descriptionInput.current.value = description;\r\n    setState(state => ({ ...state, editDescription: false }));\r\n  };\r\n\r\n  const handleKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      descriptionSave();\r\n    }\r\n  };\r\n\r\n  const descriptionSave = () => {\r\n    const description = descriptionInput.current.value;\r\n    updateLabelling({ description });\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      description,\r\n      editDescription: false,\r\n    }));\r\n  };\r\n\r\n  const selectTreeSelectCallback = (event, itemSelected) => {\r\n    const location = itemSelected.value;\r\n    const locationLabel = itemSelected.label;\r\n    updateLabelling({ location });\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      editLocation: false,\r\n      measurementData: {\r\n        ...state.measurementData,\r\n        location,\r\n        locationLabel,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const showLabelling = () => {\r\n    setState(state => ({\r\n      ...state,\r\n      skipAddLabelButton: true,\r\n      editLocation: false,\r\n    }));\r\n  };\r\n\r\n  /*\r\n   * Waits for 1 sec to dismiss the labelling component.\r\n   *\r\n   */\r\n  const fadeOutAndLeave = () =>\r\n    setFadeOutTimer(setTimeout(fadeOutAndLeaveFast, 1000));\r\n\r\n  const fadeOutAndLeaveFast = () => setShowComponent(false);\r\n\r\n  const clearFadeOutTimer = () => {\r\n    if (fadeOutTimer) {\r\n      clearTimeout(fadeOutTimer);\r\n      setFadeOutTimer(null);\r\n    }\r\n  };\r\n\r\n  const descriptionDialogUpdate = description => {\r\n    updateLabelling({ description });\r\n    labellingDoneCallback();\r\n  };\r\n\r\n  const labellingStateFragment = () => {\r\n    const { skipAddLabelButton, editLocation, measurementData } = state;\r\n    const { description, locationLabel, location } = measurementData;\r\n\r\n    if (!skipAddLabelButton) {\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"addLabelButton\"\r\n          onClick={showLabelling}\r\n        >\r\n          {location ? 'Edit' : 'Add'} Label\r\n        </button>\r\n      );\r\n    } else {\r\n      if (editLocation) {\r\n        return (\r\n          <SelectTree\r\n            items={OHIFLabellingData}\r\n            columns={1}\r\n            onSelected={selectTreeSelectCallback}\r\n            selectTreeFirstTitle=\"Assign Label\"\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <div className=\"checkIconWrapper\" onClick={fadeOutAndLeaveFast}>\r\n              <Icon name=\"check\" className=\"checkIcon\" />\r\n            </div>\r\n            <div className=\"locationDescriptionWrapper\">\r\n              <div className=\"location\">{locationLabel}</div>\r\n              <div className=\"description\">\r\n                <input\r\n                  id=\"descriptionInput\"\r\n                  ref={descriptionInput}\r\n                  defaultValue={description || ''}\r\n                  autoComplete=\"off\"\r\n                  onKeyPress={handleKeyPress}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"commonButtons\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton left\"\r\n                onClick={relabel}\r\n              >\r\n                Relabel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton right\"\r\n                onClick={setDescriptionUpdateMode}\r\n              >\r\n                {description ? 'Edit ' : 'Add '}\r\n                Description\r\n              </button>\r\n            </div>\r\n            <div className=\"editDescriptionButtons\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton left\"\r\n                onClick={descriptionCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"commonButton right\"\r\n                onClick={descriptionSave}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  if (editDescriptionOnDialog) {\r\n    return (\r\n      <EditDescriptionDialog\r\n        onCancel={labellingDoneCallback}\r\n        onUpdate={descriptionDialogUpdate}\r\n        measurementData={state.measurementData}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <LabellingTransition\r\n      displayComponent={showComponent}\r\n      onTransitionExit={labellingDoneCallback}\r\n    >\r\n      <>\r\n        <div\r\n          className={`labellingComponent ${state.editDescription &&\r\n            'editDescription'}`}\r\n          onMouseLeave={fadeOutAndLeave}\r\n          onMouseEnter={clearFadeOutTimer}\r\n        >\r\n          {labellingStateFragment()}\r\n        </div>\r\n      </>\r\n    </LabellingTransition>\r\n  );\r\n};\r\n\r\nLabellingFlow.propTypes = {\r\n  measurementData: PropTypes.object.isRequired,\r\n  labellingDoneCallback: PropTypes.func.isRequired,\r\n  updateLabelling: PropTypes.func.isRequired,\r\n  initialTopDistance: PropTypes.number,\r\n  skipAddLabelButton: PropTypes.bool,\r\n  editLocation: PropTypes.bool,\r\n  editDescription: PropTypes.bool,\r\n  editDescriptionOnDialog: PropTypes.bool,\r\n};\r\n\r\nLabellingFlow.defaultProps = {\r\n  skipAddLabelButton: false,\r\n  editLocation: false,\r\n  editDescription: false,\r\n  editDescriptionOnDialog: false,\r\n};\r\n\r\nexport default LabellingFlow;\r\n","import { ContextMenu } from '@ohif/ui';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { commandsManager } from './../App.js';\r\n\r\nconst toolTypes = [\r\n  'Angle',\r\n  'Bidirectional',\r\n  'Length',\r\n  'FreehandMouse',\r\n  'EllipticalRoi',\r\n  'CircleRoi',\r\n  'RectangleRoi',\r\n];\r\n\r\nconst ToolContextMenu = ({\r\n  onSetLabel,\r\n  onSetDescription,\r\n  isTouchEvent,\r\n  eventData,\r\n  onClose,\r\n  onDelete,\r\n}) => {\r\n  const defaultDropdownItems = [\r\n    {\r\n      label: 'Delete measurement',\r\n      actionType: 'Delete',\r\n      action: ({ nearbyToolData, eventData }) =>\r\n        onDelete(nearbyToolData, eventData),\r\n    },\r\n    {\r\n      label: 'Relabel',\r\n      actionType: 'setLabel',\r\n      action: ({ nearbyToolData, eventData }) => {\r\n        const { tool: measurementData } = nearbyToolData;\r\n        onSetLabel(eventData, measurementData);\r\n      },\r\n    },\r\n    {\r\n      actionType: 'setDescription',\r\n      action: ({ nearbyToolData, eventData }) => {\r\n        const { tool: measurementData } = nearbyToolData;\r\n        onSetDescription(eventData, measurementData);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const getDropdownItems = (eventData, isTouchEvent = false) => {\r\n    const nearbyToolData = commandsManager.runCommand('getNearbyToolData', {\r\n      element: eventData.element,\r\n      canvasCoordinates: eventData.currentPoints.canvas,\r\n      availableToolTypes: toolTypes,\r\n    });\r\n\r\n    /*\r\n     * Annotate tools for touch events already have a press handle to edit it,\r\n     * has a better UX for deleting it.\r\n     */\r\n    if (\r\n      isTouchEvent &&\r\n      nearbyToolData &&\r\n      nearbyToolData.toolType === 'arrowAnnotate'\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let dropdownItems = [];\r\n    if (nearbyToolData) {\r\n      defaultDropdownItems.forEach(item => {\r\n        item.params = { eventData, nearbyToolData };\r\n\r\n        if (item.actionType === 'setDescription') {\r\n          item.label = `${\r\n            nearbyToolData.tool.description ? 'Edit' : 'Add'\r\n          } Description`;\r\n        }\r\n\r\n        dropdownItems.push(item);\r\n      });\r\n    }\r\n\r\n    return dropdownItems;\r\n  };\r\n\r\n  const onClickHandler = ({ action, params }) => {\r\n    action(params);\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const dropdownItems = getDropdownItems(eventData, isTouchEvent);\r\n\r\n  return (\r\n    <div className=\"ToolContextMenu\">\r\n      <ContextMenu items={dropdownItems} onClick={onClickHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nToolContextMenu.propTypes = {\r\n  isTouchEvent: PropTypes.bool.isRequired,\r\n  eventData: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n  onSetDescription: PropTypes.func,\r\n  onSetLabel: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nToolContextMenu.defaultProps = {\r\n  isTouchEvent: false,\r\n};\r\n\r\nexport default ToolContextMenu;\r\n","import OHIF from '@ohif/core';\r\nimport cornerstone from 'cornerstone-core';\r\nimport csTools from 'cornerstone-tools';\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\r\nimport ToolContextMenu from '../../connectedComponents/ToolContextMenu';\r\n\r\nconst {\r\n  onAdded,\r\n  onRemoved,\r\n  onModified,\r\n} = OHIF.measurements.MeasurementHandlers;\r\n\r\nconst MEASUREMENT_ACTION_MAP = {\r\n  added: onAdded,\r\n  removed: onRemoved,\r\n  modified: throttle(event => {\r\n    return onModified(event);\r\n  }, 300),\r\n};\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {Object} servicesManager\r\n * @param {Object} configuration\r\n */\r\nexport default function init({\r\n  servicesManager,\r\n  commandsManager,\r\n  configuration,\r\n}) {\r\n  const { UIDialogService } = servicesManager.services;\r\n\r\n  // TODO: MEASUREMENT_COMPLETED (not present in initial implementation)\r\n  const onMeasurementsChanged = (action, event) => {\r\n    return MEASUREMENT_ACTION_MAP[action](event);\r\n  };\r\n  const onMeasurementAdded = onMeasurementsChanged.bind(this, 'added');\r\n  const onMeasurementRemoved = onMeasurementsChanged.bind(this, 'removed');\r\n  const onMeasurementModified = onMeasurementsChanged.bind(this, 'modified');\r\n  const onLabelmapModified = onMeasurementsChanged.bind(\r\n    this,\r\n    'labelmapModified'\r\n  );\r\n\r\n  const _getDefaultPosition = event => ({\r\n    x: (event && event.currentPoints.client.x) || 0,\r\n    y: (event && event.currentPoints.client.y) || 0,\r\n  });\r\n\r\n  const _updateLabellingHandler = (labellingData, measurementData) => {\r\n    const { location, description, response } = labellingData;\r\n\r\n    if (location) {\r\n      measurementData.location = location;\r\n    }\r\n\r\n    measurementData.description = description || '';\r\n\r\n    if (response) {\r\n      measurementData.response = response;\r\n    }\r\n\r\n    commandsManager.runCommand(\r\n      'updateTableWithNewMeasurementData',\r\n      measurementData\r\n    );\r\n  };\r\n\r\n  const showLabellingDialog = (props, contentProps, measurementData) => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.create({\r\n      id: 'labelling',\r\n      isDraggable: false,\r\n      showOverlay: true,\r\n      centralize: true,\r\n      content: LabellingFlow,\r\n      contentProps: {\r\n        measurementData,\r\n        labellingDoneCallback: () =>\r\n          UIDialogService.dismiss({ id: 'labelling' }),\r\n        updateLabelling: labellingData =>\r\n          _updateLabellingHandler(labellingData, measurementData),\r\n        ...contentProps,\r\n      },\r\n      ...props,\r\n    });\r\n  };\r\n\r\n  const onRightClick = event => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.dismiss({ id: 'context-menu' });\r\n    UIDialogService.create({\r\n      id: 'context-menu',\r\n      isDraggable: false,\r\n      preservePosition: false,\r\n      defaultPosition: _getDefaultPosition(event.detail),\r\n      content: ToolContextMenu,\r\n      contentProps: {\r\n        eventData: event.detail,\r\n        onDelete: (nearbyToolData, eventData) => {\r\n          const element = eventData.element;\r\n          commandsManager.runCommand('removeToolState', {\r\n            element,\r\n            toolType: nearbyToolData.toolType,\r\n            tool: nearbyToolData.tool,\r\n          });\r\n        },\r\n        onClose: () => UIDialogService.dismiss({ id: 'context-menu' }),\r\n        onSetLabel: (eventData, measurementData) => {\r\n          showLabellingDialog(\r\n            { centralize: true, isDraggable: false },\r\n            { skipAddLabelButton: true, editLocation: true },\r\n            measurementData\r\n          );\r\n        },\r\n        onSetDescription: (eventData, measurementData) => {\r\n          showLabellingDialog(\r\n            { defaultPosition: _getDefaultPosition(eventData) },\r\n            { editDescriptionOnDialog: true },\r\n            measurementData\r\n          );\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const onTouchPress = event => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.create({\r\n      eventData: event.detail,\r\n      content: ToolContextMenu,\r\n      contentProps: {\r\n        isTouchEvent: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onTouchStart = () => resetLabelligAndContextMenu();\r\n\r\n  const onMouseClick = () => resetLabelligAndContextMenu();\r\n\r\n  const resetLabelligAndContextMenu = () => {\r\n    if (!UIDialogService) {\r\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n      return;\r\n    }\r\n\r\n    UIDialogService.dismiss({ id: 'context-menu' });\r\n    UIDialogService.dismiss({ id: 'labelling' });\r\n  };\r\n\r\n  // TODO: This makes scrolling painfully slow\r\n  // const onNewImage = ...\r\n\r\n  /*\r\n   * Because click gives us the native \"mouse up\", buttons will always be `0`\r\n   * Need to fallback to event.which;\r\n   *\r\n   */\r\n  const handleClick = cornerstoneMouseClickEvent => {\r\n    const mouseUpEvent = cornerstoneMouseClickEvent.detail.event;\r\n    const isRightClick = mouseUpEvent.which === 3;\r\n\r\n    if (isRightClick) {\r\n      onRightClick(cornerstoneMouseClickEvent);\r\n    } else {\r\n      onMouseClick(cornerstoneMouseClickEvent);\r\n    }\r\n  };\r\n\r\n  function elementEnabledHandler(evt) {\r\n    const element = evt.detail.element;\r\n\r\n    element.addEventListener(\r\n      csTools.EVENTS.MEASUREMENT_ADDED,\r\n      onMeasurementAdded\r\n    );\r\n    element.addEventListener(\r\n      csTools.EVENTS.MEASUREMENT_REMOVED,\r\n      onMeasurementRemoved\r\n    );\r\n    element.addEventListener(\r\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\r\n      onMeasurementModified\r\n    );\r\n    element.addEventListener(\r\n      csTools.EVENTS.LABELMAP_MODIFIED,\r\n      onLabelmapModified\r\n    );\r\n\r\n    element.addEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\r\n    element.addEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\r\n    element.addEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\r\n\r\n    // TODO: This makes scrolling painfully slow\r\n    // element.addEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\r\n  }\r\n\r\n  function elementDisabledHandler(evt) {\r\n    const element = evt.detail.element;\r\n\r\n    element.removeEventListener(\r\n      csTools.EVENTS.MEASUREMENT_ADDED,\r\n      onMeasurementAdded\r\n    );\r\n    element.removeEventListener(\r\n      csTools.EVENTS.MEASUREMENT_REMOVED,\r\n      onMeasurementRemoved\r\n    );\r\n    element.removeEventListener(\r\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\r\n      onMeasurementModified\r\n    );\r\n    element.removeEventListener(\r\n      csTools.EVENTS.LABELMAP_MODIFIED,\r\n      onLabelmapModified\r\n    );\r\n\r\n    element.removeEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\r\n    element.removeEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\r\n    element.removeEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\r\n\r\n    // TODO: This makes scrolling painfully slow\r\n    // element.removeEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\r\n  }\r\n\r\n  cornerstone.events.addEventListener(\r\n    cornerstone.EVENTS.ELEMENT_ENABLED,\r\n    elementEnabledHandler\r\n  );\r\n  cornerstone.events.addEventListener(\r\n    cornerstone.EVENTS.ELEMENT_DISABLED,\r\n    elementDisabledHandler\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable.js';\r\nimport init from './init.js';\r\n\r\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'measurements-table',\r\n  get version() {\r\n    return window.version;\r\n  },\r\n\r\n  preRegistration({ servicesManager, commandsManager, configuration = {} }) {\r\n    init({ servicesManager, commandsManager, configuration });\r\n  },\r\n\r\n  getPanelModule({ servicesManager, commandsManager }) {\r\n    const { UINotificationService, UIDialogService } = servicesManager.services;\r\n\r\n    const showLabellingDialog = (props, measurementData) => {\r\n      if (!UIDialogService) {\r\n        console.warn('Unable to show dialog; no UI Dialog Service available.');\r\n        return;\r\n      }\r\n\r\n      UIDialogService.dismiss({ id: 'labelling' });\r\n      UIDialogService.create({\r\n        id: 'labelling',\r\n        centralize: true,\r\n        isDraggable: false,\r\n        showOverlay: true,\r\n        content: LabellingFlow,\r\n        contentProps: {\r\n          measurementData,\r\n          labellingDoneCallback: () =>\r\n            UIDialogService.dismiss({ id: 'labelling' }),\r\n          updateLabelling: ({ location, description, response }) => {\r\n            measurementData.location = location || measurementData.location;\r\n            measurementData.description = description || '';\r\n            measurementData.response = response || measurementData.response;\r\n\r\n            commandsManager.runCommand(\r\n              'updateTableWithNewMeasurementData',\r\n              measurementData\r\n            );\r\n          },\r\n          ...props,\r\n        },\r\n      });\r\n    };\r\n\r\n    const ExtendedConnectedMeasurementTable = () => (\r\n      <ConnectedMeasurementTable\r\n        onRelabel={tool =>\r\n          showLabellingDialog(\r\n            { editLocation: true, skipAddLabelButton: true },\r\n            tool\r\n          )\r\n        }\r\n        onEditDescription={tool =>\r\n          showLabellingDialog({ editDescriptionOnDialog: true }, tool)\r\n        }\r\n        onSaveComplete={message => {\r\n          if (UINotificationService) {\r\n            UINotificationService.show(message);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n    return {\r\n      menuOptions: [\r\n        {\r\n          icon: 'list',\r\n          label: 'Measurements',\r\n          target: 'measurement-panel',\r\n        },\r\n      ],\r\n      components: [\r\n        {\r\n          id: 'measurement-panel',\r\n          component: ExtendedConnectedMeasurementTable,\r\n        },\r\n      ],\r\n      defaultContext: ['VIEWER'],\r\n    };\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst Bar = ({ progress, animationDuration }) => (\r\n  <div\r\n    style={{\r\n      background: '#29d',\r\n      height: 2,\r\n      left: 0,\r\n      marginLeft: `${(-1 + progress) * 100}%`,\r\n      position: 'fixed',\r\n      top: 0,\r\n      transition: `margin-left ${animationDuration}ms linear`,\r\n      width: '100%',\r\n      zIndex: 1031,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\r\n        display: 'block',\r\n        height: '100%',\r\n        opacity: 1,\r\n        position: 'absolute',\r\n        right: 0,\r\n        transform: 'rotate(3deg) translate(0px, -4px)',\r\n        width: 100,\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Bar;\r\n","import React from 'react';\r\n\r\nconst Container = ({ children, isFinished, animationDuration }) => (\r\n  <div\r\n    style={{\r\n      opacity: isFinished ? 0 : 1,\r\n      pointerEvents: 'none',\r\n      transition: `opacity ${animationDuration}ms linear`,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter, matchPath } from 'react-router';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { NProgress } from '@tanem/react-nprogress';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { ViewerbaseDragDropContext, ErrorBoundary, asyncComponent, retryImport } from '@ohif/ui';\r\nimport { SignoutCallbackComponent } from 'redux-oidc';\r\nimport * as RoutesUtil from './routes/routesUtil';\r\n\r\nimport NotFound from './routes/NotFound.js';\r\nimport { Bar, Container } from './components/LoadingBar/';\r\nimport './OHIFStandaloneViewer.css';\r\nimport './variables.css';\r\nimport './theme-tide.css';\r\n// Contexts\r\nimport AppContext from './context/AppContext';\r\nconst CallbackPage = asyncComponent(() =>\r\n  retryImport(() => import(/* webpackChunkName: \"CallbackPage\" */ './routes/CallbackPage.js'))\r\n);\r\n\r\nclass OHIFStandaloneViewer extends Component {\r\n  static contextType = AppContext;\r\n  state = {\r\n    isLoading: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    user: PropTypes.object,\r\n    setContext: PropTypes.func,\r\n    userManager: PropTypes.object,\r\n    location: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unlisten = this.props.history.listen((location, action) => {\r\n      if (this.props.setContext) {\r\n        this.props.setContext(window.location.pathname);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n\r\n  render() {\r\n    const { user, userManager } = this.props;\r\n    const { appConfig = {} } = this.context;\r\n    const userNotLoggedIn = userManager && (!user || user.expired);\r\n    if (userNotLoggedIn) {\r\n      const { pathname, search } = this.props.location;\r\n\r\n      if (pathname !== '/callback') {\r\n        sessionStorage.setItem(\r\n          'ohif-redirect-to',\r\n          JSON.stringify({ pathname, search })\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/silent-refresh.html\"\r\n            onEnter={RoutesUtil.reload}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/logout-redirect\"\r\n            render={() => (\r\n              <SignoutCallbackComponent\r\n                userManager={userManager}\r\n                successCallback={() => console.log('Signout successful')}\r\n                errorCallback={error => {\r\n                  console.warn(error);\r\n                  console.warn('Signout failed');\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/callback\"\r\n            render={() => <CallbackPage userManager={userManager} />}\r\n          />\r\n          <Route\r\n            path=\"/login\"\r\n            component={() => {\r\n              const queryParams = new URLSearchParams(\r\n                this.props.location.search\r\n              );\r\n              const iss = queryParams.get('iss');\r\n              const loginHint = queryParams.get('login_hint');\r\n              const targetLinkUri = queryParams.get('target_link_uri');\r\n              const oidcAuthority =\r\n                appConfig.oidc !== null && appConfig.oidc[0].authority;\r\n              if (iss !== oidcAuthority) {\r\n                console.error(\r\n                  'iss of /login does not match the oidc authority'\r\n                );\r\n                return null;\r\n              }\r\n\r\n              userManager.removeUser().then(() => {\r\n                if (targetLinkUri !== null) {\r\n                  const ohifRedirectTo = {\r\n                    pathname: new URL(targetLinkUri).pathname,\r\n                  };\r\n                  sessionStorage.setItem(\r\n                    'ohif-redirect-to',\r\n                    JSON.stringify(ohifRedirectTo)\r\n                  );\r\n                } else {\r\n                  const ohifRedirectTo = {\r\n                    pathname: '/',\r\n                  };\r\n                  sessionStorage.setItem(\r\n                    'ohif-redirect-to',\r\n                    JSON.stringify(ohifRedirectTo)\r\n                  );\r\n                }\r\n\r\n                if (loginHint !== null) {\r\n                  userManager.signinRedirect({ login_hint: loginHint });\r\n                } else {\r\n                  userManager.signinRedirect();\r\n                }\r\n              });\r\n\r\n              return null;\r\n            }}\r\n          />\r\n          <Route\r\n            component={() => {\r\n              userManager.getUser().then(user => {\r\n                if (user) {\r\n                  userManager.signinSilent();\r\n                } else {\r\n                  userManager.signinRedirect();\r\n                }\r\n              });\r\n\r\n              return null;\r\n            }}\r\n          />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Note: this approach for routing is caused by the conflict between\r\n     * react-transition-group and react-router's <Switch> component.\r\n     *\r\n     * See http://reactcommunity.org/react-transition-group/with-react-router/\r\n     */\r\n    const routes = RoutesUtil.getRoutes(appConfig);\r\n\r\n    const currentPath = this.props.location.pathname;\r\n    const noMatchingRoutes = !routes.find(r =>\r\n      matchPath(currentPath, {\r\n        path: r.path,\r\n        exact: true,\r\n      })\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <NProgress isAnimating={this.state.isLoading}>\r\n          {({ isFinished, progress, animationDuration }) => (\r\n            <Container\r\n              isFinished={isFinished}\r\n              animationDuration={animationDuration}\r\n            >\r\n              <Bar progress={progress} animationDuration={animationDuration} />\r\n            </Container>\r\n          )}\r\n        </NProgress>\r\n        <Route exact path=\"/silent-refresh.html\" onEnter={RoutesUtil.reload} />\r\n        <Route exact path=\"/logout-redirect.html\" onEnter={RoutesUtil.reload} />\r\n        {!noMatchingRoutes &&\r\n          routes.map(({ path, Component }) => (\r\n            <Route key={path} exact path={path}>\r\n              {({ match }) => (\r\n                <CSSTransition\r\n                  in={match !== null}\r\n                  timeout={300}\r\n                  classNames=\"fade\"\r\n                  unmountOnExit\r\n                  onEnter={() => {\r\n                    this.setState({\r\n                      isLoading: true,\r\n                    });\r\n                  }}\r\n                  onEntered={() => {\r\n                    this.setState({\r\n                      isLoading: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  {match === null ? (\r\n                    <></>\r\n                  ) : (\r\n                      <ErrorBoundary context={match.url}>\r\n                        <Component match={match} location={this.props.location} />\r\n                      </ErrorBoundary>\r\n                    )}\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          ))}\r\n        {noMatchingRoutes && <NotFound />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.oidc.user,\r\n  };\r\n};\r\n\r\nconst ConnectedOHIFStandaloneViewer = connect(\r\n  mapStateToProps,\r\n  null\r\n)(OHIFStandaloneViewer);\r\n\r\nexport default ViewerbaseDragDropContext(\r\n  withRouter(ConnectedOHIFStandaloneViewer)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { OidcProvider } from 'redux-oidc';\r\nimport { I18nextProvider } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { hot } from 'react-hot-loader/root';\r\n\r\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\r\n\r\nimport {\r\n  SnackbarProvider,\r\n  ModalProvider,\r\n  DialogProvider,\r\n  OHIFModal,\r\n  LoggerProvider,\r\n  ErrorBoundary,\r\n} from '@ohif/ui';\r\n\r\nimport {\r\n  CommandsManager,\r\n  ExtensionManager,\r\n  ServicesManager,\r\n  HotkeysManager,\r\n  UINotificationService,\r\n  UIModalService,\r\n  UIDialogService,\r\n  LoggerService,\r\n  MeasurementService,\r\n  utils,\r\n  redux as reduxOHIF,\r\n} from '@ohif/core';\r\n\r\nimport i18n from '@ohif/i18n';\r\n\r\n// TODO: This should not be here\r\n//import './config';\r\nimport { setConfiguration } from './config';\r\n\r\n/** Utils */\r\nimport {\r\n  getUserManagerForOpenIdConnectClient,\r\n  initWebWorkers,\r\n} from './utils/index.js';\r\n\r\n/** Extensions */\r\nimport { GenericViewerCommands, MeasurementsPanel } from './appExtensions';\r\n\r\n/** Viewer */\r\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\r\n\r\n/** Store */\r\nimport { getActiveContexts } from './store/layout/selectors.js';\r\nimport store from './store';\r\n\r\n/** Contexts */\r\nimport WhiteLabelingContext from './context/WhiteLabelingContext';\r\nimport UserManagerContext from './context/UserManagerContext';\r\nimport { AppProvider, useAppContext, CONTEXTS } from './context/AppContext';\r\n\r\n/** ~~~~~~~~~~~~~ Application Setup */\r\nconst commandsManagerConfig = {\r\n  getAppState: () => store.getState(),\r\n  getActiveContexts: () => getActiveContexts(store.getState()),\r\n};\r\n\r\n/** Managers */\r\nconst commandsManager = new CommandsManager(commandsManagerConfig);\r\nconst servicesManager = new ServicesManager();\r\nconst hotkeysManager = new HotkeysManager(commandsManager, servicesManager);\r\nlet extensionManager;\r\n/** ~~~~~~~~~~~~~ End Application Setup */\r\n\r\n// TODO[react] Use a provider when the whole tree is React\r\nwindow.store = store;\r\n\r\nwindow.ohif = window.ohif || {};\r\nwindow.ohif.app = {\r\n  commandsManager,\r\n  hotkeysManager,\r\n  servicesManager,\r\n  extensionManager,\r\n};\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    config: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({\r\n        routerBasename: PropTypes.string.isRequired,\r\n        oidc: PropTypes.array,\r\n        whiteLabeling: PropTypes.shape({\r\n          createLogoComponentFn: PropTypes.func,\r\n        }),\r\n        extensions: PropTypes.array,\r\n      }),\r\n    ]).isRequired,\r\n    defaultExtensions: PropTypes.array,\r\n  };\r\n\r\n  static defaultProps = {\r\n    config: {\r\n      showStudyList: true,\r\n      oidc: [],\r\n      extensions: [],\r\n    },\r\n    defaultExtensions: [],\r\n  };\r\n\r\n  _appConfig;\r\n  _userManager;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { config, defaultExtensions } = props;\r\n\r\n    const appDefaultConfig = {\r\n      showStudyList: true,\r\n      cornerstoneExtensionConfig: {},\r\n      extensions: [],\r\n      routerBasename: '/',\r\n    };\r\n\r\n    this._appConfig = {\r\n      ...appDefaultConfig,\r\n      ...(typeof config === 'function' ? config({ servicesManager }) : config),\r\n    };\r\n\r\n    const {\r\n      servers,\r\n      hotkeys: appConfigHotkeys,\r\n      cornerstoneExtensionConfig,\r\n      extensions,\r\n      oidc,\r\n    } = this._appConfig;\r\n\r\n    setConfiguration(this._appConfig);\r\n\r\n    this.initUserManager(oidc);\r\n    _initServices([\r\n      UINotificationService,\r\n      UIModalService,\r\n      UIDialogService,\r\n      MeasurementService,\r\n      LoggerService,\r\n    ]);\r\n    _initExtensions(\r\n      [...defaultExtensions, ...extensions],\r\n      cornerstoneExtensionConfig,\r\n      this._appConfig\r\n    );\r\n\r\n    /*\r\n     * Must run after extension commands are registered\r\n     * if there is no hotkeys from localStorage set up from config.\r\n     */\r\n    _initHotkeys(appConfigHotkeys);\r\n    _initServers(servers);\r\n    initWebWorkers();\r\n  }\r\n\r\n  render() {\r\n    const { whiteLabeling, routerBasename } = this._appConfig;\r\n    const {\r\n      UINotificationService,\r\n      UIDialogService,\r\n      UIModalService,\r\n      MeasurementService,\r\n      LoggerService,\r\n    } = servicesManager.services;\r\n\r\n    if (this._userManager) {\r\n      return (\r\n        <ErrorBoundary context=\"App\">\r\n          <Provider store={store}>\r\n            <AppProvider config={this._appConfig}>\r\n              <I18nextProvider i18n={i18n}>\r\n                <OidcProvider store={store} userManager={this._userManager}>\r\n                  <UserManagerContext.Provider value={this._userManager}>\r\n                    <Router basename={routerBasename}>\r\n                      <WhiteLabelingContext.Provider value={whiteLabeling}>\r\n                        <LoggerProvider service={LoggerService}>\r\n                          <SnackbarProvider service={UINotificationService}>\r\n                            <DialogProvider service={UIDialogService}>\r\n                              <ModalProvider\r\n                                modal={OHIFModal}\r\n                                service={UIModalService}\r\n                              >\r\n                                <OHIFStandaloneViewer\r\n                                  userManager={this._userManager}\r\n                                />\r\n                              </ModalProvider>\r\n                            </DialogProvider>\r\n                          </SnackbarProvider>\r\n                        </LoggerProvider>\r\n                      </WhiteLabelingContext.Provider>\r\n                    </Router>\r\n                  </UserManagerContext.Provider>\r\n                </OidcProvider>\r\n              </I18nextProvider>\r\n            </AppProvider>\r\n          </Provider>\r\n        </ErrorBoundary>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ErrorBoundary context=\"App\">\r\n        <Provider store={store}>\r\n          <AppProvider config={this._appConfig}>\r\n            <I18nextProvider i18n={i18n}>\r\n              <Router basename={routerBasename}>\r\n                <WhiteLabelingContext.Provider value={whiteLabeling}>\r\n                  <LoggerProvider service={LoggerService}>\r\n                    <SnackbarProvider service={UINotificationService}>\r\n                      <DialogProvider service={UIDialogService}>\r\n                        <ModalProvider\r\n                          modal={OHIFModal}\r\n                          service={UIModalService}\r\n                        >\r\n                          <OHIFStandaloneViewer />\r\n                        </ModalProvider>\r\n                      </DialogProvider>\r\n                    </SnackbarProvider>\r\n                  </LoggerProvider>\r\n                </WhiteLabelingContext.Provider>\r\n              </Router>\r\n            </I18nextProvider>\r\n          </AppProvider>\r\n        </Provider>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n  initUserManager(oidc) {\r\n    if (oidc && !!oidc.length) {\r\n      const firstOpenIdClient = this._appConfig.oidc[0];\r\n\r\n      const { protocol, host } = window.location;\r\n      const { routerBasename } = this._appConfig;\r\n      const baseUri = `${protocol}//${host}${routerBasename}`;\r\n\r\n      const redirect_uri = firstOpenIdClient.redirect_uri || '/callback';\r\n      const silent_redirect_uri =\r\n        firstOpenIdClient.silent_redirect_uri || '/silent-refresh.html';\r\n      const post_logout_redirect_uri =\r\n        firstOpenIdClient.post_logout_redirect_uri || '/';\r\n\r\n      const openIdConnectConfiguration = Object.assign({}, firstOpenIdClient, {\r\n        redirect_uri: _makeAbsoluteIfNecessary(redirect_uri, baseUri),\r\n        silent_redirect_uri: _makeAbsoluteIfNecessary(\r\n          silent_redirect_uri,\r\n          baseUri\r\n        ),\r\n        post_logout_redirect_uri: _makeAbsoluteIfNecessary(\r\n          post_logout_redirect_uri,\r\n          baseUri\r\n        ),\r\n      });\r\n\r\n      this._userManager = getUserManagerForOpenIdConnectClient(\r\n        store,\r\n        openIdConnectConfiguration\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction _initServices(services) {\r\n  servicesManager.registerServices(services);\r\n}\r\n\r\n/**\r\n * @param\r\n */\r\nfunction _initExtensions(extensions, cornerstoneExtensionConfig, appConfig) {\r\n  extensionManager = new ExtensionManager({\r\n    commandsManager,\r\n    servicesManager,\r\n    appConfig,\r\n    api: {\r\n      contexts: CONTEXTS,\r\n      hooks: {\r\n        useAppContext,\r\n      },\r\n    },\r\n  });\r\n\r\n  const requiredExtensions = [\r\n    GenericViewerCommands,\r\n    [OHIFCornerstoneExtension, cornerstoneExtensionConfig],\r\n  ];\r\n\r\n  if (appConfig.disableMeasurementPanel !== true) {\r\n    /* WARNING: MUST BE REGISTERED _AFTER_ OHIFCornerstoneExtension */\r\n    requiredExtensions.push(MeasurementsPanel);\r\n  }\r\n\r\n  const mergedExtensions = requiredExtensions.concat(extensions);\r\n  extensionManager.registerExtensions(mergedExtensions);\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object} appConfigHotkeys - Default hotkeys, as defined by app config\r\n */\r\nfunction _initHotkeys(appConfigHotkeys) {\r\n  // TODO: Use something more resilient\r\n  // TODO: Mozilla has a special library for this\r\n  const userPreferredHotkeys = JSON.parse(\r\n    localStorage.getItem('hotkey-definitions') || '{}'\r\n  );\r\n\r\n  // TODO: hotkeysManager.isValidDefinitionObject(/* */)\r\n  const hasUserPreferences =\r\n    userPreferredHotkeys && Object.keys(userPreferredHotkeys).length > 0;\r\n  if (hasUserPreferences) {\r\n    hotkeysManager.setHotkeys(userPreferredHotkeys);\r\n  } else {\r\n    hotkeysManager.setHotkeys(appConfigHotkeys);\r\n  }\r\n\r\n  hotkeysManager.setDefaultHotKeys(appConfigHotkeys);\r\n}\r\n\r\nfunction _initServers(servers) {\r\n  if (servers) {\r\n    utils.addServers(servers, store);\r\n  }\r\n}\r\n\r\nfunction _isAbsoluteUrl(url) {\r\n  return url.includes('http://') || url.includes('https://');\r\n}\r\n\r\nfunction _makeAbsoluteIfNecessary(url, base_url) {\r\n  if (_isAbsoluteUrl(url)) {\r\n    return url;\r\n  }\r\n\r\n  /*\r\n   * Make sure base_url and url are not duplicating slashes.\r\n   */\r\n  if (base_url[base_url.length - 1] === '/') {\r\n    base_url = base_url.slice(0, base_url.length - 1);\r\n  }\r\n\r\n  return base_url + url;\r\n}\r\n\r\n/*\r\n * Only wrap/use hot if in dev.\r\n */\r\nconst ExportedApp = process.env.NODE_ENV === 'development' ? hot(App) : App;\r\n\r\nexport default ExportedApp;\r\nexport { commandsManager, extensionManager, hotkeysManager, servicesManager };\r\n","import OHIF from '@ohif/core';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport dicomParser from 'dicom-parser';\r\nimport version from './version.js';\r\nimport AppContext from './context/AppContext';\r\n\r\nexport function setConfiguration(appConfig) {\r\n  let homepage;\r\n  const { process } = window;\r\n  if (process && process.env && process.env.PUBLIC_URL) {\r\n    homepage = process.env.PUBLIC_URL;\r\n  }\r\n\r\n  window.info = {\r\n    version,\r\n    homepage,\r\n  };\r\n\r\n  // For debugging\r\n  //if (process.env.node_env === 'development') {\r\n  window.cornerstone = cornerstone;\r\n  window.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\r\n  //}\r\n\r\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\r\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\r\n\r\n  OHIF.user.getAccessToken = () => {\r\n    // TODO: Get the Redux store from somewhere else\r\n    const state = window.store.getState();\r\n    if (!state.oidc || !state.oidc.user) {\r\n      return;\r\n    }\r\n\r\n    return state.oidc.user.access_token;\r\n  };\r\n\r\n  OHIF.errorHandler.getHTTPErrorHandler = () => {\r\n    // const { appConfig = {} } = AppContext;\r\n\r\n    return appConfig.httpErrorHandler;\r\n  };\r\n\r\n  cornerstoneWADOImageLoader.configure({\r\n    beforeSend: function(xhr) {\r\n      const headers = OHIF.DICOMWeb.getAuthorizationHeader();\r\n\r\n      if (headers.Authorization) {\r\n        xhr.setRequestHeader('Authorization', headers.Authorization);\r\n      }\r\n    },\r\n    errorInterceptor: error => {\r\n      // const { appConfig = {} } = AppContext;\r\n\r\n      if (typeof appConfig.httpErrorHandler === 'function') {\r\n        appConfig.httpErrorHandler(error);\r\n      }\r\n    },\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './NotFound.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppContext } from '../context/AppContext';\r\n\r\nexport default function NotFound({ message = 'Sorry, this page does not exist.', showGoBackButton = true }) {\r\n  \r\n  const context = useAppContext();\r\n  \r\n  return (\r\n    <div className={'not-found'}>\r\n      <div>\r\n        <h4>{message}</h4>\r\n        {showGoBackButton && context.appConfig.showStudyList && (\r\n          <h5>\r\n            <Link to={'/'}>Go back to the Study List</Link>\r\n          </h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Thumbnail } from './Thumbnail.js';\r\nimport './StudyBrowser.styl';\r\n\r\nfunction StudyBrowser(props) {\r\n  const {\r\n    studies,\r\n    onThumbnailClick,\r\n    onThumbnailDoubleClick,\r\n    supportsDrag,\r\n    showThumbnailProgressBar,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"study-browser\">\r\n      <div className=\"scrollable-study-thumbnails\">\r\n        {studies\r\n          .map((study, studyIndex) => {\r\n            const { StudyInstanceUID } = study;\r\n            return study.thumbnails.map((thumb, thumbIndex) => {\r\n              // TODO: Thumb has more props than we care about?\r\n              const {\r\n                active,\r\n                altImageText,\r\n                displaySetInstanceUID,\r\n                imageId,\r\n                derivedDisplaySetsNumber,\r\n                numImageFrames,\r\n                SeriesDescription,\r\n                SeriesNumber,\r\n                hasWarnings,\r\n                hasDerivedDisplaySets,\r\n              } = thumb;\r\n\r\n              return (\r\n                <div\r\n                  key={thumb.displaySetInstanceUID}\r\n                  className=\"thumbnail-container\"\r\n                  data-cy=\"thumbnail-list\"\r\n                >\r\n                  <Thumbnail\r\n                    active={active}\r\n                    supportsDrag={supportsDrag}\r\n                    key={`${studyIndex}_${thumbIndex}`}\r\n                    id={`${studyIndex}_${thumbIndex}`} // Unused?\r\n                    // Study\r\n                    StudyInstanceUID={StudyInstanceUID} // used by drop\r\n                    // Thumb\r\n                    altImageText={altImageText}\r\n                    imageId={imageId}\r\n                    derivedDisplaySetsNumber={derivedDisplaySetsNumber}\r\n                    displaySetInstanceUID={displaySetInstanceUID} // used by drop\r\n                    numImageFrames={numImageFrames}\r\n                    SeriesDescription={SeriesDescription}\r\n                    SeriesNumber={SeriesNumber}\r\n                    hasWarnings={hasWarnings}\r\n                    hasDerivedDisplaySets={hasDerivedDisplaySets}\r\n                    // Events\r\n                    onClick={onThumbnailClick.bind(\r\n                      undefined,\r\n                      displaySetInstanceUID\r\n                    )}\r\n                    onDoubleClick={onThumbnailDoubleClick}\r\n                    showProgressBar={showThumbnailProgressBar}\r\n                  />\r\n                </div>\r\n              );\r\n            });\r\n          })\r\n          .flat()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst noop = () => {};\r\n\r\nStudyBrowser.propTypes = {\r\n  studies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      StudyInstanceUID: PropTypes.string.isRequired,\r\n      thumbnails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          altImageText: PropTypes.string,\r\n          displaySetInstanceUID: PropTypes.string.isRequired,\r\n          imageId: PropTypes.string,\r\n          derivedDisplaySetsNumber: PropTypes.number,\r\n          numImageFrames: PropTypes.number,\r\n          SeriesDescription: PropTypes.string,\r\n          SeriesNumber: PropTypes.number,\r\n          stackPercentComplete: PropTypes.number,\r\n        })\r\n      ),\r\n    })\r\n  ).isRequired,\r\n  supportsDrag: PropTypes.bool,\r\n  onThumbnailClick: PropTypes.func,\r\n  onThumbnailDoubleClick: PropTypes.func,\r\n  showThumbnailProgressBar: PropTypes.bool,\r\n};\r\n\r\nStudyBrowser.defaultProps = {\r\n  studies: [],\r\n  supportsDrag: true,\r\n  onThumbnailClick: noop,\r\n  onThumbnailDoubleClick: noop,\r\n  showThumbnailProgressBar: true,\r\n};\r\n\r\nexport { StudyBrowser };\r\n","const id = 'org.ohif.dicom-sr';\r\n\r\nexport default id;\r\n\r\nconst SOPClassHandlerName = 'dicom-sr';\r\nconst SOPClassHandlerId = `${id}.sopClassHandlerModule.${SOPClassHandlerName}`;\r\nexport { SOPClassHandlerName, SOPClassHandlerId };\r\n","import React from 'react';\r\n\r\nconst UserManagerContext = React.createContext();\r\n\r\nexport default UserManagerContext;\r\n","import './OHIFLogo.css';\r\n\r\nimport { Icon } from '@ohif/ui';\r\nimport React from 'react';\r\n\r\nfunction OHIFLogo() {\r\n  return (\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"header-brand\"\r\n      href=\"http://ohif.org\"\r\n    >\r\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\r\n      {/* Logo text would fit smaller displays at two lines:\r\n       *\r\n       * Open Health\r\n       * Imaging Foundation\r\n       *\r\n       * Or as `OHIF` on really small displays\r\n       */}\r\n      <Icon name=\"ohif-text-logo\" className=\"header-logo-text\" />\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default OHIFLogo;\r\n","export default {\r\n  COMMANDS: 'commandsModule',\r\n  PANEL: 'panelModule',\r\n  SOP_CLASS_HANDLER: 'sopClassHandlerModule',\r\n  TOOLBAR: 'toolbarModule',\r\n  VIEWPORT: 'viewportModule',\r\n};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { View2D } from 'react-vtkjs-viewport';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './VTKViewport.css';\r\n\r\nconst VTKViewport = props => {\r\n  const style = { width: '100%', height: '100%', position: 'relative' };\r\n\r\n  const setViewportActiveHandler = useCallback(() => {\r\n    const { setViewportActive, viewportIndex, activeViewportIndex } = props;\r\n\r\n    if (viewportIndex !== activeViewportIndex) {\r\n      // set in Connected\r\n      setViewportActive();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleScrollEvent = evt => {\r\n      const vtkViewportApiReference = props.onScroll(props.viewportIndex) || {};\r\n      const viewportUID = vtkViewportApiReference.uid;\r\n      const viewportWasScrolled = viewportUID === evt.detail.uid;\r\n\r\n      if (viewportWasScrolled) {\r\n        setViewportActiveHandler();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('vtkscrollevent', handleScrollEvent);\r\n    return () =>\r\n      window.removeEventListener('vtkscrollevent', handleScrollEvent);\r\n  }, [props, props.onScroll, props.viewportIndex, setViewportActiveHandler]);\r\n\r\n  return (\r\n    <div\r\n      className=\"vtk-viewport-handler\"\r\n      style={style}\r\n      onClick={setViewportActiveHandler}\r\n    >\r\n      <View2D {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nVTKViewport.propTypes = {\r\n  setViewportActive: PropTypes.func.isRequired,\r\n  viewportIndex: PropTypes.number.isRequired,\r\n  activeViewportIndex: PropTypes.number.isRequired,\r\n  /* Receives viewportIndex */\r\n  onScroll: PropTypes.func,\r\n};\r\n\r\nVTKViewport.defaultProps = {\r\n  onScroll: () => {},\r\n};\r\n\r\nexport default VTKViewport;\r\n","import OHIF from '@ohif/core';\r\nimport { connect } from 'react-redux';\r\nimport VTKViewport from './VTKViewport';\r\n\r\nconst { setViewportActive, setViewportSpecificData } = OHIF.redux.actions;\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let dataFromStore;\r\n\r\n  if (state.extensions && state.extensions.vtk) {\r\n    dataFromStore = state.extensions.vtk;\r\n  }\r\n\r\n  // If this is the active viewport, enable prefetching.\r\n  const { viewportIndex } = ownProps;\r\n  const isActive = viewportIndex === state.viewports.activeViewportIndex;\r\n  const viewportLayout = state.viewports.layout.viewports[viewportIndex];\r\n  const pluginDetails = viewportLayout.vtk || {};\r\n\r\n  return {\r\n    activeViewportIndex: state.viewports.activeViewportIndex,\r\n    layout: state.viewports.layout,\r\n    isActive,\r\n    ...pluginDetails,\r\n    // Hopefully this doesn't break anything under the hood for this one\r\n    // activeTool: activeButton && activeButton.command,\r\n    ...dataFromStore,\r\n    enableStackPrefetch: isActive,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const { viewportIndex } = ownProps;\r\n\r\n  return {\r\n    setViewportActive: () => {\r\n      dispatch(setViewportActive(viewportIndex));\r\n    },\r\n\r\n    setViewportSpecificData: data => {\r\n      dispatch(setViewportSpecificData(viewportIndex, data));\r\n    },\r\n  };\r\n};\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\r\n  const { afterCreation } = propsFromState;\r\n\r\n  const props = {\r\n    ...propsFromState,\r\n    ...propsFromDispatch,\r\n    ...ownProps,\r\n    /**\r\n     * Our component sets up the underlying dom element on \"componentDidMount\"\r\n     * for use with VTK.\r\n     *\r\n     * The onCreated prop passes back an Object containing many of the internal\r\n     * components of the VTK scene. We can grab a reference to these here, to\r\n     * make playing with VTK's native methods easier.\r\n     *\r\n     * A similar approach is taken with the Cornerstone extension.\r\n     */\r\n    onCreated: api => {\r\n      // Store the API details for later\r\n      //setViewportSpecificData({ vtkApi: api });\r\n\r\n      if (afterCreation && typeof afterCreation === 'function') {\r\n        afterCreation(api);\r\n      }\r\n    },\r\n  };\r\n  return props;\r\n};\r\n\r\nconst ConnectedVTKViewport = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps\r\n)(VTKViewport);\r\n\r\nexport default ConnectedVTKViewport;\r\n","import './LoadingIndicator.css';\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LoadingIndicator extends PureComponent {\r\n  static propTypes = {\r\n    percentComplete: PropTypes.number.isRequired,\r\n    error: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    percentComplete: 0,\r\n    error: null,\r\n  };\r\n\r\n  render() {\r\n    let percComplete;\r\n    if (this.props.percentComplete && this.props.percentComplete !== 100) {\r\n      percComplete = `${this.props.percentComplete}%`;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.error ? (\r\n          <div className=\"imageViewerErrorLoadingIndicator loadingIndicator\">\r\n            <div className=\"indicatorContents\">\r\n              <h4>Error Loading Image</h4>\r\n              <p className=\"description\">An error has occurred.</p>\r\n              <p className=\"details\">{this.props.error.message}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"imageViewerLoadingIndicator loadingIndicator\">\r\n            <div className=\"indicatorContents\">\r\n              <p>\r\n                {this.props.t('Loading...')}\r\n                <i className=\"fa fa-spin fa-circle-o-notch fa-fw\" />\r\n                {percComplete}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation('Common')(LoadingIndicator);\r\n","import React, { Component } from 'react';\r\nimport { getImageData, loadImageData } from 'react-vtkjs-viewport';\r\nimport ConnectedVTKViewport from './ConnectedVTKViewport';\r\nimport LoadingIndicator from './LoadingIndicator.js';\r\nimport OHIF from '@ohif/core';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\r\nimport vtkImageData from 'vtk.js/Sources/Common/DataModel/ImageData';\r\nimport vtkVolume from 'vtk.js/Sources/Rendering/Core/Volume';\r\nimport vtkVolumeMapper from 'vtk.js/Sources/Rendering/Core/VolumeMapper';\r\n\r\nconst segmentationModule = cornerstoneTools.getModule('segmentation');\r\n\r\nconst { StackManager } = OHIF.utils;\r\n\r\n// TODO: Figure out where we plan to put this long term\r\nconst volumeCache = {};\r\nconst labelmapCache = {};\r\n\r\n/**\r\n * Create a labelmap image with the same dimensions as our background volume.\r\n *\r\n * @param backgroundImageData vtkImageData\r\n */\r\n/* TODO: Not currently used until we have drawing tools in vtkjs.\r\nfunction createLabelMapImageData(backgroundImageData) {\r\n  // TODO => Need to do something like this if we start drawing a new segmentation\r\n  // On a vtkjs viewport.\r\n\r\n  const labelMapData = vtkImageData.newInstance(\r\n    backgroundImageData.get('spacing', 'origin', 'direction')\r\n  );\r\n  labelMapData.setDimensions(backgroundImageData.getDimensions());\r\n  labelMapData.computeTransforms();\r\n\r\n  const values = new Uint8Array(backgroundImageData.getNumberOfPoints());\r\n  const dataArray = vtkDataArray.newInstance({\r\n    numberOfComponents: 1, // labelmap with single component\r\n    values,\r\n  });\r\n  labelMapData.getPointData().setScalars(dataArray);\r\n\r\n  return labelMapData;\r\n} */\r\n\r\nclass OHIFVTKViewport extends Component {\r\n  state = {\r\n    volumes: null,\r\n    paintFilterLabelMapImageData: null,\r\n    paintFilterBackgroundImageData: null,\r\n    percentComplete: 0,\r\n    isLoaded: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    viewportData: PropTypes.shape({\r\n      studies: PropTypes.array.isRequired,\r\n      displaySet: PropTypes.shape({\r\n        StudyInstanceUID: PropTypes.string.isRequired,\r\n        displaySetInstanceUID: PropTypes.string.isRequired,\r\n        sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\r\n        SOPInstanceUID: PropTypes.string,\r\n        frameIndex: PropTypes.number,\r\n      }),\r\n    }),\r\n    viewportIndex: PropTypes.number.isRequired,\r\n    children: PropTypes.node,\r\n    onScroll: PropTypes.func,\r\n    servicesManager: PropTypes.object.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onScroll: () => { },\r\n  };\r\n\r\n  static id = 'OHIFVTKViewport';\r\n\r\n  static init() {\r\n    console.log('OHIFVTKViewport init()');\r\n  }\r\n\r\n  static destroy() {\r\n    console.log('OHIFVTKViewport destroy()');\r\n    StackManager.clearStacks();\r\n  }\r\n\r\n  static getCornerstoneStack(\r\n    studies,\r\n    StudyInstanceUID,\r\n    displaySetInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex\r\n  ) {\r\n    // Create shortcut to displaySet\r\n    const study = studies.find(\r\n      study => study.StudyInstanceUID === StudyInstanceUID\r\n    );\r\n\r\n    const displaySet = study.displaySets.find(set => {\r\n      return set.displaySetInstanceUID === displaySetInstanceUID;\r\n    });\r\n\r\n    // Get stack from Stack Manager\r\n    const storedStack = StackManager.findOrCreateStack(study, displaySet);\r\n\r\n    // Clone the stack here so we don't mutate it\r\n    const stack = Object.assign({}, storedStack);\r\n\r\n    if (frameIndex !== undefined) {\r\n      stack.currentImageIdIndex = frameIndex;\r\n    } else if (SOPInstanceUID) {\r\n      const index = stack.imageIds.findIndex(imageId => {\r\n        const imageIdSOPInstanceUID = cornerstone.metaData.get(\r\n          'SOPInstanceUID',\r\n          imageId\r\n        );\r\n\r\n        return imageIdSOPInstanceUID === SOPInstanceUID;\r\n      });\r\n\r\n      if (index > -1) {\r\n        stack.currentImageIdIndex = index;\r\n      }\r\n    } else {\r\n      stack.currentImageIdIndex = 0;\r\n    }\r\n\r\n    return stack;\r\n  }\r\n\r\n  getViewportData = (\r\n    studies,\r\n    StudyInstanceUID,\r\n    displaySetInstanceUID,\r\n    SOPClassUID,\r\n    SOPInstanceUID,\r\n    frameIndex\r\n  ) => {\r\n    const { UINotificationService } = this.props.servicesManager.services;\r\n\r\n    const stack = OHIFVTKViewport.getCornerstoneStack(\r\n      studies,\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      SOPClassUID,\r\n      SOPInstanceUID,\r\n      frameIndex\r\n    );\r\n\r\n    const imageDataObject = getImageData(stack.imageIds, displaySetInstanceUID);\r\n    let labelmapDataObject;\r\n    let labelmapColorLUT;\r\n\r\n    const firstImageId = stack.imageIds[0];\r\n    const { state } = segmentationModule;\r\n    const brushStackState = state.series[firstImageId];\r\n\r\n    if (brushStackState) {\r\n      const { activeLabelmapIndex } = brushStackState;\r\n      const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\r\n\r\n      if (\r\n        brushStackState.labelmaps3D.length > 1 &&\r\n        this.props.viewportIndex === 0\r\n      ) {\r\n        UINotificationService.show({\r\n          title: 'Overlapping Segmentation Found',\r\n          message:\r\n            'Overlapping segmentations cannot be displayed when in MPR mode',\r\n          type: 'info',\r\n        });\r\n      }\r\n\r\n      this.segmentsDefaultProperties = labelmap3D.segmentsHidden.map(\r\n        isHidden => {\r\n          return { visible: !isHidden };\r\n        }\r\n      );\r\n\r\n      const vtkLabelmapID = `${firstImageId}_${activeLabelmapIndex}`;\r\n\r\n      if (labelmapCache[vtkLabelmapID]) {\r\n        labelmapDataObject = labelmapCache[vtkLabelmapID];\r\n      } else {\r\n        // TODO -> We need an imageId based getter in cornerstoneTools\r\n        const labelmapBuffer = labelmap3D.buffer;\r\n\r\n        // Create VTK Image Data with buffer as input\r\n        labelmapDataObject = vtkImageData.newInstance();\r\n\r\n        const dataArray = vtkDataArray.newInstance({\r\n          numberOfComponents: 1, // labelmap with single component\r\n          values: new Uint16Array(labelmapBuffer),\r\n        });\r\n\r\n        labelmapDataObject.getPointData().setScalars(dataArray);\r\n        labelmapDataObject.setDimensions(...imageDataObject.dimensions);\r\n        labelmapDataObject.setSpacing(\r\n          ...imageDataObject.vtkImageData.getSpacing()\r\n        );\r\n        labelmapDataObject.setOrigin(\r\n          ...imageDataObject.vtkImageData.getOrigin()\r\n        );\r\n        labelmapDataObject.setDirection(\r\n          ...imageDataObject.vtkImageData.getDirection()\r\n        );\r\n\r\n        // Cache the labelmap volume.\r\n        labelmapCache[vtkLabelmapID] = labelmapDataObject;\r\n      }\r\n\r\n      labelmapColorLUT = state.colorLutTables[labelmap3D.colorLUTIndex];\r\n    }\r\n\r\n    return {\r\n      imageDataObject,\r\n      labelmapDataObject,\r\n      labelmapColorLUT,\r\n    };\r\n  };\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} imageDataObject\r\n   * @param {object} imageDataObject.vtkImageData\r\n   * @param {object} imageDataObject.imageMetaData0\r\n   * @param {number} [imageDataObject.imageMetaData0.WindowWidth] - The volume's initial WindowWidth\r\n   * @param {number} [imageDataObject.imageMetaData0.WindowCenter] - The volume's initial WindowCenter\r\n   * @param {string} imageDataObject.imageMetaData0.Modality - CT, MR, PT, etc\r\n   * @param {string} displaySetInstanceUID\r\n   * @returns vtkVolumeActor\r\n   * @memberof OHIFVTKViewport\r\n   */\r\n  getOrCreateVolume(imageDataObject, displaySetInstanceUID) {\r\n    if (volumeCache[displaySetInstanceUID]) {\r\n      return volumeCache[displaySetInstanceUID];\r\n    }\r\n\r\n    const { vtkImageData, imageMetaData0 } = imageDataObject;\r\n    // TODO -> Should update react-vtkjs-viewport and react-cornerstone-viewports\r\n    // internals to use naturalized DICOM JSON names.\r\n    const {\r\n      windowWidth: WindowWidth,\r\n      windowCenter: WindowCenter,\r\n      modality: Modality,\r\n    } = imageMetaData0;\r\n\r\n    const { lower, upper } = _getRangeFromWindowLevels(\r\n      WindowWidth,\r\n      WindowCenter,\r\n      Modality\r\n    );\r\n    const volumeActor = vtkVolume.newInstance();\r\n    const volumeMapper = vtkVolumeMapper.newInstance();\r\n\r\n    volumeActor.setMapper(volumeMapper);\r\n    volumeMapper.setInputData(vtkImageData);\r\n\r\n    volumeActor\r\n      .getProperty()\r\n      .getRGBTransferFunction(0)\r\n      .setRange(lower, upper);\r\n\r\n    const spacing = vtkImageData.getSpacing();\r\n    // Set the sample distance to half the mean length of one side. This is where the divide by 6 comes from.\r\n    // https://github.com/Kitware/VTK/blob/6b559c65bb90614fb02eb6d1b9e3f0fca3fe4b0b/Rendering/VolumeOpenGL2/vtkSmartVolumeMapper.cxx#L344\r\n    const sampleDistance = (spacing[0] + spacing[1] + spacing[2]) / 6;\r\n\r\n    volumeMapper.setSampleDistance(sampleDistance);\r\n\r\n    // Be generous to suppress warnings, as the logging really hurts performance.\r\n    // TODO: maybe we should auto adjust samples to 1000.\r\n    volumeMapper.setMaximumSamplesPerRay(4000);\r\n\r\n    volumeCache[displaySetInstanceUID] = volumeActor;\r\n\r\n    return volumeActor;\r\n  }\r\n\r\n  setStateFromProps() {\r\n    const { studies, displaySet } = this.props.viewportData;\r\n    const {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      sopClassUIDs,\r\n      SOPInstanceUID,\r\n      frameIndex,\r\n    } = displaySet;\r\n\r\n    if (sopClassUIDs.length > 1) {\r\n      console.warn(\r\n        'More than one SOPClassUID in the same series is not yet supported.'\r\n      );\r\n    }\r\n\r\n    const study = studies.find(\r\n      study => study.StudyInstanceUID === StudyInstanceUID\r\n    );\r\n\r\n    const dataDetails = {\r\n      studyDate: study.studyDate,\r\n      studyTime: study.studyTime,\r\n      studyDescription: study.studyDescription,\r\n      patientName: study.patientName,\r\n      patientId: study.patientId,\r\n      seriesNumber: String(displaySet.seriesNumber),\r\n      seriesDescription: displaySet.seriesDescription,\r\n    };\r\n\r\n    try {\r\n      const {\r\n        imageDataObject,\r\n        labelmapDataObject,\r\n        labelmapColorLUT,\r\n      } = this.getViewportData(\r\n        studies,\r\n        StudyInstanceUID,\r\n        displaySetInstanceUID,\r\n        SOPInstanceUID,\r\n        frameIndex\r\n      );\r\n\r\n      this.imageDataObject = imageDataObject;\r\n\r\n      /* TODO: Not currently used until we have drawing tools in vtkjs.\r\n      if (!labelmap) {\r\n        labelmap = createLabelMapImageData(data);\r\n      } */\r\n\r\n      const volumeActor = this.getOrCreateVolume(\r\n        imageDataObject,\r\n        displaySetInstanceUID\r\n      );\r\n\r\n      this.setState(\r\n        {\r\n          percentComplete: 0,\r\n          dataDetails,\r\n        },\r\n        () => {\r\n          this.loadProgressively(imageDataObject);\r\n\r\n          // TODO: There must be a better way to do this.\r\n          // We do this so that if all the data is available the react-vtkjs-viewport\r\n          // Will render _something_ before the volumes are set and the volume\r\n          // Construction that happens in react-vtkjs-viewport locks up the CPU.\r\n          setTimeout(() => {\r\n            this.setState({\r\n              volumes: [volumeActor],\r\n              paintFilterLabelMapImageData: labelmapDataObject,\r\n              paintFilterBackgroundImageData: imageDataObject.vtkImageData,\r\n              labelmapColorLUT,\r\n            });\r\n          }, 200);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      const errorTitle = 'Failed to load 2D MPR';\r\n      console.error(errorTitle, error);\r\n      const {\r\n        UINotificationService,\r\n        LoggerService,\r\n      } = this.props.servicesManager.services;\r\n      if (this.props.viewportIndex === 0) {\r\n        const message = error.message.includes('buffer')\r\n          ? 'Dataset is too big to display in MPR'\r\n          : error.message;\r\n        LoggerService.error({ error, message });\r\n        UINotificationService.show({\r\n          title: errorTitle,\r\n          message,\r\n          type: 'error',\r\n          autoClose: false,\r\n          action: {\r\n            label: 'Exit 2D MPR',\r\n            onClick: ({ close }) => {\r\n              // context: 'ACTIVE_VIEWPORT::VTK',\r\n              close();\r\n              this.props.commandsManager.runCommand('setCornerstoneLayout');\r\n            },\r\n          },\r\n        });\r\n      }\r\n      this.setState({ isLoaded: true });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateFromProps();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { displaySet } = this.props.viewportData;\r\n    const prevDisplaySet = prevProps.viewportData.displaySet;\r\n\r\n    if (\r\n      displaySet.displaySetInstanceUID !==\r\n      prevDisplaySet.displaySetInstanceUID ||\r\n      displaySet.SOPInstanceUID !== prevDisplaySet.SOPInstanceUID ||\r\n      displaySet.frameIndex !== prevDisplaySet.frameIndex\r\n    ) {\r\n      this.setStateFromProps();\r\n    }\r\n  }\r\n\r\n  loadProgressively(imageDataObject) {\r\n    loadImageData(imageDataObject);\r\n\r\n    const { isLoading, imageIds } = imageDataObject;\r\n\r\n    if (!isLoading) {\r\n      this.setState({ isLoaded: true });\r\n      return;\r\n    }\r\n\r\n    const NumberOfFrames = imageIds.length;\r\n\r\n    const onPixelDataInsertedCallback = numberProcessed => {\r\n      const percentComplete = Math.floor(\r\n        (numberProcessed * 100) / NumberOfFrames\r\n      );\r\n\r\n      if (percentComplete !== this.state.percentComplete) {\r\n        this.setState({\r\n          percentComplete,\r\n        });\r\n      }\r\n    };\r\n\r\n    const onPixelDataInsertedErrorCallback = error => {\r\n      const {\r\n        UINotificationService,\r\n        LoggerService,\r\n      } = this.props.servicesManager.services;\r\n\r\n      if (!this.hasError) {\r\n        if (this.props.viewportIndex === 0) {\r\n          // Only show the notification from one viewport 1 in MPR2D.\r\n          LoggerService.error({ error, message: error.message });\r\n          UINotificationService.show({\r\n            title: 'MPR Load Error',\r\n            message: error.message,\r\n            type: 'error',\r\n            autoClose: false,\r\n          });\r\n        }\r\n\r\n        this.hasError = true;\r\n      }\r\n    };\r\n\r\n    const onAllPixelDataInsertedCallback = () => {\r\n      this.setState({\r\n        isLoaded: true,\r\n      });\r\n    };\r\n\r\n    imageDataObject.onPixelDataInserted(onPixelDataInsertedCallback);\r\n    imageDataObject.onAllPixelDataInserted(onAllPixelDataInsertedCallback);\r\n    imageDataObject.onPixelDataInsertedError(onPixelDataInsertedErrorCallback);\r\n  }\r\n\r\n  render() {\r\n    let childrenWithProps = null;\r\n    const { configuration } = segmentationModule;\r\n\r\n    // TODO: Does it make more sense to use Context?\r\n    if (this.props.children && this.props.children.length) {\r\n      childrenWithProps = this.props.children.map((child, index) => {\r\n        return (\r\n          child &&\r\n          React.cloneElement(child, {\r\n            viewportIndex: this.props.viewportIndex,\r\n            key: index,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    const style = { width: '100%', height: '100%', position: 'relative' };\r\n\r\n    return (\r\n      <>\r\n        <div style={style}>\r\n          {!this.state.isLoaded && (\r\n            <LoadingIndicator percentComplete={this.state.percentComplete} />\r\n          )}\r\n          {this.state.volumes && (\r\n            <ConnectedVTKViewport\r\n              volumes={this.state.volumes}\r\n              paintFilterLabelMapImageData={\r\n                this.state.paintFilterLabelMapImageData\r\n              }\r\n              paintFilterBackgroundImageData={\r\n                this.state.paintFilterBackgroundImageData\r\n              }\r\n              viewportIndex={this.props.viewportIndex}\r\n              dataDetails={this.state.dataDetails}\r\n              labelmapRenderingOptions={{\r\n                colorLUT: this.state.labelmapColorLUT,\r\n                globalOpacity: configuration.fillAlpha,\r\n                visible: configuration.renderFill,\r\n                outlineThickness: configuration.outlineWidth,\r\n                renderOutline: configuration.renderOutline,\r\n                segmentsDefaultProperties: this.segmentsDefaultProperties,\r\n                onNewSegmentationRequested: () => {\r\n                  this.setStateFromProps();\r\n                },\r\n              }}\r\n              onScroll={this.props.onScroll}\r\n            />\r\n          )}\r\n        </div>\r\n        )}\r\n        {childrenWithProps}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Takes window levels and converts them to a range (lower/upper)\r\n * for use with VTK RGBTransferFunction\r\n *\r\n * @private\r\n * @param {number} [width] - the width of our window\r\n * @param {number} [center] - the center of our window\r\n * @param {string} [Modality] - 'PT', 'CT', etc.\r\n * @returns { lower, upper } - range\r\n */\r\nfunction _getRangeFromWindowLevels(width, center, Modality = undefined) {\r\n  // For PET just set the range to 0-5 SUV\r\n  if (Modality === 'PT') {\r\n    return { lower: 0, upper: 5 };\r\n  }\r\n\r\n  const levelsAreNotNumbers = isNaN(center) || isNaN(width);\r\n\r\n  if (levelsAreNotNumbers) {\r\n    return { lower: 0, upper: 512 };\r\n  }\r\n\r\n  return {\r\n    lower: center - width / 2.0,\r\n    upper: center + width / 2.0,\r\n  };\r\n}\r\n\r\nexport default OHIFVTKViewport;\r\n","var map = {\n\t\"./af\": 297,\n\t\"./af.js\": 297,\n\t\"./ar\": 298,\n\t\"./ar-dz\": 299,\n\t\"./ar-dz.js\": 299,\n\t\"./ar-kw\": 300,\n\t\"./ar-kw.js\": 300,\n\t\"./ar-ly\": 301,\n\t\"./ar-ly.js\": 301,\n\t\"./ar-ma\": 302,\n\t\"./ar-ma.js\": 302,\n\t\"./ar-sa\": 303,\n\t\"./ar-sa.js\": 303,\n\t\"./ar-tn\": 304,\n\t\"./ar-tn.js\": 304,\n\t\"./ar.js\": 298,\n\t\"./az\": 305,\n\t\"./az.js\": 305,\n\t\"./be\": 306,\n\t\"./be.js\": 306,\n\t\"./bg\": 307,\n\t\"./bg.js\": 307,\n\t\"./bm\": 308,\n\t\"./bm.js\": 308,\n\t\"./bn\": 309,\n\t\"./bn.js\": 309,\n\t\"./bo\": 310,\n\t\"./bo.js\": 310,\n\t\"./br\": 311,\n\t\"./br.js\": 311,\n\t\"./bs\": 312,\n\t\"./bs.js\": 312,\n\t\"./ca\": 313,\n\t\"./ca.js\": 313,\n\t\"./cs\": 314,\n\t\"./cs.js\": 314,\n\t\"./cv\": 315,\n\t\"./cv.js\": 315,\n\t\"./cy\": 316,\n\t\"./cy.js\": 316,\n\t\"./da\": 317,\n\t\"./da.js\": 317,\n\t\"./de\": 318,\n\t\"./de-at\": 319,\n\t\"./de-at.js\": 319,\n\t\"./de-ch\": 320,\n\t\"./de-ch.js\": 320,\n\t\"./de.js\": 318,\n\t\"./dv\": 321,\n\t\"./dv.js\": 321,\n\t\"./el\": 322,\n\t\"./el.js\": 322,\n\t\"./en-SG\": 323,\n\t\"./en-SG.js\": 323,\n\t\"./en-au\": 324,\n\t\"./en-au.js\": 324,\n\t\"./en-ca\": 325,\n\t\"./en-ca.js\": 325,\n\t\"./en-gb\": 326,\n\t\"./en-gb.js\": 326,\n\t\"./en-ie\": 327,\n\t\"./en-ie.js\": 327,\n\t\"./en-il\": 328,\n\t\"./en-il.js\": 328,\n\t\"./en-nz\": 329,\n\t\"./en-nz.js\": 329,\n\t\"./eo\": 330,\n\t\"./eo.js\": 330,\n\t\"./es\": 331,\n\t\"./es-do\": 332,\n\t\"./es-do.js\": 332,\n\t\"./es-us\": 333,\n\t\"./es-us.js\": 333,\n\t\"./es.js\": 331,\n\t\"./et\": 334,\n\t\"./et.js\": 334,\n\t\"./eu\": 335,\n\t\"./eu.js\": 335,\n\t\"./fa\": 336,\n\t\"./fa.js\": 336,\n\t\"./fi\": 337,\n\t\"./fi.js\": 337,\n\t\"./fo\": 338,\n\t\"./fo.js\": 338,\n\t\"./fr\": 339,\n\t\"./fr-ca\": 340,\n\t\"./fr-ca.js\": 340,\n\t\"./fr-ch\": 341,\n\t\"./fr-ch.js\": 341,\n\t\"./fr.js\": 339,\n\t\"./fy\": 342,\n\t\"./fy.js\": 342,\n\t\"./ga\": 343,\n\t\"./ga.js\": 343,\n\t\"./gd\": 344,\n\t\"./gd.js\": 344,\n\t\"./gl\": 345,\n\t\"./gl.js\": 345,\n\t\"./gom-latn\": 346,\n\t\"./gom-latn.js\": 346,\n\t\"./gu\": 347,\n\t\"./gu.js\": 347,\n\t\"./he\": 348,\n\t\"./he.js\": 348,\n\t\"./hi\": 349,\n\t\"./hi.js\": 349,\n\t\"./hr\": 350,\n\t\"./hr.js\": 350,\n\t\"./hu\": 351,\n\t\"./hu.js\": 351,\n\t\"./hy-am\": 352,\n\t\"./hy-am.js\": 352,\n\t\"./id\": 353,\n\t\"./id.js\": 353,\n\t\"./is\": 354,\n\t\"./is.js\": 354,\n\t\"./it\": 355,\n\t\"./it-ch\": 356,\n\t\"./it-ch.js\": 356,\n\t\"./it.js\": 355,\n\t\"./ja\": 357,\n\t\"./ja.js\": 357,\n\t\"./jv\": 358,\n\t\"./jv.js\": 358,\n\t\"./ka\": 359,\n\t\"./ka.js\": 359,\n\t\"./kk\": 360,\n\t\"./kk.js\": 360,\n\t\"./km\": 361,\n\t\"./km.js\": 361,\n\t\"./kn\": 362,\n\t\"./kn.js\": 362,\n\t\"./ko\": 363,\n\t\"./ko.js\": 363,\n\t\"./ku\": 364,\n\t\"./ku.js\": 364,\n\t\"./ky\": 365,\n\t\"./ky.js\": 365,\n\t\"./lb\": 366,\n\t\"./lb.js\": 366,\n\t\"./lo\": 367,\n\t\"./lo.js\": 367,\n\t\"./lt\": 368,\n\t\"./lt.js\": 368,\n\t\"./lv\": 369,\n\t\"./lv.js\": 369,\n\t\"./me\": 370,\n\t\"./me.js\": 370,\n\t\"./mi\": 371,\n\t\"./mi.js\": 371,\n\t\"./mk\": 372,\n\t\"./mk.js\": 372,\n\t\"./ml\": 373,\n\t\"./ml.js\": 373,\n\t\"./mn\": 374,\n\t\"./mn.js\": 374,\n\t\"./mr\": 375,\n\t\"./mr.js\": 375,\n\t\"./ms\": 376,\n\t\"./ms-my\": 377,\n\t\"./ms-my.js\": 377,\n\t\"./ms.js\": 376,\n\t\"./mt\": 378,\n\t\"./mt.js\": 378,\n\t\"./my\": 379,\n\t\"./my.js\": 379,\n\t\"./nb\": 380,\n\t\"./nb.js\": 380,\n\t\"./ne\": 381,\n\t\"./ne.js\": 381,\n\t\"./nl\": 382,\n\t\"./nl-be\": 383,\n\t\"./nl-be.js\": 383,\n\t\"./nl.js\": 382,\n\t\"./nn\": 384,\n\t\"./nn.js\": 384,\n\t\"./pa-in\": 385,\n\t\"./pa-in.js\": 385,\n\t\"./pl\": 386,\n\t\"./pl.js\": 386,\n\t\"./pt\": 387,\n\t\"./pt-br\": 388,\n\t\"./pt-br.js\": 388,\n\t\"./pt.js\": 387,\n\t\"./ro\": 389,\n\t\"./ro.js\": 389,\n\t\"./ru\": 390,\n\t\"./ru.js\": 390,\n\t\"./sd\": 391,\n\t\"./sd.js\": 391,\n\t\"./se\": 392,\n\t\"./se.js\": 392,\n\t\"./si\": 393,\n\t\"./si.js\": 393,\n\t\"./sk\": 394,\n\t\"./sk.js\": 394,\n\t\"./sl\": 395,\n\t\"./sl.js\": 395,\n\t\"./sq\": 396,\n\t\"./sq.js\": 396,\n\t\"./sr\": 397,\n\t\"./sr-cyrl\": 398,\n\t\"./sr-cyrl.js\": 398,\n\t\"./sr.js\": 397,\n\t\"./ss\": 399,\n\t\"./ss.js\": 399,\n\t\"./sv\": 400,\n\t\"./sv.js\": 400,\n\t\"./sw\": 401,\n\t\"./sw.js\": 401,\n\t\"./ta\": 402,\n\t\"./ta.js\": 402,\n\t\"./te\": 403,\n\t\"./te.js\": 403,\n\t\"./tet\": 404,\n\t\"./tet.js\": 404,\n\t\"./tg\": 405,\n\t\"./tg.js\": 405,\n\t\"./th\": 406,\n\t\"./th.js\": 406,\n\t\"./tl-ph\": 407,\n\t\"./tl-ph.js\": 407,\n\t\"./tlh\": 408,\n\t\"./tlh.js\": 408,\n\t\"./tr\": 409,\n\t\"./tr.js\": 409,\n\t\"./tzl\": 410,\n\t\"./tzl.js\": 410,\n\t\"./tzm\": 411,\n\t\"./tzm-latn\": 412,\n\t\"./tzm-latn.js\": 412,\n\t\"./tzm.js\": 411,\n\t\"./ug-cn\": 413,\n\t\"./ug-cn.js\": 413,\n\t\"./uk\": 414,\n\t\"./uk.js\": 414,\n\t\"./ur\": 415,\n\t\"./ur.js\": 415,\n\t\"./uz\": 416,\n\t\"./uz-latn\": 417,\n\t\"./uz-latn.js\": 417,\n\t\"./uz.js\": 416,\n\t\"./vi\": 418,\n\t\"./vi.js\": 418,\n\t\"./x-pseudo\": 419,\n\t\"./x-pseudo.js\": 419,\n\t\"./yo\": 420,\n\t\"./yo.js\": 420,\n\t\"./zh-cn\": 421,\n\t\"./zh-cn.js\": 421,\n\t\"./zh-hk\": 422,\n\t\"./zh-hk.js\": 422,\n\t\"./zh-tw\": 423,\n\t\"./zh-tw.js\": 423\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 772;","import { redux } from '@ohif/core';\r\n\r\nconst { setViewportLayoutAndData } = redux.actions;\r\n\r\n// TODO: Should not be getting dispatch from the window, but I'm not sure how else to do it cleanly\r\nexport default function setLayoutAndViewportData(layout, viewportSpecificData) {\r\n  const action = setViewportLayoutAndData(layout, viewportSpecificData);\r\n\r\n  window.store.dispatch(action);\r\n}\r\n","import setLayoutAndViewportData from './setLayoutAndViewportData.js';\r\n\r\nexport default function setMPRLayout(\r\n  displaySet,\r\n  viewportPropsArray,\r\n  numRows = 1,\r\n  numColumns = 1\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const viewports = [];\r\n    const numViewports = numRows * numColumns;\r\n\r\n    if (viewportPropsArray && viewportPropsArray.length !== numViewports) {\r\n      reject(\r\n        new Error(\r\n          'viewportProps is supplied but its length is not equal to numViewports'\r\n        )\r\n      );\r\n    }\r\n\r\n    const viewportSpecificData = {};\r\n\r\n    for (let i = 0; i < numViewports; i++) {\r\n      viewports.push({});\r\n      viewportSpecificData[i] = displaySet;\r\n      viewportSpecificData[i].plugin = 'vtk';\r\n    }\r\n\r\n    const apis = [];\r\n    viewports.forEach((viewport, index) => {\r\n      apis[index] = null;\r\n      const viewportProps = viewportPropsArray[index];\r\n      viewports[index] = Object.assign({}, viewports[index], {\r\n        vtk: {\r\n          mode: 'mpr', // TODO: not used\r\n          afterCreation: api => {\r\n            apis[index] = api;\r\n\r\n            if (apis.every(a => !!a)) {\r\n              resolve(apis);\r\n            }\r\n          },\r\n          ...viewportProps,\r\n        },\r\n      });\r\n    });\r\n\r\n    setLayoutAndViewportData(\r\n      {\r\n        numRows,\r\n        numColumns,\r\n        viewports,\r\n      },\r\n      viewportSpecificData\r\n    );\r\n  });\r\n}\r\n","import setLayoutAndViewportData from './setLayoutAndViewportData.js';\r\n\r\nexport default function setViewportToVTK(\r\n  displaySet,\r\n  viewportIndex,\r\n  numRows,\r\n  numColumns,\r\n  layout,\r\n  viewportSpecificData\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    /*const currentData = layout.viewports[viewportIndex];\r\n    if (currentData && currentData.plugin === 'vtk') {\r\n      reject(new Error('Should not have reached this point??'));\r\n    }*/\r\n\r\n    const viewports = layout.viewports.slice();\r\n\r\n    viewports[viewportIndex] = Object.assign({}, viewports[viewportIndex], {\r\n      // plugin: 'vtk',\r\n      vtk: {\r\n        mode: 'mpr', // TODO: not used\r\n        afterCreation: api => {\r\n          resolve(api);\r\n        },\r\n      },\r\n    });\r\n\r\n    const updatedViewportData = viewportSpecificData;\r\n\r\n    setLayoutAndViewportData(\r\n      {\r\n        numRows,\r\n        numColumns,\r\n        viewports,\r\n      },\r\n      updatedViewportData\r\n    );\r\n  });\r\n}\r\n","import throttle from 'lodash.throttle';\r\nimport {\r\n  vtkInteractorStyleMPRWindowLevel,\r\n  vtkInteractorStyleRotatableMPRCrosshairs,\r\n  vtkSVGRotatableCrosshairsWidget,\r\n  vtkInteractorStyleMPRRotate,\r\n} from 'react-vtkjs-viewport';\r\nimport { getImageData } from 'react-vtkjs-viewport';\r\nimport { vec3 } from 'gl-matrix';\r\nimport setMPRLayout from './utils/setMPRLayout.js';\r\nimport setViewportToVTK from './utils/setViewportToVTK.js';\r\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeMapper/Constants.js';\r\nimport OHIFVTKViewport from './OHIFVTKViewport';\r\n\r\nconst { BlendMode } = Constants;\r\n\r\nconst commandsModule = ({ commandsManager, servicesManager }) => {\r\n  const { UINotificationService, LoggerService } = servicesManager.services;\r\n\r\n  // TODO: Put this somewhere else\r\n  let apis = {};\r\n  let defaultVOI;\r\n\r\n  async function _getActiveViewportVTKApi(viewports) {\r\n    const {\r\n      numRows,\r\n      numColumns,\r\n      layout,\r\n      viewportSpecificData,\r\n      activeViewportIndex,\r\n    } = viewports;\r\n\r\n    const currentData = layout.viewports[activeViewportIndex];\r\n    if (currentData && currentData.plugin === 'vtk') {\r\n      // TODO: I was storing/pulling this from Redux but ran into weird issues\r\n      if (apis[activeViewportIndex]) {\r\n        return apis[activeViewportIndex];\r\n      }\r\n    }\r\n\r\n    const displaySet = viewportSpecificData[activeViewportIndex];\r\n    let api;\r\n    if (!api) {\r\n      try {\r\n        api = await setViewportToVTK(\r\n          displaySet,\r\n          activeViewportIndex,\r\n          numRows,\r\n          numColumns,\r\n          layout,\r\n          viewportSpecificData\r\n        );\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    }\r\n\r\n    return api;\r\n  }\r\n\r\n  function _setView(api, sliceNormal, viewUp) {\r\n    const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n    const istyle = renderWindow.getInteractor().getInteractorStyle();\r\n    istyle.setSliceNormal(...sliceNormal);\r\n    istyle.setViewUp(...viewUp);\r\n\r\n    renderWindow.render();\r\n  }\r\n\r\n  function getVOIFromCornerstoneViewport() {\r\n    const dom = commandsManager.runCommand('getActiveViewportEnabledElement');\r\n    const cornerstoneElement = cornerstone.getEnabledElement(dom);\r\n\r\n    if (cornerstoneElement) {\r\n      const imageId = cornerstoneElement.image.imageId;\r\n\r\n      const Modality = cornerstone.metaData.get('Modality', imageId);\r\n\r\n      if (Modality !== 'PT') {\r\n        const { windowWidth, windowCenter } = cornerstoneElement.viewport.voi;\r\n\r\n        return {\r\n          windowWidth,\r\n          windowCenter,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  function setVOI(voi) {\r\n    const { windowWidth, windowCenter } = voi;\r\n    const lower = windowCenter - windowWidth / 2.0;\r\n    const upper = windowCenter + windowWidth / 2.0;\r\n\r\n    const rgbTransferFunction = apis[0].volumes[0]\r\n      .getProperty()\r\n      .getRGBTransferFunction(0);\r\n\r\n    rgbTransferFunction.setRange(lower, upper);\r\n\r\n    apis.forEach(api => {\r\n      api.updateVOI(windowWidth, windowCenter);\r\n    });\r\n  }\r\n\r\n  const _convertModelToWorldSpace = (position, vtkImageData) => {\r\n    const indexToWorld = vtkImageData.getIndexToWorld();\r\n    const pos = vec3.create();\r\n\r\n    position[0] += 0.5; /* Move to the centre of the voxel. */\r\n    position[1] += 0.5; /* Move to the centre of the voxel. */\r\n    position[2] += 0.5; /* Move to the centre of the voxel. */\r\n\r\n    vec3.set(pos, position[0], position[1], position[2]);\r\n    vec3.transformMat4(pos, pos, indexToWorld);\r\n\r\n    return pos;\r\n  };\r\n\r\n  const actions = {\r\n    getVtkApis: ({ index }) => {\r\n      return apis[index];\r\n    },\r\n    resetMPRView() {\r\n      // Reset orientation\r\n      apis.forEach(api => api.resetOrientation());\r\n\r\n      // Reset VOI\r\n      if (defaultVOI) setVOI(defaultVOI);\r\n\r\n      // Reset the crosshairs\r\n      apis[0].svgWidgets.rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\r\n    },\r\n    axial: async ({ viewports }) => {\r\n      const api = await _getActiveViewportVTKApi(viewports);\r\n\r\n      apis[viewports.activeViewportIndex] = api;\r\n\r\n      _setView(api, [0, 0, 1], [0, -1, 0]);\r\n    },\r\n    sagittal: async ({ viewports }) => {\r\n      const api = await _getActiveViewportVTKApi(viewports);\r\n\r\n      apis[viewports.activeViewportIndex] = api;\r\n\r\n      _setView(api, [1, 0, 0], [0, 0, 1]);\r\n    },\r\n    coronal: async ({ viewports }) => {\r\n      const api = await _getActiveViewportVTKApi(viewports);\r\n\r\n      apis[viewports.activeViewportIndex] = api;\r\n\r\n      _setView(api, [0, 1, 0], [0, 0, 1]);\r\n    },\r\n    requestNewSegmentation: async ({ viewports }) => {\r\n      const allViewports = Object.values(viewports.viewportSpecificData);\r\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\r\n        let api = apis[viewportIndex];\r\n\r\n        if (!api) {\r\n          api = await _getActiveViewportVTKApi(viewports);\r\n          apis[viewportIndex] = api;\r\n        }\r\n\r\n        api.requestNewSegmentation();\r\n        api.updateImage();\r\n      });\r\n      await Promise.all(promises);\r\n    },\r\n    jumpToSlice: async ({\r\n      viewports,\r\n      studies,\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      SOPClassUID,\r\n      SOPInstanceUID,\r\n      segmentNumber,\r\n      frameIndex,\r\n      frame,\r\n      done = () => {},\r\n    }) => {\r\n      let api = apis[viewports.activeViewportIndex];\r\n\r\n      if (!api) {\r\n        api = await _getActiveViewportVTKApi(viewports);\r\n        apis[viewports.activeViewportIndex] = api;\r\n      }\r\n\r\n      const stack = OHIFVTKViewport.getCornerstoneStack(\r\n        studies,\r\n        StudyInstanceUID,\r\n        displaySetInstanceUID,\r\n        SOPClassUID,\r\n        SOPInstanceUID,\r\n        frameIndex\r\n      );\r\n\r\n      const imageDataObject = getImageData(\r\n        stack.imageIds,\r\n        displaySetInstanceUID\r\n      );\r\n\r\n      let pixelIndex = 0;\r\n      let x = 0;\r\n      let y = 0;\r\n      let count = 0;\r\n\r\n      const rows = imageDataObject.dimensions[1];\r\n      const cols = imageDataObject.dimensions[0];\r\n\r\n      for (let j = 0; j < rows; j++) {\r\n        for (let i = 0; i < cols; i++) {\r\n          // [i, j] =\r\n          const pixel = frame.pixelData[pixelIndex];\r\n          if (pixel === segmentNumber) {\r\n            x += i;\r\n            y += j;\r\n            count++;\r\n          }\r\n          pixelIndex++;\r\n        }\r\n      }\r\n      x /= count;\r\n      y /= count;\r\n\r\n      const position = [x, y, frameIndex];\r\n      const worldPos = _convertModelToWorldSpace(\r\n        position,\r\n        imageDataObject.vtkImageData\r\n      );\r\n\r\n      api.svgWidgets.rotatableCrosshairsWidget.moveCrosshairs(worldPos, apis);\r\n      done();\r\n    },\r\n    setSegmentationConfiguration: async ({\r\n      viewports,\r\n      globalOpacity,\r\n      visible,\r\n      renderOutline,\r\n      outlineThickness,\r\n    }) => {\r\n      const allViewports = Object.values(viewports.viewportSpecificData);\r\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\r\n        let api = apis[viewportIndex];\r\n\r\n        if (!api) {\r\n          api = await _getActiveViewportVTKApi(viewports);\r\n          apis[viewportIndex] = api;\r\n        }\r\n\r\n        api.setGlobalOpacity(globalOpacity);\r\n        api.setVisibility(visible);\r\n        api.setOutlineThickness(outlineThickness);\r\n        api.setOutlineRendering(renderOutline);\r\n        api.updateImage();\r\n      });\r\n      await Promise.all(promises);\r\n    },\r\n    setSegmentConfiguration: async ({ viewports, visible, segmentNumber }) => {\r\n      const allViewports = Object.values(viewports.viewportSpecificData);\r\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\r\n        let api = apis[viewportIndex];\r\n\r\n        if (!api) {\r\n          api = await _getActiveViewportVTKApi(viewports);\r\n          apis[viewportIndex] = api;\r\n        }\r\n\r\n        api.setSegmentVisibility(segmentNumber, visible);\r\n        api.updateImage();\r\n      });\r\n      await Promise.all(promises);\r\n    },\r\n    enableRotateTool: () => {\r\n      apis.forEach((api, apiIndex) => {\r\n        const istyle = vtkInteractorStyleMPRRotate.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          configuration: { apis, apiIndex, uid: api.uid },\r\n        });\r\n      });\r\n    },\r\n    enableCrosshairsTool: () => {\r\n      apis.forEach((api, apiIndex) => {\r\n        const istyle = vtkInteractorStyleRotatableMPRCrosshairs.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          configuration: {\r\n            apis,\r\n            apiIndex,\r\n            uid: api.uid,\r\n          },\r\n        });\r\n      });\r\n\r\n      const rotatableCrosshairsWidget =\r\n        apis[0].svgWidgets.rotatableCrosshairsWidget;\r\n\r\n      const referenceLines = rotatableCrosshairsWidget.getReferenceLines();\r\n\r\n      // Initilise crosshairs if not initialised.\r\n      if (!referenceLines) {\r\n        rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\r\n      }\r\n    },\r\n    enableLevelTool: () => {\r\n      function updateVOI(apis, windowWidth, windowCenter) {\r\n        apis.forEach(api => {\r\n          api.updateVOI(windowWidth, windowCenter);\r\n        });\r\n      }\r\n\r\n      const throttledUpdateVOIs = throttle(updateVOI, 16, { trailing: true }); // ~ 60 fps\r\n\r\n      const callbacks = {\r\n        setOnLevelsChanged: ({ windowCenter, windowWidth }) => {\r\n          apis.forEach(api => {\r\n            const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n\r\n            renderWindow.render();\r\n          });\r\n\r\n          throttledUpdateVOIs(apis, windowWidth, windowCenter);\r\n        },\r\n      };\r\n\r\n      apis.forEach((api, apiIndex) => {\r\n        const istyle = vtkInteractorStyleMPRWindowLevel.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          callbacks,\r\n          configuration: { apis, apiIndex, uid: api.uid },\r\n        });\r\n      });\r\n    },\r\n    setSlabThickness: ({ slabThickness }) => {\r\n      apis.forEach(api => {\r\n        api.setSlabThickness(slabThickness);\r\n      });\r\n    },\r\n    changeSlabThickness: ({ change }) => {\r\n      apis.forEach(api => {\r\n        const slabThickness = Math.max(api.getSlabThickness() + change, 0.1);\r\n\r\n        api.setSlabThickness(slabThickness);\r\n      });\r\n    },\r\n    setBlendModeToComposite: () => {\r\n      apis.forEach(api => {\r\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n        const istyle = renderWindow.getInteractor().getInteractorStyle();\r\n\r\n        const slabThickness = api.getSlabThickness();\r\n\r\n        const mapper = api.volumes[0].getMapper();\r\n        if (mapper.setBlendModeToComposite) {\r\n          mapper.setBlendModeToComposite();\r\n        }\r\n\r\n        if (istyle.setSlabThickness) {\r\n          istyle.setSlabThickness(slabThickness);\r\n        }\r\n        renderWindow.render();\r\n      });\r\n    },\r\n    setBlendModeToMaximumIntensity: () => {\r\n      apis.forEach(api => {\r\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n        const mapper = api.volumes[0].getMapper();\r\n        if (mapper.setBlendModeToMaximumIntensity) {\r\n          mapper.setBlendModeToMaximumIntensity();\r\n        }\r\n        renderWindow.render();\r\n      });\r\n    },\r\n    setBlendMode: ({ blendMode }) => {\r\n      apis.forEach(api => {\r\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\r\n\r\n        api.volumes[0].getMapper().setBlendMode(blendMode);\r\n\r\n        renderWindow.render();\r\n      });\r\n    },\r\n    mpr2d: async ({ viewports }) => {\r\n      // TODO push a lot of this backdoor logic lower down to the library level.\r\n      const displaySet =\r\n        viewports.viewportSpecificData[viewports.activeViewportIndex];\r\n\r\n      // Get current VOI if cornerstone viewport.\r\n      const cornerstoneVOI = getVOIFromCornerstoneViewport();\r\n      defaultVOI = cornerstoneVOI;\r\n\r\n      const viewportProps = [\r\n        {\r\n          //Axial\r\n          orientation: {\r\n            sliceNormal: [0, 0, 1],\r\n            viewUp: [0, -1, 0],\r\n          },\r\n        },\r\n        {\r\n          // Sagittal\r\n          orientation: {\r\n            sliceNormal: [1, 0, 0],\r\n            viewUp: [0, 0, 1],\r\n          },\r\n        },\r\n        {\r\n          // Coronal\r\n          orientation: {\r\n            sliceNormal: [0, 1, 0],\r\n            viewUp: [0, 0, 1],\r\n          },\r\n        },\r\n      ];\r\n\r\n      try {\r\n        apis = await setMPRLayout(displaySet, viewportProps, 1, 3);\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n\r\n      if (cornerstoneVOI) {\r\n        setVOI(cornerstoneVOI);\r\n      }\r\n\r\n      // Add widgets and set default interactorStyle of each viewport.\r\n      apis.forEach((api, apiIndex) => {\r\n        api.addSVGWidget(\r\n          vtkSVGRotatableCrosshairsWidget.newInstance(),\r\n          'rotatableCrosshairsWidget'\r\n        );\r\n\r\n        const uid = api.uid;\r\n        const istyle = vtkInteractorStyleRotatableMPRCrosshairs.newInstance();\r\n\r\n        api.setInteractorStyle({\r\n          istyle,\r\n          configuration: { apis, apiIndex, uid },\r\n        });\r\n\r\n        api.svgWidgets.rotatableCrosshairsWidget.setApiIndex(apiIndex);\r\n        api.svgWidgets.rotatableCrosshairsWidget.setApis(apis);\r\n      });\r\n\r\n      const firstApi = apis[0];\r\n\r\n      // Initialise crosshairs\r\n      apis[0].svgWidgets.rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\r\n\r\n      // Check if we have full WebGL 2 support\r\n      const openGLRenderWindow = apis[0].genericRenderWindow.getOpenGLRenderWindow();\r\n\r\n      if (!openGLRenderWindow.getWebgl2()) {\r\n        // Throw a warning if we don't have WebGL 2 support,\r\n        // And the volume is too big to fit in a 2D texture\r\n\r\n        const openGLContext = openGLRenderWindow.getContext();\r\n        const maxTextureSizeInBytes = openGLContext.getParameter(\r\n          openGLContext.MAX_TEXTURE_SIZE\r\n        );\r\n\r\n        const maxBufferLengthFloat32 =\r\n          (maxTextureSizeInBytes * maxTextureSizeInBytes) / 4;\r\n\r\n        const dimensions = firstApi.volumes[0]\r\n          .getMapper()\r\n          .getInputData()\r\n          .getDimensions();\r\n\r\n        const volumeLength = dimensions[0] * dimensions[1] * dimensions[2];\r\n\r\n        if (volumeLength > maxBufferLengthFloat32) {\r\n          const message =\r\n            'This volume is too large to fit in WebGL 1 textures and will display incorrectly. Please use a different browser to view this data';\r\n          LoggerService.error({ message });\r\n          UINotificationService.show({\r\n            title: 'Browser does not support WebGL 2',\r\n            message,\r\n            type: 'error',\r\n            autoClose: false,\r\n          });\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  window.vtkActions = actions;\r\n\r\n  const definitions = {\r\n    requestNewSegmentation: {\r\n      commandFn: actions.requestNewSegmentation,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    jumpToSlice: {\r\n      commandFn: actions.jumpToSlice,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    setSegmentationConfiguration: {\r\n      commandFn: actions.setSegmentationConfiguration,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    setSegmentConfiguration: {\r\n      commandFn: actions.setSegmentConfiguration,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    axial: {\r\n      commandFn: actions.axial,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    coronal: {\r\n      commandFn: actions.coronal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    sagittal: {\r\n      commandFn: actions.sagittal,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n    enableRotateTool: {\r\n      commandFn: actions.enableRotateTool,\r\n      options: {},\r\n    },\r\n    enableCrosshairsTool: {\r\n      commandFn: actions.enableCrosshairsTool,\r\n      options: {},\r\n    },\r\n    enableLevelTool: {\r\n      commandFn: actions.enableLevelTool,\r\n      options: {},\r\n    },\r\n    resetMPRView: {\r\n      commandFn: actions.resetMPRView,\r\n      options: {},\r\n    },\r\n    setBlendModeToComposite: {\r\n      commandFn: actions.setBlendModeToComposite,\r\n      options: { blendMode: BlendMode.COMPOSITE_BLEND },\r\n    },\r\n    setBlendModeToMaximumIntensity: {\r\n      commandFn: actions.setBlendModeToMaximumIntensity,\r\n      options: { blendMode: BlendMode.MAXIMUM_INTENSITY_BLEND },\r\n    },\r\n    setBlendModeToMinimumIntensity: {\r\n      commandFn: actions.setBlendMode,\r\n      options: { blendMode: BlendMode.MINIMUM_INTENSITY_BLEND },\r\n    },\r\n    setBlendModeToAverageIntensity: {\r\n      commandFn: actions.setBlendMode,\r\n      options: { blendMode: BlendMode.AVERAGE_INTENSITY_BLEND },\r\n    },\r\n    setSlabThickness: {\r\n      // TODO: How do we pass in a function argument?\r\n      commandFn: actions.setSlabThickness,\r\n      options: {},\r\n    },\r\n    increaseSlabThickness: {\r\n      commandFn: actions.changeSlabThickness,\r\n      options: {\r\n        change: 3,\r\n      },\r\n    },\r\n    decreaseSlabThickness: {\r\n      commandFn: actions.changeSlabThickness,\r\n      options: {\r\n        change: -3,\r\n      },\r\n    },\r\n    mpr2d: {\r\n      commandFn: actions.mpr2d,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n      context: 'VIEWER',\r\n    },\r\n    getVtkApiForViewportIndex: {\r\n      commandFn: actions.getVtkApis,\r\n      context: 'VIEWER',\r\n    },\r\n  };\r\n\r\n  return {\r\n    definitions,\r\n    defaultContext: 'ACTIVE_VIEWPORT::VTK',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Range, Checkbox, OldSelect } from '@ohif/ui';\r\n\r\nimport './slab-thickness-toolbar-button.styl';\r\n\r\nconst SLIDER = {\r\n  MIN: 0.1,\r\n  MAX: 1000,\r\n  STEP: 0.1,\r\n};\r\n\r\nconst ToolbarLabel = props => {\r\n  const { label } = props;\r\n  return <div className=\"toolbar-button-label\">{label}</div>;\r\n};\r\n\r\nToolbarLabel.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nconst ToolbarSlider = props => {\r\n  const { value, min, max, onChange } = props;\r\n  return (\r\n    <div className=\"toolbar-slider-container\">\r\n      <label htmlFor=\"toolbar-slider\">{value}mm</label>\r\n      <Range\r\n        value={value}\r\n        min={min}\r\n        max={max}\r\n        step={SLIDER.STEP}\r\n        onChange={onChange}\r\n        id=\"toolbar-slider\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbarSlider.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst _getSelectOptions = button => {\r\n  return button.operationButtons.map(button => {\r\n    return {\r\n      key: button.label,\r\n      value: button.id,\r\n    };\r\n  });\r\n};\r\n\r\nconst _getClassNames = (isActive, className) => {\r\n  return classnames('toolbar-button', 'slab-thickness', className, {\r\n    active: isActive,\r\n  });\r\n};\r\n\r\nconst _applySlabThickness = (\r\n  value,\r\n  modeChecked,\r\n  toolbarClickCallback,\r\n  button\r\n) => {\r\n  if (!modeChecked || !toolbarClickCallback) {\r\n    return;\r\n  }\r\n\r\n  const { actionButton } = button;\r\n\r\n  const generateOperation = (operation, value) => {\r\n    // Combine slider value into slider operation\r\n    const generatedOperation = { ...operation };\r\n    generatedOperation.commandOptions = {\r\n      ...operation.commandOptions,\r\n      slabThickness: value,\r\n    };\r\n\r\n    return generatedOperation;\r\n  };\r\n\r\n  const operation = generateOperation(actionButton, value);\r\n  toolbarClickCallback(operation, event);\r\n};\r\n\r\nconst _applyModeOperation = (\r\n  operation,\r\n  modeChecked,\r\n  toolbarClickCallback,\r\n  button\r\n) => {\r\n  // in case modeChecked has not being triggered by user yet\r\n  if (typeof modeChecked !== 'boolean') {\r\n    return;\r\n  }\r\n\r\n  const { deactivateButton } = button;\r\n\r\n  const _operation = modeChecked ? operation : deactivateButton;\r\n  if (toolbarClickCallback && _operation) {\r\n    toolbarClickCallback(_operation);\r\n  }\r\n};\r\n\r\nconst _getInitialState = currentSelectedOption => {\r\n  return {\r\n    value: SLIDER.MIN,\r\n    sliderMin: SLIDER.MIN,\r\n    sliderMax: SLIDER.MAX,\r\n    modeChecked: undefined,\r\n    operation: currentSelectedOption,\r\n  };\r\n};\r\n\r\nconst INITIAL_OPTION_INDEX = 0;\r\nconst _getInitialtSelectedOption = (button = {}) => {\r\n  return (\r\n    button.operationButtons && button.operationButtons[INITIAL_OPTION_INDEX]\r\n  );\r\n};\r\n\r\nfunction SlabThicknessToolbarComponent({\r\n  parentContext,\r\n  toolbarClickCallback,\r\n  button,\r\n  activeButtons,\r\n  isActive,\r\n  className,\r\n}) {\r\n  const currentSelectedOption = _getInitialtSelectedOption(button);\r\n  const [state, setState] = useState(_getInitialState(currentSelectedOption));\r\n  const { label, operationButtons } = button;\r\n  const _className = _getClassNames(isActive, className);\r\n  const selectOptions = _getSelectOptions(button);\r\n  function onChangeSelect(selectedValue) {\r\n    // find select value\r\n    const operation = operationButtons.find(\r\n      button => button.id === selectedValue\r\n    );\r\n\r\n    if (operation === state.operation) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, operation });\r\n  }\r\n\r\n  function onChangeCheckbox(checked) {\r\n    setState({ ...state, modeChecked: checked });\r\n  }\r\n\r\n  function onChangeSlider(event) {\r\n    const value = Number(event.target.value);\r\n\r\n    if (value !== state.value) {\r\n      setState({ ...state, value, modeChecked: true });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    _applyModeOperation(\r\n      state.operation,\r\n      state.modeChecked,\r\n      toolbarClickCallback,\r\n      button\r\n    );\r\n  }, [state.modeChecked, state.operation]);\r\n\r\n  useEffect(() => {\r\n    _applySlabThickness(\r\n      state.value,\r\n      state.modeChecked,\r\n      toolbarClickCallback,\r\n      button\r\n    );\r\n  }, [state.operation, state.modeChecked, state.value]);\r\n\r\n  return (\r\n    <div className={_className}>\r\n      <div className=\"container\">\r\n        <ToolbarSlider\r\n          value={state.value}\r\n          min={state.sliderMin}\r\n          max={state.sliderMax}\r\n          onChange={onChangeSlider}\r\n        />\r\n        <ToolbarLabel key=\"toolbar-label\" label={label} />\r\n      </div>\r\n      <div className=\"controller\">\r\n        <Checkbox\r\n          label=\"mode\"\r\n          checked={state.modeChecked}\r\n          onChange={onChangeCheckbox}\r\n        ></Checkbox>\r\n        <OldSelect\r\n          key=\"toolbar-select\"\r\n          options={selectOptions}\r\n          value={selectOptions[INITIAL_OPTION_INDEX].value}\r\n          onChange={onChangeSelect}\r\n        ></OldSelect>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSlabThicknessToolbarComponent.propTypes = {\r\n  parentContext: PropTypes.object.isRequired,\r\n  toolbarClickCallback: PropTypes.func.isRequired,\r\n  button: PropTypes.object.isRequired,\r\n  activeButtons: PropTypes.array.isRequired,\r\n  isActive: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SlabThicknessToolbarComponent;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ToolbarButton } from '@ohif/ui';\r\nimport { utils } from '@ohif/core';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\nlet isVisible = true;\r\n\r\nconst _isDisplaySetReconstructable = (viewportSpecificData = {}, activeViewportIndex) => {\r\n  if (!viewportSpecificData[activeViewportIndex]) {\r\n    return false;\r\n  };\r\n\r\n  const { displaySetInstanceUID, StudyInstanceUID } = viewportSpecificData[\r\n    activeViewportIndex\r\n  ];\r\n\r\n  const studies = studyMetadataManager.all();\r\n\r\n  const study = studies.find(\r\n    study => study.studyInstanceUID === StudyInstanceUID\r\n  );\r\n\r\n  if (!study) {\r\n    return false;\r\n  }\r\n\r\n  const displaySet = study._displaySets.find(set => set.displaySetInstanceUID === displaySetInstanceUID);\r\n\r\n  if (!displaySet) {\r\n    return false;\r\n  };\r\n\r\n  return displaySet.isReconstructable;\r\n};\r\n\r\nfunction VTKMPRToolbarButton({\r\n  parentContext,\r\n  toolbarClickCallback,\r\n  button,\r\n  activeButtons,\r\n  isActive,\r\n  className,\r\n}) {\r\n  const { id, label, icon } = button;\r\n  const { viewportSpecificData, activeViewportIndex } = useSelector(state => {\r\n    const { viewports = {} } = state;\r\n    const { viewportSpecificData, activeViewportIndex } = viewports;\r\n\r\n    return {\r\n      viewportSpecificData,\r\n      activeViewportIndex,\r\n    }\r\n  });\r\n\r\n  isVisible = _isDisplaySetReconstructable(\r\n    viewportSpecificData,\r\n    activeViewportIndex,\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isVisible && (\r\n        <ToolbarButton\r\n          key={id}\r\n          label={label}\r\n          icon={icon}\r\n          onClick={evt => toolbarClickCallback(button, evt)}\r\n          isActive={isActive}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nVTKMPRToolbarButton.propTypes = {\r\n  parentContext: PropTypes.object.isRequired,\r\n  toolbarClickCallback: PropTypes.func.isRequired,\r\n  button: PropTypes.object.isRequired,\r\n  activeButtons: PropTypes.array.isRequired,\r\n  isActive: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default VTKMPRToolbarButton;\r\n","import SlabThicknessToolbarComponent from './toolbarComponents/SlabThicknessToolbarComponent';\r\nimport VTKMPRToolbarButton from './toolbarComponents/VTKMPRToolbarButton';\r\n\r\nconst TOOLBAR_BUTTON_TYPES = {\r\n  COMMAND: 'command',\r\n  SET_TOOL_ACTIVE: 'setToolActive',\r\n};\r\n\r\nconst definitions = [\r\n  {\r\n    id: 'Crosshairs',\r\n    label: 'Crosshairs',\r\n    icon: 'crosshairs',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'enableCrosshairsTool',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'WWWC',\r\n    label: 'WWWC',\r\n    icon: 'level',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'enableLevelTool',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'Reset',\r\n    label: 'Reset',\r\n    icon: 'reset',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'resetMPRView',\r\n    commandOptions: {},\r\n  },\r\n  /*\r\n  {\r\n    id: 'Rotate',\r\n    label: 'Rotate',\r\n    icon: '3d-rotate',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n    commandName: 'enableRotateTool',\r\n    commandOptions: {},\r\n  },\r\n  */\r\n  /*\r\n  {\r\n    id: 'setBlendModeToComposite',\r\n    label: 'Disable MIP',\r\n    icon: 'times',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'setBlendModeToComposite',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'setBlendModeToMaximumIntensity',\r\n    label: 'Enable MIP',\r\n    icon: 'soft-tissue',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'setBlendModeToMaximumIntensity',\r\n    commandOptions: {},\r\n  },\r\n\r\n  {\r\n    id: 'increaseSlabThickness',\r\n    label: 'Increase Slab Thickness',\r\n    icon: 'caret-up',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'increaseSlabThickness',\r\n    commandOptions: {},\r\n  },\r\n  {\r\n    id: 'decreaseSlabThickness',\r\n    label: 'Decrease Slab Thickness',\r\n    icon: 'caret-down',\r\n    //\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'decreaseSlabThickness',\r\n    commandOptions: {},\r\n  },\r\n  */\r\n  {\r\n    id: 'changeSlabThickness',\r\n    label: 'Slab Thickness',\r\n    icon: 'soft-tissue',\r\n    CustomComponent: SlabThicknessToolbarComponent,\r\n    commandName: 'setSlabThickness',\r\n    actionButton: {\r\n      id: 'setSlabThickness',\r\n      label: 'slider',\r\n      type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n      commandName: 'setSlabThickness',\r\n      commandOptions: {},\r\n    },\r\n    deactivateButton: {\r\n      id: 'setBlendModeToComposite',\r\n      type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n      commandName: 'setBlendModeToComposite',\r\n      commandOptions: {},\r\n    },\r\n    operationButtons: [\r\n      {\r\n        id: 'setBlendModeToMaximumIntensity',\r\n        label: 'MIP',\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setBlendModeToMaximumIntensity',\r\n        commandOptions: {},\r\n      },\r\n      {\r\n        id: 'setBlendModeToMinimumIntensity',\r\n        label: 'MinIP',\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setBlendModeToMinimumIntensity',\r\n        commandOptions: {},\r\n      },\r\n      {\r\n        id: 'setBlendModeToAverageIntensity',\r\n        label: 'AvgIP',\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setBlendModeToAverageIntensity',\r\n        commandOptions: {},\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '2DMPR',\r\n    label: '2D MPR',\r\n    icon: 'cube',\r\n    //\r\n    CustomComponent: VTKMPRToolbarButton,\r\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\r\n    commandName: 'mpr2d',\r\n    context: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n  },\r\n];\r\n\r\nexport default {\r\n  definitions,\r\n  defaultContext: 'ACTIVE_VIEWPORT::VTK',\r\n};\r\n","import React from 'react';\r\n\r\nexport default function withCommandsManager(Component, commandsManager = {}) {\r\n  return class WithCommandsManager extends React.Component {\r\n    render() {\r\n      return (\r\n        <Component\r\n          {...this.props}\r\n          onScroll={viewportIndex =>\r\n            commandsManager.runCommand('getVtkApiForViewportIndex', {\r\n              index: viewportIndex,\r\n            })\r\n          }\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { asyncComponent, retryImport } from '@ohif/ui';\r\n\r\nimport commandsModule from './commandsModule.js';\r\nimport toolbarModule from './toolbarModule.js';\r\nimport withCommandsManager from './withCommandsManager.js';\r\nimport { version } from '../package.json';\r\n// This feels weird\r\n// import loadLocales from './loadLocales';\r\n\r\nconst OHIFVTKViewport = asyncComponent(() =>\r\n  retryImport(() =>\r\n    import(/* webpackChunkName: \"OHIFVTKViewport\" */ './OHIFVTKViewport.js')\r\n  )\r\n);\r\n\r\nconst vtkExtension = {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'vtk',\r\n  version,\r\n\r\n  getViewportModule({ commandsManager, servicesManager }) {\r\n    const ExtendedVTKViewport = props => (\r\n      <OHIFVTKViewport\r\n        {...props}\r\n        servicesManager={servicesManager}\r\n        commandsManager={commandsManager}\r\n      />\r\n    );\r\n    return withCommandsManager(ExtendedVTKViewport, commandsManager);\r\n  },\r\n  getToolbarModule() {\r\n    return toolbarModule;\r\n  },\r\n  getCommandsModule({ commandsManager, servicesManager }) {\r\n    return commandsModule({ commandsManager, servicesManager });\r\n  },\r\n};\r\n\r\nexport default vtkExtension;\r\n\r\nexport { vtkExtension };\r\n\r\n// loadLocales();\r\n","import { MODULE_TYPES, utils, metadata } from '@ohif/core';\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  BASIC_TEXT_SR: '1.2.840.10008.5.1.4.1.1.88.11',\r\n  ENHANCED_SR: '1.2.840.10008.5.1.4.1.1.88.22',\r\n  COMPREHENSIVE_SR: '1.2.840.10008.5.1.4.1.1.88.33',\r\n  COMPREHENSIVE_3D_SR: '1.2.840.10008.5.1.4.1.1.88.34',\r\n  PROCEDURE_LOG_STORAGE: '1.2.840.10008.5.1.4.1.1.88.40',\r\n  MAMMOGRAPHY_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.50',\r\n  CHEST_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.65',\r\n  X_RAY_RADIATION_DOSE_SR: '1.2.840.10008.5.1.4.1.1.88.67',\r\n  ACQUISITION_CONTEXT_SR_STORAGE: '1.2.840.10008.5.1.4.1.1.88.71',\r\n};\r\n\r\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\r\n\r\n// TODO: Handle the case where there is more than one SOP Class Handler for the\r\n// same SOP Class\r\nconst OHIFDicomHtmlSopClassHandler = {\r\n  id: 'OHIFDicomHtmlSopClassHandler',\r\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n  sopClassUIDs,\r\n  getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n      SeriesDate,\r\n      SeriesTime,\r\n    } = metadata;\r\n\r\n    const srDisplaySet = {\r\n      plugin: 'html',\r\n      Modality: 'SR',\r\n      displaySetInstanceUID: utils.guid(),\r\n      wadoRoot: study.getData().wadoRoot,\r\n      wadoUri: instance.getData().wadouri,\r\n      SOPInstanceUID: instance.getSOPInstanceUID(),\r\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n      StudyInstanceUID: study.getStudyInstanceUID(),\r\n      SeriesDescription,\r\n      metadata,\r\n      SeriesDate,\r\n      SeriesTime,\r\n      SeriesNumber,\r\n      authorizationHeaders,\r\n      sopClassUids: sopClassUIDs,\r\n      images: series._instances,\r\n      isDerived: true,\r\n      referencedDisplaySets: [],\r\n    };\r\n\r\n    srDisplaySet.getSourceDisplaySet = function() {\r\n      return srDisplaySet.referencedDisplaySets;\r\n    };\r\n\r\n    return srDisplaySet;\r\n  },\r\n};\r\n\r\nexport default OHIFDicomHtmlSopClassHandler;\r\n","import React from 'react';\r\nimport OHIFDicomHtmlSopClassHandler from './OHIFDicomHtmlSopClassHandler.js';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./OHIFDicomHtmlViewport');\r\n});\r\n\r\nconst OHIFDicomHtmlViewport = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'html',\r\n  version,\r\n\r\n  getViewportModule() {\r\n    return OHIFDicomHtmlViewport;\r\n  },\r\n  getSopClassHandlerModule() {\r\n    return OHIFDicomHtmlSopClassHandler;\r\n  },\r\n};\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nconst { importInternal } = cornerstoneTools;\r\nconst draw = importInternal('drawing/draw');\r\nconst drawLine = importInternal('drawing/drawLine');\r\nconst getNewContext = importInternal('drawing/getNewContext');\r\n\r\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\r\n  const context = getNewContext(eventData.canvasContext.canvas);\r\n  const { element } = eventData;\r\n\r\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\r\n\r\n  const { clientWidth: width, clientHeight: height } = element;\r\n\r\n  const offset = 10;\r\n\r\n  draw(context, context => {\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\r\n      { x: width, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\r\n      { x: 0, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\r\n      { x: centerCanvas.x, y: height },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\r\n      { x: centerCanvas.x, y: 0 },\r\n      options,\r\n      'canvas'\r\n    );\r\n  });\r\n}\r\n","import cornerstoneTools, {\r\n  importInternal,\r\n  getToolState,\r\n  toolColors,\r\n  getModule,\r\n  globalImageIdSpecificToolStateManager,\r\n} from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\r\nimport TOOL_NAMES from './TOOL_NAMES';\r\n\r\nconst { DICOM_SEG_TEMP_CROSSHAIRS_TOOL } = TOOL_NAMES;\r\nconst { getters } = getModule('segmentation');\r\n\r\n// Cornerstone 3rd party dev kit imports\r\nconst BaseTool = importInternal('base/BaseTool');\r\n\r\n/**\r\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\r\n * @extends cornerstoneTools.BaseTool\r\n */\r\nexport default class DICOMSegTempCrosshairsTool extends BaseTool {\r\n  constructor(props = {}) {\r\n    const defaultProps = {\r\n      mixins: ['enabledOrDisabledBinaryTool'],\r\n      name: DICOM_SEG_TEMP_CROSSHAIRS_TOOL,\r\n    };\r\n\r\n    const initialProps = Object.assign(defaultProps, props);\r\n\r\n    super(initialProps);\r\n\r\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\r\n  }\r\n\r\n  renderToolData(evt) {\r\n    const eventData = evt.detail;\r\n    const { element } = eventData;\r\n    const toolState = getToolState(evt.currentTarget, this.name);\r\n\r\n    if (!toolState) {\r\n      return;\r\n    }\r\n\r\n    // We have tool data for this element - iterate over each one and draw it\r\n\r\n    for (let i = 0; i < toolState.data.length; i++) {\r\n      const data = toolState.data[i];\r\n      const crossHairCenter = data.center;\r\n\r\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\r\n        color: toolColors.getActiveColor(),\r\n        lineWidth: 1,\r\n      });\r\n\r\n      // Remove the crosshairs, we only render them for one redraw.\r\n      toolState.data.pop();\r\n    }\r\n  }\r\n}\r\n\r\nDICOMSegTempCrosshairsTool.addCrosshair = (element, imageId, segmentNumber) => {\r\n  const labelmap3D = getters.labelmap3D(element);\r\n  const stackToolState = cornerstoneTools.getToolState(element, 'stack');\r\n  const enabledElement = cornerstone.getEnabledElement(element);\r\n\r\n  const { rows, columns } = enabledElement.image;\r\n\r\n  if (!stackToolState) {\r\n    return;\r\n  }\r\n\r\n  const imageIds = stackToolState.data[0].imageIds;\r\n  const imageIdIndex = imageIds.findIndex(imgId => imgId === imageId);\r\n\r\n  const labelmap2D = labelmap3D.labelmaps2D[imageIdIndex];\r\n  const { pixelData } = labelmap2D;\r\n\r\n  let xCenter = 0;\r\n  let yCenter = 0;\r\n\r\n  let count = 0;\r\n\r\n  for (let y = 0; y < rows; y++) {\r\n    for (let x = 0; x < columns; x++) {\r\n      if (pixelData[y * columns + x] === segmentNumber) {\r\n        count++;\r\n        xCenter += x + 0.5;\r\n        yCenter += y + 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  xCenter /= count;\r\n  yCenter /= count;\r\n\r\n  const globalToolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  if (!globalToolState[imageId]) {\r\n    globalToolState[imageId] = {};\r\n  }\r\n\r\n  const imageIdSpecificToolState = globalToolState[imageId];\r\n\r\n  if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL]) {\r\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL] = { data: [] };\r\n  } else if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data) {\r\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data = [];\r\n  }\r\n\r\n  const toolSpecificData =\r\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data;\r\n\r\n  toolSpecificData.push({ center: { x: xCenter, y: yCenter }, segmentNumber });\r\n\r\n  // Enable the tool if not enabled for the element.\r\n\r\n  const tool = cornerstoneTools.getToolForElement(\r\n    element,\r\n    DICOM_SEG_TEMP_CROSSHAIRS_TOOL\r\n  );\r\n\r\n  if (tool.mode !== 'enabled') {\r\n    // If not already active or passive, set passive so contours render.\r\n    cornerstoneTools.setToolEnabled(DICOM_SEG_TEMP_CROSSHAIRS_TOOL);\r\n  }\r\n};\r\n","const TOOL_NAMES = {\r\n  DICOM_SEG_TEMP_CROSSHAIRS_TOOL: 'DICOMSegTempCrosshairsTool',\r\n};\r\n\r\nexport default TOOL_NAMES;\r\n","/* TODO: Creation tools (future release).\r\n\r\nconst TOOLBAR_BUTTON_TYPES = {\r\n  COMMAND: 'command',\r\n  SET_TOOL_ACTIVE: 'setToolActive',\r\n  BUILT_IN: 'builtIn',\r\n};\r\n\r\n*/\r\n\r\nconst definitions = []; /* TODO: Creation tools (future release). [\r\n  {\r\n    id: 'SegDropdown',\r\n    label: 'Segmentation',\r\n    icon: 'ellipse-circle',\r\n    buttons: [\r\n      {\r\n        id: 'Brush',\r\n        label: 'Brush',\r\n        icon: 'brush',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'Brush' },\r\n      },\r\n      {\r\n        id: 'SphericalBrush',\r\n        label: 'Spherical',\r\n        icon: 'sphere',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'SphericalBrush' },\r\n      },\r\n      {\r\n        id: 'CorrectionScissors',\r\n        label: 'Correction Scissors',\r\n        icon: 'scissors',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'CorrectionScissors' },\r\n      },\r\n      {\r\n        id: 'BrushEraser',\r\n        label: 'Eraser',\r\n        icon: 'trash',\r\n        //\r\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\r\n        commandName: 'setToolActive',\r\n        commandOptions: { toolName: 'BrushEraser' },\r\n      },\r\n    ],\r\n  },\r\n]; */\r\n\r\nexport default {\r\n  definitions,\r\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\r\n};\r\n","import dcmjs from 'dcmjs';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nexport default async function loadSegmentation(\r\n  imageIds,\r\n  segDisplaySet,\r\n  labelmapBuffer,\r\n  segMetadata,\r\n  segmentsOnFrame,\r\n  labelmapSegments\r\n) {\r\n  const { setters } = cornerstoneTools.getModule('segmentation');\r\n\r\n  // TODO: Could define a color LUT based on colors in the SEG.\r\n  const labelmapIndex = _getNextLabelmapIndex(imageIds[0]);\r\n  const colorLUTIndex = _makeColorLUTAndGetIndex(segMetadata);\r\n\r\n  setters.labelmap3DByFirstImageId(\r\n    imageIds[0],\r\n    labelmapBuffer,\r\n    labelmapIndex,\r\n    segMetadata,\r\n    imageIds.length,\r\n    segmentsOnFrame,\r\n    colorLUTIndex\r\n  );\r\n\r\n  if (!segDisplaySet.labelmapSegments) {\r\n    segDisplaySet.labelmapSegments = {};\r\n  }\r\n\r\n  /**\r\n   * Cache each labelmap segments.\r\n   * This data is used to determine the active label map when a given segment is activated/clicked.\r\n   */\r\n  segDisplaySet.labelmapSegments[labelmapIndex] = labelmapSegments.length\r\n    ? Array.from(\r\n        new Set(labelmapSegments.filter(a => !!a).reduce((a, b) => a.concat(b)))\r\n      )\r\n    : [];\r\n  segDisplaySet.labelmapIndex = labelmapIndex;\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\r\n   *\r\n   * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\r\n   * or other components that could rely on loaded segmentations that\r\n   * the segments were loaded so that e.g. when the user opens the panel\r\n   * before the segments are fully loaded, the panel can subscribe to this custom event\r\n   * and update itself with the new segments.\r\n   *\r\n   * This limitation is due to the fact that the cs segmentation module is an object (which will be\r\n   * updated after the segments are loaded) that React its not aware of its changes\r\n   * because the module object its not passed in to the panel component as prop but accessed externally.\r\n   *\r\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n   * allows us to easily watch the module or the segmentations loading process in any other component\r\n   * without subscribing to external events.\r\n   */\r\n  console.log('Segmentation loaded.');\r\n  const event = new CustomEvent('extensiondicomsegmentationsegloaded', {\r\n    detail: {\r\n      imageIds,\r\n      segDisplaySet,\r\n      labelmapBuffer,\r\n      segMetadata,\r\n      segmentsOnFrame,\r\n      labelmapSegments,\r\n    },\r\n  });\r\n  document.dispatchEvent(event);\r\n\r\n  return labelmapIndex;\r\n}\r\n\r\nfunction _getNextLabelmapIndex(firstImageId) {\r\n  const { state } = cornerstoneTools.getModule('segmentation');\r\n  const brushStackState = state.series[firstImageId];\r\n\r\n  let labelmapIndex = 0;\r\n\r\n  if (brushStackState) {\r\n    const { labelmaps3D } = brushStackState;\r\n    labelmapIndex = labelmaps3D.length;\r\n\r\n    for (let i = 0; i < labelmaps3D.length; i++) {\r\n      if (!labelmaps3D[i]) {\r\n        labelmapIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return labelmapIndex;\r\n}\r\n\r\nfunction _makeColorLUTAndGetIndex(segMetadata) {\r\n  const { setters, state } = cornerstoneTools.getModule('segmentation');\r\n  const { colorLutTables } = state;\r\n  const colorLUTIndex = _getNextColorLUTIndex();\r\n\r\n  const { data } = segMetadata;\r\n\r\n  if (\r\n    !data.some(\r\n      segment =>\r\n        segment &&\r\n        (segment.ROIDisplayColor || segment.RecommendedDisplayCIELabValue)\r\n    )\r\n  ) {\r\n    // Use default cornerstoneTools colorLUT.\r\n    return 0;\r\n  }\r\n\r\n  const colorLUT = [];\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    const segment = data[i];\r\n    if (!segment) {\r\n      continue;\r\n    }\r\n\r\n    const { ROIDisplayColor, RecommendedDisplayCIELabValue } = segment;\r\n\r\n    if (RecommendedDisplayCIELabValue) {\r\n      const rgb = dcmjs.data.Colors.dicomlab2RGB(\r\n        RecommendedDisplayCIELabValue\r\n      ).map(x => Math.round(x * 255));\r\n\r\n      colorLUT[i] = [...rgb, 255];\r\n    } else if (ROIDisplayColor) {\r\n      colorLUT[i] = [...ROIDisplayColor, 255];\r\n    } else {\r\n      colorLUT[i] = [...colorLutTables[0][i]];\r\n    }\r\n  }\r\n\r\n  colorLUT.shift();\r\n  setters.colorLUT(colorLUTIndex, colorLUT);\r\n\r\n  return colorLUTIndex;\r\n}\r\n\r\nfunction _getNextColorLUTIndex() {\r\n  const { state } = cornerstoneTools.getModule('segmentation');\r\n  const { colorLutTables } = state;\r\n\r\n  let colorLUTIndex = colorLutTables.length;\r\n\r\n  for (let i = 0; i < colorLutTables.length; i++) {\r\n    if (!colorLutTables[i]) {\r\n      colorLUTIndex = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return colorLUTIndex;\r\n}\r\n","export default function refreshViewports() {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    cornerstone.updateImage(enabledElement.element);\r\n  });\r\n}\r\n","import { utils, log } from '@ohif/core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport refreshViewports from './refreshViewports';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} viewportSpecificData\r\n * @param {*} studies\r\n * @param {*} displaySet\r\n * @param {*} firstImageId\r\n * @param {*} activeLabelmapIndex\r\n * @returns\r\n */\r\nexport default async function setActiveLabelmap(\r\n  referencedDisplaySet,\r\n  studies,\r\n  displaySet,\r\n  callback = () => {},\r\n  onDisplaySetLoadFailure = err => {\r\n    console.error(err.message);\r\n  }\r\n) {\r\n  const studyMetadata = studyMetadataManager.get(\r\n    referencedDisplaySet.StudyInstanceUID\r\n  );\r\n  const firstImageId = studyMetadata.getFirstImageId(\r\n    referencedDisplaySet.displaySetInstanceUID\r\n  );\r\n\r\n  let { state } = cornerstoneTools.getModule('segmentation');\r\n\r\n  let brushStackState = state.series[firstImageId];\r\n  const activeLabelmapIndex = brushStackState\r\n    ? brushStackState.activeLabelmapIndex\r\n    : undefined;\r\n\r\n  let labelmapIndex =\r\n    displaySet.hasOverlapping === true\r\n      ? displaySet.originLabelMapIndex\r\n      : displaySet.labelmapIndex;\r\n\r\n  if (labelmapIndex === activeLabelmapIndex) {\r\n    log.warn(`${activeLabelmapIndex} is already the active labelmap`);\r\n    return labelmapIndex;\r\n  }\r\n\r\n  if (!displaySet.isLoaded && !displaySet.loadError) {\r\n    try {\r\n      await displaySet.load(referencedDisplaySet, studies);\r\n    } catch (error) {\r\n      displaySet.isLoaded = false;\r\n      displaySet.loadError = true;\r\n      displaySet.segLoadErrorMessagge = error.message;\r\n      onDisplaySetLoadFailure(error);\r\n\r\n      /*\r\n       * TODO: Improve the way we notify parts of the app\r\n       * that depends on derived display sets to be loaded.\r\n       * (Implement pubsub for better tracking of derived display sets)\r\n       */\r\n      const event = new CustomEvent('segmentationLoadingError');\r\n      document.dispatchEvent(event);\r\n\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  labelmapIndex =\r\n    displaySet.hasOverlapping === true\r\n      ? displaySet.originLabelMapIndex\r\n      : displaySet.labelmapIndex;\r\n\r\n  // This might have just been created, so need to use the non-cached value.\r\n  state = cornerstoneTools.getModule('segmentation').state;\r\n\r\n  brushStackState = state.series[firstImageId];\r\n  if (brushStackState) {\r\n    brushStackState.activeLabelmapIndex = labelmapIndex;\r\n  }\r\n\r\n  refreshViewports();\r\n  callback();\r\n\r\n  return labelmapIndex;\r\n}\r\n","import setActiveLabelmap from './utils/setActiveLabelMap';\r\nimport { metadata } from '@ohif/core';\r\n\r\nexport default function getSourceDisplaySet(studies, segDisplaySet, activateLabelMap = true, onDisplaySetLoadFailureHandler) {\r\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(segDisplaySet, studies);\r\n\r\n  let activatedLabelmapPromise;\r\n  if (activateLabelMap) {\r\n    activatedLabelmapPromise = setActiveLabelmap(referencedDisplaySet, studies, segDisplaySet, undefined, onDisplaySetLoadFailureHandler);\r\n  }\r\n\r\n  return {\r\n    referencedDisplaySet : referencedDisplaySet,\r\n    activatedLabelmapPromise : activatedLabelmapPromise\r\n  }\r\n}\r\n","import { MODULE_TYPES, utils } from '@ohif/core';\r\nimport loadSegmentation from './loadSegmentation';\r\nimport getSourceDisplaySet from './getSourceDisplaySet';\r\nimport OHIF from '@ohif/core';\r\nimport dcmjs from 'dcmjs';\r\n\r\nconst { DicomLoaderService } = OHIF.utils;\r\nconst { DicomMessage, DicomMetaDictionary } = dcmjs.data;\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  DICOM_SEG: '1.2.840.10008.5.1.4.1.1.66.4',\r\n};\r\n\r\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\r\n\r\nexport default function getSopClassHandlerModule({ servicesManager }) {\r\n  // TODO: Handle the case where there is more than one SOP Class Handler for the\r\n  // same SOP Class.\r\n  return {\r\n    id: 'OHIFDicomSegSopClassHandler',\r\n    type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n    sopClassUIDs,\r\n    getDisplaySetFromSeries: function(\r\n      series,\r\n      study,\r\n      dicomWebClient,\r\n      authorizationHeaders\r\n    ) {\r\n      const instance = series.getFirstInstance();\r\n      const metadata = instance.getData().metadata;\r\n\r\n      const {\r\n        SeriesDate,\r\n        SeriesTime,\r\n        SeriesDescription,\r\n        FrameOfReferenceUID,\r\n        SOPInstanceUID,\r\n        SeriesInstanceUID,\r\n        StudyInstanceUID,\r\n        SeriesNumber,\r\n      } = metadata;\r\n\r\n      const segDisplaySet = {\r\n        Modality: 'SEG',\r\n        displaySetInstanceUID: utils.guid(),\r\n        wadoRoot: study.getData().wadoRoot,\r\n        wadoUri: instance.getData().wadouri,\r\n        SOPInstanceUID,\r\n        SeriesInstanceUID,\r\n        StudyInstanceUID,\r\n        FrameOfReferenceUID,\r\n        authorizationHeaders,\r\n        isDerived: true,\r\n        referencedDisplaySetUID: null, // Assigned when loaded.\r\n        labelmapIndex: null, // Assigned when loaded.\r\n        isLoaded: false,\r\n        loadError: false,\r\n        hasOverlapping: false,\r\n        SeriesDate,\r\n        SeriesTime,\r\n        SeriesNumber,\r\n        SeriesDescription,\r\n        metadata,\r\n        tolerance: 1e-2,\r\n      };\r\n\r\n      segDisplaySet.getSourceDisplaySet = function(\r\n        studies,\r\n        activateLabelMap = true,\r\n        onDisplaySetLoadFailureHandler\r\n      ) {\r\n        return getSourceDisplaySet(\r\n          studies,\r\n          segDisplaySet,\r\n          activateLabelMap,\r\n          onDisplaySetLoadFailureHandler\r\n        );\r\n      };\r\n\r\n      segDisplaySet.load = async function(referencedDisplaySet, studies) {\r\n        segDisplaySet.isLoaded = true;\r\n        const { StudyInstanceUID } = referencedDisplaySet;\r\n        const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\r\n          segDisplaySet,\r\n          studies\r\n        );\r\n        const dicomData = DicomMessage.readFile(segArrayBuffer);\r\n        const dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\r\n        dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\r\n        const imageIds = _getImageIdsForDisplaySet(\r\n          studies,\r\n          StudyInstanceUID,\r\n          referencedDisplaySet.SeriesInstanceUID\r\n        );\r\n\r\n        const results = await _parseSeg(segArrayBuffer, imageIds, segDisplaySet.tolerance);\r\n        if (results === undefined) {\r\n          return;\r\n        }\r\n        const {\r\n          labelmapBufferArray,\r\n          segMetadata,\r\n          segmentsOnFrame,\r\n          segmentsOnFrameArray,\r\n        } = results;\r\n        let labelmapIndex;\r\n        if (labelmapBufferArray.length > 1) {\r\n          let labelmapIndexes = [];\r\n          for (let i = 0; i < labelmapBufferArray.length; ++i) {\r\n            segMetadata.segmentationSeriesInstanceUID =\r\n              segDisplaySet.SeriesInstanceUID;\r\n            segMetadata.hasOverlapping = true;\r\n            labelmapIndexes.push(\r\n              await loadSegmentation(\r\n                imageIds,\r\n                segDisplaySet,\r\n                labelmapBufferArray[i],\r\n                segMetadata,\r\n                segmentsOnFrame,\r\n                segmentsOnFrameArray[i]\r\n              )\r\n            );\r\n          }\r\n          /**\r\n           * Since overlapping segments have virtual labelmaps,\r\n           * originLabelMapIndex is used in the panel to select the correct dropdown value.\r\n           */\r\n          segDisplaySet.hasOverlapping = true;\r\n          segDisplaySet.originLabelMapIndex = labelmapIndexes[0];\r\n          labelmapIndex = labelmapIndexes[0];\r\n          console.warn('Overlapping segments!');\r\n        } else {\r\n          segMetadata.segmentationSeriesInstanceUID =\r\n            segDisplaySet.SeriesInstanceUID;\r\n          segMetadata.hasOverlapping = false;\r\n          labelmapIndex = await loadSegmentation(\r\n            imageIds,\r\n            segDisplaySet,\r\n            labelmapBufferArray[0],\r\n            segMetadata,\r\n            segmentsOnFrame,\r\n            []\r\n          );\r\n        }\r\n      };\r\n\r\n      return segDisplaySet;\r\n    },\r\n  };\r\n}\r\n\r\nfunction _parseSeg(\r\n  arrayBuffer,\r\n  imageIds,\r\n  tolerance = 1e-2,\r\n  skipOverlapping = false,\r\n  cornerstoneToolsVersion = 4\r\n) {\r\n  return dcmjs.adapters.Cornerstone.Segmentation.generateToolState(\r\n    imageIds,\r\n    arrayBuffer,\r\n    cornerstone.metaData,\r\n    skipOverlapping,\r\n    tolerance,\r\n    cornerstoneToolsVersion\r\n  );\r\n}\r\n\r\nfunction _getImageIdsForDisplaySet(\r\n  studies,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID\r\n) {\r\n  const study = studies.find(\r\n    study => study.StudyInstanceUID === StudyInstanceUID\r\n  );\r\n\r\n  const displaySets = study.displaySets.filter(displaySet => {\r\n    return displaySet.SeriesInstanceUID === SeriesInstanceUID;\r\n  });\r\n\r\n  if (displaySets.length > 1) {\r\n    console.warn(\r\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\r\n    );\r\n    // TODO -> We could make check the instance list and see if any match?\r\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\r\n    // ^ Will that even happen?\r\n  }\r\n\r\n  const referencedDisplaySet = displaySets[0];\r\n\r\n  return referencedDisplaySet.images.map(image => image.getImageId());\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BrushColorSelector.css';\r\n\r\nconst BrushColorSelector = ({ defaultColor, index, onNext, onPrev }) => (\r\n  <div className=\"dcmseg-brush-color-selector\">\r\n    <div\r\n      className=\"selector-active-segment\"\r\n      style={{ backgroundColor: defaultColor }}\r\n    >\r\n      {index}\r\n    </div>\r\n    <div className=\"selector-buttons\">\r\n      <button onClick={onPrev}>\r\n        Previous\r\n      </button>\r\n      <button onClick={onNext}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nBrushColorSelector.propTypes = {\r\n  defaultColor: PropTypes.string.isRequired,\r\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  onPrev: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BrushColorSelector;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Range } from '@ohif/ui';\r\n\r\nimport './BrushRadius.css';\r\n\r\nconst BrushRadius = ({ value, onChange, min, max, step }) => (\r\n  <div className=\"dcmseg-brush-radius\">\r\n    <label htmlFor=\"dcmseg-brush-radius\">Brush Radius</label>\r\n    <Range\r\n      value={value}\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      onChange={onChange}\r\n      id=\"dcmseg-brush-radius\"\r\n    />\r\n  </div>\r\n);\r\n\r\nBrushRadius.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.number,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  step: PropTypes.number,\r\n};\r\n\r\nBrushRadius.defaultProps = {\r\n  onChange: () => { },\r\n  min: 1,\r\n  max: 50,\r\n  step: 1,\r\n};\r\n\r\nexport default BrushRadius;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SegmentationItem.css';\r\n\r\nconst SegmentationItem = ({ onClick, title, description }) => {\r\n  return (\r\n    <li className=\"dcmseg-segmentation-item\" onClick={onClick}>\r\n      <div className=\"segmentation-meta\">\r\n        <div className=\"segmentation-meta-title\">{title}</div>\r\n        <div className=\"segmentation-meta-description\">{description}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nSegmentationItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n\r\nSegmentationItem.defaultProps = {\r\n  description: ''\r\n};\r\n\r\nexport default SegmentationItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Range } from '@ohif/ui';\r\n\r\nimport './SegmentationSettings.css';\r\n\r\nconst SegmentationSettings = ({ configuration, onBack, onChange, servicesManager, disabledFields = [] }) => {\r\n  const [state, setState] = useState({\r\n    renderFill: configuration.renderFill,\r\n    renderOutline: configuration.renderOutline,\r\n    shouldRenderInactiveLabelmaps: configuration.shouldRenderInactiveLabelmaps,\r\n    fillAlpha: configuration.fillAlpha,\r\n    outlineAlpha: configuration.outlineAlpha,\r\n    outlineWidth: configuration.outlineWidth,\r\n    fillAlphaInactive: configuration.fillAlphaInactive,\r\n    outlineAlphaInactive: configuration.outlineAlphaInactive,\r\n    segsTolerance: configuration.segsTolerance,\r\n  });\r\n\r\n  useEffect(() => {\r\n    onChange(state);\r\n  }, [state]);\r\n\r\n  const check = field => {\r\n    setState(state => ({ ...state, [field]: !state[field] }));\r\n  };\r\n\r\n  const save = (field, value) => {\r\n    setState(state => ({ ...state, [field]: value }));\r\n  };\r\n\r\n  const once = fn => (...args) => {\r\n    if (!fn) return;\r\n    fn(...args);\r\n    fn = null;\r\n  };\r\n\r\n  const segTolValue = document.getElementById('segToleranceValue');\r\n  if (segTolValue) {\r\n    segTolValue.onchange = once(function() {\r\n      const { UINotificationService, LoggerService } = servicesManager.services;\r\n\r\n      const error = new Error(\r\n        'Segmentation loader tolerance changed.\\\r\n        This operation can potentially generate errors in the Segmentation parsing.'\r\n      );\r\n\r\n      LoggerService.error({ error, message: error.message });\r\n      UINotificationService.show({\r\n        title: 'Segmentation panel',\r\n        message: error.message,\r\n        type: 'warning',\r\n        autoClose: true,\r\n      });\r\n  });\r\n}\r\n\r\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"dcmseg-segmentation-settings\">\r\n      <div className=\"settings-title\">\r\n        <h3>Segmentations Settings</h3>\r\n        <button className=\"return-button\" onClick={onBack}>\r\n          Back\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"settings-group\"\r\n        style={{ marginBottom: state.renderFill ? 15 : 0 }}\r\n      >\r\n        <CustomCheck\r\n          label=\"Segment Fill\"\r\n          checked={state.renderFill}\r\n          onChange={() => check('renderFill')}\r\n        />\r\n        {state.renderFill && (\r\n          <CustomRange\r\n            label=\"Opacity\"\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            value={state.fillAlpha * 100}\r\n            onChange={event => save('fillAlpha', toFloat(event.target.value))}\r\n            showPercentage\r\n          />\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"settings-group\"\r\n        style={{ marginBottom: state.renderOutline ? 15 : 0 }}\r\n      >\r\n        <CustomCheck\r\n          label=\"Segment Outline\"\r\n          checked={state.renderOutline}\r\n          onChange={() => check('renderOutline')}\r\n        />\r\n        {state.renderOutline && (\r\n          <>\r\n            {!disabledFields.includes('outlineAlpha') && (\r\n              <CustomRange\r\n                value={state.outlineAlpha * 100}\r\n                label=\"Opacity\"\r\n                showPercentage\r\n                step={1}\r\n                min={0}\r\n                max={100}\r\n                onChange={event => save('outlineAlpha', toFloat(event.target.value))}\r\n              />\r\n            )}\r\n            {!disabledFields.includes('outlineWidth') && (\r\n              <CustomRange\r\n                value={state.outlineWidth}\r\n                label=\"Width\"\r\n                showValue\r\n                step={1}\r\n                min={0}\r\n                max={5}\r\n                onChange={event => save('outlineWidth', parseInt(event.target.value))}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {(state.renderFill || state.renderOutline) && !disabledFields.includes('shouldRenderInactiveLabelmaps') && (\r\n        <div\r\n          className=\"settings-group\"\r\n          style={{ marginBottom: state.shouldRenderInactiveLabelmaps ? 15 : 0 }}\r\n        >\r\n          <CustomCheck\r\n            label=\"Render inactive segmentations\"\r\n            checked={state.shouldRenderInactiveLabelmaps}\r\n            onChange={() => check('shouldRenderInactiveLabelmaps')}\r\n          />\r\n          {state.shouldRenderInactiveLabelmaps && (\r\n            <>\r\n              {state.renderFill && !disabledFields.includes('fillAlphaInactive') && (\r\n                <CustomRange\r\n                  label=\"Fill Opacity\"\r\n                  showPercentage\r\n                  step={1}\r\n                  min={0}\r\n                  max={100}\r\n                  value={state.fillAlphaInactive * 100}\r\n                  onChange={event => save('fillAlphaInactive', toFloat(event.target.value))}\r\n                />\r\n              )}\r\n              {state.renderOutline && !disabledFields.includes('outlineAlphaInactive') && (\r\n                <CustomRange\r\n                  label=\"Outline Opacity\"\r\n                  showPercentage\r\n                  step={1}\r\n                  min={0}\r\n                  max={100}\r\n                  value={state.outlineAlphaInactive * 100}\r\n                  onChange={event => save('outlineAlphaInactive', toFloat(event.target.value))}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"settings-group\" style={{ marginBottom: 15 }}>\r\n        <label style={{ margin: '0 15px' }}>\r\n          Tolerance:\r\n          <input\r\n            id=\"segToleranceValue\"\r\n            style={{ margin: '0 15px' }}\r\n            label=\"Tolerance\"\r\n            onKeyPress={event => {\r\n                const validate = string => {\r\n                  let rgx = /[^-.e0-9]+/g;\r\n                  return string.match(rgx);\r\n                };\r\n\r\n                if (validate(event.key)) {\r\n                  event.preventDefault();\r\n                }\r\n              }\r\n            }\r\n            onChange={event => {\r\n              save('segsTolerance', event.target.value);\r\n            }}\r\n            value={state.segsTolerance}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomCheck = ({ label, checked, onChange }) => {\r\n  return (\r\n    <div className=\"custom-check\">\r\n      <label>\r\n        <span>{label}</span>\r\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomRange = props => {\r\n  const { label, onChange } = props;\r\n  return (\r\n    <div className=\"range\">\r\n      <label htmlFor=\"range\">{label}</label>\r\n      <Range\r\n        {...props}\r\n        onChange={event => {\r\n          event.persist();\r\n          onChange(event);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSegmentationSettings.propTypes = {\r\n  configuration: PropTypes.shape({\r\n    renderFill: PropTypes.bool.isRequired,\r\n    renderOutline: PropTypes.bool.isRequired,\r\n    shouldRenderInactiveLabelmaps: PropTypes.bool.isRequired,\r\n    fillAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    outlineAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    outlineWidth: PropTypes.number.isRequired,\r\n    fillAlphaInactive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    outlineAlphaInactive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    segsTolerance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  }).isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SegmentationSettings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableListItem, Icon } from '@ohif/ui';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './SegmentItem.css';\r\n\r\nconst ColoredCircle = ({ color }) => {\r\n  return (\r\n    <div\r\n      className=\"segment-color\"\r\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nColoredCircle.propTypes = {\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nconst SegmentItem = ({\r\n  index,\r\n  label,\r\n  onClick,\r\n  itemClass,\r\n  color,\r\n  labelmap3D,\r\n  visible,\r\n  onVisibilityChange,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible);\r\n  }, [visible]);\r\n\r\n  const onClickHandler = () => onClick(index);\r\n\r\n  const onVisibilityChangeHandler = event => {\r\n    event.stopPropagation();\r\n    const newVisibility = !isVisible;\r\n    setIsVisible(newVisibility);\r\n    onVisibilityChange(newVisibility, index, labelmap3D);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dcmseg-segment-item\">\r\n      <TableListItem\r\n        key={index}\r\n        itemKey={index}\r\n        itemIndex={index}\r\n        itemClass={itemClass}\r\n        itemMeta={<ColoredCircle color={color} />}\r\n        itemMetaClass=\"segment-color-section\"\r\n        onItemClick={onClickHandler}\r\n      >\r\n        <div>\r\n          <div className=\"segment-label\" style={{ marginBottom: 4 }}>\r\n            <a data-tip data-for={`SegmentHover${index}`}>\r\n              <span>{label}</span>\r\n            </a>\r\n            <ReactTooltip\r\n              id={`SegmentHover${index}`}\r\n              delayShow={250}\r\n              place=\"right\"\r\n              border={true}\r\n              type=\"light\"\r\n            >\r\n              <span>{label}</span>\r\n            </ReactTooltip>\r\n            <Icon\r\n              className={`eye-icon ${isVisible && '--visible'}`}\r\n              name={isVisible ? 'eye' : 'eye-closed'}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              onClick={onVisibilityChangeHandler}\r\n            />\r\n          </div>\r\n          {false && <div className=\"segment-info\">{'...'}</div>}\r\n          {false && (\r\n            <div className=\"segment-actions\">\r\n              <button\r\n                className=\"btnAction\"\r\n                onClick={() => console.log('Relabelling...')}\r\n              >\r\n                <span style={{ marginRight: '4px' }}>\r\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n                </span>\r\n                Relabel\r\n              </button>\r\n              <button\r\n                className=\"btnAction\"\r\n                onClick={() => console.log('Editing description...')}\r\n              >\r\n                <span style={{ marginRight: '4px' }}>\r\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n                </span>\r\n                Description\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </TableListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nSegmentItem.propTypes = {\r\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  itemClass: PropTypes.string,\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nSegmentItem.defaultProps = {\r\n  itemClass: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default SegmentItem;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst SegmentationSelect = ({ value, formatOptionLabel, options }) => (\r\n  <Select\r\n    value={value === undefined ? null : value}\r\n    formatOptionLabel={formatOptionLabel}\r\n    styles={segmentationSelectStyles}\r\n    options={options}\r\n  />\r\n);\r\n\r\nconst computedstyle = getComputedStyle(document.body);\r\nconst uiGrayDarker = computedstyle.getPropertyValue('--ui-gray-darker');\r\nconst activeColor = computedstyle.getPropertyValue('--active-color');\r\nconst defaultColor = computedstyle.getPropertyValue('--default-color');\r\nconst uiGrayDark = computedstyle.getPropertyValue('--ui-gray-dark');\r\n\r\nconst segmentationSelectStyles = {\r\n  singleValue: (base, state) => ({\r\n    ...base,\r\n    width: '100%'\r\n  }),\r\n  control: (base, state) => ({\r\n    ...base,\r\n    cursor: 'pointer',\r\n    background: uiGrayDarker,\r\n    borderRadius: state.isFocused ? '5px 5px 5px 5px' : 5,\r\n    borderColor: state.isFocused ? activeColor : defaultColor,\r\n    boxShadow: state.isFocused ? null : null,\r\n    minHeight: '50px',\r\n    '&:hover': {\r\n      borderColor: activeColor,\r\n    },\r\n  }),\r\n  menu: base => ({\r\n    ...base,\r\n    borderRadius: 5,\r\n    background: uiGrayDarker,\r\n  }),\r\n  option: (base, state) => ({\r\n    ...base,\r\n    cursor: 'pointer',\r\n    '&:first-of-type': {\r\n      borderTopLeftRadius: 5,\r\n      borderTopRightRadius: 5,\r\n    },\r\n    '&:last-of-type': {\r\n      borderBottomLeftRadius: 5,\r\n      borderBottomRightRadius: 5,\r\n    },\r\n    background: state.isSelected ? uiGrayDark : uiGrayDarker,\r\n    '&:hover': {\r\n      background: uiGrayDark,\r\n    },\r\n  }),\r\n};\r\n\r\nexport default SegmentationSelect;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\nimport { utils, log } from '@ohif/core';\r\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\r\nimport DICOMSegTempCrosshairsTool from '../../tools/DICOMSegTempCrosshairsTool';\r\n\r\nimport setActiveLabelmap from '../../utils/setActiveLabelMap';\r\nimport refreshViewports from '../../utils/refreshViewports';\r\n\r\nimport {\r\n  BrushColorSelector,\r\n  BrushRadius,\r\n  SegmentationItem,\r\n  SegmentItem,\r\n  SegmentationSelect,\r\n} from '../index';\r\n\r\nimport './SegmentationPanel.css';\r\nimport SegmentationSettings from '../SegmentationSettings/SegmentationSettings';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\n/**\r\n * SegmentationPanel component\r\n *\r\n * @param {Array} props.studies - Studies data\r\n * @param {Array} props.viewports - Viewports data (viewportSpecificData)\r\n * @param {number} props.activeIndex - Active viewport index\r\n * @param {boolean} props.isOpen - Boolean that indicates if the panel is expanded\r\n * @param {Function} props.onSegmentItemClick - Segment click handler\r\n * @param {Function} props.onSegmentVisibilityChange - Segment visibiliy change handler\r\n * @param {Function} props.onConfigurationChange - Configuration change handler\r\n * @param {Function} props.activeContexts - List of active application contexts\r\n * @param {Function} props.contexts - List of available application contexts\r\n * @param {Function} props.servicesManager - Services manager\r\n * @returns component\r\n */\r\nconst SegmentationPanel = ({\r\n  studies,\r\n  viewports,\r\n  activeIndex,\r\n  isOpen,\r\n  onSegmentItemClick,\r\n  onSegmentVisibilityChange,\r\n  onConfigurationChange,\r\n  onDisplaySetLoadFailure,\r\n  onSelectedSegmentationChange,\r\n  activeContexts = [],\r\n  contexts = {},\r\n  servicesManager,\r\n}) => {\r\n  const isVTK = () => activeContexts.includes(contexts.VTK);\r\n  const isCornerstone = () => activeContexts.includes(contexts.CORNERSTONE);\r\n\r\n  /*\r\n   * TODO: wrap get/set interactions with the cornerstoneTools\r\n   * store with context to make these kind of things less blurry.\r\n   */\r\n  const { configuration } = cornerstoneTools.getModule('segmentation');\r\n  if (configuration.segsTolerance === undefined) {\r\n    configuration.segsTolerance = 1e-2;\r\n  }\r\n  const DEFAULT_BRUSH_RADIUS = configuration.radius || 10;\r\n\r\n  /*\r\n   * TODO: We shouldn't hardcode brushColor color, in the future\r\n   * the SEG may set the colorLUT to whatever it wants.\r\n   */\r\n  const [state, setState] = useState({\r\n    brushRadius: DEFAULT_BRUSH_RADIUS,\r\n    brushColor: 'rgba(221, 85, 85, 1)',\r\n    selectedSegment: 0,\r\n    selectedSegmentation: 0,\r\n    showSettings: false,\r\n    labelMapList: [],\r\n    segmentList: [],\r\n    segmentsHidden: [],\r\n    segmentNumbers: [],\r\n    isLoading: false,\r\n    isDisabled: true,\r\n  });\r\n\r\n  const getActiveViewport = () => viewports[activeIndex];\r\n\r\n  const getFirstImageId = () => {\r\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    return studyMetadata.getFirstImageId(displaySetInstanceUID);\r\n  };\r\n\r\n  const getAllSegDisplaySets = () => {\r\n    const { StudyInstanceUID } = getActiveViewport();\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    return studyMetadata.getDerivedDatasets({\r\n      Modality: 'SEG',\r\n    });\r\n  };\r\n\r\n  const updateSegDisplaySetsTolerance = tolerance => {\r\n    const segDisplaySets = getAllSegDisplaySets();\r\n    segDisplaySets.forEach(segDisplaySet => {\r\n      // update tol value\r\n      segDisplaySet.tolerance = tolerance;\r\n      // reset load flags for allowing retry for seg parsing.\r\n      segDisplaySet.isLoaded = false;\r\n      segDisplaySet.loadError = false;\r\n    });\r\n  };\r\n\r\n  const getActiveLabelMaps3D = () => {\r\n    const { labelmaps3D, activeLabelmapIndex } = getBrushStackState();\r\n    return labelmaps3D[activeLabelmapIndex];\r\n  };\r\n\r\n  const getActiveLabelMapIndex = () => {\r\n    const { activeLabelmapIndex } = getBrushStackState();\r\n    return activeLabelmapIndex;\r\n  };\r\n\r\n  const getActiveSegmentIndex = () => {\r\n    const { activeSegmentIndex } = getActiveLabelMaps3D();\r\n    return activeSegmentIndex;\r\n  };\r\n\r\n  const getActiveLabelMaps2D = () => {\r\n    const { labelmaps2D } = getActiveLabelMaps3D();\r\n    return labelmaps2D;\r\n  };\r\n\r\n  const getCurrentDisplaySet = () => {\r\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    const allDisplaySets = studyMetadata.getDisplaySets();\r\n    return allDisplaySets.find(\r\n      ds => ds.displaySetInstanceUID === displaySetInstanceUID\r\n    );\r\n  };\r\n\r\n  const setActiveSegment = segmentIndex => {\r\n    const activeSegmentIndex = getActiveSegmentIndex();\r\n    const activeViewport = getActiveViewport();\r\n\r\n    if (segmentIndex === activeSegmentIndex) {\r\n      log.info(`${activeSegmentIndex} is already the active segment`);\r\n      return;\r\n    }\r\n\r\n    const labelmap3D = getActiveLabelMaps3D();\r\n    labelmap3D.activeSegmentIndex = segmentIndex;\r\n\r\n    /**\r\n     * Activates the correct label map if clicked segment\r\n     * does not belong to the active labelmap\r\n     */\r\n    const { StudyInstanceUID } = activeViewport;\r\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n    const allDisplaySets = studyMetadata.getDisplaySets();\r\n    let selectedSegmentation;\r\n    let newLabelmapIndex = getActiveLabelMapIndex();\r\n    allDisplaySets.forEach(displaySet => {\r\n      if (displaySet.labelmapSegments) {\r\n        Object.keys(displaySet.labelmapSegments).forEach(labelmapIndex => {\r\n          if (\r\n            displaySet.labelmapSegments[labelmapIndex].includes(segmentIndex)\r\n          ) {\r\n            newLabelmapIndex = labelmapIndex;\r\n            selectedSegmentation =\r\n              displaySet.hasOverlapping === true\r\n                ? displaySet.originLabelMapIndex\r\n                : labelmapIndex;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    const brushStackState = getBrushStackState();\r\n    brushStackState.activeLabelmapIndex = newLabelmapIndex;\r\n    if (selectedSegmentation) {\r\n      setState(state => ({ ...state, selectedSegmentation }));\r\n    }\r\n\r\n    refreshViewports();\r\n\r\n    return segmentIndex;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const labelmapModifiedHandler = event => {\r\n      log.warn('Segmentation Panel: labelmap modified', event);\r\n      refreshSegmentations();\r\n    };\r\n\r\n    /*\r\n     * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\r\n     *\r\n     * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\r\n     * or other components that could rely on loaded segmentations that\r\n     * the segments were loaded so that e.g. when the user opens the panel\r\n     * before the segments are fully loaded, the panel can subscribe to this custom event\r\n     * and update itself with the new segments.\r\n     *\r\n     * This limitation is due to the fact that the cs segmentation module is an object (which will be\r\n     * updated after the segments are loaded) that React its not aware of its changes\r\n     * because the module object its not passed in to the panel component as prop but accessed externally.\r\n     *\r\n     * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n     * allows us to easily watch the module or the segmentations loading process in any other component\r\n     * without subscribing to external events.\r\n     */\r\n    document.addEventListener(\r\n      'extensiondicomsegmentationsegloaded',\r\n      refreshSegmentations\r\n    );\r\n    document.addEventListener(\r\n      'extensiondicomsegmentationsegselected',\r\n      updateSegmentationComboBox\r\n    );\r\n\r\n    /*\r\n     * These are specific to each element;\r\n     * Need to iterate cornerstone-tools tracked enabled elements?\r\n     * Then only care about the one tied to active viewport?\r\n     */\r\n    cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\r\n      enabledElement.addEventListener(\r\n        'cornerstonetoolslabelmapmodified',\r\n        labelmapModifiedHandler\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      document.removeEventListener(\r\n        'extensiondicomsegmentationsegloaded',\r\n        refreshSegmentations\r\n      );\r\n      document.removeEventListener(\r\n        'extensiondicomsegmentationsegselected',\r\n        updateSegmentationComboBox\r\n      );\r\n      cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\r\n        enabledElement.removeEventListener(\r\n          'cornerstonetoolslabelmapmodified',\r\n          labelmapModifiedHandler\r\n        )\r\n      );\r\n    };\r\n  }, [activeIndex, viewports]);\r\n\r\n  const updateSegmentationComboBox = e => {\r\n    const index = e.detail.activatedLabelmapIndex;\r\n    if (index !== -1) {\r\n      setState(state => ({ ...state, selectedSegmentation: index }));\r\n    }\r\n  };\r\n\r\n  const refreshSegmentations = () => {\r\n    const activeViewport = getActiveViewport();\r\n    const isDisabled = !activeViewport || !activeViewport.StudyInstanceUID;\r\n    if (!isDisabled) {\r\n      const brushStackState = getBrushStackState();\r\n      if (brushStackState) {\r\n        const labelMapList = getLabelMapList();\r\n        const {\r\n          items: segmentList,\r\n          numbers: segmentNumbers,\r\n          segmentsHidden,\r\n        } = getSegmentList();\r\n        setState(state => ({\r\n          ...state,\r\n          segmentsHidden,\r\n          segmentNumbers,\r\n          labelMapList,\r\n          segmentList,\r\n          isDisabled,\r\n        }));\r\n      } else {\r\n        setState(state => ({\r\n          ...state,\r\n          segmentsHidden: [],\r\n          segmentNumbers: [],\r\n          labelMapList: [],\r\n          segmentList: [],\r\n          isDisabled,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshSegmentations();\r\n  }, [\r\n    viewports,\r\n    activeIndex,\r\n    isOpen,\r\n    state.selectedSegmentation,\r\n    activeContexts,\r\n    state.isLoading,\r\n  ]);\r\n\r\n  /* Handle open/closed panel behaviour */\r\n  useEffect(() => {\r\n    setState(state => ({\r\n      ...state,\r\n      showSettings: state.showSettings && !isOpen,\r\n    }));\r\n  }, [isOpen]);\r\n\r\n  const getLabelMapList = () => {\r\n    const activeViewport = getActiveViewport();\r\n\r\n    /* Get list of SEG labelmaps specific to active viewport (reference series) */\r\n    const referencedSegDisplaysets = _getReferencedSegDisplaysets(\r\n      activeViewport.StudyInstanceUID,\r\n      activeViewport.SeriesInstanceUID\r\n    );\r\n\r\n    const filteredReferencedSegDisplaysets = referencedSegDisplaysets.filter(\r\n      segDisplay => segDisplay.loadError !== true\r\n    );\r\n\r\n    return filteredReferencedSegDisplaysets.map((displaySet, index) => {\r\n      const {\r\n        labelmapIndex,\r\n        originLabelMapIndex,\r\n        hasOverlapping,\r\n        SeriesDate,\r\n        SeriesTime,\r\n      } = displaySet;\r\n\r\n      /* Map to display representation */\r\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\r\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\r\n      const displayDate = date.format('ddd, MMM Do YYYY, h:mm:ss a');\r\n      const displayDescription = displaySet.SeriesDescription;\r\n\r\n      return {\r\n        value: hasOverlapping === true ? originLabelMapIndex : labelmapIndex,\r\n        title: displayDescription,\r\n        description: displayDate,\r\n        onClick: async () => {\r\n          const activatedLabelmapIndex = await setActiveLabelmap(\r\n            activeViewport,\r\n            studies,\r\n            displaySet,\r\n            onSelectedSegmentationChange,\r\n            onDisplaySetLoadFailure\r\n          );\r\n          setState(state => ({\r\n            ...state,\r\n            selectedSegmentation: activatedLabelmapIndex,\r\n          }));\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const setCurrentSelectedSegment = segmentNumber => {\r\n    setActiveSegment(segmentNumber);\r\n\r\n    const sameSegment = state.selectedSegment === segmentNumber;\r\n    if (!sameSegment) {\r\n      setState(state => ({ ...state, selectedSegment: segmentNumber }));\r\n    }\r\n\r\n    const validIndexList = [];\r\n    getActiveLabelMaps2D().forEach((labelMap2D, index) => {\r\n      if (labelMap2D.segmentsOnLabelmap.includes(segmentNumber)) {\r\n        validIndexList.push(index);\r\n      }\r\n    });\r\n\r\n    const avg = array => array.reduce((a, b) => a + b) / array.length;\r\n    const average = avg(validIndexList);\r\n    const closest = validIndexList.reduce((prev, curr) => {\r\n      return Math.abs(curr - average) < Math.abs(prev - average) ? curr : prev;\r\n    });\r\n\r\n    if (isCornerstone()) {\r\n      const element = getEnabledElement();\r\n      const toolState = cornerstoneTools.getToolState(element, 'stack');\r\n\r\n      if (!toolState) return;\r\n\r\n      const imageIds = toolState.data[0].imageIds;\r\n      const imageId = imageIds[closest];\r\n      const frameIndex = imageIds.indexOf(imageId);\r\n\r\n      const SOPInstanceUID = cornerstone.metaData.get(\r\n        'SOPInstanceUID',\r\n        imageId\r\n      );\r\n      const StudyInstanceUID = cornerstone.metaData.get(\r\n        'StudyInstanceUID',\r\n        imageId\r\n      );\r\n\r\n      DICOMSegTempCrosshairsTool.addCrosshair(element, imageId, segmentNumber);\r\n\r\n      onSegmentItemClick({\r\n        StudyInstanceUID,\r\n        SOPInstanceUID,\r\n        frameIndex,\r\n        activeViewportIndex: activeIndex,\r\n      });\r\n    }\r\n\r\n    if (isVTK()) {\r\n      const labelMaps3D = getActiveLabelMaps3D();\r\n      const currentDisplaySet = getCurrentDisplaySet();\r\n      const frame = labelMaps3D.labelmaps2D[closest];\r\n\r\n      onSegmentItemClick({\r\n        studies,\r\n        StudyInstanceUID: currentDisplaySet.StudyInstanceUID,\r\n        displaySetInstanceUID: currentDisplaySet.displaySetInstanceUID,\r\n        SOPClassUID: getActiveViewport().sopClassUIDs[0],\r\n        SOPInstanceUID: currentDisplaySet.SOPInstanceUID,\r\n        segmentNumber,\r\n        frameIndex: closest,\r\n        frame,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getColorLUTTable = () => {\r\n    const { state } = cornerstoneTools.getModule('segmentation');\r\n    const { colorLUTIndex } = getActiveLabelMaps3D();\r\n    return state.colorLutTables[colorLUTIndex];\r\n  };\r\n\r\n  const getEnabledElement = () => {\r\n    const enabledElements = cornerstone.getEnabledElements();\r\n    return enabledElements[activeIndex].element;\r\n  };\r\n\r\n  const onSegmentVisibilityChangeHandler = (\r\n    isVisible,\r\n    segmentNumber,\r\n    labelmap3D\r\n  ) => {\r\n    let segmentsHidden = [];\r\n    if (labelmap3D.metadata.hasOverlapping) {\r\n      /** Get all labelmaps with this segmentNumber and that\r\n       * are from the same series (overlapping segments) */\r\n      const { labelmaps3D } = getBrushStackState();\r\n\r\n      const sameSeriesLabelMaps3D = labelmaps3D.filter(({ metadata }) => {\r\n        return (\r\n          labelmap3D.metadata.segmentationSeriesInstanceUID ===\r\n          metadata.segmentationSeriesInstanceUID\r\n        );\r\n      });\r\n\r\n      const possibleLabelMaps3D = sameSeriesLabelMaps3D.filter(\r\n        ({ labelmaps2D }) => {\r\n          return labelmaps2D.some(({ segmentsOnLabelmap }) =>\r\n            segmentsOnLabelmap.includes(segmentNumber)\r\n          );\r\n        }\r\n      );\r\n\r\n      possibleLabelMaps3D.forEach(labelmap3D => {\r\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\r\n\r\n        segmentsHidden = [\r\n          ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\r\n        ];\r\n      });\r\n    } else {\r\n      labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\r\n      segmentsHidden = [...labelmap3D.segmentsHidden];\r\n    }\r\n\r\n    setState(state => ({ ...state, segmentsHidden }));\r\n\r\n    refreshSegmentations();\r\n    refreshViewports();\r\n\r\n    if (isVTK()) {\r\n      onSegmentVisibilityChange(segmentNumber, isVisible);\r\n    }\r\n  };\r\n\r\n  const getSegmentList = () => {\r\n    /*\r\n     * Newly created segments have no `meta`\r\n     * So we instead build a list of all segment indexes in use\r\n     * Then find any associated metadata\r\n     */\r\n    const uniqueSegmentIndexes = getActiveLabelMaps2D()\r\n      .reduce((acc, labelmap2D) => {\r\n        if (labelmap2D) {\r\n          const segmentIndexes = labelmap2D.segmentsOnLabelmap;\r\n\r\n          for (let i = 0; i < segmentIndexes.length; i++) {\r\n            if (!acc.includes(segmentIndexes[i]) && segmentIndexes[i] !== 0) {\r\n              acc.push(segmentIndexes[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        return acc;\r\n      }, [])\r\n      .sort((a, b) => a - b);\r\n\r\n    const labelmap3D = getActiveLabelMaps3D();\r\n    const colorLutTable = getColorLUTTable();\r\n    const hasLabelmapMeta = labelmap3D.metadata && labelmap3D.metadata.data;\r\n\r\n    const segmentList = [];\r\n    const segmentNumbers = [];\r\n    for (let i = 0; i < uniqueSegmentIndexes.length; i++) {\r\n      const segmentIndex = uniqueSegmentIndexes[i];\r\n\r\n      const color = colorLutTable[segmentIndex];\r\n      let segmentLabel = '(unlabeled)';\r\n      let segmentNumber = segmentIndex;\r\n\r\n      /* Meta */\r\n      if (hasLabelmapMeta) {\r\n        const segmentMeta = labelmap3D.metadata.data[segmentIndex];\r\n        if (segmentMeta) {\r\n          segmentNumber = segmentMeta.SegmentNumber;\r\n          segmentLabel = segmentMeta.SegmentLabel;\r\n        }\r\n      }\r\n\r\n      const sameSegment = state.selectedSegment === segmentNumber;\r\n\r\n      segmentNumbers.push(segmentNumber);\r\n      segmentList.push(\r\n        <SegmentItem\r\n          key={segmentNumber}\r\n          itemClass={`segment-item ${sameSegment && 'selected'}`}\r\n          onClick={setCurrentSelectedSegment}\r\n          label={segmentLabel}\r\n          index={segmentNumber}\r\n          color={color}\r\n          labelmap3D={labelmap3D}\r\n          visible={!labelmap3D.segmentsHidden[segmentIndex]}\r\n          onVisibilityChange={onSegmentVisibilityChangeHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return {\r\n      items: segmentList,\r\n      numbers: segmentNumbers,\r\n      segmentsHidden: labelmap3D.segmentsHidden,\r\n    };\r\n\r\n    /*\r\n     * Let's iterate over segmentIndexes ^ above\r\n     * If meta has a match, use it to show info\r\n     * If now, add \"no-meta\" class\r\n     * Show default name\r\n     */\r\n  };\r\n\r\n  const updateBrushSize = evt => {\r\n    const updatedRadius = Number(evt.target.value);\r\n\r\n    if (updatedRadius !== brushRadius) {\r\n      setState(state => ({ ...state, brushRadius: updatedRadius }));\r\n      const module = cornerstoneTools.getModule('segmentation');\r\n      module.setters.radius(updatedRadius);\r\n    }\r\n  };\r\n\r\n  const decrementSegment = event => {\r\n    const activeSegmentIndex = getActiveSegmentIndex();\r\n    event.preventDefault();\r\n    if (activeSegmentIndex > 1) {\r\n      activeSegmentIndex--;\r\n    }\r\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\r\n    updateActiveSegmentColor();\r\n  };\r\n\r\n  const incrementSegment = event => {\r\n    const activeSegmentIndex = getActiveSegmentIndex();\r\n    event.preventDefault();\r\n    activeSegmentIndex++;\r\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\r\n    updateActiveSegmentColor();\r\n  };\r\n\r\n  const updateActiveSegmentColor = () => {\r\n    const color = getActiveSegmentColor();\r\n    setState(state => ({ ...state, brushColor: color }));\r\n  };\r\n\r\n  const getBrushStackState = () => {\r\n    const module = cornerstoneTools.getModule('segmentation');\r\n    const firstImageId = getFirstImageId();\r\n    const brushStackState = module.state.series[firstImageId];\r\n    return brushStackState;\r\n  };\r\n\r\n  const getActiveSegmentColor = () => {\r\n    const brushStackState = getBrushStackState();\r\n    if (!brushStackState) {\r\n      return 'rgba(255, 255, 255, 1)';\r\n    }\r\n\r\n    const colorLutTable = getColorLUTTable();\r\n    const color = colorLutTable[labelmap3D.activeSegmentIndex];\r\n    return `rgba(${color.join(',')})`;\r\n  };\r\n\r\n  const updateConfiguration = newConfiguration => {\r\n    configuration.renderFill = newConfiguration.renderFill;\r\n    configuration.renderOutline = newConfiguration.renderOutline;\r\n    configuration.shouldRenderInactiveLabelmaps =\r\n      newConfiguration.shouldRenderInactiveLabelmaps;\r\n    configuration.fillAlpha = newConfiguration.fillAlpha;\r\n    configuration.outlineAlpha = newConfiguration.outlineAlpha;\r\n    configuration.outlineWidth = newConfiguration.outlineWidth;\r\n    configuration.fillAlphaInactive = newConfiguration.fillAlphaInactive;\r\n    configuration.outlineAlphaInactive = newConfiguration.outlineAlphaInactive;\r\n    configuration.segsTolerance = newConfiguration.segsTolerance;\r\n    onConfigurationChange(newConfiguration);\r\n    updateSegDisplaySetsTolerance(configuration.segsTolerance);\r\n    refreshViewports();\r\n  };\r\n\r\n  const onVisibilityChangeHandler = isVisible => {\r\n    let segmentsHidden = [];\r\n    const labelmap3D = getActiveLabelMaps3D();\r\n\r\n    state.segmentNumbers.forEach(segmentNumber => {\r\n      if (isVTK()) {\r\n        onSegmentVisibilityChange(segmentNumber, isVisible);\r\n      }\r\n\r\n      labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\r\n      segmentsHidden = [\r\n        ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\r\n      ];\r\n    });\r\n\r\n    setState(state => ({ ...state, segmentsHidden }));\r\n\r\n    refreshSegmentations();\r\n    refreshViewports();\r\n  };\r\n\r\n  const disabledConfigurationFields = [\r\n    'outlineAlpha',\r\n    'shouldRenderInactiveLabelmaps',\r\n  ];\r\n\r\n  const selectedSegmentationOption = state.labelMapList.find(\r\n    i => i.value === state.selectedSegmentation\r\n  );\r\n\r\n  if (state.showSettings) {\r\n    return (\r\n      <SegmentationSettings\r\n        disabledFields={isVTK() ? disabledConfigurationFields : []}\r\n        configuration={configuration}\r\n        onBack={() => setState(state => ({ ...state, showSettings: false }))}\r\n        onChange={updateConfiguration}\r\n        servicesManager={servicesManager}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={classNames('dcmseg-segmentation-panel', {\r\n          disabled: state.isDisabled,\r\n        })}\r\n      >\r\n        {false && (\r\n          <form className=\"selector-form\">\r\n            <BrushColorSelector\r\n              defaultColor={state.brushColor}\r\n              index={state.selectedSegment}\r\n              onNext={incrementSegment}\r\n              onPrev={decrementSegment}\r\n            />\r\n            <BrushRadius\r\n              value={state.brushRadius}\r\n              onChange={updateBrushSize}\r\n              min={configuration.minRadius}\r\n              max={configuration.maxRadius}\r\n            />\r\n          </form>\r\n        )}\r\n        <Icon\r\n          className=\"cog-icon\"\r\n          name=\"cog\"\r\n          width=\"25px\"\r\n          height=\"25px\"\r\n          onClick={() => setState(state => ({ ...state, showSettings: true }))}\r\n        />\r\n        <h3>Segmentations</h3>\r\n        <div className=\"segmentations\">\r\n          <SegmentationSelect\r\n            value={selectedSegmentationOption}\r\n            formatOptionLabel={SegmentationItem}\r\n            options={state.labelMapList}\r\n          />\r\n        </div>\r\n        <SegmentsSection\r\n          count={state.segmentList.length}\r\n          isVisible={\r\n            state.segmentsHidden.filter(isHidden => isHidden === true).length <\r\n              state.segmentNumbers.length && state.segmentNumbers.length > 0\r\n          }\r\n          onVisibilityChange={onVisibilityChangeHandler}\r\n        >\r\n          <ScrollableArea>\r\n            <TableList headless>{state.segmentList}</TableList>\r\n          </ScrollableArea>\r\n        </SegmentsSection>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nSegmentationPanel.propTypes = {\r\n  /*\r\n   * An object, with int index keys?\r\n   * Maps to: state.viewports.viewportSpecificData, in `viewer`\r\n   * Passed in MODULE_TYPES.PANEL when specifying component in viewer\r\n   */\r\n  viewports: PropTypes.shape({\r\n    displaySetInstanceUID: PropTypes.string,\r\n    frameRate: PropTypes.any,\r\n    InstanceNumber: PropTypes.number,\r\n    isMultiFrame: PropTypes.bool,\r\n    isReconstructable: PropTypes.bool,\r\n    Modality: PropTypes.string,\r\n    plugin: PropTypes.string,\r\n    SeriesDate: PropTypes.string,\r\n    SeriesDescription: PropTypes.string,\r\n    SeriesInstanceUID: PropTypes.string,\r\n    SeriesNumber: PropTypes.any,\r\n    SeriesTime: PropTypes.string,\r\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\r\n    StudyInstanceUID: PropTypes.string,\r\n  }),\r\n  activeIndex: PropTypes.number.isRequired,\r\n  studies: PropTypes.array.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\nSegmentationPanel.defaultProps = {};\r\n\r\n/**\r\n * Returns SEG DisplaySets that reference the target series, sorted by dateTime\r\n *\r\n * @param {string} StudyInstanceUID\r\n * @param {string} SeriesInstanceUID\r\n * @returns Array\r\n */\r\nconst _getReferencedSegDisplaysets = (StudyInstanceUID, SeriesInstanceUID) => {\r\n  /* Referenced DisplaySets */\r\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n  const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n    referencedSeriesInstanceUID: SeriesInstanceUID,\r\n    Modality: 'SEG',\r\n  });\r\n\r\n  /* Sort */\r\n  referencedDisplaysets.sort((a, b) => {\r\n    const aNumber = Number(`${a.SeriesDate}${a.SeriesTime}`);\r\n    const bNumber = Number(`${b.SeriesDate}${b.SeriesTime}`);\r\n    return bNumber - aNumber;\r\n  });\r\n\r\n  return referencedDisplaysets;\r\n};\r\n\r\nconst SegmentsSection = ({\r\n  count,\r\n  children,\r\n  isVisible: defaultVisibility,\r\n  onVisibilityChange,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(defaultVisibility);\r\n\r\n  const onVisibilityChangeHandler = () => {\r\n    const newVisibility = !isVisible;\r\n    setIsVisible(newVisibility);\r\n    onVisibilityChange(newVisibility);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsVisible(defaultVisibility);\r\n  }, [defaultVisibility]);\r\n\r\n  return (\r\n    <div className=\"SegmentsSection\">\r\n      <div className=\"header\">\r\n        <div>Segments</div>\r\n        <div className=\"icons\">\r\n          <Icon\r\n            className={`eye-icon ${isVisible && 'expanded'}`}\r\n            name={isVisible ? 'eye' : 'eye-closed'}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            onClick={onVisibilityChangeHandler}\r\n          />\r\n          <div className=\"count\">{count}</div>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nSegmentsSection.defaultProps = {\r\n  onVisibilityChange: noop,\r\n};\r\n\r\nexport default SegmentationPanel;\r\n","import csTools from 'cornerstone-tools';\r\nimport cs from 'cornerstone-core';\r\nimport OHIF from '@ohif/core';\r\n\r\nimport DICOMSegTempCrosshairsTool from './tools/DICOMSegTempCrosshairsTool';\r\nimport refreshViewports from './utils/refreshViewports';\r\n\r\nconst { studyMetadataManager } = OHIF.utils;\r\n\r\nconst commandsModule = ({ commandsManager }) => {\r\n  const actions = {\r\n    jumpToFirstSegment: ({ viewports }) => {\r\n      try {\r\n        const { activeViewportIndex, viewportSpecificData } = viewports;\r\n        const viewport = viewportSpecificData[activeViewportIndex];\r\n        const { StudyInstanceUID, displaySetInstanceUID } = viewport;\r\n        const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\r\n        const firstImageId = studyMetadata.getFirstImageId(\r\n          displaySetInstanceUID\r\n        );\r\n\r\n        const module = csTools.getModule('segmentation');\r\n        const brushStackState = module.state.series[firstImageId];\r\n        const { labelmaps3D, activeLabelmapIndex } = brushStackState;\r\n        const { labelmaps2D } = labelmaps3D[activeLabelmapIndex];\r\n\r\n        const firstLabelMap2D = labelmaps2D.find(value => !!value);\r\n        const firstSegment = firstLabelMap2D.segmentsOnLabelmap[0];\r\n        const segmentNumber = firstSegment;\r\n\r\n        const validIndexList = [];\r\n        labelmaps2D.forEach((labelMap2D, index) => {\r\n          if (labelMap2D.segmentsOnLabelmap.includes(segmentNumber)) {\r\n            validIndexList.push(index);\r\n          }\r\n        });\r\n\r\n        const avg = array => array.reduce((a, b) => a + b) / array.length;\r\n        const average = avg(validIndexList);\r\n        const closest = validIndexList.reduce((prev, curr) => {\r\n          return Math.abs(curr - average) < Math.abs(prev - average)\r\n            ? curr\r\n            : prev;\r\n        });\r\n\r\n        const enabledElements = cs.getEnabledElements();\r\n        const element = enabledElements[activeViewportIndex].element;\r\n\r\n        const toolState = csTools.getToolState(element, 'stack');\r\n        if (!toolState) return;\r\n\r\n        const imageIds = toolState.data[0].imageIds;\r\n        const imageId = imageIds[closest];\r\n        const frameIndex = imageIds.indexOf(imageId);\r\n        const SOPInstanceUID = cs.metaData.get('SOPInstanceUID', imageId);\r\n\r\n        cs.getEnabledElements().forEach(enabledElement => {\r\n          cs.updateImage(enabledElement.element);\r\n        });\r\n\r\n        DICOMSegTempCrosshairsTool.addCrosshair(\r\n          element,\r\n          imageId,\r\n          segmentNumber\r\n        );\r\n\r\n        cs.getEnabledElements().forEach(enabledElement => {\r\n          cs.updateImage(enabledElement.element);\r\n        });\r\n\r\n        const refreshViewports = false;\r\n\r\n        commandsManager.runCommand('jumpToImage', {\r\n          StudyInstanceUID,\r\n          SOPInstanceUID,\r\n          frameIndex,\r\n          activeViewportIndex,\r\n          refreshViewports,\r\n        });\r\n      } catch (error) {\r\n        console.log('Error in moving to the first segment slice');\r\n      }\r\n    },\r\n  };\r\n\r\n  const definitions = {\r\n    jumpToFirstSegment: {\r\n      commandFn: actions.jumpToFirstSegment,\r\n      storeContexts: ['viewports'],\r\n      options: {},\r\n    },\r\n  };\r\n\r\n  return {\r\n    definitions,\r\n    defaultContext: 'VIEWER',\r\n  };\r\n};\r\n\r\nexport default commandsModule;\r\n","import React from 'react';\r\nimport OHIF from '@ohif/core';\r\n\r\nimport init from './init.js';\r\nimport toolbarModule from './toolbarModule.js';\r\nimport getSopClassHandlerModule from './getOHIFDicomSegSopClassHandler.js';\r\nimport SegmentationPanel from './components/SegmentationPanel/SegmentationPanel.js';\r\nimport { version } from '../package.json';\r\nimport commandsModule from './commandsModule.js';\r\nconst { studyMetadataManager } = OHIF.utils;\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'com.ohif.dicom-segmentation',\r\n  version,\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  preRegistration({ servicesManager, configuration = {} }) {\r\n    init({ servicesManager, configuration });\r\n  },\r\n  getToolbarModule({ servicesManager }) {\r\n    return toolbarModule;\r\n  },\r\n  getPanelModule({ commandsManager, api, servicesManager }) {\r\n    const { UINotificationService, LoggerService } = servicesManager.services;\r\n\r\n    const ExtendedSegmentationPanel = props => {\r\n      const { activeContexts } = api.hooks.useAppContext();\r\n      const onDisplaySetLoadFailureHandler = error => {\r\n        const message =\r\n          error.message.includes('orthogonal') ||\r\n          error.message.includes('oblique')\r\n            ? 'The segmentation has been detected as non coplanar,\\\r\n              If you really think it is coplanar,\\\r\n              please adjust the tolerance in the segmentation panel settings (at your own peril!)'\r\n            : error.message;\r\n        LoggerService.error({ error, message });\r\n        UINotificationService.show({\r\n          title: 'DICOM Segmentation Loader',\r\n          message,\r\n          type: 'error',\r\n          autoClose: false,\r\n        });\r\n      };\r\n\r\n      const segmentItemClickHandler = data => {\r\n        commandsManager.runCommand('jumpToImage', data);\r\n        commandsManager.runCommand('jumpToSlice', data);\r\n      };\r\n\r\n      const onSegmentVisibilityChangeHandler = (segmentNumber, visible) => {\r\n        commandsManager.runCommand('setSegmentConfiguration', {\r\n          segmentNumber,\r\n          visible,\r\n        });\r\n      };\r\n\r\n      const onConfigurationChangeHandler = configuration => {\r\n        commandsManager.runCommand('setSegmentationConfiguration', {\r\n          globalOpacity: configuration.fillAlpha,\r\n          outlineThickness: configuration.outlineWidth,\r\n          renderOutline: configuration.renderOutline,\r\n          visible: configuration.renderFill,\r\n        });\r\n      };\r\n\r\n      const onSelectedSegmentationChangeHandler = () => {\r\n        commandsManager.runCommand('requestNewSegmentation');\r\n      };\r\n\r\n      return (\r\n        <SegmentationPanel\r\n          {...props}\r\n          activeContexts={activeContexts}\r\n          contexts={api.contexts}\r\n          onSegmentItemClick={segmentItemClickHandler}\r\n          onSegmentVisibilityChange={onSegmentVisibilityChangeHandler}\r\n          onConfigurationChange={onConfigurationChangeHandler}\r\n          onSelectedSegmentationChange={onSelectedSegmentationChangeHandler}\r\n          onDisplaySetLoadFailure={onDisplaySetLoadFailureHandler}\r\n          servicesManager={servicesManager}\r\n        />\r\n      );\r\n    };\r\n\r\n    const SegmentationPanelTabUpdatedEvent = 'segmentation-panel-tab-updated';\r\n\r\n    /**\r\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\r\n     *\r\n     * This is required to avoid extension state\r\n     * coupling with the viewer's ToolbarRow component.\r\n     *\r\n     * @param {object} data\r\n     */\r\n    const triggerSegmentationPanelTabUpdatedEvent = data => {\r\n      const event = new CustomEvent(SegmentationPanelTabUpdatedEvent, {\r\n        detail: data,\r\n      });\r\n      document.dispatchEvent(event);\r\n    };\r\n\r\n    const onSegmentationsLoaded = ({ detail }) => {\r\n      const { segDisplaySet, segMetadata } = detail;\r\n      const studyMetadata = studyMetadataManager.get(\r\n        segDisplaySet.StudyInstanceUID\r\n      );\r\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n        referencedSeriesInstanceUID: segMetadata.seriesInstanceUid,\r\n        Modality: 'SEG',\r\n      });\r\n      triggerSegmentationPanelTabUpdatedEvent({\r\n        badgeNumber: referencedDisplaysets.length,\r\n        target: 'segmentation-panel',\r\n      });\r\n    };\r\n\r\n    const onSegmentationsCompletelyLoaded = () => {\r\n      commandsManager.runCommand('jumpToFirstSegment');\r\n    };\r\n\r\n    document.addEventListener(\r\n      'segseriesselected',\r\n      onSegmentationsCompletelyLoaded\r\n    );\r\n\r\n    document.addEventListener(\r\n      'extensiondicomsegmentationsegloaded',\r\n      onSegmentationsLoaded\r\n    );\r\n\r\n    return {\r\n      menuOptions: [\r\n        {\r\n          icon: 'list',\r\n          label: 'Segmentations',\r\n          target: 'segmentation-panel',\r\n          stateEvent: SegmentationPanelTabUpdatedEvent,\r\n          isDisabled: (studies, activeViewport) => {\r\n            if (!studies) {\r\n              return true;\r\n            }\r\n\r\n            for (let i = 0; i < studies.length; i++) {\r\n              const study = studies[i];\r\n\r\n              if (study && study.series) {\r\n                for (let j = 0; j < study.series.length; j++) {\r\n                  const series = study.series[j];\r\n\r\n                  if (series.Modality === 'SEG') {\r\n                    if (activeViewport) {\r\n                      const studyMetadata = studyMetadataManager.get(\r\n                        activeViewport.StudyInstanceUID\r\n                      );\r\n                      if (!studyMetadata) {\r\n                        return;\r\n                      }\r\n                      const referencedDS = studyMetadata.getDerivedDatasets({\r\n                        referencedSeriesInstanceUID:\r\n                          activeViewport.SeriesInstanceUID,\r\n                        Modality: 'SEG',\r\n                      });\r\n                      triggerSegmentationPanelTabUpdatedEvent({\r\n                        badgeNumber: referencedDS.length,\r\n                        target: 'segmentation-panel',\r\n                      });\r\n                    }\r\n                    return false;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            return true;\r\n          },\r\n        },\r\n      ],\r\n      components: [\r\n        {\r\n          id: 'segmentation-panel',\r\n          component: ExtendedSegmentationPanel,\r\n        },\r\n      ],\r\n      defaultContext: ['VIEWER'],\r\n    };\r\n  },\r\n  getCommandsModule({ commandsManager, servicesManager }) {\r\n    return commandsModule({ commandsManager, servicesManager });\r\n  },\r\n  getSopClassHandlerModule,\r\n};\r\n","import csTools from 'cornerstone-tools';\r\nimport DICOMSegTempCrosshairsTool from './tools/DICOMSegTempCrosshairsTool';\r\n\r\n/**\r\n *\r\n * @param {object} configuration\r\n * @param {Object|Array} configuration.csToolsConfig\r\n */\r\nexport default function init({ servicesManager, configuration = {} }) {\r\n  const { BrushTool, SphericalBrushTool, CorrectionScissorsTool } = csTools;\r\n  const tools = [BrushTool, SphericalBrushTool, CorrectionScissorsTool];\r\n\r\n  tools.forEach(tool => csTools.addTool(tool));\r\n\r\n  csTools.addTool(BrushTool, {\r\n    name: 'BrushEraser',\r\n    configuration: {\r\n      alwaysEraseOnClick: true,\r\n    },\r\n  });\r\n\r\n  csTools.addTool(DICOMSegTempCrosshairsTool);\r\n}\r\n","const TOOL_NAMES = {\r\n  RTSTRUCT_DISPLAY_TOOL: 'RTStructDisplayTool',\r\n};\r\n\r\nexport default TOOL_NAMES;\r\n","import cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\n\r\nconst { importInternal } = cornerstoneTools;\r\nconst draw = importInternal('drawing/draw');\r\nconst drawLine = importInternal('drawing/drawLine');\r\nconst getNewContext = importInternal('drawing/getNewContext');\r\n\r\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\r\n  const context = getNewContext(eventData.canvasContext.canvas);\r\n  const { element } = eventData;\r\n\r\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\r\n\r\n  const { clientWidth: width, clientHeight: height } = element;\r\n\r\n  const offset = 10;\r\n\r\n  draw(context, context => {\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\r\n      { x: width, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\r\n      { x: 0, y: centerCanvas.y },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\r\n      { x: centerCanvas.x, y: height },\r\n      options,\r\n      'canvas'\r\n    );\r\n\r\n    drawLine(\r\n      context,\r\n      element,\r\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\r\n      { x: centerCanvas.x, y: 0 },\r\n      options,\r\n      'canvas'\r\n    );\r\n  });\r\n}\r\n","import { importInternal, getToolState, toolColors } from 'cornerstone-tools';\r\nimport TOOL_NAMES from '../utils/toolNames';\r\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\r\n\r\n// Cornerstone 3rd party dev kit imports\r\nconst draw = importInternal('drawing/draw');\r\nconst drawCircle = importInternal('drawing/drawCircle');\r\nconst drawJoinedLines = importInternal('drawing/drawJoinedLines');\r\nconst getNewContext = importInternal('drawing/getNewContext');\r\nconst BaseTool = importInternal('base/BaseTool');\r\n\r\n/**\r\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\r\n * @extends cornerstoneTools.BaseTool\r\n */\r\nexport default class RTStructDisplayTool extends BaseTool {\r\n  constructor(props = {}) {\r\n    const defaultProps = {\r\n      mixins: ['enabledOrDisabledBinaryTool'],\r\n      name: TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL,\r\n    };\r\n\r\n    const initialProps = Object.assign(defaultProps, props);\r\n\r\n    super(initialProps);\r\n\r\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\r\n  }\r\n\r\n  renderToolData(evt) {\r\n    const eventData = evt.detail;\r\n    const rtstructModule = this._rtStructModule;\r\n\r\n    const toolState = getToolState(evt.currentTarget, this.name);\r\n\r\n    if (!toolState) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      lineWidth,\r\n      opacity,\r\n      highlightOpacity,\r\n    } = rtstructModule.configuration;\r\n\r\n    // We have tool data for this element - iterate over each one and draw it\r\n    const context = getNewContext(eventData.canvasContext.canvas);\r\n\r\n    let crossHairCenter;\r\n\r\n    for (let i = 0; i < toolState.data.length; i++) {\r\n      const data = toolState.data[i];\r\n\r\n      const structureSet = rtstructModule.getters.structureSet(\r\n        data.structureSetSeriesInstanceUid\r\n      );\r\n\r\n      // Don't render if entire StructureSet is hidden.\r\n      if (structureSet.visible === false) {\r\n        continue;\r\n      }\r\n\r\n      const ROIContourData = rtstructModule.getters.ROIContour(\r\n        data.structureSetSeriesInstanceUid,\r\n        data.ROINumber\r\n      );\r\n\r\n      // Don't render if ROIContour is hidden.\r\n      if (ROIContourData.visible === false) {\r\n        continue;\r\n      }\r\n\r\n      const points = data.handles.points;\r\n\r\n      if (!points.length) {\r\n        continue;\r\n      }\r\n\r\n      const colorArray = ROIContourData.colorArray;\r\n      const color = `rgba(${colorArray[0]},${colorArray[1]},${\r\n        colorArray[2]\r\n      },${opacity})`;\r\n\r\n      let highlight = data.highlight;\r\n      const options = { color, lineWidth };\r\n\r\n      if (highlight) {\r\n        crossHairCenter = { x: 0, y: 0 };\r\n\r\n        points.forEach(point => {\r\n          crossHairCenter.x += point.x;\r\n          crossHairCenter.y += point.y;\r\n        });\r\n\r\n        crossHairCenter.x /= points.length;\r\n        crossHairCenter.y /= points.length;\r\n\r\n        // TODO: Disabling hightlight for now, it'd be good to bring it back\r\n        // when we have a good way of doing this for SEG.\r\n\r\n        // options.fillStyle = color = `rgba(${colorArray[0]},${colorArray[1]},${\r\n        //   colorArray[2]\r\n        // },${highlightOpacity})`;\r\n\r\n        // Draw highlight lines.\r\n\r\n        delete data.highlight; // Don't highlight on next render.\r\n      }\r\n\r\n      switch (data.type) {\r\n        case 'CLOSED_PLANAR':\r\n          this._renderClosedPlanar(context, eventData.element, points, options);\r\n          break;\r\n        case 'POINT':\r\n          this._renderPoint(context, eventData.element, points, options);\r\n          break;\r\n        case 'OPEN_PLANAR':\r\n          this._renderOpenPlanar(context, eventData.element, points, options);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (crossHairCenter) {\r\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\r\n        color: toolColors.getActiveColor(),\r\n        lineWidth: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  _renderClosedPlanar(context, element, points, options) {\r\n    draw(context, context => {\r\n      drawJoinedLines(\r\n        context,\r\n        element,\r\n        points[points.length - 1],\r\n        points,\r\n        options\r\n      );\r\n    });\r\n  }\r\n\r\n  _renderPoint(context, element, points, options) {\r\n    draw(context, context => {\r\n      drawCircle(context, element, points[0], 3, options);\r\n    });\r\n  }\r\n\r\n  _renderOpenPlanar(context, element, points, options) {\r\n    draw(context, context => {\r\n      drawJoinedLines(context, element, points[0], points, options);\r\n    });\r\n  }\r\n}\r\n","import cornerstoneTools from 'cornerstone-tools';\r\nimport TOOL_NAMES from '../../../utils/toolNames';\r\n\r\nconst globalImageIdSpecificToolStateManager =\r\n  cornerstoneTools.globalImageIdSpecificToolStateManager;\r\n\r\n/**\r\n * getImageIdOfCenterFrameOfROIContour - Returns the imageId nearest to the center of the\r\n * volumes extent in the stack's Z direction which contains one of the ROIContour's Contours.\r\n * @param {string} structureSetSeriesInstanceUid The SeriesInstanceUID of the structure set.\r\n * @param {number} ROINumber The ROINumber of the region.\r\n * @param {string} imageIdsInStack The stack of imageIds.\r\n *\r\n * @returns The imageId\r\n */\r\nexport default function getImageIdOfCenterFrameOfROIContour(\r\n  structureSetSeriesInstanceUid,\r\n  ROINumber,\r\n  imageIdsInStack\r\n) {\r\n  const rtStructDisplayToolName = TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL;\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n  const imageIdIndicies = [];\r\n\r\n  for (let i = 0; i < imageIdsInStack.length; i++) {\r\n    const imageId = imageIdsInStack[i];\r\n\r\n    const imageIdSpecificToolState = toolState[imageId];\r\n\r\n    if (\r\n      !imageIdSpecificToolState ||\r\n      !imageIdSpecificToolState[rtStructDisplayToolName] ||\r\n      !imageIdSpecificToolState[rtStructDisplayToolName].data\r\n    ) {\r\n      continue;\r\n    }\r\n\r\n    const toolData = imageIdSpecificToolState[rtStructDisplayToolName].data;\r\n\r\n    if (\r\n      _toolDataContainsROIContour(\r\n        toolData,\r\n        structureSetSeriesInstanceUid,\r\n        ROINumber\r\n      )\r\n    ) {\r\n      imageIdIndicies.push(i);\r\n    }\r\n  }\r\n\r\n  const centerImageIdIndex =\r\n    imageIdIndicies[Math.floor(imageIdIndicies.length / 2)];\r\n\r\n  return imageIdsInStack[centerImageIdIndex];\r\n}\r\n\r\nfunction _toolDataContainsROIContour(\r\n  toolData,\r\n  structureSetSeriesInstanceUid,\r\n  ROINumber\r\n) {\r\n  return !!toolData.some(\r\n    toolDataI =>\r\n      toolDataI.structureSetSeriesInstanceUid ===\r\n        structureSetSeriesInstanceUid && toolDataI.ROINumber === ROINumber\r\n  );\r\n}\r\n","import cornerstone from 'cornerstone-core';\r\nimport getImageIdOfCenterFrameOfROIContour from './lib/getImageIdOfCenterFrameOfROIContour';\r\nimport structureSetReferencesSeriesInstanceUid from './lib/structureSetReferencesSeriesInstanceUid';\r\n\r\n// We should put this as a helper somewhere as we are using it in mutliple places.\r\nfunction refreshViewport() {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n}\r\n\r\nconst configuration = {\r\n  lineWidth: 3,\r\n  opacity: 0.75,\r\n  highlightOpacity: 0.5,\r\n};\r\n\r\nconst state = {\r\n  StructureSets: [],\r\n};\r\n\r\n/**\r\n * Adds a structure set to the module.\r\n * @param {Object} structureSetData The structure set data.\r\n */\r\nfunction setStructureSet(structureSetData) {\r\n  state.StructureSets.push(structureSetData);\r\n}\r\n\r\n/**\r\n * Returns the StructureSet with the given SeriesInstanceUID.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n *\r\n * @returns {Object} The StructureSet.\r\n */\r\nfunction getStructureSet(SeriesInstanceUID) {\r\n  return state.StructureSets.find(\r\n    structureSet => structureSet.SeriesInstanceUID === SeriesInstanceUID\r\n  );\r\n}\r\n\r\n/**\r\n * Returns the ROI Contour with the given ROINumber on the StructureSet defined by the given\r\n * SeriesInstanceUID.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour to fetch.\r\n */\r\nfunction getROIContour(SeriesInstanceUID, ROINumber) {\r\n  const structureSet = getStructureSet(SeriesInstanceUID);\r\n\r\n  if (!structureSet) {\r\n    return;\r\n  }\r\n\r\n  return structureSet.ROIContours.find(\r\n    ROIContour => ROIContour.ROINumber === ROINumber\r\n  );\r\n}\r\n\r\n/**\r\n * Hides the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n */\r\nfunction setHideStructureSet(SeriesInstanceUID) {\r\n  _setStructureSetVisible(SeriesInstanceUID, false);\r\n}\r\n\r\n/**\r\n * Shows the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n */\r\nfunction setShowStructureSet(SeriesInstanceUID) {\r\n  _setStructureSetVisible(SeriesInstanceUID, true);\r\n}\r\n\r\n/**\r\n * Sets the visibility of the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {boolean} visible Whether the StructureSet should visible or not.\r\n */\r\nfunction _setStructureSetVisible(SeriesInstanceUID, visible = true) {\r\n  const StructureSet = getStructureSet(SeriesInstanceUID);\r\n\r\n  if (StructureSet) {\r\n    StructureSet.ROIContours.forEach(ROIContour => {\r\n      ROIContour.visible = visible;\r\n    });\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Toggles the visibility of the StructureSet.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n */\r\nfunction setToggleStructureSet(SeriesInstanceUID) {\r\n  const StructureSet = getStructureSet(SeriesInstanceUID);\r\n\r\n  if (StructureSet) {\r\n    StructureSet.visible = !StructureSet.visible;\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Hides the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n */\r\nfunction setHideROIContour(SeriesInstanceUID, ROINumber) {\r\n  _setROIContourVisible(SeriesInstanceUID, ROINumber, false);\r\n}\r\n\r\n/**\r\n * Shows the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n */\r\nfunction setShowROIContour(SeriesInstanceUID, ROINumber) {\r\n  _setROIContourVisible(SeriesInstanceUID, ROINumber, true);\r\n}\r\n\r\n/**\r\n * Sets the visibility of the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n * @param {boolean} visible Whether the StructureSet should visible or not.\r\n */\r\nfunction _setROIContourVisible(SeriesInstanceUID, ROINumber, visible = true) {\r\n  const ROIContour = getROIContour(SeriesInstanceUID, ROINumber);\r\n\r\n  if (ROIContour) {\r\n    ROIContour.visible = visible;\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Toggles the visibility of the ROIContour.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\r\n * @param {number} ROINumber The ROINUmber of the ROIContour.\r\n */\r\nfunction setToggleROIContour(SeriesInstanceUID, ROINumber) {\r\n  const ROIContour = getROIContour(SeriesInstanceUID, ROINumber);\r\n\r\n  if (ROIContour) {\r\n    ROIContour.visible = !ROIContour.visible;\r\n\r\n    refreshViewport();\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an array of StructureSets which reference the given SeriesInstanceUID.\r\n * @param {string} SeriesInstanceUID The SeriesInstanceUID to check.\r\n */\r\nfunction getStructuresSetsWhichReferenceSeriesInstanceUid(SeriesInstanceUID) {\r\n  const { StructureSets } = state;\r\n  return StructureSets.filter(StructureSet =>\r\n    structureSetReferencesSeriesInstanceUid(StructureSet, SeriesInstanceUID)\r\n  );\r\n}\r\n\r\nexport default {\r\n  getters: {\r\n    structureSet: getStructureSet,\r\n    ROIContour: getROIContour,\r\n    structuresSetsWhichReferenceSeriesInstanceUid: getStructuresSetsWhichReferenceSeriesInstanceUid,\r\n    imageIdOfCenterFrameOfROIContour: getImageIdOfCenterFrameOfROIContour,\r\n  },\r\n  setters: {\r\n    structureSet: setStructureSet,\r\n    hideROIContour: setHideROIContour,\r\n    showROIContour: setShowROIContour,\r\n    toggleROIContour: setToggleROIContour,\r\n    hideStructureSet: setHideStructureSet,\r\n    showStructureSet: setShowStructureSet,\r\n    toggleStructureSet: setToggleStructureSet,\r\n  },\r\n  state,\r\n  configuration,\r\n};\r\n","/**\r\n * structureSetReferencesSeriesInstanceUid - Returns true if the structure set\r\n * references the given SeriesInstanceUID.\r\n * @param {*} StructureSet\r\n * @param {*} SeriesInstanceUID\r\n */\r\nexport default function structureSetReferencesSeriesInstanceUid(\r\n  StructureSet,\r\n  SeriesInstanceUID\r\n) {\r\n  const { referencedSeriesSequence } = StructureSet;\r\n  return referencedSeriesSequence.some(\r\n    referencedSeries =>\r\n      referencedSeries.SeriesInstanceUID ===\r\n      SeriesInstanceUID\r\n  );\r\n}\r\n","import cornerstoneTools from 'cornerstone-tools';\r\nimport RTStructDisplayTool from './tools/RTStructDisplayTool';\r\nimport rtStructModule from './tools/modules/rtStructModule';\r\n\r\nimport TOOL_NAMES from './utils/toolNames';\r\n\r\nconst defaultConfig = {\r\n  TOOL_NAMES: {\r\n    RT_STRUCT_DISPLAY_TOOL: 'RTStructDisplayTool',\r\n  },\r\n};\r\n\r\n/**\r\n *\r\n * @param {object} configuration\r\n * @param {Object|Array} configuration.csToolsConfig\r\n */\r\nexport default function init({ servicesManager, configuration = {} }) {\r\n  const conifg = Object.assign({}, defaultConfig, configuration);\r\n\r\n  TOOL_NAMES.RT_STRUCT_DISPLAY_TOOL = conifg.TOOL_NAMES.RT_STRUCT_DISPLAY_TOOL;\r\n\r\n  cornerstoneTools.register('module', 'rtstruct', rtStructModule);\r\n  cornerstoneTools.addTool(RTStructDisplayTool);\r\n}\r\n","export default function transformPointsToImagePlane(points, imagePlane) {\r\n  // See Equation C.7.6.2.1-1 of the DICOM standard\r\n\r\n  const {\r\n    rowCosines,\r\n    columnCosines,\r\n    rowPixelSpacing: deltaI,\r\n    columnPixelSpacing: deltaJ,\r\n    imagePositionPatient,\r\n  } = imagePlane;\r\n\r\n  const X = [rowCosines[0], rowCosines[1], rowCosines[2]];\r\n  const Y = [columnCosines[0], columnCosines[1], columnCosines[2]];\r\n  const S = [\r\n    imagePositionPatient[0],\r\n    imagePositionPatient[1],\r\n    imagePositionPatient[2],\r\n  ];\r\n\r\n  // 9 sets of simulataneous equations to choose from, choose which set to solve\r\n  // Based on the largest component of each direction cosine.\r\n  // This avoids NaNs or floating point errors caused by dividing by very small numbers and ensures a safe mapping\r\n  // when mapping between planes that are close to orthogonal.\r\n\r\n  let ix = 0;\r\n  let iy = 0;\r\n  let largestDirectionCosineMagnitude = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  // Find the element with the largest magnitude in each direction cosine vector.\r\n  for (let i = 0; i < X.length; i++) {\r\n    if (Math.abs(X[i]) > largestDirectionCosineMagnitude.x) {\r\n      ix = i;\r\n      largestDirectionCosineMagnitude.x = Math.abs(X[i]);\r\n    }\r\n    if (Math.abs(Y[i]) > largestDirectionCosineMagnitude.y) {\r\n      iy = i;\r\n      largestDirectionCosineMagnitude.y = Math.abs(Y[i]);\r\n    }\r\n  }\r\n\r\n  const ci = {\r\n    // Index of max elements in X and Y\r\n    ix,\r\n    iy,\r\n  };\r\n\r\n  // Sanity Check\r\n  const directionCosineMagnitude = {\r\n    x: Math.pow(X[0], 2) + Math.pow(X[1], 2) + Math.pow(X[2], 2),\r\n    y: Math.pow(Y[0], 2) + Math.pow(Y[1], 2) + Math.pow(Y[2], 2),\r\n  };\r\n\r\n  if (directionCosineMagnitude.x < 0.99 || directionCosineMagnitude.y < 0.99) {\r\n    throw Error(\r\n      `Direction cosines do not sum to 1 in quadrature. There is likely a mistake in the DICOM metadata.` +\r\n        `directionCosineMagnitudes: ${directionCosineMagnitude.x}, ${directionCosineMagnitude.y}`\r\n    );\r\n  }\r\n\r\n  // Fill in elements that won't change between points\r\n  const c = [undefined, Y[ci.ix], X[ci.ix], undefined, X[ci.iy], Y[ci.iy]];\r\n\r\n  for (let pointI = 0; pointI < points.length; pointI++) {\r\n    // Subtract imagePositionPatient from the coordinate\r\n    const r = [\r\n      points[pointI].x - S[0],\r\n      points[pointI].y - S[1],\r\n      points[pointI].z - S[2],\r\n    ];\r\n\r\n    // Set the variable terms in c.\r\n    c[0] = r[ci.ix];\r\n    c[3] = r[ci.iy];\r\n\r\n    // General case: Solves the two choosen simulataneous equations to go from the patient coordinate system to the imagePlane.\r\n    const i =\r\n      (c[0] - (c[1] * c[3]) / c[5]) /\r\n      (c[2] * deltaI * (1 - (c[1] * c[4]) / (c[2] * c[5])));\r\n    const j = (c[3] - c[4] * i * deltaI) / (c[5] * deltaJ);\r\n\r\n    // NOTE: Add (0.5, 0.5) to the coordinate, as PCS reference frame is with respect to the centre of the first pixel.\r\n    points[pointI].x = i + 0.5;\r\n    points[pointI].y = j + 0.5;\r\n    delete points[pointI].z;\r\n  }\r\n\r\n  return;\r\n}\r\n","import OHIF from '@ohif/core';\r\nimport dcmjs from 'dcmjs';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport transformPointsToImagePlane from './utils/transformPointsToImagePlane';\r\nimport TOOL_NAMES from './utils/toolNames';\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nconst dicomlab2RGB = dcmjs.data.Colors.dicomlab2RGB;\r\nconst globalImageIdSpecificToolStateManager =\r\n  cornerstoneTools.globalImageIdSpecificToolStateManager;\r\nconst { DicomLoaderService } = OHIF.utils;\r\n\r\nexport default async function loadRTStruct(\r\n  rtStructDisplaySet,\r\n  referencedDisplaySet,\r\n  studies\r\n) {\r\n  const rtStructModule = cornerstoneTools.getModule('rtstruct');\r\n  // Set here is loading is asynchronous.\r\n  // If this function throws its set back to false.\r\n  rtStructDisplaySet.isLoaded = true;\r\n\r\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\r\n\r\n  const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\r\n    rtStructDisplaySet,\r\n    studies\r\n  );\r\n\r\n  const dicomData = dcmjs.data.DicomMessage.readFile(segArrayBuffer);\r\n  const rtStructDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\r\n    dicomData.dict\r\n  );\r\n\r\n  rtStructDataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\r\n    dicomData.meta\r\n  );\r\n\r\n  // global cornerstone tools state to attach measurements to.\r\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n  const {\r\n    StructureSetROISequence,\r\n    ROIContourSequence,\r\n    RTROIObservationsSequence,\r\n    StructureSetLabel,\r\n  } = rtStructDataset;\r\n\r\n  // Define our structure set entry and add it to the rtstruct module state.\r\n  const structureSet = {\r\n    StructureSetLabel,\r\n    SeriesInstanceUID: rtStructDataset.SeriesInstanceUID,\r\n    ROIContours: [],\r\n    referencedSeriesSequence:\r\n      rtStructDisplaySet.metadata.ReferencedSeriesSequence,\r\n    visible: true,\r\n  };\r\n\r\n  rtStructModule.setters.structureSet(structureSet);\r\n\r\n  const imageIdSopInstanceUidPairs = _getImageIdSopInstanceUidPairsForDisplaySet(\r\n    studies,\r\n    StudyInstanceUID,\r\n    SeriesInstanceUID\r\n  );\r\n\r\n  const rtStructDisplayToolName = TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL;\r\n\r\n  for (let i = 0; i < ROIContourSequence.length; i++) {\r\n    const ROIContour = ROIContourSequence[i];\r\n    const { ReferencedROINumber, ContourSequence } = ROIContour;\r\n\r\n    if (!ContourSequence) {\r\n      continue;\r\n    }\r\n\r\n    const isSupported = false;\r\n\r\n    const ContourSequenceArray = _toArray(ContourSequence);\r\n\r\n    for (let c = 0; c < ContourSequenceArray.length; c++) {\r\n      const {\r\n        ContourImageSequence,\r\n        ContourData,\r\n        NumberOfContourPoints,\r\n        ContourGeometricType,\r\n      } = ContourSequenceArray[c];\r\n\r\n      const sopInstanceUID = ContourImageSequence\r\n        ? ContourImageSequence.ReferencedSOPInstanceUID\r\n        : _getClosestSOPInstanceUID(\r\n            ContourData,\r\n            ContourGeometricType,\r\n            NumberOfContourPoints,\r\n            imageIdSopInstanceUidPairs\r\n          );\r\n      const imageId = _getImageId(imageIdSopInstanceUidPairs, sopInstanceUID);\r\n\r\n      if (!imageId) {\r\n        continue;\r\n      }\r\n\r\n      const imageIdSpecificToolData = _getOrCreateImageIdSpecificToolData(\r\n        toolState,\r\n        imageId,\r\n        rtStructDisplayToolName\r\n      );\r\n\r\n      const imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);\r\n      const points = [];\r\n      let measurementData;\r\n\r\n      switch (ContourGeometricType) {\r\n        case 'CLOSED_PLANAR':\r\n        case 'OPEN_PLANAR':\r\n        case 'POINT':\r\n          isSupported = true;\r\n\r\n          for (let p = 0; p < NumberOfContourPoints * 3; p += 3) {\r\n            points.push({\r\n              x: ContourData[p],\r\n              y: ContourData[p + 1],\r\n              z: ContourData[p + 2],\r\n            });\r\n          }\r\n\r\n          transformPointsToImagePlane(points, imagePlane);\r\n\r\n          measurementData = {\r\n            handles: {\r\n              points,\r\n            },\r\n            type: ContourGeometricType,\r\n            structureSetSeriesInstanceUid: rtStructDataset.SeriesInstanceUID,\r\n            ROINumber: ReferencedROINumber,\r\n          };\r\n\r\n          imageIdSpecificToolData.push(measurementData);\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n    }\r\n\r\n    _setROIContourMetadata(\r\n      structureSet,\r\n      StructureSetROISequence,\r\n      RTROIObservationsSequence,\r\n      ROIContour,\r\n      isSupported\r\n    );\r\n  }\r\n\r\n  _setToolEnabledIfNotEnabled(rtStructDisplayToolName);\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app that depends on rts to be loaded.\r\n   *\r\n   * Currently we are using a non-ideal implementation through a custom event to notify the rtstruct panel\r\n   * or other components that could rely on loaded rtstructs that\r\n   * the first batch of structs were loaded so that e.g. when the user opens the panel\r\n   * before the structs are fully loaded, the panel can subscribe to this custom event\r\n   * and update itself with the new structs.\r\n   *\r\n   * This limitation is due to the fact that the rtmodule is an object (which will be\r\n   * updated after the structs are loaded) that React its not aware of its changes\r\n   * because the module object its not passed in to the panel component as prop but accessed externally.\r\n   *\r\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n   * allows us to easily watch the module or the rtstruct loading process in any other component\r\n   * without subscribing to external events.\r\n   */\r\n  const event = new CustomEvent('extensiondicomrtrtloaded', {\r\n    detail: {\r\n      rtStructDisplaySet,\r\n      referencedDisplaySet,\r\n      studies,\r\n    },\r\n  });\r\n  document.dispatchEvent(event);\r\n}\r\n\r\nfunction _setROIContourMetadata(\r\n  structureSet,\r\n  StructureSetROISequence,\r\n  RTROIObservationsSequence,\r\n  ROIContour,\r\n  isSupported\r\n) {\r\n  const StructureSetROI = StructureSetROISequence.find(\r\n    structureSetROI =>\r\n      structureSetROI.ROINumber === ROIContour.ReferencedROINumber\r\n  );\r\n\r\n  const ROIContourData = {\r\n    ROINumber: StructureSetROI.ROINumber,\r\n    ROIName: StructureSetROI.ROIName,\r\n    ROIGenerationAlgorithm: StructureSetROI.ROIGenerationAlgorithm,\r\n    ROIDescription: StructureSetROI.ROIDescription,\r\n    isSupported,\r\n    visible: true,\r\n  };\r\n\r\n  _setROIContourDataColor(ROIContour, ROIContourData);\r\n\r\n  if (RTROIObservationsSequence) {\r\n    // If present, add additional RTROIObservations metadata.\r\n    _setROIContourRTROIObservations(\r\n      ROIContourData,\r\n      RTROIObservationsSequence,\r\n      ROIContour.ReferencedROINumber\r\n    );\r\n  }\r\n\r\n  structureSet.ROIContours.push(ROIContourData);\r\n}\r\n\r\nfunction _setROIContourDataColor(ROIContour, ROIContourData) {\r\n  let { ROIDisplayColor, RecommendedDisplayCIELabValue } = ROIContour;\r\n\r\n  if (!ROIDisplayColor && RecommendedDisplayCIELabValue) {\r\n    // If ROIDisplayColor is absent, try using the RecommendedDisplayCIELabValue color.\r\n    ROIDisplayColor = dicomlab2RGB(RecommendedDisplayCIELabValue);\r\n  }\r\n\r\n  if (ROIDisplayColor) {\r\n    ROIContourData.colorArray = [...ROIDisplayColor];\r\n  } else {\r\n    //Choose a color from the cornerstoneTools colorLUT\r\n    // We sample from the default color LUT here (i.e. 0), as we have nothing else to go on.\r\n    const { getters } = cornerstoneTools.getModule('segmentation');\r\n    const color = getters.colorForSegmentIndexColorLUT(\r\n      0,\r\n      ROIContourData.ROINumber\r\n    );\r\n\r\n    ROIContourData.colorArray = [...color];\r\n  }\r\n}\r\n\r\nfunction _setROIContourRTROIObservations(\r\n  ROIContourData,\r\n  RTROIObservationsSequence,\r\n  ROINumber\r\n) {\r\n  const RTROIObservations = RTROIObservationsSequence.find(\r\n    RTROIObservations => RTROIObservations.ReferencedROINumber === ROINumber\r\n  );\r\n\r\n  if (RTROIObservations) {\r\n    // Deep copy so we don't keep the reference to the dcmjs dataset entry.\r\n    const {\r\n      ObservationNumber,\r\n      ROIObservationDescription,\r\n      RTROIInterpretedType,\r\n      ROIInterpreter,\r\n    } = RTROIObservations;\r\n\r\n    ROIContourData.RTROIObservations = {\r\n      ObservationNumber,\r\n      ROIObservationDescription,\r\n      RTROIInterpretedType,\r\n      ROIInterpreter,\r\n    };\r\n  }\r\n}\r\n\r\nfunction _setToolEnabledIfNotEnabled(toolName) {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    const { element, image } = enabledElement;\r\n    const tool = cornerstoneTools.getToolForElement(element, toolName);\r\n\r\n    if (tool.mode !== 'enabled') {\r\n      // If not already active or passive, set passive so contours render.\r\n      cornerstoneTools.setToolEnabled(toolName);\r\n    }\r\n\r\n    if (image) {\r\n      cornerstone.updateImage(element);\r\n    }\r\n  });\r\n}\r\n\r\nfunction _getOrCreateImageIdSpecificToolData(toolState, imageId, toolName) {\r\n  if (toolState.hasOwnProperty(imageId) === false) {\r\n    toolState[imageId] = {};\r\n  }\r\n\r\n  const imageIdToolState = toolState[imageId];\r\n\r\n  // If we don't have tool state for this type of tool, add an empty object\r\n  if (imageIdToolState.hasOwnProperty(toolName) === false) {\r\n    imageIdToolState[toolName] = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  return imageIdToolState[toolName].data;\r\n}\r\n\r\nconst _getImageId = (imageIdSopInstanceUidPairs, sopInstanceUID) => {\r\n  const imageIdSopInstanceUidPairsEntry = imageIdSopInstanceUidPairs.find(\r\n    imageIdSopInstanceUidPairsEntry =>\r\n      imageIdSopInstanceUidPairsEntry.sopInstanceUID === sopInstanceUID\r\n  );\r\n\r\n  return imageIdSopInstanceUidPairsEntry\r\n    ? imageIdSopInstanceUidPairsEntry.imageId\r\n    : null;\r\n};\r\n\r\nfunction _getImageIdSopInstanceUidPairsForDisplaySet(\r\n  studies,\r\n  StudyInstanceUID,\r\n  SeriesInstanceUID\r\n) {\r\n  const study = studies.find(\r\n    study => study.StudyInstanceUID === StudyInstanceUID\r\n  );\r\n\r\n  const displaySets = study.displaySets.filter(set => {\r\n    return set.SeriesInstanceUID === SeriesInstanceUID;\r\n  });\r\n\r\n  if (displaySets.length > 1) {\r\n    console.warn(\r\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\r\n    );\r\n    // TODO -> We could make check the instance list and see if any match?\r\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\r\n    // ^ Will that even happen?\r\n  }\r\n\r\n  const referencedDisplaySet = displaySets[0];\r\n\r\n  return referencedDisplaySet.images.map(image => {\r\n    return {\r\n      imageId: image.getImageId(),\r\n      sopInstanceUID: image.getSOPInstanceUID(),\r\n    };\r\n  });\r\n}\r\n\r\nfunction _toArray(objOrArray) {\r\n  return Array.isArray(objOrArray) ? objOrArray : [objOrArray];\r\n}\r\n\r\nfunction _getClosestSOPInstanceUID(\r\n  ContourData,\r\n  ContourGeometricType,\r\n  NumberOfContourPoints,\r\n  imageIdSopInstanceUidPairs\r\n) {\r\n  const closest = {\r\n    distance: Infinity,\r\n    sopInstanceUID: null,\r\n  };\r\n\r\n  let point;\r\n\r\n  switch (ContourGeometricType) {\r\n    case 'POINT':\r\n      point = ContourData;\r\n      break;\r\n    case 'CLOSED_PLANAR':\r\n    case 'OPEN_PLANAR':\r\n      // These are defined as planar, so get the of the region to get the\r\n      // Best mapping to a plane even if its potentially off center.\r\n\r\n      point = [0, 0, 0];\r\n      for (let p = 0; p < NumberOfContourPoints * 3; p += 3) {\r\n        point[0] += ContourData[p];\r\n        point[1] += ContourData[p + 1];\r\n        point[2] += ContourData[p + 2];\r\n      }\r\n\r\n      point[0] /= NumberOfContourPoints;\r\n      point[1] /= NumberOfContourPoints;\r\n      point[2] /= NumberOfContourPoints;\r\n  }\r\n\r\n  imageIdSopInstanceUidPairs.forEach(pair => {\r\n    const { imageId } = pair;\r\n\r\n    const imagePlaneModule = cornerstone.metaData.get(\r\n      'imagePlaneModule',\r\n      imageId\r\n    );\r\n\r\n    const distance = distanceFromPointToPlane(point, imagePlaneModule);\r\n\r\n    if (distance < closest.distance) {\r\n      closest.distance = distance;\r\n      closest.sopInstanceUID = pair.sopInstanceUID;\r\n    }\r\n  });\r\n\r\n  return closest.sopInstanceUID;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[3]} P - The point\r\n * @param {object} imagePlaneModule The cornerstone metadata object for the imagePlane\r\n */\r\nfunction distanceFromPointToPlane(P, imagePlaneModule) {\r\n  const {\r\n    rowCosines,\r\n    columnCosines,\r\n    imagePositionPatient: Q,\r\n  } = imagePlaneModule;\r\n\r\n  let N = [];\r\n  vec3.cross(N, rowCosines, columnCosines);\r\n\r\n  const [A, B, C] = N;\r\n\r\n  const D = -A * Q[0] - B * Q[1] - C * Q[2];\r\n\r\n  return Math.abs(A * P[0] + B * P[1] + C * P[2] + D); // Denominator is sqrt(A**2 + B**2 + C**2) which is 1 as its a normal vector\r\n}\r\n","import { metadata } from '@ohif/core';\r\n\r\nexport default function getSourceDisplaySet(studies, rtStructDisplaySet, activateLabelMap = true) {\r\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(\r\n    rtStructDisplaySet,\r\n    studies\r\n  );\r\n\r\n  if (activateLabelMap) {\r\n    rtStructDisplaySet.load(referencedDisplaySet, studies);\r\n  }\r\n\r\n  return referencedDisplaySet;\r\n}\r\n","import { MODULE_TYPES, utils, DICOMWeb } from '@ohif/core';\r\nimport loadRTStruct from './loadRTStruct';\r\nimport getSourceDisplaySet from './getSourceDisplaySet';\r\n\r\nimport id from './id';\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  DICOM_RT_STRUCT: '1.2.840.10008.5.1.4.1.1.481.3',\r\n};\r\n\r\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\r\n\r\nconst OHIFDicomRTStructSopClassHandler = {\r\n  id: 'OHIFDicomRTStructSopClassHandler',\r\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n  sopClassUIDs,\r\n  getDisplaySetFromSeries: function (\r\n    series,\r\n    study,\r\n    dicomWebClient,\r\n    authorizationHeaders\r\n  ) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      SeriesDate,\r\n      SeriesTime,\r\n      SeriesNumber,\r\n      SeriesDescription,\r\n      FrameOfReferenceUID,\r\n      SOPInstanceUID,\r\n      SeriesInstanceUID,\r\n      StudyInstanceUID,\r\n    } = metadata;\r\n\r\n    // TODO -> GET REFERENCED FRAME OF REFERENCE SEQUENCE.\r\n\r\n    const rtStructDisplaySet = {\r\n      Modality: 'RTSTRUCT',\r\n      displaySetInstanceUID: utils.guid(),\r\n      wadoRoot: study.getData().wadoRoot,\r\n      wadoUri: instance.getData().wadouri,\r\n      SOPInstanceUID,\r\n      SeriesInstanceUID,\r\n      StudyInstanceUID,\r\n      FrameOfReferenceUID,\r\n      authorizationHeaders,\r\n      metadata,\r\n      isDerived: true,\r\n      referencedDisplaySetUID: null, // Assigned when loaded.\r\n      labelmapIndex: null, // Assigned when loaded.\r\n      isLoaded: false,\r\n      SeriesDate,\r\n      SeriesTime,\r\n      SeriesNumber,\r\n      SeriesDescription,\r\n      metadata,\r\n    };\r\n\r\n    if (!metadata.ReferencedSeriesSequence) {\r\n      const ReferencedFrameOfReferenceSequence =\r\n        metadata.ReferencedFrameOfReferenceSequence;\r\n\r\n      if (ReferencedFrameOfReferenceSequence) {\r\n        // TODO -> @dannyrb Do we augment metadata or add a (potentially large? fallback list in filterDerivedDisplaySets )\r\n        metadata.ReferencedSeriesSequence = _deriveReferencedSeriesSequenceFromFrameOfReferenceSequence(\r\n          ReferencedFrameOfReferenceSequence\r\n        );\r\n      }\r\n    }\r\n\r\n    rtStructDisplaySet.getSourceDisplaySet = function (studies, activateLabelMap = true) {\r\n      return getSourceDisplaySet(studies, rtStructDisplaySet, activateLabelMap);\r\n    };\r\n\r\n    rtStructDisplaySet.load = function (referencedDisplaySet, studies) {\r\n      return loadRTStruct(\r\n        rtStructDisplaySet,\r\n        referencedDisplaySet,\r\n        studies\r\n      ).catch(error => {\r\n        rtStructDisplaySet.isLoaded = false;\r\n        rtStructDisplaySet.loadError = true;\r\n        throw new Error(error);\r\n      });\r\n    };\r\n\r\n    return rtStructDisplaySet;\r\n  },\r\n};\r\n\r\nfunction _deriveReferencedSeriesSequenceFromFrameOfReferenceSequence(\r\n  ReferencedFrameOfReferenceSequence\r\n) {\r\n  const ReferencedSeriesSequence = [];\r\n\r\n  _getSequenceAsArray(ReferencedFrameOfReferenceSequence).forEach(\r\n    referencedFrameOfReference => {\r\n      const { RTReferencedStudySequence } = referencedFrameOfReference;\r\n\r\n      _getSequenceAsArray(RTReferencedStudySequence).forEach(\r\n        rtReferencedStudy => {\r\n          const { RTReferencedSeriesSequence } = rtReferencedStudy;\r\n\r\n          _getSequenceAsArray(RTReferencedSeriesSequence).forEach(\r\n            rtReferencedSeries => {\r\n              const ReferencedInstanceSequence = [];\r\n              const {\r\n                ContourImageSequence,\r\n                SeriesInstanceUID,\r\n              } = rtReferencedSeries;\r\n\r\n              _getSequenceAsArray(ContourImageSequence).forEach(\r\n                contourImage => {\r\n                  ReferencedInstanceSequence.push({\r\n                    ReferencedSOPInstanceUID:\r\n                      contourImage.ReferencedSOPInstanceUID,\r\n                    ReferencedSOPClassUID: contourImage.ReferencedSOPClassUID,\r\n                  });\r\n                }\r\n              );\r\n\r\n              const referencedSeries = {\r\n                SeriesInstanceUID,\r\n                ReferencedInstanceSequence,\r\n              };\r\n\r\n              ReferencedSeriesSequence.push(referencedSeries);\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  );\r\n\r\n  return ReferencedSeriesSequence;\r\n}\r\n\r\nfunction _getSequenceAsArray(sequence) {\r\n  return Array.isArray(sequence) ? sequence : [sequence];\r\n}\r\n\r\nfunction _getReferencedFrameOfReferenceSequence(instance) {\r\n  const referencedFrameOfReferenceSequenceRaw = instance['30060010'];\r\n\r\n  const referencedFrameOfReferenceSequence = [];\r\n\r\n  if (\r\n    !referencedFrameOfReferenceSequenceRaw ||\r\n    !referencedFrameOfReferenceSequenceRaw.Value\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  referencedFrameOfReferenceSequenceRaw.Value.forEach(\r\n    referencedFrameOfReferenceRaw => {\r\n      const frameOfReferenceUID = DICOMWeb.getString(\r\n        referencedFrameOfReferenceRaw['00200052']\r\n      );\r\n\r\n      const referencedFrameOfReference = { frameOfReferenceUID };\r\n      const RTReferencedStudySequenceRaw =\r\n        referencedFrameOfReferenceRaw['30060012'];\r\n\r\n      referencedFrameOfReferenceSequence.push(referencedFrameOfReference);\r\n\r\n      if (RTReferencedStudySequenceRaw && RTReferencedStudySequenceRaw.Value) {\r\n        referencedFrameOfReference.rtReferencedStudySequence = [];\r\n\r\n        const { rtReferencedStudySequence } = referencedFrameOfReference;\r\n\r\n        RTReferencedStudySequenceRaw.Value.forEach(rtReferencedStudyRaw => {\r\n          const referencedSopClassUID = DICOMWeb.getString(\r\n            rtReferencedStudyRaw['00081150']\r\n          );\r\n\r\n          const referencedSOPInstanceUID = DICOMWeb.getString(\r\n            rtReferencedStudyRaw['00081155']\r\n          );\r\n\r\n          const rtReferencedStudy = {\r\n            referencedSopClassUID,\r\n            referencedSOPInstanceUID,\r\n            rtReferencedSeriesSequence: [],\r\n          };\r\n\r\n          rtReferencedStudySequence.push(rtReferencedStudy);\r\n\r\n          const { rtReferencedSeriesSequence } = rtReferencedStudy;\r\n\r\n          const rtReferencedSeriesSequenceRaw =\r\n            rtReferencedStudyRaw['30060014'];\r\n\r\n          rtReferencedSeriesSequenceRaw.Value.forEach(rtReferencedSeriesRaw => {\r\n            const seriesInstanceUID = DICOMWeb.getString(\r\n              rtReferencedSeriesRaw['0020000E']\r\n            );\r\n\r\n            const rtReferencedSeries = {\r\n              seriesInstanceUID,\r\n              contourImageSequence: [],\r\n            };\r\n\r\n            rtReferencedSeriesSequence.push(rtReferencedSeries);\r\n\r\n            const { contourImageSequence } = rtReferencedSeries;\r\n\r\n            const contourImageSequenceRaw = rtReferencedSeriesRaw['30060016'];\r\n\r\n            contourImageSequenceRaw.Value.forEach(contourImageRaw => {\r\n              const referencedSOPClassUID = DICOMWeb.getString(\r\n                contourImageRaw['00081150']\r\n              );\r\n\r\n              const referencedSOPInstanceUID = DICOMWeb.getString(\r\n                contourImageRaw['00081155']\r\n              );\r\n\r\n              const referencedFrameNumber = DICOMWeb.getString(\r\n                contourImageRaw['00081160']\r\n              );\r\n              const referencedSegmentNumber = DICOMWeb.getString(\r\n                contourImageRaw['0062000B']\r\n              );\r\n\r\n              const contourImage = {\r\n                referencedSOPClassUID,\r\n                referencedSOPInstanceUID,\r\n                referencedFrameNumber,\r\n                referencedSegmentNumber,\r\n              };\r\n\r\n              contourImageSequence.push(contourImage);\r\n            });\r\n          });\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  return referencedFrameOfReferenceSequence;\r\n}\r\n\r\nexport default OHIFDicomRTStructSopClassHandler;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableListItem, Icon, Tooltip, OverlayTrigger } from '@ohif/ui';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './StructureSetItem.css';\r\n\r\nconst ColoredCircle = ({ color }) => {\r\n  return (\r\n    <div\r\n      className=\"item-color\"\r\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nColoredCircle.propTypes = {\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nconst StructureSetItem = ({\r\n  index,\r\n  label,\r\n  isDisabled,\r\n  onClick,\r\n  itemClass,\r\n  color,\r\n  visible = true,\r\n  onVisibilityChange,\r\n  selected = false,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible);\r\n  }, [visible]);\r\n\r\n  let dcmrtClassNames = `dcmrt-structure-set-item`;\r\n\r\n  if (selected) {\r\n    dcmrtClassNames += ' selected';\r\n  }\r\n\r\n  if (isDisabled) {\r\n    dcmrtClassNames += ' isDisabled';\r\n  }\r\n\r\n  const warningIcon = (\r\n    <span>\r\n      <Icon name=\"exclamation-triangle\" />\r\n    </span>\r\n  );\r\n\r\n  const tableListItem = (\r\n    <TableListItem\r\n      key={index}\r\n      itemKey={index}\r\n      itemIndex={index}\r\n      itemClass={itemClass}\r\n      itemMeta={isDisabled ? warningIcon : <ColoredCircle color={color} />}\r\n      itemMetaClass=\"item-color-section\"\r\n      onItemClick={() => {\r\n        if (isDisabled) {\r\n          return;\r\n        }\r\n\r\n        onClick();\r\n      }}\r\n    >\r\n      <div>\r\n        <div className=\"item-label\" style={{ marginBottom: 4 }}>\r\n          <a data-tip data-for={`StructureHover${index}`}>\r\n            <span>{label}</span>\r\n          </a>\r\n          <ReactTooltip\r\n            id={`StructureHover${index}`}\r\n            delayShow={250}\r\n            place=\"right\"\r\n            border={true}\r\n            type=\"light\"\r\n          >\r\n            <span>{label}</span>\r\n          </ReactTooltip>\r\n          {!isDisabled && (\r\n            <Icon\r\n              className={`eye-icon ${isVisible && '--visible'}`}\r\n              name={isVisible ? 'eye' : 'eye-closed'}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              onClick={event => {\r\n                event.stopPropagation();\r\n\r\n                if (isDisabled) {\r\n                  return;\r\n                }\r\n\r\n                const newVisibility = !isVisible;\r\n                setIsVisible(newVisibility);\r\n                onVisibilityChange(newVisibility);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {false && <div className=\"item-info\">{'...'}</div>}\r\n        {false && (\r\n          <div className=\"item-actions\">\r\n            <button\r\n              className=\"btnAction\"\r\n              onClick={() => console.log('Relabelling...')}\r\n            >\r\n              <span style={{ marginRight: '4px' }}>\r\n                <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n              </span>\r\n              Relabel\r\n            </button>\r\n            <button\r\n              className=\"btnAction\"\r\n              onClick={() => console.log('Editing description...')}\r\n            >\r\n              <span style={{ marginRight: '4px' }}>\r\n                <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\r\n              </span>\r\n              Description\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </TableListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={dcmrtClassNames}>\r\n      <React.Fragment>\r\n        {isDisabled ? (\r\n          <OverlayTrigger\r\n            key={index}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">Unsupported Region</div>\r\n                <div className=\"warningContent\">\r\n                  Contour type currently unsupported.\r\n                </div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div>{tableListItem}</div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment>{tableListItem} </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nStructureSetItem.propTypes = {\r\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  itemClass: PropTypes.string,\r\n  color: PropTypes.array.isRequired,\r\n};\r\n\r\nStructureSetItem.defaultProps = {\r\n  itemClass: '',\r\n  onClick: () => {},\r\n};\r\n\r\nexport default StructureSetItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Range } from '@ohif/ui';\r\n\r\nimport './RTSettings.css';\r\n\r\nconst RTSettings = ({ configuration, onBack, onChange }) => {\r\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\r\n\r\n  const save = (field, value) => {\r\n    onChange({ ...configuration, [field]: value });\r\n  };\r\n\r\n  const SettingsSection = ({ title, children }) => {\r\n    return (\r\n      <div className=\"settings-section\">\r\n        <div className=\"header\">{title}</div>\r\n        <div className=\"content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dcmrt-settings\">\r\n      <div className=\"settings-title\">\r\n        <h3>RT Structure Set Settings</h3>\r\n        <button className=\"return-button\" onClick={onBack}>\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <SettingsSection title=\"Segment Outline\">\r\n        <div className=\"range\">\r\n          <label htmlFor=\"range\">Opacity</label>\r\n          <Range\r\n            showPercentage\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            value={configuration.opacity * 100}\r\n            onChange={event => save('opacity', toFloat(event.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"range\">\r\n          <label htmlFor=\"range\">Width</label>\r\n          <Range\r\n            showValue\r\n            step={1}\r\n            min={1}\r\n            max={5}\r\n            value={configuration.lineWidth}\r\n            onChange={event => save('lineWidth', parseInt(event.target.value))}\r\n          />\r\n        </div>\r\n      </SettingsSection>\r\n    </div>\r\n  );\r\n};\r\n\r\nRTSettings.propTypes = {\r\n  configuration: PropTypes.shape({\r\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  }).isRequired,\r\n  onBack: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RTSettings;\r\n","import React from 'react';\r\n\r\nconst LoadingIndicator = ({ height = \"200px\", width = \"200px\", expand = false }) => {\r\n  return (\r\n    <div style={expand ? { height: \"100%\", width: \"100%\" } : {}}>\r\n      <svg style={{ margin: 'auto', background: 'none', display: 'block', shapeRendering: 'auto' }} width={width} height={height} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n        <g transform=\"rotate(0 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.9166666666666666s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(30 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.8333333333333334s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(60 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(90 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.6666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(120 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5833333333333334s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(150 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(180 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.4166666666666667s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(210 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.3333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(240 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.25s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(270 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.16666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(300 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.08333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g><g transform=\"rotate(330 50 50)\">\r\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\r\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n          </rect>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@ohif/ui';\r\n\r\nimport './PanelSection.css';\r\nimport LoadingIndicator from '../LoadingIndicator/LoadingIndicator';\r\n\r\nconst PanelSection = ({\r\n  title,\r\n  children,\r\n  visible = false,\r\n  expanded = false,\r\n  loading = false,\r\n  hideVisibleButton = false,\r\n  onVisibilityChange = () => { },\r\n  onExpandChange = () => { }\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(expanded);\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible);\r\n  }, [visible]);\r\n\r\n  return (\r\n    <div\r\n      className=\"dcmrt-panel-section\"\r\n      style={{\r\n        marginBottom: isExpanded ? 0 : 2,\r\n        height: isExpanded ? '100%' : 'unset'\r\n      }}\r\n    >\r\n      <div className=\"header\">\r\n        <div>{title}</div>\r\n        <div className=\"icons\">\r\n          {!hideVisibleButton && (\r\n            <Icon\r\n              className={`eye-icon ${isVisible && 'expanded'}`}\r\n              name={isVisible ? \"eye\" : \"eye-closed\"}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              onClick={() => {\r\n                const newVisibility = !isVisible;\r\n                setIsVisible(newVisibility);\r\n                onVisibilityChange(newVisibility);\r\n              }}\r\n            />\r\n          )}\r\n          <Icon\r\n            className={`angle-double-${isExpanded ? 'down' : 'up'} ${isExpanded && 'expanded'}`}\r\n            name={`angle-double-${isExpanded ? 'down' : 'up'}`}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            onClick={() => {\r\n              const newExpandValue = !isExpanded;\r\n              setIsExpanded(newExpandValue);\r\n              onExpandChange(newExpandValue);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {loading && isExpanded && <LoadingIndicator expand height=\"70px\" width=\"70px\" />}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nPanelSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\r\n  visible: PropTypes.bool,\r\n  expanded: PropTypes.bool,\r\n  onVisibilityChange: PropTypes.func\r\n};\r\n\r\nPanelSection.defaultProps = {\r\n  visible: false,\r\n  expanded: false,\r\n  onVisibilityChange: () => { }\r\n};\r\n\r\nexport default PanelSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\r\n\r\nimport { utils } from '@ohif/core';\r\n\r\nimport './RTPanel.css';\r\nimport StructureSetItem from '../StructureSetItem/StructureSetItem';\r\nimport RTPanelSettings from '../RTSettings/RTSettings';\r\nimport PanelSection from '../PanelSection/PanelSection';\r\nimport LoadingIndicator from '../LoadingIndicator/LoadingIndicator';\r\nimport TOOL_NAMES from '../../utils/toolNames';\r\n\r\nconst { RTSTRUCT_DISPLAY_TOOL } = TOOL_NAMES;\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\nconst refreshViewport = () => {\r\n  cornerstone.getEnabledElements().forEach(enabledElement => {\r\n    if (enabledElement.image) {\r\n      cornerstone.updateImage(enabledElement.element);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * RTPanel component\r\n *\r\n * @param {Object} props\r\n * @param {Array} props.studies\r\n * @param {Array} props.getActiveViewport - get active viewport data\r\n * @param {number} props.activeIndex - activeViewportIndex\r\n * @param {number} props.isOpen - isOpen\r\n * @returns component\r\n */\r\nconst RTPanel = ({\r\n  studies,\r\n  activeIndex,\r\n  isOpen,\r\n  onContourItemClick,\r\n  activeContexts = [],\r\n  contexts = {},\r\n  activeViewport,\r\n  getActiveViewport,\r\n}) => {\r\n  const isVTK = () => activeContexts.includes(contexts.VTK);\r\n  const isCornerstone = () => activeContexts.includes(contexts.CORNERSTONE);\r\n\r\n  const [selectedContour, setSelectedContour] = useState();\r\n  const DEFAULT_SET_INDEX = 0;\r\n  const DEFAULT_STATE = {\r\n    referencedDisplaysets: [],\r\n    sets: [],\r\n    selectedSet: null,\r\n    isLocked: false,\r\n  };\r\n\r\n  const [state, setState] = useState(DEFAULT_STATE);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  /*\r\n   * TODO: Improve the way we notify parts of the app that depends on rts to be loaded.\r\n   *\r\n   * Currently we are using a non-ideal implementation through a custom event to notify the rtstruct panel\r\n   * or other components that could rely on loaded rtstructs that\r\n   * the first batch of structs were loaded so that e.g. when the user opens the panel\r\n   * before the structs are fully loaded, the panel can subscribe to this custom event\r\n   * and update itself with the new structs.\r\n   *\r\n   * This limitation is due to the fact that the rtmodule is an object (which will be\r\n   * updated after the structs are loaded) that React its not aware of its changes\r\n   * because the module object its not passed in to the panel component as prop but accessed externally.\r\n   *\r\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\r\n   * allows us to easily watch the module or the rtstruct loading process in any other component\r\n   * without subscribing to external events.\r\n   */\r\n  useEffect(() => {\r\n    updateStructureSets();\r\n\r\n    document.addEventListener('rt-panel-tab-updated', updateStructureSets);\r\n\r\n    return () => {\r\n      document.removeEventListener('rt-panel-tab-updated', updateStructureSets);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const studyMetadata = studyMetadataManager.get(\r\n      activeViewport.StudyInstanceUID\r\n    );\r\n    const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n      referencedSeriesInstanceUID: activeViewport.SeriesInstanceUID,\r\n      Modality: 'RTSTRUCT',\r\n    });\r\n    setState(state => ({ ...state, isLocked: !referencedDisplaysets.length }));\r\n  }, [activeViewport]);\r\n\r\n  const updateStructureSets = () => {\r\n    const viewport = getActiveViewport();\r\n    const module = cornerstoneTools.getModule('rtstruct');\r\n    const StructureSets = module.state.StructureSets;\r\n\r\n    if (StructureSets && StructureSets.length) {\r\n      const viewportSets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n        viewport.SeriesInstanceUID\r\n      );\r\n\r\n      const studyMetadata = studyMetadataManager.get(viewport.StudyInstanceUID);\r\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n        referencedSeriesInstanceUID: viewport.SeriesInstanceUID,\r\n        Modality: 'RTSTRUCT',\r\n      });\r\n\r\n      if (viewportSets.length) {\r\n        const defaultSet = viewportSets[DEFAULT_SET_INDEX];\r\n        setState({\r\n          referencedDisplaysets,\r\n          selectedSet: defaultSet,\r\n          sets: viewportSets,\r\n        });\r\n      } else {\r\n        setState(DEFAULT_STATE);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShowSettings(showSettings && !isOpen);\r\n  }, [isOpen]);\r\n\r\n  const toContourItem = (\r\n    { ROINumber, ROIName, RTROIObservations, colorArray, visible, isSupported },\r\n    loadedSet\r\n  ) => {\r\n    let interpretedType = '';\r\n    if (RTROIObservations && RTROIObservations.RTROIInterpretedType) {\r\n      interpretedType = `(${RTROIObservations.RTROIInterpretedType})`;\r\n    }\r\n\r\n    const isSameContour = selectedContour && selectedContour === ROINumber;\r\n    return (\r\n      <StructureSetItem\r\n        key={ROINumber}\r\n        selected={isSameContour}\r\n        isDisabled={!isSupported}\r\n        onClick={() => {\r\n          setSelectedContour(isSameContour ? null : ROINumber);\r\n\r\n          if (isCornerstone()) {\r\n            const enabledElements = cornerstone.getEnabledElements();\r\n            const element = enabledElements[activeIndex].element;\r\n            const stackToolState = cornerstoneTools.getToolState(\r\n              element,\r\n              'stack'\r\n            );\r\n\r\n            if (!stackToolState) {\r\n              return;\r\n            }\r\n\r\n            const imageIds = stackToolState.data[0].imageIds;\r\n\r\n            const module = cornerstoneTools.getModule('rtstruct');\r\n            const imageId = module.getters.imageIdOfCenterFrameOfROIContour(\r\n              state.selectedSet.SeriesInstanceUID,\r\n              ROINumber,\r\n              imageIds\r\n            );\r\n\r\n            const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\r\n            const imageIdSpecificToolState = toolState[imageId];\r\n\r\n            const rtstructData =\r\n              imageIdSpecificToolState[RTSTRUCT_DISPLAY_TOOL];\r\n\r\n            const specificData = rtstructData.data.find(\r\n              rtData => rtData.ROINumber === ROINumber\r\n            );\r\n\r\n            specificData.highlight = true;\r\n\r\n            const frameIndex = imageIds.indexOf(imageId);\r\n            const SOPInstanceUID = cornerstone.metaData.get(\r\n              'SOPInstanceUID',\r\n              imageId\r\n            );\r\n            const StudyInstanceUID = cornerstone.metaData.get(\r\n              'StudyInstanceUID',\r\n              imageId\r\n            );\r\n\r\n            onContourItemClick({\r\n              StudyInstanceUID,\r\n              SOPInstanceUID,\r\n              frameIndex,\r\n              activeViewportIndex: activeIndex,\r\n            });\r\n          }\r\n        }}\r\n        label={`${ROIName} ${interpretedType}`}\r\n        index={ROINumber}\r\n        color={colorArray}\r\n        visible={visible}\r\n        onVisibilityChange={() => {\r\n          const module = cornerstoneTools.getModule('rtstruct');\r\n          module.setters.toggleROIContour(\r\n            state.selectedSet.SeriesInstanceUID,\r\n            ROINumber\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const configurationChangeHandler = newConfiguration => {\r\n    const module = cornerstoneTools.getModule('rtstruct');\r\n    module.configuration.lineWidth = newConfiguration.lineWidth;\r\n    module.configuration.opacity = newConfiguration.opacity;\r\n    refreshViewport();\r\n  };\r\n\r\n  if (showSettings) {\r\n    const module = cornerstoneTools.getModule('rtstruct');\r\n    return (\r\n      <RTPanelSettings\r\n        configuration={module.configuration}\r\n        onBack={() => setShowSettings(false)}\r\n        onChange={configurationChangeHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dcmrt-panel\">\r\n      <div className=\"dcmrt-panel-header\">\r\n        {' '}\r\n        {!state.isLocked && (\r\n          <Icon\r\n            className=\"cog-icon\"\r\n            name=\"cog\"\r\n            width=\"25px\"\r\n            height=\"25px\"\r\n            onClick={() => setShowSettings(true)}\r\n          />\r\n        )}\r\n        <h3>RT Structure Sets</h3>\r\n      </div>\r\n      {!state.isLocked && !state.referencedDisplaysets.length && (\r\n        <LoadingIndicator expand height=\"70px\" width=\"70px\" />\r\n      )}\r\n      {state.sets &&\r\n        state.referencedDisplaysets.map(displaySet => {\r\n          const { SeriesInstanceUID, metadata, isLoaded } = displaySet;\r\n\r\n          const module = cornerstoneTools.getModule('rtstruct');\r\n          const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n            activeViewport.SeriesInstanceUID\r\n          );\r\n\r\n          const loadedSet = sets.find(\r\n            set => set.SeriesInstanceUID === SeriesInstanceUID\r\n          );\r\n\r\n          if (!loadedSet) return null;\r\n\r\n          return (\r\n            <PanelSection\r\n              key={SeriesInstanceUID}\r\n              title={metadata.StructureSetLabel}\r\n              loading={!isLoaded || !loadedSet}\r\n              visible={isLoaded && loadedSet && loadedSet.visible}\r\n              hideVisibleButton={!isLoaded}\r\n              expanded={\r\n                isLoaded &&\r\n                loadedSet.SeriesInstanceUID ===\r\n                  state.selectedSet.SeriesInstanceUID\r\n              }\r\n              onVisibilityChange={newVisibility => {\r\n                const module = cornerstoneTools.getModule('rtstruct');\r\n\r\n                if (newVisibility) {\r\n                  module.setters.showStructureSet(loadedSet.SeriesInstanceUID);\r\n                } else {\r\n                  module.setters.hideStructureSet(loadedSet.SeriesInstanceUID);\r\n                }\r\n                const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n                  activeViewport.SeriesInstanceUID\r\n                );\r\n                setState(state => ({ ...state, sets }));\r\n                refreshViewport();\r\n              }}\r\n              onExpandChange={async () => {\r\n                if (!isLoaded) {\r\n                  await displaySet.load(activeViewport, studies);\r\n                  const module = cornerstoneTools.getModule('rtstruct');\r\n                  const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\r\n                    activeViewport.SeriesInstanceUID\r\n                  );\r\n                  const selectedSet = sets.find(\r\n                    set => set.SeriesInstanceUID === SeriesInstanceUID\r\n                  );\r\n                  setState(state => ({ ...state, selectedSet, sets }));\r\n                }\r\n              }}\r\n            >\r\n              <ScrollableArea>\r\n                <TableList headless>\r\n                  {isLoaded &&\r\n                    loadedSet.ROIContours.map(c => toContourItem(c, loadedSet))}\r\n                </TableList>\r\n              </ScrollableArea>\r\n            </PanelSection>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nRTPanel.propTypes = {\r\n  viewports: PropTypes.shape({\r\n    displaySetInstanceUID: PropTypes.string,\r\n    frameRate: PropTypes.any,\r\n    InstanceNumber: PropTypes.number,\r\n    isMultiFrame: PropTypes.bool,\r\n    isReconstructable: PropTypes.bool,\r\n    Modality: PropTypes.string,\r\n    plugin: PropTypes.string,\r\n    SeriesDate: PropTypes.string,\r\n    SeriesDescription: PropTypes.string,\r\n    SeriesInstanceUID: PropTypes.string,\r\n    SeriesNumber: PropTypes.any,\r\n    SeriesTime: PropTypes.string,\r\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\r\n    StudyInstanceUID: PropTypes.string,\r\n  }),\r\n  activeIndex: PropTypes.number.isRequired,\r\n  studies: PropTypes.array.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nRTPanel.defaultProps = {};\r\n\r\nexport default RTPanel;\r\n","import React from 'react';\r\nimport { utils } from '@ohif/core';\r\n\r\nimport init from './init.js';\r\nimport sopClassHandlerModule from './OHIFDicomRTStructSopClassHandler';\r\nimport id from './id.js';\r\nimport RTPanel from './components/RTPanel/RTPanel';\r\nimport { version } from '../package.json';\r\n\r\nconst { studyMetadataManager } = utils;\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id,\r\n  version,\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  preRegistration({ servicesManager, configuration = {} }) {\r\n    init({ servicesManager, configuration });\r\n  },\r\n  getPanelModule({ commandsManager, servicesManager, api }) {\r\n    const ExtendedRTPanel = props => {\r\n      const { activeContexts } = api.hooks.useAppContext();\r\n\r\n      const contourItemClickHandler = contourData => {\r\n        commandsManager.runCommand('jumpToImage', contourData);\r\n      };\r\n\r\n      return (\r\n        <RTPanel\r\n          {...props}\r\n          onContourItemClick={contourItemClickHandler}\r\n          activeContexts={activeContexts}\r\n          contexts={api.contexts}\r\n        />\r\n      );\r\n    };\r\n\r\n    const RTPanelTabChangedEvent = 'rt-panel-tab-updated';\r\n\r\n    /**\r\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\r\n     *\r\n     * This is required to avoid extension state\r\n     * coupling with the viewer's ToolbarRow component.\r\n     *\r\n     * @param {object} data\r\n     */\r\n    const triggerRTPanelUpdatedEvent = data => {\r\n      const event = new CustomEvent(RTPanelTabChangedEvent, {\r\n        detail: data,\r\n      });\r\n      document.dispatchEvent(event);\r\n    };\r\n\r\n    const onRTStructsLoaded = ({ detail }) => {\r\n      const { rtStructDisplaySet, referencedDisplaySet } = detail;\r\n\r\n      const studyMetadata = studyMetadataManager.get(\r\n        rtStructDisplaySet.StudyInstanceUID\r\n      );\r\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\r\n        referencedSeriesInstanceUID: referencedDisplaySet.SeriesInstanceUID,\r\n        Modality: 'RTSTRUCT',\r\n      });\r\n      triggerRTPanelUpdatedEvent({\r\n        badgeNumber: referencedDisplaysets.length,\r\n        target: 'rt-panel',\r\n      });\r\n    };\r\n\r\n    document.addEventListener('extensiondicomrtrtloaded', onRTStructsLoaded);\r\n\r\n    return {\r\n      menuOptions: [\r\n        {\r\n          icon: 'list',\r\n          label: 'RTSTRUCT',\r\n          target: 'rt-panel',\r\n          stateEvent: RTPanelTabChangedEvent,\r\n          isDisabled: (studies, activeViewport) => {\r\n            if (!studies) {\r\n              return true;\r\n            }\r\n\r\n            if (activeViewport) {\r\n              const studyMetadata = studyMetadataManager.get(\r\n                activeViewport.StudyInstanceUID\r\n              );\r\n              if (!studyMetadata) {\r\n                return;\r\n              }\r\n              const referencedDisplaySets = studyMetadata.getDerivedDatasets({\r\n                referencedSeriesInstanceUID: activeViewport.SeriesInstanceUID,\r\n                Modality: 'RTSTRUCT',\r\n              });\r\n              if (\r\n                referencedDisplaySets &&\r\n                referencedDisplaySets.some(ds =>\r\n                  ['RTSTRUCT'].includes(ds.Modality)\r\n                )\r\n              ) {\r\n                triggerRTPanelUpdatedEvent({\r\n                  badgeNumber: referencedDisplaySets.length,\r\n                  target: 'rt-panel',\r\n                });\r\n                return false;\r\n              }\r\n            }\r\n\r\n            return true;\r\n          },\r\n        },\r\n      ],\r\n      components: [\r\n        {\r\n          id: 'rt-panel',\r\n          component: ExtendedRTPanel,\r\n        },\r\n      ],\r\n      defaultContext: ['VIEWER'],\r\n    };\r\n  },\r\n  getSopClassHandlerModule({ servicesManager }) {\r\n    return sopClassHandlerModule;\r\n  },\r\n};\r\n","const id = 'rt';\r\n\r\nexport default id;\r\n","import OHIF from '@ohif/core';\r\n\r\nconst { utils } = OHIF;\r\n\r\nconst SOP_CLASS_UIDS = {\r\n  VL_WHOLE_SLIDE_MICROSCOPY_IMAGE_STORAGE: '1.2.840.10008.5.1.4.1.1.77.1.6',\r\n};\r\n\r\nconst DicomMicroscopySopClassHandler = {\r\n  id: 'DicomMicroscopySopClassHandlerPlugin',\r\n  sopClassUIDs: [SOP_CLASS_UIDS.VL_WHOLE_SLIDE_MICROSCOPY_IMAGE_STORAGE],\r\n  getDisplaySetFromSeries(series, study, dicomWebClient) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n      ContentDate,\r\n      ContentTime,\r\n    } = metadata;\r\n\r\n    // Note: We are passing the dicomweb client into each viewport!\r\n\r\n    return {\r\n      plugin: 'microscopy',\r\n      Modality: 'SM',\r\n      displaySetInstanceUID: utils.guid(),\r\n      dicomWebClient,\r\n      SOPInstanceUID: instance.getSOPInstanceUID(),\r\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n      StudyInstanceUID: study.getStudyInstanceUID(),\r\n      SeriesDescription,\r\n      SeriesDate: ContentDate, // Map ContentDate/Time to SeriesTime for series list sorting.\r\n      SeriesTime: ContentTime,\r\n      SeriesNumber,\r\n      metadata,\r\n    };\r\n  },\r\n};\r\n\r\nexport default DicomMicroscopySopClassHandler;\r\n","import React from 'react';\r\nimport DicomMicroscopySopClassHandler from './DicomMicroscopySopClassHandler.js';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./DicomMicroscopyViewport');\r\n});\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'microscopy',\r\n  version,\r\n\r\n  getViewportModule({ servicesManager }) {\r\n    return props => {\r\n      return (\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n          <Component {...props} servicesManager={servicesManager} />\r\n        </React.Suspense>\r\n      );\r\n    };\r\n  },\r\n  getSopClassHandlerModule() {\r\n    return DicomMicroscopySopClassHandler;\r\n  },\r\n};\r\n","import { MODULE_TYPES, utils } from '@ohif/core';\r\n\r\n// TODO: Should probably use dcmjs for this\r\nconst SOP_CLASS_UIDS = {\r\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1',\r\n};\r\n\r\nconst OHIFDicomPDFSopClassHandler = {\r\n  id: 'OHIFDicomPDFSopClassHandlerPlugin',\r\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\r\n  sopClassUIDs: [SOP_CLASS_UIDS.ENCAPSULATED_PDF],\r\n  getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\r\n    const instance = series.getFirstInstance();\r\n\r\n    const metadata = instance.getData().metadata;\r\n    const {\r\n      ContentDate,\r\n      ContentTime,\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n    } = metadata;\r\n\r\n    return {\r\n      plugin: 'pdf',\r\n      Modality: 'DOC',\r\n      displaySetInstanceUID: utils.guid(),\r\n      wadoRoot: study.getData().wadoRoot,\r\n      wadoUri: instance.getData().wadouri,\r\n      SOPInstanceUID: instance.getSOPInstanceUID(),\r\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\r\n      StudyInstanceUID: study.getStudyInstanceUID(),\r\n      SeriesDescription,\r\n      SeriesDate: ContentDate, // Map ContentDate/Time to SeriesTime for series list sorting.\r\n      SeriesTime: ContentTime,\r\n      SeriesNumber,\r\n      metadata,\r\n      authorizationHeaders: authorizationHeaders,\r\n    };\r\n  },\r\n};\r\n\r\nexport default OHIFDicomPDFSopClassHandler;\r\n","import React from 'react';\r\nimport OHIFDicomPDFSopClassHandler from './OHIFDicomPDFSopClassHandler.js';\r\nimport { version } from '../package.json';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import('./ConnectedOHIFDicomPDFViewer');\r\n});\r\n\r\nconst ConnectedOHIFDicomPDFViewer = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id: 'pdf',\r\n  version,\r\n  getViewportModule() {\r\n    return ConnectedOHIFDicomPDFViewer;\r\n  },\r\n  getSopClassHandlerModule() {\r\n    return OHIFDicomPDFSopClassHandler;\r\n  },\r\n};\r\n","/**\r\n * Entry point for development and production PWA builds.\r\n * Packaged (NPM) builds go through `index-umd.js`\r\n */\r\n\r\nimport 'regenerator-runtime/runtime';\r\n\r\nimport App from './App.js';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// test\r\n\r\n/**\r\n * EXTENSIONS\r\n * =================\r\n *\r\n * Importing and modifying the extensions our app uses HERE allows us to leverage\r\n * tree shaking and a few other niceties. However, by including them here they become\r\n * \"baked in\" to the published application.\r\n *\r\n * Depending on your use case/needs, you may want to consider not adding any extensions\r\n * by default HERE, and instead provide them via the extensions configuration key or\r\n * by using the exported `App` component, and passing in your extensions as props using\r\n * the defaultExtensions property.\r\n */\r\nimport OHIFVTKExtension from '@ohif/extension-vtk';\r\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\r\nimport OHIFDicomSegmentationExtension from '@ohif/extension-dicom-segmentation';\r\nimport OHIFDicomRtExtension from '@ohif/extension-dicom-rt';\r\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\r\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\r\n//import OHIFDicomTagBrowserExtension from '@ohif/extension-dicom-tag-browser';\r\n// Add this for Debugging purposes:\r\n//import OHIFDebuggingExtension from '@ohif/extension-debugging';\r\nimport { version } from '../package.json';\r\n\r\n/*\r\n * Default Settings\r\n */\r\nlet config = {};\r\n\r\nif (window) {\r\n  config = window.config || {};\r\n  window.version = version;\r\n}\r\n\r\nconst appProps = {\r\n  config,\r\n  defaultExtensions: [\r\n    OHIFVTKExtension,\r\n    OHIFDicomHtmlExtension,\r\n    OHIFDicomMicroscopyExtension,\r\n    OHIFDicomPDFExtension,\r\n    OHIFDicomSegmentationExtension,\r\n    OHIFDicomRtExtension,\r\n    //OHIFDebuggingExtension,\r\n    //OHIFDicomTagBrowserExtension,\r\n  ],\r\n};\r\n\r\n/** Create App */\r\nconst app = React.createElement(App, appProps, null);\r\n\r\n/** Render */\r\nReactDOM.render(app, document.getElementById('root'));\r\n","import MODULE_TYPES from './MODULE_TYPES.js';\r\nimport log from './../log.js';\r\n\r\nexport default class ExtensionManager {\r\n  constructor({ commandsManager, servicesManager, api, appConfig = {} }) {\r\n    this.modules = {};\r\n    this.registeredExtensionIds = [];\r\n    this.registeredExtensionVesions = {};\r\n    this.moduleTypeNames = Object.values(MODULE_TYPES);\r\n    //\r\n    this._commandsManager = commandsManager;\r\n    this._servicesManager = servicesManager;\r\n    this._appConfig = appConfig;\r\n    this._api = api;\r\n\r\n    this.moduleTypeNames.forEach(moduleType => {\r\n      this.modules[moduleType] = [];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * An array of extensions, or an array of arrays that contains extension\r\n   * configuration pairs.\r\n   *\r\n   * @param {Object[]} extensions - Array of extensions\r\n   */\r\n  registerExtensions(extensions) {\r\n    extensions.forEach(extension => {\r\n      const hasConfiguration = Array.isArray(extension);\r\n\r\n      if (hasConfiguration) {\r\n        const [ohifExtension, configuration] = extension;\r\n        this.registerExtension(ohifExtension, configuration);\r\n      } else {\r\n        this.registerExtension(extension);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * TODO: Id Management: SopClassHandlers currently refer to viewport module by id; setting the extension id as viewport module id is a workaround for now\r\n   * @param {Object} extension\r\n   * @param {Object} configuration\r\n   */\r\n  registerExtension(extension, configuration = {}) {\r\n    if (!extension) {\r\n      log.warn(\r\n        'Attempting to register a null/undefined extension. Exiting early.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    let extensionId = extension.id;\r\n    const version = extension.version;\r\n\r\n    if (!extensionId) {\r\n      extensionId = Math.random()\r\n        .toString(36)\r\n        .substr(2, 5);\r\n\r\n      log.warn(`Extension ID not set. Using random string ID: ${extensionId}`);\r\n    }\r\n\r\n    if (this.registeredExtensionIds.includes(extensionId)) {\r\n      log.warn(\r\n        `Extension ID ${extensionId} has already been registered. Exiting before duplicating modules.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // preRegistrationHook\r\n    if (extension.preRegistration) {\r\n      extension.preRegistration({\r\n        servicesManager: this._servicesManager,\r\n        commandsManager: this._commandsManager,\r\n        appConfig: this._appConfig,\r\n        configuration,\r\n      });\r\n    }\r\n\r\n    // Register Modules\r\n    this.moduleTypeNames.forEach(moduleType => {\r\n      const extensionModule = this._getExtensionModule(\r\n        moduleType,\r\n        extension,\r\n        extensionId,\r\n        configuration\r\n      );\r\n\r\n      if (extensionModule) {\r\n        this._initSpecialModuleTypes(moduleType, extensionModule);\r\n\r\n        this.modules[moduleType].push({\r\n          extensionId,\r\n          module: extensionModule,\r\n        });\r\n      }\r\n    });\r\n\r\n    // Track extension registration\r\n    this.registeredExtensionIds.push(extensionId);\r\n\r\n    this.registeredExtensionVesions[extensionId] = version;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} moduleType\r\n   * @param {Object} extension\r\n   * @param {string} extensionId - Used for logging warnings\r\n   */\r\n  _getExtensionModule(moduleType, extension, extensionId, configuration) {\r\n    const getModuleFnName = 'get' + _capitalizeFirstCharacter(moduleType);\r\n    const getModuleFn = extension[getModuleFnName];\r\n\r\n    if (!getModuleFn) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const extensionModule = getModuleFn({\r\n        servicesManager: this._servicesManager,\r\n        commandsManager: this._commandsManager,\r\n        appConfig: this._appConfig,\r\n        configuration,\r\n        api: this._api,\r\n        extensionManager: this,\r\n      });\r\n\r\n      if (!extensionModule) {\r\n        log.warn(\r\n          `Null or undefined returned when registering the ${getModuleFnName} module for the ${extensionId} extension`\r\n        );\r\n      }\r\n\r\n      return extensionModule;\r\n    } catch (ex) {\r\n      log.error(\r\n        `Exception thrown while trying to call ${getModuleFnName} for the ${extensionId} extension`\r\n      );\r\n    }\r\n  }\r\n\r\n  _initSpecialModuleTypes(moduleType, extensionModule) {\r\n    switch (moduleType) {\r\n      case 'commandsModule': {\r\n        const { definitions, defaultContext } = extensionModule;\r\n        if (!definitions || Object.keys(definitions).length === 0) {\r\n          log.warn('Commands Module contains no command definitions');\r\n          return;\r\n        }\r\n        this._initCommandsModule(definitions, defaultContext);\r\n        break;\r\n      }\r\n      default:\r\n      // code block\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   * @param {Object[]} commandDefinitions\r\n   */\r\n  _initCommandsModule(commandDefinitions, defaultContext = 'VIEWER') {\r\n    if (!this._commandsManager.getContext(defaultContext)) {\r\n      this._commandsManager.createContext(defaultContext);\r\n    }\r\n\r\n    Object.keys(commandDefinitions).forEach(commandName => {\r\n      const commandDefinition = commandDefinitions[commandName];\r\n      const commandHasContextThatDoesNotExist =\r\n        commandDefinition.context &&\r\n        !this._commandsManager.getContext(commandDefinition.context);\r\n\r\n      if (commandHasContextThatDoesNotExist) {\r\n        this._commandsManager.createContext(commandDefinition.context);\r\n      }\r\n\r\n      this._commandsManager.registerCommand(\r\n        commandDefinition.context || defaultContext,\r\n        commandName,\r\n        commandDefinition\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {string} lower\r\n */\r\nfunction _capitalizeFirstCharacter(lower) {\r\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\r\n}\r\n","import log from './../log.js';\r\n\r\nexport default class ServicesManager {\r\n  constructor() {\r\n    this.services = {};\r\n    this.registeredServiceNames = [];\r\n  }\r\n\r\n  /**\r\n   * Registers a new service.\r\n   *\r\n   * @param {Object} service\r\n   * @param {Object} configuration\r\n   */\r\n  registerService(service, configuration = {}) {\r\n    if (!service) {\r\n      log.warn(\r\n        'Attempting to register a null/undefined service. Exiting early.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!service.name) {\r\n      log.warn(`Service name not set. Exiting early.`);\r\n      return;\r\n    }\r\n\r\n    if (this.registeredServiceNames.includes(service.name)) {\r\n      log.warn(\r\n        `Service name ${service.name} has already been registered. Exiting before duplicating services.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (service.create) {\r\n      this.services[service.name] = service.create({\r\n        configuration,\r\n      });\r\n    } else {\r\n      log.warn(`Service create factory function not defined. Exiting early.`);\r\n      return;\r\n    }\r\n\r\n    /* Track service registration */\r\n    this.registeredServiceNames.push(service.name);\r\n  }\r\n\r\n  /**\r\n   * An array of services, or an array of arrays that contains service\r\n   * configuration pairs.\r\n   *\r\n   * @param {Object[]} services - Array of services\r\n   */\r\n  registerServices(services) {\r\n    services.forEach(service => {\r\n      const hasConfiguration = Array.isArray(service);\r\n\r\n      if (hasConfiguration) {\r\n        const [ohifService, configuration] = service;\r\n        this.registerService(ohifService, configuration);\r\n      } else {\r\n        this.registerService(service);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * A UI Notification\r\n *\r\n * @typedef {Object} Notification\r\n * @property {string} title -\r\n * @property {string} message -\r\n * @property {number} [duration=5000] - in ms\r\n * @property {string} [position=\"bottomRight\"] -\"topLeft\" | \"topCenter | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\"\r\n * @property {string} [type=\"info\"] - \"info\" | \"error\" | \"warning\" | \"success\"\r\n * @property {boolean} [autoClose=true]\r\n * @property {object} [action=null]\r\n */\r\n\r\nconst name = 'UINotificationService';\r\n\r\nconst serviceShowRequestQueue = [];\r\n\r\nconst publicAPI = {\r\n  name,\r\n  hide: _hide,\r\n  show: _show,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\r\n  _show: showArguments => {\r\n    serviceShowRequestQueue.push(showArguments);\r\n\r\n    console.warn('show() NOT IMPLEMENTED');\r\n  },\r\n};\r\n\r\n/**\r\n * Create and show a new UI notification; returns the\r\n * ID of the created notification.\r\n *\r\n * @param {Notification} notification { title, message, duration, position, type, autoClose, action}\r\n * @returns {number} id\r\n */\r\nfunction _show({\r\n  title,\r\n  message,\r\n  duration = 5000,\r\n  position = 'bottomRight',\r\n  type = 'info',\r\n  autoClose = true,\r\n  action = null,\r\n}) {\r\n  return serviceImplementation._show({\r\n    title,\r\n    message,\r\n    duration,\r\n    position,\r\n    type,\r\n    autoClose,\r\n    action,\r\n  });\r\n}\r\n\r\n/**\r\n * Hides/dismisses the notification, if currently shown\r\n *\r\n * @param {number} id - id of the notification to hide/dismiss\r\n * @returns undefined\r\n */\r\nfunction _hide(id) {\r\n  return serviceImplementation._hide({ id });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   hide: hideImplementation,\r\n *   show: showImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  hide: hideImplementation,\r\n  show: showImplementation,\r\n}) {\r\n  if (hideImplementation) {\r\n    serviceImplementation._hide = hideImplementation;\r\n  }\r\n  if (showImplementation) {\r\n    serviceImplementation._show = showImplementation;\r\n\r\n    while (serviceShowRequestQueue.length > 0) {\r\n      const showArguments = serviceShowRequestQueue.pop();\r\n      serviceImplementation._show(showArguments);\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","/**\r\n * UI Modal\r\n *\r\n * @typedef {Object} ModalProps\r\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\r\n * @property {Object} [contentProps=null] Modal content props.\r\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\r\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\r\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\r\n * @property {string} [title=null] Should the modal render the title independently of the body content.\r\n * @property {string} [customClassName=null] The custom class to style the modal.\r\n * @property {boolean} [showScrollbar=false] Show or hide scrollbar.\r\n * @property {boolean} [noScroll=false] Disable or not the scrollbar.\r\n */\r\n\r\nconst name = 'UIModalService';\r\n\r\nconst publicAPI = {\r\n  name,\r\n  hide: _hide,\r\n  show: _show,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\r\n  _show: () => console.warn('show() NOT IMPLEMENTED'),\r\n};\r\n\r\n/**\r\n * Show a new UI modal;\r\n *\r\n * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, onClose, closeButton, title, customClassName, showScrollbar, noScroll }\r\n */\r\nfunction _show({\r\n  content = null,\r\n  contentProps = null,\r\n  shouldCloseOnEsc = false,\r\n  isOpen = true,\r\n  onClose = null,\r\n  closeButton = true,\r\n  title = null,\r\n  fullscreen = false,\r\n  customClassName = null,\r\n  showScrollbar = false,\r\n  noScroll = false,\r\n}) {\r\n  return serviceImplementation._show({\r\n    content,\r\n    contentProps,\r\n    shouldCloseOnEsc,\r\n    isOpen,\r\n    onClose,\r\n    closeButton,\r\n    title,\r\n    fullscreen,\r\n    customClassName,\r\n    showScrollbar,\r\n    noScroll,\r\n  });\r\n}\r\n\r\n/**\r\n * Hides/dismisses the modal, if currently shown\r\n *\r\n * @returns void\r\n */\r\nfunction _hide() {\r\n  return serviceImplementation._hide();\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   hide: hideImplementation,\r\n *   show: showImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  hide: hideImplementation,\r\n  show: showImplementation,\r\n}) {\r\n  if (hideImplementation) {\r\n    serviceImplementation._hide = hideImplementation;\r\n  }\r\n  if (showImplementation) {\r\n    serviceImplementation._show = showImplementation;\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","/**\r\n * A UI Element Position\r\n *\r\n * @typedef {Object} ElementPosition\r\n * @property {number} top -\r\n * @property {number} left -\r\n * @property {number} right -\r\n * @property {number} bottom -\r\n */\r\n\r\n/**\r\n * UI Dialog\r\n *\r\n * @typedef {Object} DialogProps\r\n * @property {string} id The dialog id.\r\n * @property {ReactElement|HTMLElement} content The dialog content.\r\n * @property {Object} contentProps The dialog content props.\r\n * @property {boolean} [isDraggable=true] Controls if dialog content is draggable or not.\r\n * @property {boolean} [showOverlay=false] Controls dialog overlay.\r\n * @property {boolean} [centralize=false] Center the dialog on the screen.\r\n * @property {boolean} [preservePosition=true] Use last position instead of default.\r\n * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\r\n * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\r\n * @property {Function} onStop Called when dragging stops.\r\n * @property {Function} onDrag Called while dragging.\r\n */\r\n\r\nconst name = 'UIDialogService';\r\n\r\nconst publicAPI = {\r\n  name,\r\n  dismiss: _dismiss,\r\n  dismissAll: _dismissAll,\r\n  create: _create,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _dismiss: () => console.warn('dismiss() NOT IMPLEMENTED'),\r\n  _dismissAll: () => console.warn('dismissAll() NOT IMPLEMENTED'),\r\n  _create: () => console.warn('create() NOT IMPLEMENTED'),\r\n};\r\n\r\n/**\r\n * Show a new UI dialog;\r\n *\r\n * @param {DialogProps} props { id, content, contentProps, onStart, onDrag, onStop, centralize, isDraggable, showOverlay, preservePosition, defaultPosition }\r\n */\r\nfunction _create({\r\n  id,\r\n  content,\r\n  contentProps,\r\n  onStart,\r\n  onDrag,\r\n  onStop,\r\n  centralize = false,\r\n  preservePosition = true,\r\n  isDraggable = true,\r\n  showOverlay = false,\r\n  defaultPosition,\r\n}) {\r\n  return serviceImplementation._create({\r\n    id,\r\n    content,\r\n    contentProps,\r\n    onStart,\r\n    onDrag,\r\n    onStop,\r\n    centralize,\r\n    preservePosition,\r\n    isDraggable,\r\n    showOverlay,\r\n    defaultPosition,\r\n  });\r\n}\r\n\r\n/**\r\n * Destroys all dialogs, if any\r\n *\r\n * @returns void\r\n */\r\nfunction _dismissAll() {\r\n  return serviceImplementation._dismissAll();\r\n}\r\n\r\n/**\r\n * Destroy the dialog, if currently created\r\n *\r\n * @returns void\r\n */\r\nfunction _dismiss({ id }) {\r\n  return serviceImplementation._dismiss({ id });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   dismiss: dismissImplementation,\r\n *   dismissAll: dismissAllImplementation,\r\n *   create: createImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  dismiss: dismissImplementation,\r\n  dismissAll: dismissAllImplementation,\r\n  create: createImplementation,\r\n}) {\r\n  if (dismissImplementation) {\r\n    serviceImplementation._dismiss = dismissImplementation;\r\n  }\r\n  if (dismissAllImplementation) {\r\n    serviceImplementation._dismissAll = dismissAllImplementation;\r\n  }\r\n  if (createImplementation) {\r\n    serviceImplementation._create = createImplementation;\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","const name = 'LoggerService';\r\n\r\nconst publicAPI = {\r\n  name,\r\n  info: _info,\r\n  error: _error,\r\n  setServiceImplementation,\r\n};\r\n\r\nconst serviceImplementation = {\r\n  _info: () => console.warn('info() NOT IMPLEMENTED'),\r\n  _error: () => console.warn('error() NOT IMPLEMENTED'),\r\n};\r\n\r\n/**\r\n * Logs an info\r\n *\r\n * @param {object} props { message, displayOnConsole }\r\n */\r\nfunction _info({ message, displayOnConsole }) {\r\n  return serviceImplementation._info({\r\n    message,\r\n    displayOnConsole,\r\n  });\r\n}\r\n\r\n/**\r\n * Logs an error\r\n *\r\n * @param {object} props { error, stack, message, displayOnConsole }\r\n * @returns void\r\n */\r\nfunction _error({ error, stack, message, displayOnConsole }) {\r\n  return serviceImplementation._error({\r\n    error,\r\n    stack,\r\n    message,\r\n    displayOnConsole,\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @param {*} {\r\n *   info: infoImplementation,\r\n *   error: errorImplementation,\r\n * }\r\n */\r\nfunction setServiceImplementation({\r\n  info: infoImplementation,\r\n  error: errorImplementation,\r\n}) {\r\n  if (infoImplementation) {\r\n    serviceImplementation._info = infoImplementation;\r\n  }\r\n  if (errorImplementation) {\r\n    serviceImplementation._error = errorImplementation;\r\n  }\r\n}\r\n\r\nexport default {\r\n  name,\r\n  create: ({ configuration = {} }) => {\r\n    return publicAPI;\r\n  },\r\n};\r\n","import guid from '../../utils/guid';\r\n\r\n/**\r\n * Consumer must implement:\r\n * this.listeners = {}\r\n * this.EVENTS = { \"EVENT_KEY\": \"EVENT_VALUE\" }\r\n */\r\nexport default {\r\n  subscribe,\r\n  publish,\r\n  _unsubscribe,\r\n  _isValidEvent,\r\n};\r\n\r\n/**\r\n * Subscribe to updates.\r\n *\r\n * @param {string} eventName The name of the event\r\n * @param {Function} callback Events callback\r\n * @return {Object} Observable object with actions\r\n */\r\nfunction subscribe(eventName, callback) {\r\n  if (this._isValidEvent(eventName)) {\r\n    const listenerId = guid();\r\n    const subscription = { id: listenerId, callback };\r\n\r\n    console.info(`Subscribing to '${eventName}'.`);\r\n    if (Array.isArray(this.listeners[eventName])) {\r\n      this.listeners[eventName].push(subscription);\r\n    } else {\r\n      this.listeners[eventName] = [subscription];\r\n    }\r\n\r\n    return {\r\n      unsubscribe: () => this._unsubscribe(eventName, listenerId),\r\n    };\r\n  } else {\r\n    throw new Error(`Event ${eventName} not supported.`);\r\n  }\r\n}\r\n\r\n/**\r\n * Unsubscribe to measurement updates.\r\n *\r\n * @param {string} eventName The name of the event\r\n * @param {string} listenerId The listeners id\r\n * @return void\r\n */\r\nfunction _unsubscribe(eventName, listenerId) {\r\n  if (!this.listeners[eventName]) {\r\n    return;\r\n  }\r\n\r\n  const listeners = this.listeners[eventName];\r\n  if (Array.isArray(listeners)) {\r\n    this.listeners[eventName] = listeners.filter(({ id }) => id !== listenerId);\r\n  } else {\r\n    this.listeners[eventName] = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a given event is valid.\r\n *\r\n * @param {string} eventName The name of the event\r\n * @return {boolean} Event name validation\r\n */\r\nfunction _isValidEvent(eventName) {\r\n  return Object.values(this.EVENTS).includes(eventName);\r\n}\r\n\r\n/**\r\n * Broadcasts changes.\r\n *\r\n * @param {string} eventName - The event name\r\n * @param {func} callbackProps - Properties to pass callback\r\n * @return void\r\n */\r\nfunction publish(eventName, callbackProps) {\r\n  const hasListeners = Object.keys(this.listeners).length > 0;\r\n  const hasCallbacks = Array.isArray(this.listeners[eventName]);\r\n\r\n  if (hasListeners && hasCallbacks) {\r\n    this.listeners[eventName].forEach(listener => {\r\n      listener.callback(callbackProps);\r\n    });\r\n  }\r\n}\r\n","/** Internal imports */\r\nimport log from '../../log';\r\nimport guid from '../../utils/guid';\r\nimport pubSubServiceInterface from '../_shared/pubSubServiceInterface';\r\n\r\n/**\r\n * Measurement source schema\r\n *\r\n * @typedef {Object} MeasurementSource\r\n * @property {number} id -\r\n * @property {string} name -\r\n * @property {string} version -\r\n */\r\n\r\n/**\r\n * Measurement schema\r\n *\r\n * @typedef {Object} Measurement\r\n * @property {number} id -\r\n * @property {string} SOPInstanceUID -\r\n * @property {string} FrameOfReferenceUID -\r\n * @property {string} referenceSeriesUID -\r\n * @property {string} label -\r\n * @property {string} description -\r\n * @property {string} type -\r\n * @property {string} unit -\r\n * @property {number} area -\r\n * @property {Array} points -\r\n * @property {MeasurementSource} source -\r\n */\r\n\r\n/* Measurement schema keys for object validation. */\r\nconst MEASUREMENT_SCHEMA_KEYS = [\r\n  'id',\r\n  'SOPInstanceUID',\r\n  'FrameOfReferenceUID',\r\n  'referenceStudyUID',\r\n  'referenceSeriesUID',\r\n  'label',\r\n  'description',\r\n  'type',\r\n  'unit',\r\n  'area', // TODO: Add concept names instead (descriptor)\r\n  'mean',\r\n  'stdDev',\r\n  'length',\r\n  'shortestDiameter',\r\n  'longestDiameter',\r\n  'text', // NOTE: There is nothing like this in SR.\r\n  'points',\r\n  'source',\r\n];\r\n\r\nconst EVENTS = {\r\n  MEASUREMENT_UPDATED: 'event::measurement_updated',\r\n  INTERNAL_MEASUREMENT_UPDATED: 'event:internal_measurement_updated',\r\n  MEASUREMENT_ADDED: 'event::measurement_added',\r\n  RAW_MEASUREMENT_ADDED: 'event::raw_measurement_added',\r\n  MEASUREMENT_REMOVED: 'event::measurement_removed',\r\n  MEASUREMENTS_CLEARED: 'event::measurements_cleared',\r\n  JUMP_TO_MEASUREMENT: 'event:jump_to_measurement',\r\n};\r\n\r\nconst VALUE_TYPES = {\r\n  POLYLINE: 'value_type::polyline',\r\n  POINT: 'value_type::point',\r\n  BIDIRECTIONAL: 'value_type::shortAxisLongAxis', // TODO -> Discuss with Danny. => just using SCOORD values isn't enough here.\r\n  ELLIPSE: 'value_type::ellipse',\r\n  MULTIPOINT: 'value_type::multipoint',\r\n  CIRCLE: 'value_type::circle',\r\n};\r\n\r\nclass MeasurementService {\r\n  constructor() {\r\n    this.sources = {};\r\n    this.mappings = {};\r\n    this.measurements = {};\r\n    this.listeners = {};\r\n    this._jumpToMeasurementCache = {};\r\n    Object.defineProperty(this, 'EVENTS', {\r\n      value: EVENTS,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: false,\r\n    });\r\n    Object.defineProperty(this, 'VALUE_TYPES', {\r\n      value: VALUE_TYPES,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: false,\r\n    });\r\n\r\n    Object.assign(this, pubSubServiceInterface);\r\n  }\r\n\r\n  /**\r\n   * Get all measurements.\r\n   *\r\n   * @return {Measurement[]} Array of measurements\r\n   */\r\n  getMeasurements() {\r\n    const measurements = this._arrayOfObjects(this.measurements);\r\n    return (\r\n      measurements &&\r\n      measurements.map(m => this.measurements[Object.keys(m)[0]])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get specific measurement by its id.\r\n   *\r\n   * @param {string} id Id of the measurement\r\n   * @return {Measurement} Measurement instance\r\n   */\r\n  getMeasurement(id) {\r\n    let measurement = null;\r\n    const measurements = this.measurements[id];\r\n\r\n    if (measurements && Object.keys(measurements).length > 0) {\r\n      measurement = this.measurements[id];\r\n    }\r\n\r\n    return measurement;\r\n  }\r\n\r\n  /**\r\n   * Create a new source.\r\n   *\r\n   * @param {string} name Name of the source\r\n   * @param {string} version Source name\r\n   * @return {MeasurementSource} Measurement source instance\r\n   */\r\n  createSource(name, version) {\r\n    if (!name) {\r\n      throw new Error('Source name not provided.');\r\n    }\r\n\r\n    if (!version) {\r\n      throw new Error('Source version not provided.');\r\n    }\r\n\r\n    const id = guid();\r\n    const source = {\r\n      id,\r\n      name,\r\n      version,\r\n    };\r\n    source.addOrUpdate = (definition, measurement) => {\r\n      return this.addOrUpdate(source, definition, measurement);\r\n    };\r\n    source.remove = id => {\r\n      return this.remove(id, source);\r\n    };\r\n    source.getAnnotation = (definition, measurementId) => {\r\n      return this.getAnnotation(source, definition, measurementId);\r\n    };\r\n\r\n    log.info(`New '${name}@${version}' source added.`);\r\n    this.sources[id] = source;\r\n\r\n    return source;\r\n  }\r\n\r\n  getSource(name, version) {\r\n    const { sources } = this;\r\n    const id = this._getSourceId(name, version);\r\n\r\n    return sources[id];\r\n  }\r\n\r\n  getSourceMappings(name, version) {\r\n    const { mappings } = this;\r\n    const id = this._getSourceId(name, version);\r\n\r\n    return mappings[id];\r\n  }\r\n\r\n  _getSourceId(name, version) {\r\n    const { sources } = this;\r\n\r\n    const sourceId = Object.keys(sources).find(sourceId => {\r\n      const source = sources[sourceId];\r\n\r\n      return source.name === name && source.version === version;\r\n    });\r\n\r\n    return sourceId;\r\n  }\r\n\r\n  /**\r\n   * Add a new measurement matching criteria along with mapping functions.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source instance\r\n   * @param {string} definition Definition of the measurement (Annotation Type)\r\n   * @param {MatchingCriteria} matchingCriteria The matching criteria\r\n   * @param {Function} toSourceSchema Mapping function to source schema\r\n   * @param {Function} toMeasurementSchema Mapping function to measurement schema\r\n   * @return void\r\n   */\r\n  addMapping(\r\n    source,\r\n    definition,\r\n    matchingCriteria,\r\n    toSourceSchema,\r\n    toMeasurementSchema\r\n  ) {\r\n    if (!this._isValidSource(source)) {\r\n      throw new Error('Invalid source.');\r\n    }\r\n\r\n    if (!matchingCriteria) {\r\n      throw new Error('Matching criteria not provided.');\r\n    }\r\n\r\n    if (!definition) {\r\n      throw new Error('Definition not provided.');\r\n    }\r\n\r\n    if (!toSourceSchema) {\r\n      throw new Error('Mapping function to source schema not provided.');\r\n    }\r\n\r\n    if (!toMeasurementSchema) {\r\n      throw new Error('Measurement mapping function not provided.');\r\n    }\r\n\r\n    const mapping = {\r\n      matchingCriteria,\r\n      definition,\r\n      toSourceSchema,\r\n      toMeasurementSchema,\r\n    };\r\n\r\n    if (Array.isArray(this.mappings[source.id])) {\r\n      this.mappings[source.id].push(mapping);\r\n    } else {\r\n      this.mappings[source.id] = [mapping];\r\n    }\r\n\r\n    log.info(\r\n      `New measurement mapping added to source '${this._getSourceInfo(\r\n        source\r\n      )}'.`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get annotation for specific source.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source instance\r\n   * @param {string} definition The source definition\r\n   * @param {string} measurementId The measurement service measurement id\r\n   * @return {Object} Source measurement schema\r\n   */\r\n  getAnnotation(source, definition, measurementId) {\r\n    if (!this._isValidSource(source)) {\r\n      log.warn('Invalid source. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    if (!definition) {\r\n      log.warn('No source definition provided. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    const mapping = this._getMappingByMeasurementSource(\r\n      measurementId,\r\n      definition\r\n    );\r\n    const measurement = this.getMeasurement(measurementId);\r\n    if (mapping) return mapping.toSourceSchema(measurement, definition);\r\n\r\n    const matchingMapping = this._getMatchingMapping(\r\n      source,\r\n      definition,\r\n      measurement\r\n    );\r\n\r\n    if (matchingMapping) {\r\n      log.info('Matching mapping found:', matchingMapping);\r\n      const { toSourceSchema, definition } = matchingMapping;\r\n      return toSourceSchema(measurement, definition);\r\n    }\r\n  }\r\n\r\n  update(id, measurement, notYetUpdatedAtSource = false) {\r\n    if (this.measurements[id]) {\r\n      const updatedMeasurement = {\r\n        ...measurement,\r\n        modifiedTimestamp: Math.floor(Date.now() / 1000),\r\n      };\r\n\r\n      log.info(\r\n        `Updating internal measurement representation...`,\r\n        updatedMeasurement\r\n      );\r\n\r\n      this.measurements[id] = updatedMeasurement;\r\n\r\n      this.publish(\r\n        // Add an internal flag to say the measurement has not yet been updated at source.\r\n        this.EVENTS.MEASUREMENT_UPDATED,\r\n        {\r\n          source: measurement.source,\r\n          measurement: updatedMeasurement,\r\n          notYetUpdatedAtSource,\r\n        }\r\n      );\r\n\r\n      return updatedMeasurement.id;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a raw measurement into a source so that it may be\r\n   * Converted to/from annotation in the same way. E.g. import serialized data\r\n   * Of the same form as the measurement source.\r\n   * @param {MeasurementSource} source The measurement source instance.\r\n   * @param {string} definition The source definition you want to add the measurement to.\r\n   * @param {object} data The data you wish to add to the source.\r\n   * @param {function} toMeasurementSchema A function to get the `data` into the same shape as the source definition.\r\n   */\r\n  addRawMeasurement(\r\n    source,\r\n    definition,\r\n    data,\r\n    toMeasurementSchema,\r\n    dataSource = {}\r\n  ) {\r\n    if (!this._isValidSource(source)) {\r\n      log.warn('Invalid source. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    const sourceInfo = this._getSourceInfo(source);\r\n\r\n    if (!definition) {\r\n      log.warn('No source definition provided. Exiting early.');\r\n      return;\r\n    }\r\n\r\n    if (!this._sourceHasMappings(source)) {\r\n      log.warn(\r\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    let measurement = {};\r\n    try {\r\n      /* Convert measurement */\r\n      measurement = toMeasurementSchema(data);\r\n      /* Assign measurement source instance */\r\n      measurement.source = source;\r\n    } catch (error) {\r\n      log.warn(\r\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\r\n        error.message\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!this._isValidMeasurement(measurement)) {\r\n      log.warn(\r\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    let internalId = data.id;\r\n    if (!internalId) {\r\n      internalId = guid();\r\n      log.warn(`Measurement ID not found. Generating UID: ${internalId}`);\r\n    }\r\n\r\n    const newMeasurement = {\r\n      ...measurement,\r\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\r\n      id: internalId,\r\n    };\r\n\r\n    if (this.measurements[internalId]) {\r\n      log.info(\r\n        `Measurement already defined. Updating measurement.`,\r\n        newMeasurement\r\n      );\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n      });\r\n    } else {\r\n      log.info(`Measurement added.`, newMeasurement);\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.RAW_MEASUREMENT_ADDED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n        data,\r\n        dataSource,\r\n      });\r\n    }\r\n\r\n    return newMeasurement.id;\r\n  }\r\n\r\n  /**\r\n   * Adds or update persisted measurements.\r\n   *\r\n   * @param {MeasurementSource} source The measurement source instance\r\n   * @param {string} definition The source definition\r\n   * @param {Measurement} measurement The source measurement\r\n   * @return {string} A measurement id\r\n   */\r\n  addOrUpdate(source, definition, sourceMeasurement) {\r\n    if (!this._isValidSource(source)) {\r\n      throw new Error('Invalid source.');\r\n    }\r\n\r\n    if (!definition) {\r\n      throw new Error('No source definition provided.');\r\n    }\r\n\r\n    if (definition == 'stack' || definition == 'stackPrefetch') {\r\n      return;\r\n    }\r\n\r\n    const sourceInfo = this._getSourceInfo(source);\r\n\r\n    if (!this._sourceHasMappings(source)) {\r\n      throw new Error(\r\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\r\n      );\r\n    }\r\n\r\n    let measurement = {};\r\n    try {\r\n      const sourceMappings = this.mappings[source.id];\r\n      const { toMeasurementSchema } = sourceMappings.find(\r\n        mapping => mapping.definition === definition\r\n      );\r\n\r\n      /* Convert measurement */\r\n      measurement = toMeasurementSchema(sourceMeasurement);\r\n\r\n      /* Assign measurement source instance */\r\n      measurement.source = source;\r\n    } catch (error) {\r\n      throw new Error(\r\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\r\n        error.message\r\n      );\r\n    }\r\n\r\n    if (!this._isValidMeasurement(measurement)) {\r\n      throw new Error(\r\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\r\n      );\r\n    }\r\n\r\n    let internalId = sourceMeasurement.id;\r\n    if (!internalId) {\r\n      internalId = guid();\r\n      log.info(`Measurement ID not found. Generating UID: ${internalId}`);\r\n    }\r\n\r\n    const newMeasurement = {\r\n      ...measurement,\r\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\r\n      id: internalId,\r\n    };\r\n\r\n    if (this.measurements[internalId]) {\r\n      log.info(\r\n        `Measurement already defined. Updating measurement.`,\r\n        newMeasurement\r\n      );\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n        notYetUpdatedAtSource: false,\r\n      });\r\n    } else {\r\n      log.info('Measurement added.', newMeasurement);\r\n      this.measurements[internalId] = newMeasurement;\r\n      this.publish(this.EVENTS.MEASUREMENT_ADDED, {\r\n        source,\r\n        measurement: newMeasurement,\r\n      });\r\n    }\r\n\r\n    return newMeasurement.id;\r\n  }\r\n\r\n  /**\r\n   * Removes a measurement and broadcasts the removed event.\r\n   *\r\n   * @param {string} id The measurement id\r\n   * @param {MeasurementSource} source The measurement source instance\r\n   * @return {string} The removed measurement id\r\n   */\r\n  remove(id, source) {\r\n    if (!id || !this.measurements[id]) {\r\n      log.warn(`No id provided, or unable to find measurement by id.`);\r\n      return;\r\n    }\r\n\r\n    delete this.measurements[id];\r\n    this.publish(this.EVENTS.MEASUREMENT_REMOVED, {\r\n      source,\r\n      measurement: id, // This is weird :shrug:\r\n    });\r\n  }\r\n\r\n  clearMeasurements() {\r\n    this.measurements = {};\r\n    this._jumpToMeasurementCache = {};\r\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\r\n  }\r\n\r\n  jumpToMeasurement(viewportIndex, id) {\r\n    const measurement = this.measurements[id];\r\n\r\n    if (!measurement) {\r\n      log.warn(`No id provided, or unable to find measurement by id.`);\r\n      return;\r\n    }\r\n\r\n    this._addJumpToMeasurement(viewportIndex, id);\r\n\r\n    const eventName = this.EVENTS.JUMP_TO_MEASUREMENT;\r\n\r\n    const hasListeners = Object.keys(this.listeners).length > 0;\r\n    const hasCallbacks = Array.isArray(this.listeners[eventName]);\r\n\r\n    if (hasListeners && hasCallbacks) {\r\n      this.listeners[eventName].forEach(listener => {\r\n        listener.callback({ viewportIndex, measurement });\r\n      });\r\n    }\r\n  }\r\n\r\n  _addJumpToMeasurement(viewportIndex, id) {\r\n    this._jumpToMeasurementCache[viewportIndex] = id;\r\n  }\r\n\r\n  getJumpToMeasurement(viewportIndex) {\r\n    return this._jumpToMeasurementCache[viewportIndex];\r\n  }\r\n\r\n  removeJumpToMeasurement(viewportIndex) {\r\n    delete this._jumpToMeasurementCache[viewportIndex];\r\n  }\r\n\r\n  _getMappingByMeasurementSource(measurementId, definition) {\r\n    const measurement = this.getMeasurement(measurementId);\r\n    if (this._isValidSource(measurement.source)) {\r\n      return this.mappings[measurement.source.id].find(\r\n        m => m.definition === definition\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all measurements and broadcasts cleared event.\r\n   */\r\n  clear() {\r\n    this.measurements = {};\r\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\r\n  }\r\n\r\n  /**\r\n   * Get measurement mapping function if matching criteria.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source instance\r\n   * @param {string} definition The source definition\r\n   * @param {Measurement} measurement The measurement service measurement\r\n   * @return {Object} The mapping based on matched criteria\r\n   */\r\n  _getMatchingMapping(source, definition, measurement) {\r\n    const sourceMappings = this.mappings[source.id];\r\n\r\n    const sourceMappingsByDefinition = sourceMappings.filter(\r\n      mapping => mapping.definition === definition\r\n    );\r\n\r\n    /* Criteria Matching */\r\n    return sourceMappingsByDefinition.find(({ matchingCriteria }) => {\r\n      if (matchingCriteria.type !== measurement.type) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        matchingCriteria.properties &&\r\n        matchingCriteria.properties.every(name =>\r\n          measurement.hasOwnProperty(name)\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      if (\r\n        measurement.points &&\r\n        measurement.points.length === matchingCriteria.points\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns formatted string with source info.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source\r\n   * @return {string} Source information\r\n   */\r\n  _getSourceInfo(source) {\r\n    return `${source.name}@${source.version}`;\r\n  }\r\n\r\n  /**\r\n   * Checks if given source is valid.\r\n   *\r\n   * @param {MeasurementSource} source Measurement source\r\n   * @return {boolean} Measurement source validation\r\n   */\r\n  _isValidSource(source) {\r\n    return source && this.sources[source.id];\r\n  }\r\n\r\n  /**\r\n   * Checks if a given source has mappings.\r\n   *\r\n   * @param {MeasurementSource} source The measurement source\r\n   * @return {boolean} Validation if source has mappings\r\n   */\r\n  _sourceHasMappings(source) {\r\n    return (\r\n      Array.isArray(this.mappings[source.id]) && this.mappings[source.id].length\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if a given measurement data is valid.\r\n   *\r\n   * @param {Measurement} measurementData Measurement data\r\n   * @return {boolean} Measurement validation\r\n   */\r\n  _isValidMeasurement(measurementData) {\r\n    Object.keys(measurementData).forEach(key => {\r\n      if (!MEASUREMENT_SCHEMA_KEYS.includes(key)) {\r\n        log.warn(`Invalid measurement key: ${key}`);\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check if a given measurement service event is valid.\r\n   *\r\n   * @param {string} eventName The name of the event\r\n   * @return {boolean} Event name validation\r\n  //  */\r\n  // _isValidEvent(eventName) {\r\n  //   return Object.values(this.EVENTS).includes(eventName);\r\n  // }\r\n\r\n  /**\r\n   * Converts object of objects to array.\r\n   *\r\n   * @return {Array} Array of objects\r\n   */\r\n  _arrayOfObjects = obj => {\r\n    return Object.entries(obj).map(e => ({ [e[0]]: e[1] }));\r\n  };\r\n}\r\n\r\nexport default MeasurementService;\r\nexport { EVENTS, VALUE_TYPES };\r\n","import MeasurementService from './MeasurementService';\r\n\r\nexport default {\r\n  name: 'MeasurementService',\r\n  create: ({ configuration = {} }) => {\r\n    return new MeasurementService();\r\n  },\r\n};\r\n"],"sourceRoot":""}