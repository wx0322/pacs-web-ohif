{"version":3,"file":"799.bundle.0cdf8669ae1d9052275d.js","mappings":"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","sources":["webpack:///../../../extensions/measurement-tracking/src/viewports/TrackedCornerstoneViewport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OHIF, { utils } from '@ohif/core';\r\n\r\nimport {\r\n  Notification,\r\n  ViewportActionBar,\r\n  useCine,\r\n  useViewportGrid,\r\n  useViewportDialog,\r\n  Tooltip,\r\n  Icon,\r\n} from '@ohif/ui';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { eventTarget, Enums } from '@cornerstonejs/core';\r\nimport { annotation } from '@cornerstonejs/tools';\r\nimport { useTrackedMeasurements } from './../getContextModule';\r\n\r\nconst { formatDate } = utils;\r\n\r\nfunction TrackedCornerstoneViewport(props) {\r\n  const {\r\n    children,\r\n    displaySets,\r\n    viewportIndex,\r\n    viewportLabel,\r\n    servicesManager,\r\n    extensionManager,\r\n    commandsManager,\r\n    viewportOptions,\r\n  } = props;\r\n\r\n  const { t } = useTranslation('TrackedViewport');\r\n\r\n  const {\r\n    MeasurementService,\r\n    CornerstoneViewportService,\r\n  } = servicesManager.services;\r\n\r\n  // Todo: handling more than one displaySet on the same viewport\r\n  const displaySet = displaySets[0];\r\n\r\n  const [trackedMeasurements] = useTrackedMeasurements();\r\n  const [{ activeViewportIndex }] = useViewportGrid();\r\n  const [{ isCineEnabled, cines }, cineService] = useCine();\r\n  const [viewportDialogState] = useViewportDialog();\r\n  const [isTracked, setIsTracked] = useState(false);\r\n  const [trackedMeasurementUID, setTrackedMeasurementUID] = useState(null);\r\n  const [element, setElement] = useState(null);\r\n\r\n  const { trackedSeries } = trackedMeasurements.context;\r\n  const viewportId = viewportOptions.viewportId;\r\n\r\n  const {\r\n    Modality,\r\n    SeriesDate,\r\n    SeriesDescription,\r\n    SeriesInstanceUID,\r\n    SeriesNumber,\r\n  } = displaySet;\r\n\r\n  const {\r\n    PatientID,\r\n    PatientName,\r\n    PatientSex,\r\n    PatientAge,\r\n    SliceThickness,\r\n    SpacingBetweenSlices,\r\n    ManufacturerModelName,\r\n  } = displaySet.images[0];\r\n\r\n  const cineHandler = () => {\r\n    if (!cines || !cines[viewportIndex] || !element) {\r\n      return;\r\n    }\r\n\r\n    const cine = cines[viewportIndex];\r\n    const isPlaying = cine.isPlaying || false;\r\n    const frameRate = cine.frameRate || 24;\r\n\r\n    const validFrameRate = Math.max(frameRate, 1);\r\n\r\n    if (isPlaying) {\r\n      cineService.playClip(element, {\r\n        framesPerSecond: validFrameRate,\r\n      });\r\n    } else {\r\n      cineService.stopClip(element);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTracked) {\r\n      annotation.config.style.setViewportToolStyles(viewportId, {\r\n        global: {\r\n          lineDash: '',\r\n        },\r\n      });\r\n\r\n      CornerstoneViewportService.getRenderingEngine().renderViewport(\r\n        viewportId\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    annotation.config.style.setViewportToolStyles(`viewport-${viewportIndex}`, {\r\n      global: {\r\n        lineDash: '4,4',\r\n      },\r\n    });\r\n\r\n    CornerstoneViewportService.getRenderingEngine().renderViewport(viewportId);\r\n\r\n    return () => {\r\n      annotation.config.style.setViewportToolStyles(viewportId, {});\r\n    };\r\n  }, [isTracked]);\r\n\r\n  // unmount cleanup\r\n  useEffect(() => {\r\n    eventTarget.addEventListener(\r\n      Enums.Events.STACK_VIEWPORT_NEW_STACK,\r\n      cineHandler\r\n    );\r\n\r\n    return () => {\r\n      cineService.setCine({ id: viewportIndex, isPlaying: false });\r\n      eventTarget.removeEventListener(\r\n        Enums.Events.STACK_VIEWPORT_NEW_STACK,\r\n        cineHandler\r\n      );\r\n    };\r\n  }, [element]);\r\n\r\n  useEffect(() => {\r\n    if (!cines || !cines[viewportIndex] || !element) {\r\n      return;\r\n    }\r\n\r\n    cineHandler();\r\n\r\n    return () => {\r\n      if (element && cines?.[viewportIndex]?.isPlaying) {\r\n        cineService.stopClip(element);\r\n      }\r\n    };\r\n  }, [cines, viewportIndex, cineService, element, cineHandler]);\r\n\r\n  if (trackedSeries.includes(SeriesInstanceUID) !== isTracked) {\r\n    setIsTracked(!isTracked);\r\n  }\r\n\r\n  /**\r\n   * OnElementEnabled callback which is called after the cornerstoneExtension\r\n   * has enabled the element. Note: we delegate all the image rendering to\r\n   * cornerstoneExtension, so we don't need to do anything here regarding\r\n   * the image rendering, element enabling etc.\r\n   */\r\n  const onElementEnabled = evt => {\r\n    setElement(evt.detail.element);\r\n  };\r\n\r\n  function switchMeasurement(direction) {\r\n    const newTrackedMeasurementUID = _getNextMeasurementUID(\r\n      direction,\r\n      servicesManager,\r\n      trackedMeasurementUID,\r\n      trackedMeasurements\r\n    );\r\n\r\n    if (!newTrackedMeasurementUID) {\r\n      return;\r\n    }\r\n\r\n    setTrackedMeasurementUID(newTrackedMeasurementUID);\r\n\r\n    MeasurementService.jumpToMeasurement(\r\n      viewportIndex,\r\n      newTrackedMeasurementUID\r\n    );\r\n  }\r\n\r\n  const getCornerstoneViewport = () => {\r\n    const { component: Component } = extensionManager.getModuleEntry(\r\n      '@ohif/extension-cornerstone.viewportModule.cornerstone'\r\n    );\r\n\r\n    return <Component {...props} onElementEnabled={onElementEnabled} />;\r\n  };\r\n\r\n  const cine = cines[viewportIndex];\r\n  const isPlaying = (cine && cine.isPlaying) || false;\r\n\r\n  return (\r\n    <>\r\n      <ViewportActionBar\r\n        onDoubleClick={evt => {\r\n          evt.stopPropagation();\r\n          evt.preventDefault();\r\n        }}\r\n        useAltStyling={isTracked}\r\n        onArrowsClick={direction => switchMeasurement(direction)}\r\n        getStatusComponent={() => _getStatusComponent(isTracked)}\r\n        studyData={{\r\n          label: viewportLabel,\r\n          studyDate: formatDate(SeriesDate), // TODO: This is series date. Is that ok?\r\n          currentSeries: SeriesNumber, // TODO - switch entire currentSeries to be UID based or actual position based\r\n          seriesDescription: SeriesDescription,\r\n          patientInformation: {\r\n            patientName: PatientName\r\n              ? OHIF.utils.formatPN(PatientName.Alphabetic)\r\n              : '',\r\n            patientSex: PatientSex || '',\r\n            patientAge: PatientAge || '',\r\n            MRN: PatientID || '',\r\n            thickness: SliceThickness\r\n              ? `${parseFloat(SliceThickness).toFixed(2)}mm`\r\n              : '',\r\n            spacing:\r\n              SpacingBetweenSlices !== undefined\r\n                ? `${parseFloat(SpacingBetweenSlices).toFixed(2)}mm`\r\n                : '',\r\n            scanner: ManufacturerModelName || '',\r\n          },\r\n        }}\r\n        showNavArrows={!isCineEnabled}\r\n        showCine={isCineEnabled}\r\n        cineProps={{\r\n          isPlaying,\r\n          onClose: () => commandsManager.runCommand('toggleCine'),\r\n          onPlayPauseChange: isPlaying =>\r\n            cineService.setCine({\r\n              id: activeViewportIndex,\r\n              isPlaying,\r\n            }),\r\n          onFrameRateChange: frameRate =>\r\n            cineService.setCine({\r\n              id: activeViewportIndex,\r\n              frameRate,\r\n            }),\r\n        }}\r\n      />\r\n      {/* TODO: Viewport interface to accept stack or layers of content like this? */}\r\n      <div className=\"relative flex flex-row w-full h-full overflow-hidden\">\r\n        {getCornerstoneViewport()}\r\n        <div className=\"absolute w-full\">\r\n          {viewportDialogState.viewportIndex === viewportIndex && (\r\n            <Notification\r\n              id={viewportDialogState.id}\r\n              message={viewportDialogState.message}\r\n              type={viewportDialogState.type}\r\n              actions={viewportDialogState.actions}\r\n              onSubmit={viewportDialogState.onSubmit}\r\n              onOutsideClick={viewportDialogState.onOutsideClick}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTrackedCornerstoneViewport.propTypes = {\r\n  displaySets: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n  viewportIndex: PropTypes.number.isRequired,\r\n  dataSource: PropTypes.object,\r\n  children: PropTypes.node,\r\n  customProps: PropTypes.object,\r\n};\r\n\r\nTrackedCornerstoneViewport.defaultProps = {\r\n  customProps: {},\r\n};\r\n\r\nfunction _getNextMeasurementUID(\r\n  direction,\r\n  servicesManager,\r\n  trackedMeasurementId,\r\n  trackedMeasurements\r\n) {\r\n  const { MeasurementService } = servicesManager.services;\r\n  const measurements = MeasurementService.getMeasurements();\r\n\r\n  const { trackedSeries } = trackedMeasurements.context;\r\n\r\n  // Get the potentially trackable measurements for this series,\r\n  // The measurements to jump between are the same\r\n  // regardless if this series is tracked or not.\r\n\r\n  const filteredMeasurements = measurements.filter(m =>\r\n    trackedSeries.includes(m.referenceSeriesUID)\r\n  );\r\n\r\n  if (!filteredMeasurements.length) {\r\n    // No measurements on this series.\r\n    return;\r\n  }\r\n\r\n  const measurementCount = filteredMeasurements.length;\r\n\r\n  const uids = filteredMeasurements.map(fm => fm.uid);\r\n  let measurementIndex = uids.findIndex(uid => uid === trackedMeasurementId);\r\n\r\n  if (measurementIndex === -1) {\r\n    // Not tracking a measurement, or previous measurement now deleted, revert to 0.\r\n    measurementIndex = 0;\r\n  } else {\r\n    if (direction === 'left') {\r\n      measurementIndex--;\r\n\r\n      if (measurementIndex < 0) {\r\n        measurementIndex = measurementCount - 1;\r\n      }\r\n    } else if (direction === 'right') {\r\n      measurementIndex++;\r\n\r\n      if (measurementIndex === measurementCount) {\r\n        measurementIndex = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  const newTrackedMeasurementId = uids[measurementIndex];\r\n\r\n  return newTrackedMeasurementId;\r\n}\r\n\r\nfunction _getStatusComponent(isTracked) {\r\n  const trackedIcon = isTracked ? 'tracked' : 'dotted-circle';\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Tooltip\r\n        position=\"bottom-left\"\r\n        content={\r\n          <div className=\"flex py-2\">\r\n            <div className=\"flex pt-1\">\r\n              <Icon name=\"info-link\" className=\"w-4 text-primary-main\" />\r\n            </div>\r\n            <div className=\"flex ml-4\">\r\n              <span className=\"text-base text-common-light\">\r\n                {isTracked ? (\r\n                  <>\r\n                    Series is\r\n                    <span className=\"font-bold text-white\"> tracked</span> and\r\n                    can be viewed <br /> in the measurement panel\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Measurements for\r\n                    <span className=\"font-bold text-white\"> untracked </span>\r\n                    series <br /> will not be shown in the <br /> measurements\r\n                    panel\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <Icon name={trackedIcon} className=\"w-6 text-primary-light\" />\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackedCornerstoneViewport;\r\n"],"names":["formatDate","utils","TrackedCornerstoneViewport","props","children","displaySets","viewportIndex","viewportLabel","servicesManager","extensionManager","commandsManager","viewportOptions","useTranslation","t","services","MeasurementService","CornerstoneViewportService","displaySet","trackedMeasurements","useTrackedMeasurements","activeViewportIndex","useViewportGrid","useCine","isCineEnabled","cines","cineService","viewportDialogState","useViewportDialog","useState","isTracked","setIsTracked","trackedMeasurementUID","setTrackedMeasurementUID","element","setElement","trackedSeries","context","viewportId","SeriesDate","Modality","SeriesDescription","SeriesInstanceUID","SeriesNumber","images","PatientID","PatientName","PatientSex","PatientAge","SliceThickness","SpacingBetweenSlices","ManufacturerModelName","cineHandler","cine","isPlaying","frameRate","validFrameRate","Math","max","playClip","framesPerSecond","stopClip","useEffect","annotation","global","lineDash","getRenderingEngine","renderViewport","eventTarget","Enums","setCine","id","includes","onElementEnabled","evt","detail","Component","onDoubleClick","stopPropagation","preventDefault","useAltStyling","onArrowsClick","direction","newTrackedMeasurementUID","trackedMeasurementId","measurements","getMeasurements","filteredMeasurements","filter","m","referenceSeriesUID","length","measurementCount","uids","map","fm","uid","measurementIndex","findIndex","_getNextMeasurementUID","jumpToMeasurement","switchMeasurement","getStatusComponent","trackedIcon","className","position","content","name","_getStatusComponent","studyData","label","studyDate","currentSeries","seriesDescription","patientInformation","patientName","OHIF","Alphabetic","patientSex","patientAge","MRN","thickness","parseFloat","toFixed","spacing","undefined","scanner","showNavArrows","showCine","cineProps","onClose","runCommand","onPlayPauseChange","onFrameRateChange","getModuleEntry","component","message","type","actions","onSubmit","onOutsideClick","propTypes","PropTypes","isRequired","dataSource","customProps","defaultProps"],"sourceRoot":""}